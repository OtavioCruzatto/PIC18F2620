

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Feb 22 10:08:59 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F2620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65  0000                     
    66                           ; Version 1.42
    67                           ; Generated 13/04/2017 GMT
    68                           ; 
    69                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F2620 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     
   101                           	psect	mediumconst
   102  00FB66                     __pmediumconst:
   103                           	opt stack 0
   104  00FB66  00                 	db	0
   105  00FB67                     _dpowers:
   106                           	opt stack 0
   107  00FB67  0001               	dw	1
   108  00FB69  0000               	dw	0
   109  00FB6B  000A               	dw	10
   110  00FB6D  0000               	dw	0
   111  00FB6F  0064               	dw	100
   112  00FB71  0000               	dw	0
   113  00FB73  03E8               	dw	1000
   114  00FB75  0000               	dw	0
   115  00FB77  2710               	dw	10000
   116  00FB79  0000               	dw	0
   117  00FB7B  86A0               	dw	34464
   118  00FB7D  0001               	dw	1
   119  00FB7F  4240               	dw	16960
   120  00FB81  000F               	dw	15
   121  00FB83  9680               	dw	38528
   122  00FB85  0098               	dw	152
   123  00FB87  E100               	dw	57600
   124  00FB89  05F5               	dw	1525
   125  00FB8B  CA00               	dw	51712
   126  00FB8D  3B9A               	dw	15258
   127  00FB8F                     __end_of_dpowers:
   128                           	opt stack 0
   129  00FB8F                     __powers_:
   130                           	opt stack 0
   131  00FB8F  00                 	db	0
   132  00FB90  80                 	db	128
   133  00FB91  3F                 	db	63
   134  00FB92  00                 	db	0
   135  00FB93  20                 	db	32
   136  00FB94  41                 	db	65
   137  00FB95  00                 	db	0
   138  00FB96  C8                 	db	200
   139  00FB97  42                 	db	66
   140  00FB98  00                 	db	0
   141  00FB99  7A                 	db	122
   142  00FB9A  44                 	db	68
   143  00FB9B  40                 	db	64
   144  00FB9C  1C                 	db	28
   145  00FB9D  46                 	db	70
   146  00FB9E  50                 	db	80
   147  00FB9F  C3                 	db	195
   148  00FBA0  47                 	db	71
   149  00FBA1  24                 	db	36
   150  00FBA2  74                 	db	116
   151  00FBA3  49                 	db	73
   152  00FBA4  97                 	db	151
   153  00FBA5  18                 	db	24
   154  00FBA6  4B                 	db	75
   155  00FBA7  BC                 	db	188
   156  00FBA8  BE                 	db	190
   157  00FBA9  4C                 	db	76
   158  00FBAA  6B                 	db	107
   159  00FBAB  6E                 	db	110
   160  00FBAC  4E                 	db	78
   161  00FBAD  03                 	db	3
   162  00FBAE  15                 	db	21
   163  00FBAF  50                 	db	80
   164  00FBB0  79                 	db	121
   165  00FBB1  AD                 	db	173
   166  00FBB2  60                 	db	96
   167  00FBB3  F3                 	db	243
   168  00FBB4  49                 	db	73
   169  00FBB5  71                 	db	113
   170  00FBB6                     __end_of__powers_:
   171                           	opt stack 0
   172  00FBB6                     __npowers_:
   173                           	opt stack 0
   174  00FBB6  00                 	db	0
   175  00FBB7  80                 	db	128
   176  00FBB8  3F                 	db	63
   177  00FBB9  CD                 	db	205
   178  00FBBA  CC                 	db	204
   179  00FBBB  3D                 	db	61
   180  00FBBC  D7                 	db	215
   181  00FBBD  23                 	db	35
   182  00FBBE  3C                 	db	60
   183  00FBBF  12                 	db	18
   184  00FBC0  83                 	db	131
   185  00FBC1  3A                 	db	58
   186  00FBC2  B7                 	db	183
   187  00FBC3  D1                 	db	209
   188  00FBC4  38                 	db	56
   189  00FBC5  C6                 	db	198
   190  00FBC6  27                 	db	39
   191  00FBC7  37                 	db	55
   192  00FBC8  38                 	db	56
   193  00FBC9  86                 	db	134
   194  00FBCA  35                 	db	53
   195  00FBCB  C0                 	db	192
   196  00FBCC  D6                 	db	214
   197  00FBCD  33                 	db	51
   198  00FBCE  CC                 	db	204
   199  00FBCF  2B                 	db	43
   200  00FBD0  32                 	db	50
   201  00FBD1  70                 	db	112
   202  00FBD2  89                 	db	137
   203  00FBD3  30                 	db	48
   204  00FBD4  E7                 	db	231
   205  00FBD5  DB                 	db	219
   206  00FBD6  2E                 	db	46
   207  00FBD7  E5                 	db	229
   208  00FBD8  3C                 	db	60
   209  00FBD9  1E                 	db	30
   210  00FBDA  42                 	db	66
   211  00FBDB  A2                 	db	162
   212  00FBDC  0D                 	db	13
   213  00FBDD                     __end_of__npowers_:
   214                           	opt stack 0
   215  0000                     _PORTB	set	3969
   216  0000                     _TRISB	set	3987
   217  0000                     _PORTBbits	set	3969
   218  0000                     _TMR0H	set	4055
   219  0000                     _TMR0L	set	4054
   220  0000                     _T0CONbits	set	4053
   221  0000                     _TXREG	set	4013
   222  0000                     _PIE1bits	set	3997
   223  0000                     _INTCONbits	set	4082
   224  0000                     _SPBRG	set	4015
   225  0000                     _BAUDCONbits	set	4024
   226  0000                     _RCSTAbits	set	4011
   227  0000                     _TXSTAbits	set	4012
   228  0000                     _TRISCbits	set	3988
   229  0000                     _ADCON2bits	set	4032
   230  0000                     _ADCON1bits	set	4033
   231  0000                     _ADRESL	set	4035
   232  0000                     _ADRESH	set	4036
   233  0000                     _PIR1bits	set	3998
   234  0000                     _ADCON0bits	set	4034
   235  00FBDD                     STR_37:
   236  00FBDD  0A                 	db	10
   237  00FBDE  43                 	db	67	;'C'
   238  00FBDF  61                 	db	97	;'a'
   239  00FBE0  72                 	db	114	;'r'
   240  00FBE1  72                 	db	114	;'r'
   241  00FBE2  65                 	db	101	;'e'
   242  00FBE3  67                 	db	103	;'g'
   243  00FBE4  61                 	db	97	;'a'
   244  00FBE5  6D                 	db	109	;'m'
   245  00FBE6  65                 	db	101	;'e'
   246  00FBE7  6E                 	db	110	;'n'
   247  00FBE8  74                 	db	116	;'t'
   248  00FBE9  6F                 	db	111	;'o'
   249  00FBEA  3A                 	db	58	;':'
   250  00FBEB  20                 	db	32
   251  00FBEC  44                 	db	68	;'D'
   252  00FBED  65                 	db	101	;'e'
   253  00FBEE  73                 	db	115	;'s'
   254  00FBEF  61                 	db	97	;'a'
   255  00FBF0  62                 	db	98	;'b'
   256  00FBF1  69                 	db	105	;'i'
   257  00FBF2  6C                 	db	108	;'l'
   258  00FBF3  69                 	db	105	;'i'
   259  00FBF4  74                 	db	116	;'t'
   260  00FBF5  61                 	db	97	;'a'
   261  00FBF6  64                 	db	100	;'d'
   262  00FBF7  6F                 	db	111	;'o'
   263  00FBF8  20                 	db	32
   264  00FBF9  7C                 	db	124
   265  00FBFA  20                 	db	32
   266  00FBFB  44                 	db	68	;'D'
   267  00FBFC  65                 	db	101	;'e'
   268  00FBFD  73                 	db	115	;'s'
   269  00FBFE  63                 	db	99	;'c'
   270  00FBFF  61                 	db	97	;'a'
   271  00FC00  72                 	db	114	;'r'
   272  00FC01  72                 	db	114	;'r'
   273  00FC02  65                 	db	101	;'e'
   274  00FC03  67                 	db	103	;'g'
   275  00FC04  61                 	db	97	;'a'
   276  00FC05  6D                 	db	109	;'m'
   277  00FC06  65                 	db	101	;'e'
   278  00FC07  6E                 	db	110	;'n'
   279  00FC08  74                 	db	116	;'t'
   280  00FC09  6F                 	db	111	;'o'
   281  00FC0A  3A                 	db	58	;':'
   282  00FC0B  20                 	db	32
   283  00FC0C  48                 	db	72	;'H'
   284  00FC0D  61                 	db	97	;'a'
   285  00FC0E  62                 	db	98	;'b'
   286  00FC0F  69                 	db	105	;'i'
   287  00FC10  6C                 	db	108	;'l'
   288  00FC11  69                 	db	105	;'i'
   289  00FC12  74                 	db	116	;'t'
   290  00FC13  61                 	db	97	;'a'
   291  00FC14  64                 	db	100	;'d'
   292  00FC15  6F                 	db	111	;'o'
   293  00FC16  20                 	db	32
   294  00FC17  7C                 	db	124
   295  00FC18  20                 	db	32
   296  00FC19  54                 	db	84	;'T'
   297  00FC1A  65                 	db	101	;'e'
   298  00FC1B  73                 	db	115	;'s'
   299  00FC1C  74                 	db	116	;'t'
   300  00FC1D  65                 	db	101	;'e'
   301  00FC1E  3A                 	db	58	;':'
   302  00FC1F  20                 	db	32
   303  00FC20  00                 	db	0
   304  00FC21                     STR_7:
   305  00FC21  0A                 	db	10
   306  00FC22  43                 	db	67	;'C'
   307  00FC23  61                 	db	97	;'a'
   308  00FC24  72                 	db	114	;'r'
   309  00FC25  72                 	db	114	;'r'
   310  00FC26  65                 	db	101	;'e'
   311  00FC27  67                 	db	103	;'g'
   312  00FC28  61                 	db	97	;'a'
   313  00FC29  6D                 	db	109	;'m'
   314  00FC2A  65                 	db	101	;'e'
   315  00FC2B  6E                 	db	110	;'n'
   316  00FC2C  74                 	db	116	;'t'
   317  00FC2D  6F                 	db	111	;'o'
   318  00FC2E  3A                 	db	58	;':'
   319  00FC2F  20                 	db	32
   320  00FC30  48                 	db	72	;'H'
   321  00FC31  61                 	db	97	;'a'
   322  00FC32  62                 	db	98	;'b'
   323  00FC33  69                 	db	105	;'i'
   324  00FC34  6C                 	db	108	;'l'
   325  00FC35  69                 	db	105	;'i'
   326  00FC36  74                 	db	116	;'t'
   327  00FC37  61                 	db	97	;'a'
   328  00FC38  64                 	db	100	;'d'
   329  00FC39  6F                 	db	111	;'o'
   330  00FC3A  20                 	db	32
   331  00FC3B  7C                 	db	124
   332  00FC3C  20                 	db	32
   333  00FC3D  44                 	db	68	;'D'
   334  00FC3E  65                 	db	101	;'e'
   335  00FC3F  73                 	db	115	;'s'
   336  00FC40  63                 	db	99	;'c'
   337  00FC41  61                 	db	97	;'a'
   338  00FC42  72                 	db	114	;'r'
   339  00FC43  72                 	db	114	;'r'
   340  00FC44  65                 	db	101	;'e'
   341  00FC45  67                 	db	103	;'g'
   342  00FC46  61                 	db	97	;'a'
   343  00FC47  6D                 	db	109	;'m'
   344  00FC48  65                 	db	101	;'e'
   345  00FC49  6E                 	db	110	;'n'
   346  00FC4A  74                 	db	116	;'t'
   347  00FC4B  6F                 	db	111	;'o'
   348  00FC4C  3A                 	db	58	;':'
   349  00FC4D  20                 	db	32
   350  00FC4E  44                 	db	68	;'D'
   351  00FC4F  65                 	db	101	;'e'
   352  00FC50  73                 	db	115	;'s'
   353  00FC51  61                 	db	97	;'a'
   354  00FC52  62                 	db	98	;'b'
   355  00FC53  69                 	db	105	;'i'
   356  00FC54  6C                 	db	108	;'l'
   357  00FC55  69                 	db	105	;'i'
   358  00FC56  74                 	db	116	;'t'
   359  00FC57  61                 	db	97	;'a'
   360  00FC58  64                 	db	100	;'d'
   361  00FC59  6F                 	db	111	;'o'
   362  00FC5A  20                 	db	32
   363  00FC5B  7C                 	db	124
   364  00FC5C  20                 	db	32
   365  00FC5D  54                 	db	84	;'T'
   366  00FC5E  65                 	db	101	;'e'
   367  00FC5F  73                 	db	115	;'s'
   368  00FC60  74                 	db	116	;'t'
   369  00FC61  65                 	db	101	;'e'
   370  00FC62  3A                 	db	58	;':'
   371  00FC63  20                 	db	32
   372  00FC64  00                 	db	0
   373  00FC65                     STR_55:
   374  00FC65  0A                 	db	10
   375  00FC66  0A                 	db	10
   376  00FC67  0A                 	db	10
   377  00FC68  0A                 	db	10
   378  00FC69  2A                 	db	42
   379  00FC6A  2A                 	db	42
   380  00FC6B  2A                 	db	42
   381  00FC6C  20                 	db	32
   382  00FC6D  50                 	db	80	;'P'
   383  00FC6E  72                 	db	114	;'r'
   384  00FC6F  65                 	db	101	;'e'
   385  00FC70  73                 	db	115	;'s'
   386  00FC71  73                 	db	115	;'s'
   387  00FC72  69                 	db	105	;'i'
   388  00FC73  6F                 	db	111	;'o'
   389  00FC74  6E                 	db	110	;'n'
   390  00FC75  65                 	db	101	;'e'
   391  00FC76  20                 	db	32
   392  00FC77  6F                 	db	111	;'o'
   393  00FC78  20                 	db	32
   394  00FC79  62                 	db	98	;'b'
   395  00FC7A  6F                 	db	111	;'o'
   396  00FC7B  74                 	db	116	;'t'
   397  00FC7C  61                 	db	97	;'a'
   398  00FC7D  6F                 	db	111	;'o'
   399  00FC7E  20                 	db	32
   400  00FC7F  70                 	db	112	;'p'
   401  00FC80  61                 	db	97	;'a'
   402  00FC81  72                 	db	114	;'r'
   403  00FC82  61                 	db	97	;'a'
   404  00FC83  20                 	db	32
   405  00FC84  69                 	db	105	;'i'
   406  00FC85  6E                 	db	110	;'n'
   407  00FC86  69                 	db	105	;'i'
   408  00FC87  63                 	db	99	;'c'
   409  00FC88  69                 	db	105	;'i'
   410  00FC89  61                 	db	97	;'a'
   411  00FC8A  72                 	db	114	;'r'
   412  00FC8B  20                 	db	32
   413  00FC8C  6F                 	db	111	;'o'
   414  00FC8D  73                 	db	115	;'s'
   415  00FC8E  20                 	db	32
   416  00FC8F  74                 	db	116	;'t'
   417  00FC90  65                 	db	101	;'e'
   418  00FC91  73                 	db	115	;'s'
   419  00FC92  74                 	db	116	;'t'
   420  00FC93  65                 	db	101	;'e'
   421  00FC94  73                 	db	115	;'s'
   422  00FC95  21                 	db	33
   423  00FC96  20                 	db	32
   424  00FC97  2A                 	db	42
   425  00FC98  2A                 	db	42
   426  00FC99  2A                 	db	42
   427  00FC9A  0A                 	db	10
   428  00FC9B  00                 	db	0
   429  00FC9C                     STR_3:
   430  00FC9C  0A                 	db	10
   431  00FC9D  0A                 	db	10
   432  00FC9E  0A                 	db	10
   433  00FC9F  0A                 	db	10
   434  00FCA0  2A                 	db	42
   435  00FCA1  2A                 	db	42
   436  00FCA2  2A                 	db	42
   437  00FCA3  20                 	db	32
   438  00FCA4  4A                 	db	74	;'J'
   439  00FCA5  69                 	db	105	;'i'
   440  00FCA6  67                 	db	103	;'g'
   441  00FCA7  61                 	db	97	;'a'
   442  00FCA8  20                 	db	32
   443  00FCA9  64                 	db	100	;'d'
   444  00FCAA  65                 	db	101	;'e'
   445  00FCAB  20                 	db	32
   446  00FCAC  74                 	db	116	;'t'
   447  00FCAD  65                 	db	101	;'e'
   448  00FCAE  73                 	db	115	;'s'
   449  00FCAF  74                 	db	116	;'t'
   450  00FCB0  65                 	db	101	;'e'
   451  00FCB1  73                 	db	115	;'s'
   452  00FCB2  20                 	db	32
   453  00FCB3  64                 	db	100	;'d'
   454  00FCB4  61                 	db	97	;'a'
   455  00FCB5  20                 	db	32
   456  00FCB6  62                 	db	98	;'b'
   457  00FCB7  61                 	db	97	;'a'
   458  00FCB8  74                 	db	116	;'t'
   459  00FCB9  65                 	db	101	;'e'
   460  00FCBA  72                 	db	114	;'r'
   461  00FCBB  69                 	db	105	;'i'
   462  00FCBC  61                 	db	97	;'a'
   463  00FCBD  20                 	db	32
   464  00FCBE  45                 	db	69	;'E'
   465  00FCBF  56                 	db	86	;'V'
   466  00FCC0  4F                 	db	79	;'O'
   467  00FCC1  20                 	db	32
   468  00FCC2  2D                 	db	45
   469  00FCC3  20                 	db	32
   470  00FCC4  46                 	db	70	;'F'
   471  00FCC5  57                 	db	87	;'W'
   472  00FCC6  20                 	db	32
   473  00FCC7  56                 	db	86	;'V'
   474  00FCC8  32                 	db	50	;'2'
   475  00FCC9  2E                 	db	46
   476  00FCCA  30                 	db	48	;'0'
   477  00FCCB  20                 	db	32
   478  00FCCC  2A                 	db	42
   479  00FCCD  2A                 	db	42
   480  00FCCE  2A                 	db	42
   481  00FCCF  0A                 	db	10
   482  00FCD0  00                 	db	0
   483  00FCD1                     STR_36:
   484  00FCD1  0A                 	db	10
   485  00FCD2  54                 	db	84	;'T'
   486  00FCD3  65                 	db	101	;'e'
   487  00FCD4  73                 	db	115	;'s'
   488  00FCD5  74                 	db	116	;'t'
   489  00FCD6  65                 	db	101	;'e'
   490  00FCD7  20                 	db	32
   491  00FCD8  64                 	db	100	;'d'
   492  00FCD9  65                 	db	101	;'e'
   493  00FCDA  20                 	db	32
   494  00FCDB  44                 	db	68	;'D'
   495  00FCDC  65                 	db	101	;'e'
   496  00FCDD  73                 	db	115	;'s'
   497  00FCDE  63                 	db	99	;'c'
   498  00FCDF  61                 	db	97	;'a'
   499  00FCE0  72                 	db	114	;'r'
   500  00FCE1  72                 	db	114	;'r'
   501  00FCE2  65                 	db	101	;'e'
   502  00FCE3  67                 	db	103	;'g'
   503  00FCE4  61                 	db	97	;'a'
   504  00FCE5  6D                 	db	109	;'m'
   505  00FCE6  65                 	db	101	;'e'
   506  00FCE7  6E                 	db	110	;'n'
   507  00FCE8  74                 	db	116	;'t'
   508  00FCE9  6F                 	db	111	;'o'
   509  00FCEA  20                 	db	32
   510  00FCEB  6E                 	db	110	;'n'
   511  00FCEC  61                 	db	97	;'a'
   512  00FCED  6F                 	db	111	;'o'
   513  00FCEE  20                 	db	32
   514  00FCEF  48                 	db	72	;'H'
   515  00FCF0  61                 	db	97	;'a'
   516  00FCF1  62                 	db	98	;'b'
   517  00FCF2  69                 	db	105	;'i'
   518  00FCF3  6C                 	db	108	;'l'
   519  00FCF4  69                 	db	105	;'i'
   520  00FCF5  74                 	db	116	;'t'
   521  00FCF6  61                 	db	97	;'a'
   522  00FCF7  64                 	db	100	;'d'
   523  00FCF8  6F                 	db	111	;'o'
   524  00FCF9  21                 	db	33
   525  00FCFA  0A                 	db	10
   526  00FCFB  00                 	db	0
   527  00FCFC                     STR_52:
   528  00FCFC  54                 	db	84	;'T'
   529  00FCFD  65                 	db	101	;'e'
   530  00FCFE  73                 	db	115	;'s'
   531  00FCFF  74                 	db	116	;'t'
   532  00FD00  65                 	db	101	;'e'
   533  00FD01  20                 	db	32
   534  00FD02  64                 	db	100	;'d'
   535  00FD03  65                 	db	101	;'e'
   536  00FD04  20                 	db	32
   537  00FD05  43                 	db	67	;'C'
   538  00FD06  6F                 	db	111	;'o'
   539  00FD07  72                 	db	114	;'r'
   540  00FD08  72                 	db	114	;'r'
   541  00FD09  65                 	db	101	;'e'
   542  00FD0A  6E                 	db	110	;'n'
   543  00FD0B  74                 	db	116	;'t'
   544  00FD0C  65                 	db	101	;'e'
   545  00FD0D  20                 	db	32
   546  00FD0E  6E                 	db	110	;'n'
   547  00FD0F  6F                 	db	111	;'o'
   548  00FD10  20                 	db	32
   549  00FD11  44                 	db	68	;'D'
   550  00FD12  65                 	db	101	;'e'
   551  00FD13  73                 	db	115	;'s'
   552  00FD14  63                 	db	99	;'c'
   553  00FD15  61                 	db	97	;'a'
   554  00FD16  72                 	db	114	;'r'
   555  00FD17  72                 	db	114	;'r'
   556  00FD18  65                 	db	101	;'e'
   557  00FD19  67                 	db	103	;'g'
   558  00FD1A  61                 	db	97	;'a'
   559  00FD1B  6D                 	db	109	;'m'
   560  00FD1C  65                 	db	101	;'e'
   561  00FD1D  6E                 	db	110	;'n'
   562  00FD1E  74                 	db	116	;'t'
   563  00FD1F  6F                 	db	111	;'o'
   564  00FD20  3A                 	db	58	;':'
   565  00FD21  20                 	db	32
   566  00FD22  4E                 	db	78	;'N'
   567  00FD23  4F                 	db	79	;'O'
   568  00FD24  4B                 	db	75	;'K'
   569  00FD25  0A                 	db	10
   570  00FD26  00                 	db	0
   571  00FD27                     STR_51:
   572  00FD27  54                 	db	84	;'T'
   573  00FD28  65                 	db	101	;'e'
   574  00FD29  73                 	db	115	;'s'
   575  00FD2A  74                 	db	116	;'t'
   576  00FD2B  65                 	db	101	;'e'
   577  00FD2C  20                 	db	32
   578  00FD2D  64                 	db	100	;'d'
   579  00FD2E  65                 	db	101	;'e'
   580  00FD2F  20                 	db	32
   581  00FD30  43                 	db	67	;'C'
   582  00FD31  6F                 	db	111	;'o'
   583  00FD32  72                 	db	114	;'r'
   584  00FD33  72                 	db	114	;'r'
   585  00FD34  65                 	db	101	;'e'
   586  00FD35  6E                 	db	110	;'n'
   587  00FD36  74                 	db	116	;'t'
   588  00FD37  65                 	db	101	;'e'
   589  00FD38  20                 	db	32
   590  00FD39  6E                 	db	110	;'n'
   591  00FD3A  6F                 	db	111	;'o'
   592  00FD3B  20                 	db	32
   593  00FD3C  44                 	db	68	;'D'
   594  00FD3D  65                 	db	101	;'e'
   595  00FD3E  73                 	db	115	;'s'
   596  00FD3F  63                 	db	99	;'c'
   597  00FD40  61                 	db	97	;'a'
   598  00FD41  72                 	db	114	;'r'
   599  00FD42  72                 	db	114	;'r'
   600  00FD43  65                 	db	101	;'e'
   601  00FD44  67                 	db	103	;'g'
   602  00FD45  61                 	db	97	;'a'
   603  00FD46  6D                 	db	109	;'m'
   604  00FD47  65                 	db	101	;'e'
   605  00FD48  6E                 	db	110	;'n'
   606  00FD49  74                 	db	116	;'t'
   607  00FD4A  6F                 	db	111	;'o'
   608  00FD4B  3A                 	db	58	;':'
   609  00FD4C  20                 	db	32
   610  00FD4D  4F                 	db	79	;'O'
   611  00FD4E  4B                 	db	75	;'K'
   612  00FD4F  0A                 	db	10
   613  00FD50  00                 	db	0
   614  00FD51                     STR_20:
   615  00FD51  0A                 	db	10
   616  00FD52  0A                 	db	10
   617  00FD53  54                 	db	84	;'T'
   618  00FD54  65                 	db	101	;'e'
   619  00FD55  73                 	db	115	;'s'
   620  00FD56  74                 	db	116	;'t'
   621  00FD57  65                 	db	101	;'e'
   622  00FD58  20                 	db	32
   623  00FD59  64                 	db	100	;'d'
   624  00FD5A  65                 	db	101	;'e'
   625  00FD5B  20                 	db	32
   626  00FD5C  43                 	db	67	;'C'
   627  00FD5D  61                 	db	97	;'a'
   628  00FD5E  72                 	db	114	;'r'
   629  00FD5F  72                 	db	114	;'r'
   630  00FD60  65                 	db	101	;'e'
   631  00FD61  67                 	db	103	;'g'
   632  00FD62  61                 	db	97	;'a'
   633  00FD63  6D                 	db	109	;'m'
   634  00FD64  65                 	db	101	;'e'
   635  00FD65  6E                 	db	110	;'n'
   636  00FD66  74                 	db	116	;'t'
   637  00FD67  6F                 	db	111	;'o'
   638  00FD68  20                 	db	32
   639  00FD69  6E                 	db	110	;'n'
   640  00FD6A  61                 	db	97	;'a'
   641  00FD6B  6F                 	db	111	;'o'
   642  00FD6C  20                 	db	32
   643  00FD6D  68                 	db	104	;'h'
   644  00FD6E  61                 	db	97	;'a'
   645  00FD6F  62                 	db	98	;'b'
   646  00FD70  69                 	db	105	;'i'
   647  00FD71  6C                 	db	108	;'l'
   648  00FD72  69                 	db	105	;'i'
   649  00FD73  74                 	db	116	;'t'
   650  00FD74  61                 	db	97	;'a'
   651  00FD75  64                 	db	100	;'d'
   652  00FD76  6F                 	db	111	;'o'
   653  00FD77  21                 	db	33
   654  00FD78  0A                 	db	10
   655  00FD79  00                 	db	0
   656  00FD7A                     STR_48:
   657  00FD7A  54                 	db	84	;'T'
   658  00FD7B  65                 	db	101	;'e'
   659  00FD7C  73                 	db	115	;'s'
   660  00FD7D  74                 	db	116	;'t'
   661  00FD7E  65                 	db	101	;'e'
   662  00FD7F  20                 	db	32
   663  00FD80  64                 	db	100	;'d'
   664  00FD81  65                 	db	101	;'e'
   665  00FD82  20                 	db	32
   666  00FD83  54                 	db	84	;'T'
   667  00FD84  65                 	db	101	;'e'
   668  00FD85  6E                 	db	110	;'n'
   669  00FD86  73                 	db	115	;'s'
   670  00FD87  61                 	db	97	;'a'
   671  00FD88  6F                 	db	111	;'o'
   672  00FD89  20                 	db	32
   673  00FD8A  6E                 	db	110	;'n'
   674  00FD8B  6F                 	db	111	;'o'
   675  00FD8C  20                 	db	32
   676  00FD8D  44                 	db	68	;'D'
   677  00FD8E  65                 	db	101	;'e'
   678  00FD8F  73                 	db	115	;'s'
   679  00FD90  63                 	db	99	;'c'
   680  00FD91  61                 	db	97	;'a'
   681  00FD92  72                 	db	114	;'r'
   682  00FD93  72                 	db	114	;'r'
   683  00FD94  65                 	db	101	;'e'
   684  00FD95  67                 	db	103	;'g'
   685  00FD96  61                 	db	97	;'a'
   686  00FD97  6D                 	db	109	;'m'
   687  00FD98  65                 	db	101	;'e'
   688  00FD99  6E                 	db	110	;'n'
   689  00FD9A  74                 	db	116	;'t'
   690  00FD9B  6F                 	db	111	;'o'
   691  00FD9C  3A                 	db	58	;':'
   692  00FD9D  20                 	db	32
   693  00FD9E  4E                 	db	78	;'N'
   694  00FD9F  4F                 	db	79	;'O'
   695  00FDA0  4B                 	db	75	;'K'
   696  00FDA1  0A                 	db	10
   697  00FDA2  00                 	db	0
   698  00FDA3                     STR_47:
   699  00FDA3  54                 	db	84	;'T'
   700  00FDA4  65                 	db	101	;'e'
   701  00FDA5  73                 	db	115	;'s'
   702  00FDA6  74                 	db	116	;'t'
   703  00FDA7  65                 	db	101	;'e'
   704  00FDA8  20                 	db	32
   705  00FDA9  64                 	db	100	;'d'
   706  00FDAA  65                 	db	101	;'e'
   707  00FDAB  20                 	db	32
   708  00FDAC  54                 	db	84	;'T'
   709  00FDAD  65                 	db	101	;'e'
   710  00FDAE  6E                 	db	110	;'n'
   711  00FDAF  73                 	db	115	;'s'
   712  00FDB0  61                 	db	97	;'a'
   713  00FDB1  6F                 	db	111	;'o'
   714  00FDB2  20                 	db	32
   715  00FDB3  6E                 	db	110	;'n'
   716  00FDB4  6F                 	db	111	;'o'
   717  00FDB5  20                 	db	32
   718  00FDB6  44                 	db	68	;'D'
   719  00FDB7  65                 	db	101	;'e'
   720  00FDB8  73                 	db	115	;'s'
   721  00FDB9  63                 	db	99	;'c'
   722  00FDBA  61                 	db	97	;'a'
   723  00FDBB  72                 	db	114	;'r'
   724  00FDBC  72                 	db	114	;'r'
   725  00FDBD  65                 	db	101	;'e'
   726  00FDBE  67                 	db	103	;'g'
   727  00FDBF  61                 	db	97	;'a'
   728  00FDC0  6D                 	db	109	;'m'
   729  00FDC1  65                 	db	101	;'e'
   730  00FDC2  6E                 	db	110	;'n'
   731  00FDC3  74                 	db	116	;'t'
   732  00FDC4  6F                 	db	111	;'o'
   733  00FDC5  3A                 	db	58	;':'
   734  00FDC6  20                 	db	32
   735  00FDC7  4F                 	db	79	;'O'
   736  00FDC8  4B                 	db	75	;'K'
   737  00FDC9  0A                 	db	10
   738  00FDCA  00                 	db	0
   739  00FDCB                     STR_34:
   740  00FDCB  54                 	db	84	;'T'
   741  00FDCC  65                 	db	101	;'e'
   742  00FDCD  73                 	db	115	;'s'
   743  00FDCE  74                 	db	116	;'t'
   744  00FDCF  65                 	db	101	;'e'
   745  00FDD0  20                 	db	32
   746  00FDD1  64                 	db	100	;'d'
   747  00FDD2  65                 	db	101	;'e'
   748  00FDD3  20                 	db	32
   749  00FDD4  43                 	db	67	;'C'
   750  00FDD5  6F                 	db	111	;'o'
   751  00FDD6  72                 	db	114	;'r'
   752  00FDD7  72                 	db	114	;'r'
   753  00FDD8  65                 	db	101	;'e'
   754  00FDD9  6E                 	db	110	;'n'
   755  00FDDA  74                 	db	116	;'t'
   756  00FDDB  65                 	db	101	;'e'
   757  00FDDC  20                 	db	32
   758  00FDDD  6E                 	db	110	;'n'
   759  00FDDE  6F                 	db	111	;'o'
   760  00FDDF  20                 	db	32
   761  00FDE0  43                 	db	67	;'C'
   762  00FDE1  61                 	db	97	;'a'
   763  00FDE2  72                 	db	114	;'r'
   764  00FDE3  72                 	db	114	;'r'
   765  00FDE4  65                 	db	101	;'e'
   766  00FDE5  67                 	db	103	;'g'
   767  00FDE6  61                 	db	97	;'a'
   768  00FDE7  6D                 	db	109	;'m'
   769  00FDE8  65                 	db	101	;'e'
   770  00FDE9  6E                 	db	110	;'n'
   771  00FDEA  74                 	db	116	;'t'
   772  00FDEB  6F                 	db	111	;'o'
   773  00FDEC  3A                 	db	58	;':'
   774  00FDED  20                 	db	32
   775  00FDEE  4E                 	db	78	;'N'
   776  00FDEF  4F                 	db	79	;'O'
   777  00FDF0  4B                 	db	75	;'K'
   778  00FDF1  0A                 	db	10
   779  00FDF2  00                 	db	0
   780  00FDF3                     STR_33:
   781  00FDF3  54                 	db	84	;'T'
   782  00FDF4  65                 	db	101	;'e'
   783  00FDF5  73                 	db	115	;'s'
   784  00FDF6  74                 	db	116	;'t'
   785  00FDF7  65                 	db	101	;'e'
   786  00FDF8  20                 	db	32
   787  00FDF9  64                 	db	100	;'d'
   788  00FDFA  65                 	db	101	;'e'
   789  00FDFB  20                 	db	32
   790  00FDFC  43                 	db	67	;'C'
   791  00FDFD  6F                 	db	111	;'o'
   792  00FDFE  72                 	db	114	;'r'
   793  00FDFF  72                 	db	114	;'r'
   794  00FE00  65                 	db	101	;'e'
   795  00FE01  6E                 	db	110	;'n'
   796  00FE02  74                 	db	116	;'t'
   797  00FE03  65                 	db	101	;'e'
   798  00FE04  20                 	db	32
   799  00FE05  6E                 	db	110	;'n'
   800  00FE06  6F                 	db	111	;'o'
   801  00FE07  20                 	db	32
   802  00FE08  43                 	db	67	;'C'
   803  00FE09  61                 	db	97	;'a'
   804  00FE0A  72                 	db	114	;'r'
   805  00FE0B  72                 	db	114	;'r'
   806  00FE0C  65                 	db	101	;'e'
   807  00FE0D  67                 	db	103	;'g'
   808  00FE0E  61                 	db	97	;'a'
   809  00FE0F  6D                 	db	109	;'m'
   810  00FE10  65                 	db	101	;'e'
   811  00FE11  6E                 	db	110	;'n'
   812  00FE12  74                 	db	116	;'t'
   813  00FE13  6F                 	db	111	;'o'
   814  00FE14  3A                 	db	58	;':'
   815  00FE15  20                 	db	32
   816  00FE16  4F                 	db	79	;'O'
   817  00FE17  4B                 	db	75	;'K'
   818  00FE18  0A                 	db	10
   819  00FE19  00                 	db	0
   820  00FE1A                     STR_30:
   821  00FE1A  54                 	db	84	;'T'
   822  00FE1B  65                 	db	101	;'e'
   823  00FE1C  73                 	db	115	;'s'
   824  00FE1D  74                 	db	116	;'t'
   825  00FE1E  65                 	db	101	;'e'
   826  00FE1F  20                 	db	32
   827  00FE20  64                 	db	100	;'d'
   828  00FE21  65                 	db	101	;'e'
   829  00FE22  20                 	db	32
   830  00FE23  54                 	db	84	;'T'
   831  00FE24  65                 	db	101	;'e'
   832  00FE25  6E                 	db	110	;'n'
   833  00FE26  73                 	db	115	;'s'
   834  00FE27  61                 	db	97	;'a'
   835  00FE28  6F                 	db	111	;'o'
   836  00FE29  20                 	db	32
   837  00FE2A  6E                 	db	110	;'n'
   838  00FE2B  6F                 	db	111	;'o'
   839  00FE2C  20                 	db	32
   840  00FE2D  43                 	db	67	;'C'
   841  00FE2E  61                 	db	97	;'a'
   842  00FE2F  72                 	db	114	;'r'
   843  00FE30  72                 	db	114	;'r'
   844  00FE31  65                 	db	101	;'e'
   845  00FE32  67                 	db	103	;'g'
   846  00FE33  61                 	db	97	;'a'
   847  00FE34  6D                 	db	109	;'m'
   848  00FE35  65                 	db	101	;'e'
   849  00FE36  6E                 	db	110	;'n'
   850  00FE37  74                 	db	116	;'t'
   851  00FE38  6F                 	db	111	;'o'
   852  00FE39  3A                 	db	58	;':'
   853  00FE3A  20                 	db	32
   854  00FE3B  4E                 	db	78	;'N'
   855  00FE3C  4F                 	db	79	;'O'
   856  00FE3D  4B                 	db	75	;'K'
   857  00FE3E  0A                 	db	10
   858  00FE3F  00                 	db	0
   859  00FE40                     STR_35:
   860  00FE40  0A                 	db	10
   861  00FE41  54                 	db	84	;'T'
   862  00FE42  65                 	db	101	;'e'
   863  00FE43  73                 	db	115	;'s'
   864  00FE44  74                 	db	116	;'t'
   865  00FE45  65                 	db	101	;'e'
   866  00FE46  20                 	db	32
   867  00FE47  64                 	db	100	;'d'
   868  00FE48  65                 	db	101	;'e'
   869  00FE49  20                 	db	32
   870  00FE4A  44                 	db	68	;'D'
   871  00FE4B  65                 	db	101	;'e'
   872  00FE4C  73                 	db	115	;'s'
   873  00FE4D  63                 	db	99	;'c'
   874  00FE4E  61                 	db	97	;'a'
   875  00FE4F  72                 	db	114	;'r'
   876  00FE50  72                 	db	114	;'r'
   877  00FE51  65                 	db	101	;'e'
   878  00FE52  67                 	db	103	;'g'
   879  00FE53  61                 	db	97	;'a'
   880  00FE54  6D                 	db	109	;'m'
   881  00FE55  65                 	db	101	;'e'
   882  00FE56  6E                 	db	110	;'n'
   883  00FE57  74                 	db	116	;'t'
   884  00FE58  6F                 	db	111	;'o'
   885  00FE59  20                 	db	32
   886  00FE5A  48                 	db	72	;'H'
   887  00FE5B  61                 	db	97	;'a'
   888  00FE5C  62                 	db	98	;'b'
   889  00FE5D  69                 	db	105	;'i'
   890  00FE5E  6C                 	db	108	;'l'
   891  00FE5F  69                 	db	105	;'i'
   892  00FE60  74                 	db	116	;'t'
   893  00FE61  61                 	db	97	;'a'
   894  00FE62  64                 	db	100	;'d'
   895  00FE63  6F                 	db	111	;'o'
   896  00FE64  21                 	db	33
   897  00FE65  00                 	db	0
   898  00FE66                     STR_29:
   899  00FE66  54                 	db	84	;'T'
   900  00FE67  65                 	db	101	;'e'
   901  00FE68  73                 	db	115	;'s'
   902  00FE69  74                 	db	116	;'t'
   903  00FE6A  65                 	db	101	;'e'
   904  00FE6B  20                 	db	32
   905  00FE6C  64                 	db	100	;'d'
   906  00FE6D  65                 	db	101	;'e'
   907  00FE6E  20                 	db	32
   908  00FE6F  54                 	db	84	;'T'
   909  00FE70  65                 	db	101	;'e'
   910  00FE71  6E                 	db	110	;'n'
   911  00FE72  73                 	db	115	;'s'
   912  00FE73  61                 	db	97	;'a'
   913  00FE74  6F                 	db	111	;'o'
   914  00FE75  20                 	db	32
   915  00FE76  6E                 	db	110	;'n'
   916  00FE77  6F                 	db	111	;'o'
   917  00FE78  20                 	db	32
   918  00FE79  43                 	db	67	;'C'
   919  00FE7A  61                 	db	97	;'a'
   920  00FE7B  72                 	db	114	;'r'
   921  00FE7C  72                 	db	114	;'r'
   922  00FE7D  65                 	db	101	;'e'
   923  00FE7E  67                 	db	103	;'g'
   924  00FE7F  61                 	db	97	;'a'
   925  00FE80  6D                 	db	109	;'m'
   926  00FE81  65                 	db	101	;'e'
   927  00FE82  6E                 	db	110	;'n'
   928  00FE83  74                 	db	116	;'t'
   929  00FE84  6F                 	db	111	;'o'
   930  00FE85  3A                 	db	58	;':'
   931  00FE86  20                 	db	32
   932  00FE87  4F                 	db	79	;'O'
   933  00FE88  4B                 	db	75	;'K'
   934  00FE89  0A                 	db	10
   935  00FE8A  00                 	db	0
   936  00FE8B                     STR_18:
   937  00FE8B  0A                 	db	10
   938  00FE8C  0A                 	db	10
   939  00FE8D  54                 	db	84	;'T'
   940  00FE8E  65                 	db	101	;'e'
   941  00FE8F  73                 	db	115	;'s'
   942  00FE90  74                 	db	116	;'t'
   943  00FE91  65                 	db	101	;'e'
   944  00FE92  20                 	db	32
   945  00FE93  64                 	db	100	;'d'
   946  00FE94  65                 	db	101	;'e'
   947  00FE95  20                 	db	32
   948  00FE96  43                 	db	67	;'C'
   949  00FE97  61                 	db	97	;'a'
   950  00FE98  72                 	db	114	;'r'
   951  00FE99  72                 	db	114	;'r'
   952  00FE9A  65                 	db	101	;'e'
   953  00FE9B  67                 	db	103	;'g'
   954  00FE9C  61                 	db	97	;'a'
   955  00FE9D  6D                 	db	109	;'m'
   956  00FE9E  65                 	db	101	;'e'
   957  00FE9F  6E                 	db	110	;'n'
   958  00FEA0  74                 	db	116	;'t'
   959  00FEA1  6F                 	db	111	;'o'
   960  00FEA2  20                 	db	32
   961  00FEA3  68                 	db	104	;'h'
   962  00FEA4  61                 	db	97	;'a'
   963  00FEA5  62                 	db	98	;'b'
   964  00FEA6  69                 	db	105	;'i'
   965  00FEA7  6C                 	db	108	;'l'
   966  00FEA8  69                 	db	105	;'i'
   967  00FEA9  74                 	db	116	;'t'
   968  00FEAA  61                 	db	97	;'a'
   969  00FEAB  64                 	db	100	;'d'
   970  00FEAC  6F                 	db	111	;'o'
   971  00FEAD  21                 	db	33
   972  00FEAE  00                 	db	0
   973  00FEAF                     STR_6:
   974  00FEAF  54                 	db	84	;'T'
   975  00FEB0  65                 	db	101	;'e'
   976  00FEB1  73                 	db	115	;'s'
   977  00FEB2  74                 	db	116	;'t'
   978  00FEB3  65                 	db	101	;'e'
   979  00FEB4  20                 	db	32
   980  00FEB5  64                 	db	100	;'d'
   981  00FEB6  65                 	db	101	;'e'
   982  00FEB7  20                 	db	32
   983  00FEB8  50                 	db	80	;'P'
   984  00FEB9  6F                 	db	111	;'o'
   985  00FEBA  6C                 	db	108	;'l'
   986  00FEBB  61                 	db	97	;'a'
   987  00FEBC  72                 	db	114	;'r'
   988  00FEBD  69                 	db	105	;'i'
   989  00FEBE  64                 	db	100	;'d'
   990  00FEBF  61                 	db	97	;'a'
   991  00FEC0  64                 	db	100	;'d'
   992  00FEC1  65                 	db	101	;'e'
   993  00FEC2  20                 	db	32
   994  00FEC3  48                 	db	72	;'H'
   995  00FEC4  61                 	db	97	;'a'
   996  00FEC5  62                 	db	98	;'b'
   997  00FEC6  69                 	db	105	;'i'
   998  00FEC7  6C                 	db	108	;'l'
   999  00FEC8  69                 	db	105	;'i'
  1000  00FEC9  74                 	db	116	;'t'
  1001  00FECA  61                 	db	97	;'a'
  1002  00FECB  64                 	db	100	;'d'
  1003  00FECC  6F                 	db	111	;'o'
  1004  00FECD  21                 	db	33
  1005  00FECE  00                 	db	0
  1006  00FECF                     STR_5:
  1007  00FECF  0A                 	db	10
  1008  00FED0  2A                 	db	42
  1009  00FED1  2A                 	db	42
  1010  00FED2  2A                 	db	42
  1011  00FED3  20                 	db	32
  1012  00FED4  49                 	db	73	;'I'
  1013  00FED5  6E                 	db	110	;'n'
  1014  00FED6  69                 	db	105	;'i'
  1015  00FED7  63                 	db	99	;'c'
  1016  00FED8  69                 	db	105	;'i'
  1017  00FED9  61                 	db	97	;'a'
  1018  00FEDA  6E                 	db	110	;'n'
  1019  00FEDB  64                 	db	100	;'d'
  1020  00FEDC  6F                 	db	111	;'o'
  1021  00FEDD  20                 	db	32
  1022  00FEDE  74                 	db	116	;'t'
  1023  00FEDF  65                 	db	101	;'e'
  1024  00FEE0  73                 	db	115	;'s'
  1025  00FEE1  74                 	db	116	;'t'
  1026  00FEE2  65                 	db	101	;'e'
  1027  00FEE3  73                 	db	115	;'s'
  1028  00FEE4  2E                 	db	46
  1029  00FEE5  2E                 	db	46
  1030  00FEE6  2E                 	db	46
  1031  00FEE7  20                 	db	32
  1032  00FEE8  2A                 	db	42
  1033  00FEE9  2A                 	db	42
  1034  00FEEA  2A                 	db	42
  1035  00FEEB  0A                 	db	10
  1036  00FEEC  0A                 	db	10
  1037  00FEED  00                 	db	0
  1038  00FEEE                     STR_56:
  1039  00FEEE  0A                 	db	10
  1040  00FEEF  2A                 	db	42
  1041  00FEF0  2A                 	db	42
  1042  00FEF1  2A                 	db	42
  1043  00FEF2  20                 	db	32
  1044  00FEF3  42                 	db	66	;'B'
  1045  00FEF4  41                 	db	65	;'A'
  1046  00FEF5  54                 	db	84	;'T'
  1047  00FEF6  45                 	db	69	;'E'
  1048  00FEF7  52                 	db	82	;'R'
  1049  00FEF8  49                 	db	73	;'I'
  1050  00FEF9  41                 	db	65	;'A'
  1051  00FEFA  20                 	db	32
  1052  00FEFB  52                 	db	82	;'R'
  1053  00FEFC  45                 	db	69	;'E'
  1054  00FEFD  50                 	db	80	;'P'
  1055  00FEFE  52                 	db	82	;'R'
  1056  00FEFF  4F                 	db	79	;'O'
  1057  00FF00  56                 	db	86	;'V'
  1058  00FF01  41                 	db	65	;'A'
  1059  00FF02  44                 	db	68	;'D'
  1060  00FF03  41                 	db	65	;'A'
  1061  00FF04  21                 	db	33
  1062  00FF05  20                 	db	32
  1063  00FF06  2A                 	db	42
  1064  00FF07  2A                 	db	42
  1065  00FF08  2A                 	db	42
  1066  00FF09  0A                 	db	10
  1067  00FF0A  00                 	db	0
  1068  00FF0B                     STR_54:
  1069  00FF0B  0A                 	db	10
  1070  00FF0C  2A                 	db	42
  1071  00FF0D  2A                 	db	42
  1072  00FF0E  2A                 	db	42
  1073  00FF0F  20                 	db	32
  1074  00FF10  54                 	db	84	;'T'
  1075  00FF11  65                 	db	101	;'e'
  1076  00FF12  73                 	db	115	;'s'
  1077  00FF13  74                 	db	116	;'t'
  1078  00FF14  65                 	db	101	;'e'
  1079  00FF15  73                 	db	115	;'s'
  1080  00FF16  20                 	db	32
  1081  00FF17  66                 	db	102	;'f'
  1082  00FF18  69                 	db	105	;'i'
  1083  00FF19  6E                 	db	110	;'n'
  1084  00FF1A  61                 	db	97	;'a'
  1085  00FF1B  6C                 	db	108	;'l'
  1086  00FF1C  69                 	db	105	;'i'
  1087  00FF1D  7A                 	db	122	;'z'
  1088  00FF1E  61                 	db	97	;'a'
  1089  00FF1F  64                 	db	100	;'d'
  1090  00FF20  6F                 	db	111	;'o'
  1091  00FF21  73                 	db	115	;'s'
  1092  00FF22  20                 	db	32
  1093  00FF23  2A                 	db	42
  1094  00FF24  2A                 	db	42
  1095  00FF25  2A                 	db	42
  1096  00FF26  0A                 	db	10
  1097  00FF27  00                 	db	0
  1098  00FF28                     STR_53:
  1099  00FF28  0A                 	db	10
  1100  00FF29  2A                 	db	42
  1101  00FF2A  2A                 	db	42
  1102  00FF2B  2A                 	db	42
  1103  00FF2C  20                 	db	32
  1104  00FF2D  42                 	db	66	;'B'
  1105  00FF2E  41                 	db	65	;'A'
  1106  00FF2F  54                 	db	84	;'T'
  1107  00FF30  45                 	db	69	;'E'
  1108  00FF31  52                 	db	82	;'R'
  1109  00FF32  49                 	db	73	;'I'
  1110  00FF33  41                 	db	65	;'A'
  1111  00FF34  20                 	db	32
  1112  00FF35  41                 	db	65	;'A'
  1113  00FF36  50                 	db	80	;'P'
  1114  00FF37  52                 	db	82	;'R'
  1115  00FF38  4F                 	db	79	;'O'
  1116  00FF39  56                 	db	86	;'V'
  1117  00FF3A  41                 	db	65	;'A'
  1118  00FF3B  44                 	db	68	;'D'
  1119  00FF3C  41                 	db	65	;'A'
  1120  00FF3D  21                 	db	33
  1121  00FF3E  20                 	db	32
  1122  00FF3F  2A                 	db	42
  1123  00FF40  2A                 	db	42
  1124  00FF41  2A                 	db	42
  1125  00FF42  0A                 	db	10
  1126  00FF43  00                 	db	0
  1127  00FF44                     STR_19:
  1128  00FF44  0A                 	db	10
  1129  00FF45  54                 	db	84	;'T'
  1130  00FF46  65                 	db	101	;'e'
  1131  00FF47  73                 	db	115	;'s'
  1132  00FF48  74                 	db	116	;'t'
  1133  00FF49  65                 	db	101	;'e'
  1134  00FF4A  20                 	db	32
  1135  00FF4B  64                 	db	100	;'d'
  1136  00FF4C  65                 	db	101	;'e'
  1137  00FF4D  20                 	db	32
  1138  00FF4E  50                 	db	80	;'P'
  1139  00FF4F  6F                 	db	111	;'o'
  1140  00FF50  6C                 	db	108	;'l'
  1141  00FF51  61                 	db	97	;'a'
  1142  00FF52  72                 	db	114	;'r'
  1143  00FF53  69                 	db	105	;'i'
  1144  00FF54  64                 	db	100	;'d'
  1145  00FF55  61                 	db	97	;'a'
  1146  00FF56  64                 	db	100	;'d'
  1147  00FF57  65                 	db	101	;'e'
  1148  00FF58  3A                 	db	58	;':'
  1149  00FF59  20                 	db	32
  1150  00FF5A  4E                 	db	78	;'N'
  1151  00FF5B  4F                 	db	79	;'O'
  1152  00FF5C  4B                 	db	75	;'K'
  1153  00FF5D  00                 	db	0
  1154  00FF5E                     STR_17:
  1155  00FF5E  0A                 	db	10
  1156  00FF5F  54                 	db	84	;'T'
  1157  00FF60  65                 	db	101	;'e'
  1158  00FF61  73                 	db	115	;'s'
  1159  00FF62  74                 	db	116	;'t'
  1160  00FF63  65                 	db	101	;'e'
  1161  00FF64  20                 	db	32
  1162  00FF65  64                 	db	100	;'d'
  1163  00FF66  65                 	db	101	;'e'
  1164  00FF67  20                 	db	32
  1165  00FF68  70                 	db	112	;'p'
  1166  00FF69  6F                 	db	111	;'o'
  1167  00FF6A  6C                 	db	108	;'l'
  1168  00FF6B  61                 	db	97	;'a'
  1169  00FF6C  72                 	db	114	;'r'
  1170  00FF6D  69                 	db	105	;'i'
  1171  00FF6E  64                 	db	100	;'d'
  1172  00FF6F  61                 	db	97	;'a'
  1173  00FF70  64                 	db	100	;'d'
  1174  00FF71  65                 	db	101	;'e'
  1175  00FF72  3A                 	db	58	;':'
  1176  00FF73  20                 	db	32
  1177  00FF74  4F                 	db	79	;'O'
  1178  00FF75  4B                 	db	75	;'K'
  1179  00FF76  00                 	db	0
  1180  00FF77                     STR_45:
  1181  00FF77  0A                 	db	10
  1182  00FF78  4D                 	db	77	;'M'
  1183  00FF79  65                 	db	101	;'e'
  1184  00FF7A  6E                 	db	110	;'n'
  1185  00FF7B  6F                 	db	111	;'o'
  1186  00FF7C  72                 	db	114	;'r'
  1187  00FF7D  20                 	db	32
  1188  00FF7E  74                 	db	116	;'t'
  1189  00FF7F  65                 	db	101	;'e'
  1190  00FF80  6E                 	db	110	;'n'
  1191  00FF81  73                 	db	115	;'s'
  1192  00FF82  61                 	db	97	;'a'
  1193  00FF83  6F                 	db	111	;'o'
  1194  00FF84  20                 	db	32
  1195  00FF85  6D                 	db	109	;'m'
  1196  00FF86  65                 	db	101	;'e'
  1197  00FF87  64                 	db	100	;'d'
  1198  00FF88  69                 	db	105	;'i'
  1199  00FF89  64                 	db	100	;'d'
  1200  00FF8A  61                 	db	97	;'a'
  1201  00FF8B  3A                 	db	58	;':'
  1202  00FF8C  20                 	db	32
  1203  00FF8D  00                 	db	0
  1204  00FF8E                     STR_15:
  1205  00FF8E  0A                 	db	10
  1206  00FF8F  43                 	db	67	;'C'
  1207  00FF90  6F                 	db	111	;'o'
  1208  00FF91  72                 	db	114	;'r'
  1209  00FF92  72                 	db	114	;'r'
  1210  00FF93  65                 	db	101	;'e'
  1211  00FF94  6E                 	db	110	;'n'
  1212  00FF95  74                 	db	116	;'t'
  1213  00FF96  65                 	db	101	;'e'
  1214  00FF97  20                 	db	32
  1215  00FF98  6D                 	db	109	;'m'
  1216  00FF99  65                 	db	101	;'e'
  1217  00FF9A  64                 	db	100	;'d'
  1218  00FF9B  69                 	db	105	;'i'
  1219  00FF9C  61                 	db	97	;'a'
  1220  00FF9D  3A                 	db	58	;':'
  1221  00FF9E  20                 	db	32
  1222  00FF9F  00                 	db	0
  1223  00FFA0                     STR_31:
  1224  00FFA0  43                 	db	67	;'C'
  1225  00FFA1  6F                 	db	111	;'o'
  1226  00FFA2  72                 	db	114	;'r'
  1227  00FFA3  72                 	db	114	;'r'
  1228  00FFA4  65                 	db	101	;'e'
  1229  00FFA5  6E                 	db	110	;'n'
  1230  00FFA6  74                 	db	116	;'t'
  1231  00FFA7  65                 	db	101	;'e'
  1232  00FFA8  20                 	db	32
  1233  00FFA9  4D                 	db	77	;'M'
  1234  00FFAA  65                 	db	101	;'e'
  1235  00FFAB  64                 	db	100	;'d'
  1236  00FFAC  69                 	db	105	;'i'
  1237  00FFAD  61                 	db	97	;'a'
  1238  00FFAE  3A                 	db	58	;':'
  1239  00FFAF  20                 	db	32
  1240  00FFB0  00                 	db	0
  1241  00FFB1                     STR_27:
  1242  00FFB1  0A                 	db	10
  1243  00FFB2  54                 	db	84	;'T'
  1244  00FFB3  65                 	db	101	;'e'
  1245  00FFB4  6E                 	db	110	;'n'
  1246  00FFB5  73                 	db	115	;'s'
  1247  00FFB6  61                 	db	97	;'a'
  1248  00FFB7  6F                 	db	111	;'o'
  1249  00FFB8  20                 	db	32
  1250  00FFB9  4D                 	db	77	;'M'
  1251  00FFBA  65                 	db	101	;'e'
  1252  00FFBB  64                 	db	100	;'d'
  1253  00FFBC  69                 	db	105	;'i'
  1254  00FFBD  61                 	db	97	;'a'
  1255  00FFBE  3A                 	db	58	;':'
  1256  00FFBF  20                 	db	32
  1257  00FFC0  00                 	db	0
  1258  00FFC1                     STR_13:
  1259  00FFC1  0A                 	db	10
  1260  00FFC2  54                 	db	84	;'T'
  1261  00FFC3  65                 	db	101	;'e'
  1262  00FFC4  6E                 	db	110	;'n'
  1263  00FFC5  73                 	db	115	;'s'
  1264  00FFC6  61                 	db	97	;'a'
  1265  00FFC7  6F                 	db	111	;'o'
  1266  00FFC8  20                 	db	32
  1267  00FFC9  6D                 	db	109	;'m'
  1268  00FFCA  65                 	db	101	;'e'
  1269  00FFCB  64                 	db	100	;'d'
  1270  00FFCC  69                 	db	105	;'i'
  1271  00FFCD  61                 	db	97	;'a'
  1272  00FFCE  3A                 	db	58	;':'
  1273  00FFCF  20                 	db	32
  1274  00FFD0  00                 	db	0
  1275  00FFD1                     STR_11:
  1276  00FFD1  43                 	db	67	;'C'
  1277  00FFD2  6F                 	db	111	;'o'
  1278  00FFD3  72                 	db	114	;'r'
  1279  00FFD4  72                 	db	114	;'r'
  1280  00FFD5  65                 	db	101	;'e'
  1281  00FFD6  6E                 	db	110	;'n'
  1282  00FFD7  74                 	db	116	;'t'
  1283  00FFD8  65                 	db	101	;'e'
  1284  00FFD9  3A                 	db	58	;':'
  1285  00FFDA  20                 	db	32
  1286  00FFDB  00                 	db	0
  1287  00FFDC                     STR_9:
  1288  00FFDC  54                 	db	84	;'T'
  1289  00FFDD  65                 	db	101	;'e'
  1290  00FFDE  6E                 	db	110	;'n'
  1291  00FFDF  73                 	db	115	;'s'
  1292  00FFE0  61                 	db	97	;'a'
  1293  00FFE1  6F                 	db	111	;'o'
  1294  00FFE2  3A                 	db	58	;':'
  1295  00FFE3  20                 	db	32
  1296  00FFE4  00                 	db	0
  1297  00FFE5                     STR_10:
  1298  00FFE5  20                 	db	32
  1299  00FFE6  56                 	db	86	;'V'
  1300  00FFE7  20                 	db	32
  1301  00FFE8  7C                 	db	124
  1302  00FFE9  20                 	db	32
  1303  00FFEA  00                 	db	0
  1304  00FFEB                     STR_32:
  1305  00FFEB  20                 	db	32
  1306  00FFEC  41                 	db	65	;'A'
  1307  00FFED  0A                 	db	10
  1308  00FFEE  00                 	db	0
  1309  00FFEF                     STR_28:
  1310  00FFEF  20                 	db	32
  1311  00FFF0  56                 	db	86	;'V'
  1312  00FFF1  0A                 	db	10
  1313  00FFF2  00                 	db	0
  1314  00FFF3                     STR_12:
  1315  00FFF3  20                 	db	32
  1316  00FFF4  41                 	db	65	;'A'
  1317  00FFF5  00                 	db	0
  1318  00FFF6                     STR_14:
  1319  00FFF6  20                 	db	32
  1320  00FFF7  56                 	db	86	;'V'
  1321  00FFF8  00                 	db	0
  1322  00FFF9                     STR_1:
  1323  00FFF9  25                 	db	37
  1324  00FFFA  64                 	db	100	;'d'
  1325  00FFFB  00                 	db	0
  1326  00FFFC                     STR_2:
  1327  00FFFC  25                 	db	37
  1328  00FFFD  66                 	db	102	;'f'
  1329  00FFFE  00                 	db	0
  1330  0000                     
  1331                           ; #config settings
  1332  00FFFF  00                 	db	0	; dummy byte at the end
  1333  0000                     
  1334                           	psect	cinit
  1335  002F0C                     __pcinit:
  1336                           	opt stack 0
  1337  002F0C                     start_initialization:
  1338                           	opt stack 0
  1339  002F0C                     __initialization:
  1340                           	opt stack 0
  1341                           
  1342                           ; Clear objects allocated to BANK0 (38 bytes)
  1343  002F0C  EE00  F0B7         	lfsr	0,__pbssBANK0
  1344  002F10  0E26               	movlw	38
  1345  002F12                     clear_0:
  1346  002F12  6AEE               	clrf	postinc0,c
  1347  002F14  06E8               	decf	wreg,f,c
  1348  002F16  E1FD               	bnz	clear_0
  1349  002F18                     end_of_initialization:
  1350                           	opt stack 0
  1351  002F18                     __end_of__initialization:
  1352                           	opt stack 0
  1353  002F18  907D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1354  002F1A  927D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1355  002F1C  0100               	movlb	0
  1356  002F1E  EF61  F013         	goto	_main	;jump to C main() function
  1357                           postinc0	equ	0xFEE
  1358                           wreg	equ	0xFE8
  1359                           
  1360                           	psect	bssBANK0
  1361  0000B7                     __pbssBANK0:
  1362                           	opt stack 0
  1363  0000B7                     _correnteNaBateria:
  1364                           	opt stack 0
  1365  0000B7                     	ds	15
  1366  0000C6                     _resultadoDosTestes:
  1367                           	opt stack 0
  1368  0000C6                     	ds	5
  1369  0000CB                     _statusDaBateria:
  1370                           	opt stack 0
  1371  0000CB                     	ds	1
  1372  0000CC                     _tempoEmSegundos:
  1373                           	opt stack 0
  1374  0000CC                     	ds	1
  1375  0000CD                     _contador:
  1376                           	opt stack 0
  1377  0000CD                     	ds	1
  1378  0000CE                     _tensaoNaBateria:
  1379                           	opt stack 0
  1380  0000CE                     	ds	15
  1381                           postinc0	equ	0xFEE
  1382                           wreg	equ	0xFE8
  1383                           
  1384                           	psect	cstackBANK1
  1385  000100                     __pcstackBANK1:
  1386                           	opt stack 0
  1387  000100                     ??_sinalizacaoBeep:
  1388  000100                     ??_configureAdc:
  1389  000100                     ??_desabilitarDescarregamentoDaBateria:
  1390  000100                     ??_desabilitarCarregamentoDaBateria:
  1391  000100                     ?_tamanhoDaString:
  1392                           	opt stack 0
  1393  000100                     escreverCharUart@caracter:
  1394                           	opt stack 0
  1395  000100                     tamanhoDaString@string:
  1396                           	opt stack 0
  1397                           
  1398                           ; 2 bytes @ 0x0
  1399  000100                     	ds	1
  1400  000101                     
  1401                           ; 1 bytes @ 0x1
  1402  000101                     	ds	1
  1403  000102                     ??_tamanhoDaString:
  1404                           
  1405                           ; 1 bytes @ 0x2
  1406  000102                     	ds	2
  1407  000104                     tamanhoDaString@lenght:
  1408                           	opt stack 0
  1409                           
  1410                           ; 2 bytes @ 0x4
  1411  000104                     	ds	2
  1412  000106                     escreverStringUart@string:
  1413                           	opt stack 0
  1414                           
  1415                           ; 2 bytes @ 0x6
  1416  000106                     	ds	2
  1417  000108                     ??_escreverStringUart:
  1418                           
  1419                           ; 1 bytes @ 0x8
  1420  000108                     	ds	2
  1421  00010A                     escreverStringUart@tamanhoDaStr:
  1422                           	opt stack 0
  1423                           
  1424                           ; 2 bytes @ 0xA
  1425  00010A                     	ds	2
  1426  00010C                     escreverStringUart@contador:
  1427                           	opt stack 0
  1428                           
  1429                           ; 2 bytes @ 0xC
  1430  00010C                     	ds	2
  1431  00010E                     ??_main:
  1432                           
  1433                           ; 1 bytes @ 0xE
  1434  00010E                     	ds	2
  1435                           postinc0	equ	0xFEE
  1436                           wreg	equ	0xFE8
  1437                           
  1438                           	psect	cstackBANK0
  1439  000080                     __pcstackBANK0:
  1440                           	opt stack 0
  1441  000080                     i2escreverStringUart@tamanhoDaStr:
  1442                           	opt stack 0
  1443                           
  1444                           ; 2 bytes @ 0x0
  1445  000080                     	ds	2
  1446  000082                     i2escreverStringUart@contador:
  1447                           	opt stack 0
  1448                           
  1449                           ; 2 bytes @ 0x2
  1450  000082                     	ds	2
  1451  000084                     ??_tratamento:
  1452                           
  1453                           ; 1 bytes @ 0x4
  1454  000084                     	ds	16
  1455  000094                     _tratamento$1515:
  1456                           	opt stack 0
  1457                           
  1458                           ; 3 bytes @ 0x14
  1459  000094                     	ds	3
  1460  000097                     tratamento@tensaoMedia:
  1461                           	opt stack 0
  1462                           
  1463                           ; 3 bytes @ 0x17
  1464  000097                     	ds	3
  1465  00009A                     tratamento@correnteMedia:
  1466                           	opt stack 0
  1467                           
  1468                           ; 3 bytes @ 0x1A
  1469  00009A                     	ds	3
  1470  00009D                     tratamento@tensaoMedia_793:
  1471                           	opt stack 0
  1472                           
  1473                           ; 3 bytes @ 0x1D
  1474  00009D                     	ds	3
  1475  0000A0                     tratamento@indexTensaoMinima:
  1476                           	opt stack 0
  1477                           
  1478                           ; 2 bytes @ 0x20
  1479  0000A0                     	ds	2
  1480  0000A2                     tratamento@tensaoMedia_774:
  1481                           	opt stack 0
  1482                           
  1483                           ; 3 bytes @ 0x22
  1484  0000A2                     	ds	3
  1485  0000A5                     tratamento@correnteMedia_779:
  1486                           	opt stack 0
  1487                           
  1488                           ; 3 bytes @ 0x25
  1489  0000A5                     	ds	3
  1490  0000A8                     tratamento@correnteMedia_802:
  1491                           	opt stack 0
  1492                           
  1493                           ; 3 bytes @ 0x28
  1494  0000A8                     	ds	3
  1495  0000AB                     _tratamento$1511:
  1496                           	opt stack 0
  1497                           
  1498                           ; 3 bytes @ 0x2B
  1499  0000AB                     	ds	3
  1500  0000AE                     _tratamento$1512:
  1501                           	opt stack 0
  1502                           
  1503                           ; 3 bytes @ 0x2E
  1504  0000AE                     	ds	3
  1505  0000B1                     _tratamento$1513:
  1506                           	opt stack 0
  1507                           
  1508                           ; 3 bytes @ 0x31
  1509  0000B1                     	ds	3
  1510  0000B4                     _tratamento$1514:
  1511                           	opt stack 0
  1512                           
  1513                           ; 3 bytes @ 0x34
  1514  0000B4                     	ds	3
  1515                           postinc0	equ	0xFEE
  1516                           wreg	equ	0xFE8
  1517                           
  1518                           	psect	cstackCOMRAM
  1519  000001                     __pcstackCOMRAM:
  1520                           	opt stack 0
  1521  000001                     ??_sinalizacaoAprovada:
  1522  000001                     ??_sinalizacaoFalha:
  1523  000001                     ??i2_desabilitarDescarregamentoDaBateria:
  1524  000001                     ??i2_desabilitarCarregamentoDaBateria:
  1525  000001                     ?_lerAdcAn0:
  1526                           	opt stack 0
  1527  000001                     ?_lerAdcAn1:
  1528                           	opt stack 0
  1529  000001                     ?___awmod:
  1530                           	opt stack 0
  1531  000001                     ?i2_tamanhoDaString:
  1532                           	opt stack 0
  1533  000001                     ?___ftpack:
  1534                           	opt stack 0
  1535  000001                     ?__tdiv_to_l_:
  1536                           	opt stack 0
  1537  000001                     ?__div_to_l_:
  1538                           	opt stack 0
  1539  000001                     ?___lldiv:
  1540                           	opt stack 0
  1541  000001                     i2escreverCharUart@caracter:
  1542                           	opt stack 0
  1543  000001                     ___awmod@dividend:
  1544                           	opt stack 0
  1545  000001                     i2tamanhoDaString@string:
  1546                           	opt stack 0
  1547  000001                     __div_to_l_@f1:
  1548                           	opt stack 0
  1549  000001                     ___ftpack@arg:
  1550                           	opt stack 0
  1551  000001                     __tdiv_to_l_@f1:
  1552                           	opt stack 0
  1553  000001                     ___lldiv@dividend:
  1554                           	opt stack 0
  1555                           
  1556                           ; 4 bytes @ 0x0
  1557  000001                     	ds	1
  1558  000002                     sinalizacaoAprovada@repeticoes:
  1559                           	opt stack 0
  1560                           
  1561                           ; 1 bytes @ 0x1
  1562  000002                     	ds	1
  1563  000003                     ??_lerAdcAn0:
  1564  000003                     ??_lerAdcAn1:
  1565  000003                     ??i2_tamanhoDaString:
  1566  000003                     ___awmod@divisor:
  1567                           	opt stack 0
  1568                           
  1569                           ; 2 bytes @ 0x2
  1570  000003                     	ds	1
  1571  000004                     ___ftpack@exp:
  1572                           	opt stack 0
  1573  000004                     __div_to_l_@f2:
  1574                           	opt stack 0
  1575  000004                     __tdiv_to_l_@f2:
  1576                           	opt stack 0
  1577                           
  1578                           ; 3 bytes @ 0x3
  1579  000004                     	ds	1
  1580  000005                     ___awmod@counter:
  1581                           	opt stack 0
  1582  000005                     ___ftpack@sign:
  1583                           	opt stack 0
  1584  000005                     lerAdcAn0@valorLido:
  1585                           	opt stack 0
  1586  000005                     lerAdcAn1@valorLido:
  1587                           	opt stack 0
  1588  000005                     i2tamanhoDaString@lenght:
  1589                           	opt stack 0
  1590  000005                     ___lldiv@divisor:
  1591                           	opt stack 0
  1592                           
  1593                           ; 4 bytes @ 0x4
  1594  000005                     	ds	1
  1595  000006                     ??___ftpack:
  1596  000006                     ___awmod@sign:
  1597                           	opt stack 0
  1598                           
  1599                           ; 1 bytes @ 0x5
  1600  000006                     	ds	1
  1601  000007                     ??__tdiv_to_l_:
  1602  000007                     ?___awdiv:
  1603                           	opt stack 0
  1604  000007                     ___awdiv@dividend:
  1605                           	opt stack 0
  1606  000007                     __div_to_l_@quot:
  1607                           	opt stack 0
  1608                           
  1609                           ; 4 bytes @ 0x6
  1610  000007                     	ds	2
  1611  000009                     ?___awtoft:
  1612                           	opt stack 0
  1613  000009                     ?___lltoft:
  1614                           	opt stack 0
  1615  000009                     ___awdiv@divisor:
  1616                           	opt stack 0
  1617  000009                     ___awtoft@c:
  1618                           	opt stack 0
  1619  000009                     ___lldiv@quotient:
  1620                           	opt stack 0
  1621  000009                     ___lltoft@c:
  1622                           	opt stack 0
  1623                           
  1624                           ; 4 bytes @ 0x8
  1625  000009                     	ds	1
  1626  00000A                     __tdiv_to_l_@quot:
  1627                           	opt stack 0
  1628                           
  1629                           ; 4 bytes @ 0x9
  1630  00000A                     	ds	1
  1631  00000B                     ___awdiv@counter:
  1632                           	opt stack 0
  1633  00000B                     __div_to_l_@cntr:
  1634                           	opt stack 0
  1635                           
  1636                           ; 1 bytes @ 0xA
  1637  00000B                     	ds	1
  1638  00000C                     ___awdiv@sign:
  1639                           	opt stack 0
  1640  00000C                     ___awtoft@sign:
  1641                           	opt stack 0
  1642  00000C                     __div_to_l_@exp1:
  1643                           	opt stack 0
  1644                           
  1645                           ; 1 bytes @ 0xB
  1646  00000C                     	ds	1
  1647  00000D                     ??___lltoft:
  1648  00000D                     ___lldiv@counter:
  1649                           	opt stack 0
  1650  00000D                     ___awdiv@quotient:
  1651                           	opt stack 0
  1652                           
  1653                           ; 2 bytes @ 0xC
  1654  00000D                     	ds	1
  1655  00000E                     ?___llmod:
  1656                           	opt stack 0
  1657  00000E                     __tdiv_to_l_@cntr:
  1658                           	opt stack 0
  1659  00000E                     ___llmod@dividend:
  1660                           	opt stack 0
  1661                           
  1662                           ; 4 bytes @ 0xD
  1663  00000E                     	ds	1
  1664  00000F                     ?___wmul:
  1665                           	opt stack 0
  1666  00000F                     __tdiv_to_l_@exp1:
  1667                           	opt stack 0
  1668  00000F                     ___wmul@multiplier:
  1669                           	opt stack 0
  1670                           
  1671                           ; 2 bytes @ 0xE
  1672  00000F                     	ds	2
  1673  000011                     ___lltoft@exp:
  1674                           	opt stack 0
  1675  000011                     ___wmul@multiplicand:
  1676                           	opt stack 0
  1677                           
  1678                           ; 2 bytes @ 0x10
  1679  000011                     	ds	1
  1680  000012                     ___llmod@divisor:
  1681                           	opt stack 0
  1682                           
  1683                           ; 4 bytes @ 0x11
  1684  000012                     	ds	1
  1685  000013                     ___wmul@product:
  1686                           	opt stack 0
  1687                           
  1688                           ; 2 bytes @ 0x12
  1689  000013                     	ds	2
  1690  000015                     ?___ftmul:
  1691                           	opt stack 0
  1692  000015                     ___ftge@ff1:
  1693                           	opt stack 0
  1694  000015                     ___ftmul@f1:
  1695                           	opt stack 0
  1696                           
  1697                           ; 3 bytes @ 0x14
  1698  000015                     	ds	1
  1699  000016                     ___llmod@counter:
  1700                           	opt stack 0
  1701                           
  1702                           ; 1 bytes @ 0x15
  1703  000016                     	ds	2
  1704  000018                     ___ftge@ff2:
  1705                           	opt stack 0
  1706  000018                     ___ftmul@f2:
  1707                           	opt stack 0
  1708                           
  1709                           ; 3 bytes @ 0x17
  1710  000018                     	ds	3
  1711  00001B                     ??___ftmul:
  1712  00001B                     ??___ftge:
  1713                           
  1714                           ; 1 bytes @ 0x1A
  1715  00001B                     	ds	3
  1716  00001E                     ?_indexDoMenorValor:
  1717                           	opt stack 0
  1718  00001E                     ___ftmul@exp:
  1719                           	opt stack 0
  1720  00001E                     indexDoMenorValor@dados:
  1721                           	opt stack 0
  1722                           
  1723                           ; 2 bytes @ 0x1D
  1724  00001E                     	ds	1
  1725  00001F                     ___ftmul@f3_as_product:
  1726                           	opt stack 0
  1727                           
  1728                           ; 3 bytes @ 0x1E
  1729  00001F                     	ds	1
  1730  000020                     indexDoMenorValor@quantidadeDeValoresParaAnalisar:
  1731                           	opt stack 0
  1732                           
  1733                           ; 2 bytes @ 0x1F
  1734  000020                     	ds	2
  1735  000022                     ??_indexDoMenorValor:
  1736  000022                     ___ftmul@cntr:
  1737                           	opt stack 0
  1738                           
  1739                           ; 1 bytes @ 0x21
  1740  000022                     	ds	1
  1741  000023                     ___ftmul@sign:
  1742                           	opt stack 0
  1743  000023                     indexDoMenorValor@menorValor:
  1744                           	opt stack 0
  1745                           
  1746                           ; 3 bytes @ 0x22
  1747  000023                     	ds	1
  1748  000024                     ?___ftdiv:
  1749                           	opt stack 0
  1750  000024                     ?_fround:
  1751                           	opt stack 0
  1752  000024                     ?_scale:
  1753                           	opt stack 0
  1754  000024                     ?___fttol:
  1755                           	opt stack 0
  1756  000024                     ___ftdiv@f1:
  1757                           	opt stack 0
  1758  000024                     ___fttol@f1:
  1759                           	opt stack 0
  1760                           
  1761                           ; 3 bytes @ 0x23
  1762  000024                     	ds	2
  1763  000026                     indexDoMenorValor@index:
  1764                           	opt stack 0
  1765                           
  1766                           ; 2 bytes @ 0x25
  1767  000026                     	ds	1
  1768  000027                     ___ftdiv@f2:
  1769                           	opt stack 0
  1770  000027                     _fround$1517:
  1771                           	opt stack 0
  1772  000027                     _scale$1518:
  1773                           	opt stack 0
  1774                           
  1775                           ; 3 bytes @ 0x26
  1776  000027                     	ds	1
  1777  000028                     ??___fttol:
  1778  000028                     indexDoMenorValor@contador:
  1779                           	opt stack 0
  1780                           
  1781                           ; 2 bytes @ 0x27
  1782  000028                     	ds	2
  1783  00002A                     ??___ftdiv:
  1784  00002A                     scale@scl:
  1785                           	opt stack 0
  1786  00002A                     _fround$1516:
  1787                           	opt stack 0
  1788                           
  1789                           ; 3 bytes @ 0x29
  1790  00002A                     	ds	3
  1791  00002D                     fround@prec:
  1792                           	opt stack 0
  1793  00002D                     ___ftdiv@cntr:
  1794                           	opt stack 0
  1795  00002D                     ___fttol@sign1:
  1796                           	opt stack 0
  1797                           
  1798                           ; 1 bytes @ 0x2C
  1799  00002D                     	ds	1
  1800  00002E                     ___ftdiv@f3:
  1801                           	opt stack 0
  1802  00002E                     ___fttol@lval:
  1803                           	opt stack 0
  1804                           
  1805                           ; 4 bytes @ 0x2D
  1806  00002E                     	ds	3
  1807  000031                     ___ftdiv@exp:
  1808                           	opt stack 0
  1809                           
  1810                           ; 1 bytes @ 0x30
  1811  000031                     	ds	1
  1812  000032                     ___ftdiv@sign:
  1813                           	opt stack 0
  1814  000032                     ___fttol@exp1:
  1815                           	opt stack 0
  1816                           
  1817                           ; 1 bytes @ 0x31
  1818  000032                     	ds	1
  1819  000033                     ?___ftneg:
  1820                           	opt stack 0
  1821  000033                     ___ftneg@f1:
  1822                           	opt stack 0
  1823                           
  1824                           ; 3 bytes @ 0x32
  1825  000033                     	ds	3
  1826  000036                     ?___ftadd:
  1827                           	opt stack 0
  1828  000036                     ___ftadd@f1:
  1829                           	opt stack 0
  1830                           
  1831                           ; 3 bytes @ 0x35
  1832  000036                     	ds	3
  1833  000039                     ___ftadd@f2:
  1834                           	opt stack 0
  1835                           
  1836                           ; 3 bytes @ 0x38
  1837  000039                     	ds	3
  1838  00003C                     ??___ftadd:
  1839                           
  1840                           ; 1 bytes @ 0x3B
  1841  00003C                     	ds	3
  1842  00003F                     ___ftadd@sign:
  1843                           	opt stack 0
  1844                           
  1845                           ; 1 bytes @ 0x3E
  1846  00003F                     	ds	1
  1847  000040                     ___ftadd@exp2:
  1848                           	opt stack 0
  1849                           
  1850                           ; 1 bytes @ 0x3F
  1851  000040                     	ds	1
  1852  000041                     ___ftadd@exp1:
  1853                           	opt stack 0
  1854                           
  1855                           ; 1 bytes @ 0x40
  1856  000041                     	ds	1
  1857  000042                     ?___ftsub:
  1858                           	opt stack 0
  1859  000042                     ___ftsub@f1:
  1860                           	opt stack 0
  1861                           
  1862                           ; 3 bytes @ 0x41
  1863  000042                     	ds	3
  1864  000045                     ___ftsub@f2:
  1865                           	opt stack 0
  1866                           
  1867                           ; 3 bytes @ 0x44
  1868  000045                     	ds	3
  1869  000048                     ?_sprintf:
  1870                           	opt stack 0
  1871  000048                     sprintf@sp:
  1872                           	opt stack 0
  1873                           
  1874                           ; 2 bytes @ 0x47
  1875  000048                     	ds	2
  1876  00004A                     sprintf@f:
  1877                           	opt stack 0
  1878                           
  1879                           ; 2 bytes @ 0x49
  1880  00004A                     	ds	5
  1881  00004F                     ??_sprintf:
  1882                           
  1883                           ; 1 bytes @ 0x4E
  1884  00004F                     	ds	6
  1885  000055                     _sprintf$1519:
  1886                           	opt stack 0
  1887                           
  1888                           ; 3 bytes @ 0x54
  1889  000055                     	ds	3
  1890  000058                     sprintf@ap:
  1891                           	opt stack 0
  1892                           
  1893                           ; 2 bytes @ 0x57
  1894  000058                     	ds	2
  1895  00005A                     sprintf@flag:
  1896                           	opt stack 0
  1897                           
  1898                           ; 2 bytes @ 0x59
  1899  00005A                     	ds	2
  1900  00005C                     sprintf@prec:
  1901                           	opt stack 0
  1902                           
  1903                           ; 2 bytes @ 0x5B
  1904  00005C                     	ds	2
  1905  00005E                     sprintf@val:
  1906                           	opt stack 0
  1907                           
  1908                           ; 4 bytes @ 0x5D
  1909  00005E                     	ds	4
  1910  000062                     sprintf@exp:
  1911                           	opt stack 0
  1912                           
  1913                           ; 2 bytes @ 0x61
  1914  000062                     	ds	2
  1915  000064                     sprintf@tmpval:
  1916                           	opt stack 0
  1917                           
  1918                           ; 4 bytes @ 0x63
  1919  000064                     	ds	4
  1920  000068                     sprintf@fval:
  1921                           	opt stack 0
  1922                           
  1923                           ; 3 bytes @ 0x67
  1924  000068                     	ds	3
  1925  00006B                     sprintf@c:
  1926                           	opt stack 0
  1927                           
  1928                           ; 1 bytes @ 0x6A
  1929  00006B                     	ds	1
  1930  00006C                     converterIntParaString@valorParaSerConvertido:
  1931                           	opt stack 0
  1932  00006C                     converterFloatParaString@valorParaSerConvertido:
  1933                           	opt stack 0
  1934                           
  1935                           ; 3 bytes @ 0x6B
  1936  00006C                     	ds	2
  1937  00006E                     converterIntParaString@string:
  1938                           	opt stack 0
  1939                           
  1940                           ; 7 bytes @ 0x6D
  1941  00006E                     	ds	1
  1942  00006F                     converterFloatParaString@string:
  1943                           	opt stack 0
  1944                           
  1945                           ; 10 bytes @ 0x6E
  1946  00006F                     	ds	10
  1947  000079                     i2escreverStringUart@string:
  1948                           	opt stack 0
  1949                           
  1950                           ; 2 bytes @ 0x78
  1951  000079                     	ds	2
  1952  00007B                     ??i2_escreverStringUart:
  1953                           
  1954                           ; 1 bytes @ 0x7A
  1955  00007B                     	ds	2
  1956                           postinc0	equ	0xFEE
  1957                           wreg	equ	0xFE8
  1958                           
  1959 ;;
  1960 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1961 ;;
  1962 ;; *************** function _main *****************
  1963 ;; Defined at:
  1964 ;;		line 49 in file "aplicacao.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;Total ram usage:        2 bytes
  1983 ;; Hardware stack levels required when called:    8
  1984 ;; This function calls:
  1985 ;;		_configureAdc
  1986 ;;		_configureGpios
  1987 ;;		_configureInterrupts
  1988 ;;		_configureTimer0
  1989 ;;		_configureUart
  1990 ;;		_desabilitarTimer0
  1991 ;;		_escreverStringUart
  1992 ;;		_habilitarTimer0
  1993 ;;		_sinalizacaoBeep
  1994 ;; This function is called by:
  1995 ;;		Startup code after reset
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           	psect	text0
  2000  0026C2                     __ptext0:
  2001                           	opt stack 0
  2002  0026C2                     _main:
  2003                           	opt stack 23
  2004                           
  2005                           ;aplicacao.c: 51: _delay((unsigned long)((1000)*(1000000/4000.0)));
  2006                           
  2007                           ;incstack = 0
  2008  0026C2  0E02               	movlw	2
  2009  0026C4  0101               	movlb	1	; () banked
  2010  0026C6  6F0F               	movwf	(??_main+1)& (0+255),b
  2011  0026C8  0E45               	movlw	69
  2012  0026CA  0101               	movlb	1	; () banked
  2013  0026CC  6F0E               	movwf	??_main& (0+255),b
  2014  0026CE  0EA9               	movlw	169
  2015  0026D0                     u3607:
  2016  0026D0  2EE8               	decfsz	wreg,f,c
  2017  0026D2  D7FE               	bra	u3607
  2018  0026D4  2F0E               	decfsz	??_main& (0+255),f,b
  2019  0026D6  D7FC               	bra	u3607
  2020  0026D8  2F0F               	decfsz	(??_main+1)& (0+255),f,b
  2021  0026DA  D7FA               	bra	u3607
  2022  0026DC  D000               	nop2	
  2023                           
  2024                           ;aplicacao.c: 53: configureAdc();
  2025  0026DE  ECE7  F016         	call	_configureAdc	;wreg free
  2026                           
  2027                           ;aplicacao.c: 54: configureUart();
  2028  0026E2  EC02  F017         	call	_configureUart	;wreg free
  2029                           
  2030                           ;aplicacao.c: 55: configureGpios();
  2031  0026E6  ECB9  F017         	call	_configureGpios	;wreg free
  2032                           
  2033                           ;aplicacao.c: 56: configureTimer0();
  2034  0026EA  EC5E  F017         	call	_configureTimer0	;wreg free
  2035                           
  2036                           ;aplicacao.c: 57: configureInterrupts();
  2037  0026EE  ECDB  F017         	call	_configureInterrupts	;wreg free
  2038                           
  2039                           ;aplicacao.c: 58: escreverStringUart("\n\n\n\n*** Jiga de testes da bateria EVO - FW V2.
      +                          0 ***\n");
  2040  0026F2  0E9C               	movlw	low STR_3
  2041  0026F4  0101               	movlb	1	; () banked
  2042  0026F6  6F06               	movwf	escreverStringUart@string& (0+255),b
  2043  0026F8  0EFC               	movlw	high STR_3
  2044  0026FA  0101               	movlb	1	; () banked
  2045  0026FC  6F07               	movwf	(escreverStringUart@string+1)& (0+255),b
  2046  0026FE  EC11  F014         	call	_escreverStringUart	;wreg free
  2047                           
  2048                           ;aplicacao.c: 59: escreverStringUart("\n*** Pressione o botao para iniciar os testes! **
      +                          *\n");
  2049  002702  0E68               	movlw	low (STR_55+3)
  2050  002704  0101               	movlb	1	; () banked
  2051  002706  6F06               	movwf	escreverStringUart@string& (0+255),b
  2052  002708  0EFC               	movlw	high (STR_55+3)
  2053  00270A  0101               	movlb	1	; () banked
  2054  00270C  6F07               	movwf	(escreverStringUart@string+1)& (0+255),b
  2055  00270E  EC11  F014         	call	_escreverStringUart	;wreg free
  2056                           
  2057                           ;aplicacao.c: 60: desabilitarTimer0();
  2058  002712  ECE2  F017         	call	_desabilitarTimer0	;wreg free
  2059  002716                     l3854:
  2060                           
  2061                           ;aplicacao.c: 63: if(PORTBbits.RB2 == 0) {
  2062  002716  B481               	btfsc	3969,2,c	;volatile
  2063  002718  D7FE               	goto	l3854
  2064                           
  2065                           ;aplicacao.c: 64: _delay((unsigned long)((20)*(1000000/4000.0)));
  2066  00271A  0E07               	movlw	7
  2067  00271C  0101               	movlb	1	; () banked
  2068  00271E  6F0E               	movwf	??_main& (0+255),b
  2069  002720  0E7D               	movlw	125
  2070  002722                     u3617:
  2071  002722  2EE8               	decfsz	wreg,f,c
  2072  002724  D7FE               	bra	u3617
  2073  002726  2F0E               	decfsz	??_main& (0+255),f,b
  2074  002728  D7FC               	bra	u3617
  2075                           
  2076                           ;aplicacao.c: 65: if(PORTBbits.RB2 == 0) {
  2077  00272A  B481               	btfsc	3969,2,c	;volatile
  2078  00272C  D7F4               	goto	l3854
  2079  00272E                     l160:
  2080  00272E  A481               	btfss	3969,2,c	;volatile
  2081  002730  D7FE               	goto	l160
  2082                           
  2083                           ;aplicacao.c: 67: sinalizacaoBeep();
  2084  002732  EC7A  F017         	call	_sinalizacaoBeep	;wreg free
  2085                           
  2086                           ;aplicacao.c: 68: PORTBbits.RB4 = 0;
  2087  002736  9881               	bcf	3969,4,c	;volatile
  2088                           
  2089                           ;aplicacao.c: 69: PORTBbits.RB6 = 0;
  2090  002738  9C81               	bcf	3969,6,c	;volatile
  2091                           
  2092                           ;aplicacao.c: 70: PORTBbits.RB5 = 1;
  2093  00273A  8A81               	bsf	3969,5,c	;volatile
  2094                           
  2095                           ;aplicacao.c: 71: escreverStringUart("\n*** Iniciando testes... ***\n\n");
  2096  00273C  0ECF               	movlw	low STR_5
  2097  00273E  0101               	movlb	1	; () banked
  2098  002740  6F06               	movwf	escreverStringUart@string& (0+255),b
  2099  002742  0EFE               	movlw	high STR_5
  2100  002744  0101               	movlb	1	; () banked
  2101  002746  6F07               	movwf	(escreverStringUart@string+1)& (0+255),b
  2102  002748  EC11  F014         	call	_escreverStringUart	;wreg free
  2103                           
  2104                           ;aplicacao.c: 72: escreverStringUart("Teste de Polaridade Habilitado!");
  2105  00274C  0EAF               	movlw	low STR_6
  2106  00274E  0101               	movlb	1	; () banked
  2107  002750  6F06               	movwf	escreverStringUart@string& (0+255),b
  2108  002752  0EFE               	movlw	high STR_6
  2109  002754  0101               	movlb	1	; () banked
  2110  002756  6F07               	movwf	(escreverStringUart@string+1)& (0+255),b
  2111  002758  EC11  F014         	call	_escreverStringUart	;wreg free
  2112                           
  2113                           ;aplicacao.c: 73: statusDaBateria = 0;
  2114  00275C  0E00               	movlw	0
  2115  00275E  0100               	movlb	0	; () banked
  2116  002760  6FCB               	movwf	_statusDaBateria& (0+255),b
  2117                           
  2118                           ; BSR set to: 0
  2119                           ;aplicacao.c: 74: tempoEmSegundos = 0;
  2120  002762  0E00               	movlw	0
  2121  002764  0100               	movlb	0	; () banked
  2122  002766  6FCC               	movwf	_tempoEmSegundos& (0+255),b
  2123                           
  2124                           ; BSR set to: 0
  2125                           ;aplicacao.c: 75: contador = 0;
  2126  002768  0E00               	movlw	0
  2127  00276A  0100               	movlb	0	; () banked
  2128  00276C  6FCD               	movwf	_contador& (0+255),b
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;aplicacao.c: 76: habilitarTimer0();
  2132  00276E  ECE0  F017         	call	_habilitarTimer0	;wreg free
  2133  002772  D7D1               	goto	l3854
  2134  002774                     __end_of_main:
  2135                           	opt stack 0
  2136                           postinc0	equ	0xFEE
  2137                           wreg	equ	0xFE8
  2138                           
  2139 ;; *************** function _sinalizacaoBeep *****************
  2140 ;; Defined at:
  2141 ;;		line 29 in file "buzzer.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;		None
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;		None
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      void 
  2148 ;; Registers used:
  2149 ;;		wreg
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2157 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2158 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2159 ;;Total ram usage:        1 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    6
  2162 ;; This function calls:
  2163 ;;		Nothing
  2164 ;; This function is called by:
  2165 ;;		_main
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169                           	psect	text1
  2170  002EF4                     __ptext1:
  2171                           	opt stack 0
  2172  002EF4                     _sinalizacaoBeep:
  2173                           	opt stack 24
  2174                           
  2175                           ;buzzer.c: 30: PORTBbits.RB3 = 1;
  2176                           
  2177                           ;incstack = 0
  2178  002EF4  8681               	bsf	3969,3,c	;volatile
  2179                           
  2180                           ;buzzer.c: 31: _delay((unsigned long)((200)*(1000000/4000.0)));
  2181  002EF6  0E41               	movlw	65
  2182  002EF8  0101               	movlb	1	; () banked
  2183  002EFA  6F00               	movwf	??_sinalizacaoBeep& (0+255),b
  2184  002EFC  0EEE               	movlw	238
  2185  002EFE                     u3627:
  2186  002EFE  2EE8               	decfsz	wreg,f,c
  2187  002F00  D7FE               	bra	u3627
  2188  002F02  2F00               	decfsz	??_sinalizacaoBeep& (0+255),f,b
  2189  002F04  D7FC               	bra	u3627
  2190  002F06  F000               	nop	
  2191                           
  2192                           ;buzzer.c: 32: PORTBbits.RB3 = 0;
  2193  002F08  9681               	bcf	3969,3,c	;volatile
  2194  002F0A  0012               	return		;funcret
  2195  002F0C                     __end_of_sinalizacaoBeep:
  2196                           	opt stack 0
  2197                           postinc0	equ	0xFEE
  2198                           wreg	equ	0xFE8
  2199                           
  2200 ;; *************** function _habilitarTimer0 *****************
  2201 ;; Defined at:
  2202 ;;		line 34 in file "timer0.h"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;		None
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;		None
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      void 
  2209 ;; Registers used:
  2210 ;;		None
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2220 ;;Total ram usage:        0 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; Hardware stack levels required when called:    6
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		_main
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text2
  2231  002FC0                     __ptext2:
  2232                           	opt stack 0
  2233  002FC0                     _habilitarTimer0:
  2234                           	opt stack 24
  2235                           
  2236                           ;timer0.h: 35: T0CONbits.TMR0ON = 1;
  2237                           
  2238                           ;incstack = 0
  2239  002FC0  8ED5               	bsf	4053,7,c	;volatile
  2240  002FC2  0012               	return		;funcret
  2241  002FC4                     __end_of_habilitarTimer0:
  2242                           	opt stack 0
  2243                           postinc0	equ	0xFEE
  2244                           wreg	equ	0xFE8
  2245                           
  2246 ;; *************** function _escreverStringUart *****************
  2247 ;; Defined at:
  2248 ;;		line 104 in file "uart.h"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;  string          2    6[BANK1 ] PTR unsigned char 
  2251 ;;		 -> STR_58(55), STR_57(29), STR_56(29), STR_55(55), 
  2252 ;;		 -> STR_54(29), STR_53(28), STR_52(43), STR_51(42), 
  2253 ;;		 -> STR_50(4), STR_49(17), STR_48(41), STR_47(40), 
  2254 ;;		 -> STR_46(4), STR_45(23), STR_44(3), STR_43(16), 
  2255 ;;		 -> STR_42(3), STR_41(11), STR_40(6), STR_39(9), 
  2256 ;;		 -> STR_38(4), STR_37(68), STR_36(43), STR_35(38), 
  2257 ;;		 -> STR_34(40), STR_33(39), STR_32(4), STR_31(17), 
  2258 ;;		 -> STR_30(38), STR_29(37), STR_28(4), STR_27(16), 
  2259 ;;		 -> STR_26(3), STR_25(11), STR_24(6), STR_23(9), 
  2260 ;;		 -> STR_22(4), STR_21(68), STR_20(41), STR_19(26), 
  2261 ;;		 -> STR_18(36), STR_17(25), STR_16(3), STR_15(18), 
  2262 ;;		 -> STR_14(3), STR_13(16), STR_12(3), STR_11(11), 
  2263 ;;		 -> STR_10(6), STR_9(9), STR_8(4), RAM(3967), 
  2264 ;;		 -> STR_7(68), STR_6(32), STR_5(31), STR_4(52), 
  2265 ;;		 -> STR_3(53), 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  contador        2   12[BANK1 ] int 
  2268 ;;  tamanhoDaStr    2   10[BANK1 ] int 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      void 
  2271 ;; Registers used:
  2272 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2278 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2280 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2281 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2282 ;;Total ram usage:        8 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:    7
  2285 ;; This function calls:
  2286 ;;		_escreverCharUart
  2287 ;;		_tamanhoDaString
  2288 ;; This function is called by:
  2289 ;;		_main
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           	psect	text3
  2294  002822                     __ptext3:
  2295                           	opt stack 0
  2296  002822                     _escreverStringUart:
  2297                           	opt stack 23
  2298                           
  2299                           ;uart.h: 105: int contador = 0;
  2300                           
  2301                           ;incstack = 0
  2302  002822  0E00               	movlw	0
  2303  002824  0101               	movlb	1	; () banked
  2304  002826  6F0D               	movwf	(escreverStringUart@contador+1)& (0+255),b
  2305  002828  0E00               	movlw	0
  2306  00282A  6F0C               	movwf	escreverStringUart@contador& (0+255),b
  2307                           
  2308                           ; BSR set to: 1
  2309                           ;uart.h: 106: int tamanhoDaStr = tamanhoDaString(string);
  2310  00282C  C106  F100         	movff	escreverStringUart@string,tamanhoDaString@string
  2311  002830  C107  F101         	movff	escreverStringUart@string+1,tamanhoDaString@string+1
  2312  002834  ECD1  F015         	call	_tamanhoDaString	;wreg free
  2313  002838  C100  F10A         	movff	?_tamanhoDaString,escreverStringUart@tamanhoDaStr
  2314  00283C  C101  F10B         	movff	?_tamanhoDaString+1,escreverStringUart@tamanhoDaStr+1
  2315                           
  2316                           ;uart.h: 108: for(contador = 0; contador < tamanhoDaStr; contador++) {
  2317  002840  0E00               	movlw	0
  2318  002842  0101               	movlb	1	; () banked
  2319  002844  6F0D               	movwf	(escreverStringUart@contador+1)& (0+255),b
  2320  002846  0E00               	movlw	0
  2321  002848  6F0C               	movwf	escreverStringUart@contador& (0+255),b
  2322  00284A  D022               	goto	l3810
  2323  00284C                     l3806:
  2324                           
  2325                           ; BSR set to: 1
  2326                           ;uart.h: 109: escreverCharUart(string[contador]);
  2327  00284C  0101               	movlb	1	; () banked
  2328  00284E  510C               	movf	escreverStringUart@contador& (0+255),w,b
  2329  002850  0101               	movlb	1	; () banked
  2330  002852  2506               	addwf	escreverStringUart@string& (0+255),w,b
  2331  002854  0101               	movlb	1	; () banked
  2332  002856  6F08               	movwf	??_escreverStringUart& (0+255),b
  2333  002858  0101               	movlb	1	; () banked
  2334  00285A  510D               	movf	(escreverStringUart@contador+1)& (0+255),w,b
  2335  00285C  0101               	movlb	1	; () banked
  2336  00285E  2107               	addwfc	(escreverStringUart@string+1)& (0+255),w,b
  2337  002860  0101               	movlb	1	; () banked
  2338  002862  6F09               	movwf	(??_escreverStringUart+1)& (0+255),b
  2339  002864  C108  FFF6         	movff	??_escreverStringUart,tblptrl
  2340  002868  C109  FFF7         	movff	??_escreverStringUart+1,tblptrh
  2341  00286C  0E00               	movlw	low (__mediumconst shr (0+16))
  2342  00286E  6EF8               	movwf	tblptru,c
  2343  002870  0E0F               	movlw	(high __ramtop+-1)
  2344  002872  64F7               	cpfsgt	tblptrh,c
  2345  002874  D003               	bra	u3557
  2346  002876  0008               	tblrd		*
  2347  002878  50F5               	movf	tablat,w,c
  2348  00287A  D005               	bra	u3550
  2349  00287C                     u3557:
  2350  00287C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2351  002880  CFF7 FFEA          	movff	tblptrh,fsr0h
  2352  002884  50EF               	movf	indf0,w,c
  2353  002886                     u3550:
  2354  002886  ECC2  F017         	call	_escreverCharUart
  2355  00288A  0101               	movlb	1	; () banked
  2356  00288C  4B0C               	infsnz	escreverStringUart@contador& (0+255),f,b
  2357  00288E  2B0D               	incf	(escreverStringUart@contador+1)& (0+255),f,b
  2358  002890                     l3810:
  2359                           
  2360                           ; BSR set to: 1
  2361  002890  0101               	movlb	1	; () banked
  2362  002892  510A               	movf	escreverStringUart@tamanhoDaStr& (0+255),w,b
  2363  002894  0101               	movlb	1	; () banked
  2364  002896  5D0C               	subwf	escreverStringUart@contador& (0+255),w,b
  2365  002898  0101               	movlb	1	; () banked
  2366  00289A  510D               	movf	(escreverStringUart@contador+1)& (0+255),w,b
  2367  00289C  0A80               	xorlw	128
  2368  00289E  0101               	movlb	1	; () banked
  2369  0028A0  6F08               	movwf	??_escreverStringUart& (0+255),b
  2370  0028A2  0101               	movlb	1	; () banked
  2371  0028A4  510B               	movf	(escreverStringUart@tamanhoDaStr+1)& (0+255),w,b
  2372  0028A6  0A80               	xorlw	128
  2373  0028A8  0101               	movlb	1	; () banked
  2374  0028AA  5908               	subwfb	??_escreverStringUart& (0+255),w,b
  2375  0028AC  B0D8               	btfsc	status,0,c
  2376  0028AE  0012               	return	
  2377  0028B0  D7CD               	goto	l3806
  2378  0028B2                     __end_of_escreverStringUart:
  2379                           	opt stack 0
  2380                           tblptru	equ	0xFF8
  2381                           tblptrh	equ	0xFF7
  2382                           tblptrl	equ	0xFF6
  2383                           tablat	equ	0xFF5
  2384                           indf0	equ	0xFEF
  2385                           postinc0	equ	0xFEE
  2386                           fsr0h	equ	0xFEA
  2387                           fsr0l	equ	0xFE9
  2388                           wreg	equ	0xFE8
  2389                           status	equ	0xFD8
  2390                           
  2391 ;; *************** function _tamanhoDaString *****************
  2392 ;; Defined at:
  2393 ;;		line 92 in file "uart.h"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;  string          2    0[BANK1 ] PTR unsigned char 
  2396 ;;		 -> STR_58(55), STR_57(29), STR_56(29), STR_55(55), 
  2397 ;;		 -> STR_54(29), STR_53(28), STR_52(43), STR_51(42), 
  2398 ;;		 -> STR_50(4), STR_49(17), STR_48(41), STR_47(40), 
  2399 ;;		 -> STR_46(4), STR_45(23), STR_44(3), STR_43(16), 
  2400 ;;		 -> STR_42(3), STR_41(11), STR_40(6), STR_39(9), 
  2401 ;;		 -> STR_38(4), STR_37(68), STR_36(43), STR_35(38), 
  2402 ;;		 -> STR_34(40), STR_33(39), STR_32(4), STR_31(17), 
  2403 ;;		 -> STR_30(38), STR_29(37), STR_28(4), STR_27(16), 
  2404 ;;		 -> STR_26(3), STR_25(11), STR_24(6), STR_23(9), 
  2405 ;;		 -> STR_22(4), STR_21(68), STR_20(41), STR_19(26), 
  2406 ;;		 -> STR_18(36), STR_17(25), STR_16(3), STR_15(18), 
  2407 ;;		 -> STR_14(3), STR_13(16), STR_12(3), STR_11(11), 
  2408 ;;		 -> STR_10(6), STR_9(9), STR_8(4), RAM(3967), 
  2409 ;;		 -> STR_7(68), STR_6(32), STR_5(31), STR_4(52), 
  2410 ;;		 -> STR_3(53), 
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;  lenght          2    4[BANK1 ] int 
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  2    0[BANK1 ] int 
  2415 ;; Registers used:
  2416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2422 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;Total ram usage:        6 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:    6
  2429 ;; This function calls:
  2430 ;;		Nothing
  2431 ;; This function is called by:
  2432 ;;		_escreverStringUart
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text4
  2437  002BA2                     __ptext4:
  2438                           	opt stack 0
  2439  002BA2                     _tamanhoDaString:
  2440                           	opt stack 23
  2441                           
  2442                           ;uart.h: 93: int lenght = 0;
  2443                           
  2444                           ; BSR set to: 1
  2445                           ;incstack = 0
  2446  002BA2  0E00               	movlw	0
  2447  002BA4  0101               	movlb	1	; () banked
  2448  002BA6  6F05               	movwf	(tamanhoDaString@lenght+1)& (0+255),b
  2449  002BA8  0E00               	movlw	0
  2450  002BAA  6F04               	movwf	tamanhoDaString@lenght& (0+255),b
  2451                           
  2452                           ;uart.h: 94: while(string[lenght] != '\0') {
  2453  002BAC  D003               	goto	l3770
  2454  002BAE                     l3768:
  2455                           
  2456                           ;uart.h: 95: lenght++;
  2457  002BAE  0101               	movlb	1	; () banked
  2458  002BB0  4B04               	infsnz	tamanhoDaString@lenght& (0+255),f,b
  2459  002BB2  2B05               	incf	(tamanhoDaString@lenght+1)& (0+255),f,b
  2460  002BB4                     l3770:
  2461                           
  2462                           ; BSR set to: 1
  2463  002BB4  0101               	movlb	1	; () banked
  2464  002BB6  5104               	movf	tamanhoDaString@lenght& (0+255),w,b
  2465  002BB8  0101               	movlb	1	; () banked
  2466  002BBA  2500               	addwf	tamanhoDaString@string& (0+255),w,b
  2467  002BBC  0101               	movlb	1	; () banked
  2468  002BBE  6F02               	movwf	??_tamanhoDaString& (0+255),b
  2469  002BC0  0101               	movlb	1	; () banked
  2470  002BC2  5105               	movf	(tamanhoDaString@lenght+1)& (0+255),w,b
  2471  002BC4  0101               	movlb	1	; () banked
  2472  002BC6  2101               	addwfc	(tamanhoDaString@string+1)& (0+255),w,b
  2473  002BC8  0101               	movlb	1	; () banked
  2474  002BCA  6F03               	movwf	(??_tamanhoDaString+1)& (0+255),b
  2475  002BCC  C102  FFF6         	movff	??_tamanhoDaString,tblptrl
  2476  002BD0  C103  FFF7         	movff	??_tamanhoDaString+1,tblptrh
  2477  002BD4  0E00               	movlw	low (__mediumconst shr (0+16))
  2478  002BD6  6EF8               	movwf	tblptru,c
  2479  002BD8  0E0F               	movlw	(high __ramtop+-1)
  2480  002BDA  64F7               	cpfsgt	tblptrh,c
  2481  002BDC  D003               	bra	u3537
  2482  002BDE  0008               	tblrd		*
  2483  002BE0  50F5               	movf	tablat,w,c
  2484  002BE2  D005               	bra	u3530
  2485  002BE4                     u3537:
  2486  002BE4  CFF6 FFE9          	movff	tblptrl,fsr0l
  2487  002BE8  CFF7 FFEA          	movff	tblptrh,fsr0h
  2488  002BEC  50EF               	movf	indf0,w,c
  2489  002BEE                     u3530:
  2490  002BEE  0900               	iorlw	0
  2491  002BF0  A4D8               	btfss	status,2,c
  2492  002BF2  D7DD               	goto	l3768
  2493                           
  2494                           ;uart.h: 96: }
  2495                           ;uart.h: 97: return lenght;
  2496  002BF4  C104  F100         	movff	tamanhoDaString@lenght,?_tamanhoDaString
  2497  002BF8  C105  F101         	movff	tamanhoDaString@lenght+1,?_tamanhoDaString+1
  2498  002BFC  0012               	return		;funcret
  2499  002BFE                     __end_of_tamanhoDaString:
  2500                           	opt stack 0
  2501                           tblptru	equ	0xFF8
  2502                           tblptrh	equ	0xFF7
  2503                           tblptrl	equ	0xFF6
  2504                           tablat	equ	0xFF5
  2505                           indf0	equ	0xFEF
  2506                           postinc0	equ	0xFEE
  2507                           fsr0h	equ	0xFEA
  2508                           fsr0l	equ	0xFE9
  2509                           wreg	equ	0xFE8
  2510                           status	equ	0xFD8
  2511                           
  2512 ;; *************** function _escreverCharUart *****************
  2513 ;; Defined at:
  2514 ;;		line 50 in file "uart.h"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  caracter        1    wreg     unsigned char 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  caracter        1    0[BANK1 ] unsigned char 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  1    wreg      void 
  2521 ;; Registers used:
  2522 ;;		wreg
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2529 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;Total ram usage:        1 bytes
  2533 ;; Hardware stack levels used:    1
  2534 ;; Hardware stack levels required when called:    6
  2535 ;; This function calls:
  2536 ;;		Nothing
  2537 ;; This function is called by:
  2538 ;;		_escreverStringUart
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text5
  2543  002F84                     __ptext5:
  2544                           	opt stack 0
  2545  002F84                     _escreverCharUart:
  2546                           	opt stack 23
  2547                           
  2548                           ;incstack = 0
  2549                           ;escreverCharUart@caracter stored from wreg
  2550  002F84  0101               	movlb	1	; () banked
  2551  002F86  6F00               	movwf	escreverCharUart@caracter& (0+255),b
  2552                           
  2553                           ;uart.h: 51: TXREG = caracter;
  2554  002F88  C100  FFAD         	movff	escreverCharUart@caracter,4013	;volatile
  2555  002F8C                     l81:
  2556  002F8C  B2AC               	btfsc	4012,1,c	;volatile
  2557  002F8E  0012               	return	
  2558  002F90  D7FD               	goto	l81
  2559  002F92                     __end_of_escreverCharUart:
  2560                           	opt stack 0
  2561                           tblptru	equ	0xFF8
  2562                           tblptrh	equ	0xFF7
  2563                           tblptrl	equ	0xFF6
  2564                           tablat	equ	0xFF5
  2565                           indf0	equ	0xFEF
  2566                           postinc0	equ	0xFEE
  2567                           fsr0h	equ	0xFEA
  2568                           fsr0l	equ	0xFE9
  2569                           wreg	equ	0xFE8
  2570                           status	equ	0xFD8
  2571                           
  2572 ;; *************** function _desabilitarTimer0 *****************
  2573 ;; Defined at:
  2574 ;;		line 38 in file "timer0.h"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;		None
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;		None
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		None
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;Total ram usage:        0 bytes
  2593 ;; Hardware stack levels used:    1
  2594 ;; Hardware stack levels required when called:    6
  2595 ;; This function calls:
  2596 ;;		Nothing
  2597 ;; This function is called by:
  2598 ;;		_main
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text6
  2603  002FC4                     __ptext6:
  2604                           	opt stack 0
  2605  002FC4                     _desabilitarTimer0:
  2606                           	opt stack 24
  2607                           
  2608                           ;timer0.h: 39: T0CONbits.TMR0ON = 0;
  2609                           
  2610                           ;incstack = 0
  2611  002FC4  9ED5               	bcf	4053,7,c	;volatile
  2612  002FC6  0012               	return		;funcret
  2613  002FC8                     __end_of_desabilitarTimer0:
  2614                           	opt stack 0
  2615                           tblptru	equ	0xFF8
  2616                           tblptrh	equ	0xFF7
  2617                           tblptrl	equ	0xFF6
  2618                           tablat	equ	0xFF5
  2619                           indf0	equ	0xFEF
  2620                           postinc0	equ	0xFEE
  2621                           fsr0h	equ	0xFEA
  2622                           fsr0l	equ	0xFE9
  2623                           wreg	equ	0xFE8
  2624                           status	equ	0xFD8
  2625                           
  2626 ;; *************** function _configureUart *****************
  2627 ;; Defined at:
  2628 ;;		line 15 in file "uart.h"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;		None
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;		None
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  1    wreg      void 
  2635 ;; Registers used:
  2636 ;;		wreg, status,2
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;Total ram usage:        0 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; Hardware stack levels required when called:    6
  2649 ;; This function calls:
  2650 ;;		Nothing
  2651 ;; This function is called by:
  2652 ;;		_main
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           	psect	text7
  2657  002E04                     __ptext7:
  2658                           	opt stack 0
  2659  002E04                     _configureUart:
  2660                           	opt stack 24
  2661                           
  2662                           ;uart.h: 20: TRISCbits.TRISC7 = 1;
  2663                           
  2664                           ;incstack = 0
  2665  002E04  8E94               	bsf	3988,7,c	;volatile
  2666                           
  2667                           ;uart.h: 21: TRISCbits.TRISC6 = 1;
  2668  002E06  8C94               	bsf	3988,6,c	;volatile
  2669                           
  2670                           ;uart.h: 23: TXSTAbits.CSRC = 0;
  2671  002E08  9EAC               	bcf	4012,7,c	;volatile
  2672                           
  2673                           ;uart.h: 24: TXSTAbits.TX9 = 0;
  2674  002E0A  9CAC               	bcf	4012,6,c	;volatile
  2675                           
  2676                           ;uart.h: 25: TXSTAbits.TXEN = 1;
  2677  002E0C  8AAC               	bsf	4012,5,c	;volatile
  2678                           
  2679                           ;uart.h: 26: TXSTAbits.SYNC = 0;
  2680  002E0E  98AC               	bcf	4012,4,c	;volatile
  2681                           
  2682                           ;uart.h: 27: TXSTAbits.SENDB = 0;
  2683  002E10  96AC               	bcf	4012,3,c	;volatile
  2684                           
  2685                           ;uart.h: 28: TXSTAbits.BRGH = 1;
  2686  002E12  84AC               	bsf	4012,2,c	;volatile
  2687                           
  2688                           ;uart.h: 30: RCSTAbits.SPEN = 1;
  2689  002E14  8EAB               	bsf	4011,7,c	;volatile
  2690                           
  2691                           ;uart.h: 31: RCSTAbits.RX9 = 0;
  2692  002E16  9CAB               	bcf	4011,6,c	;volatile
  2693                           
  2694                           ;uart.h: 32: RCSTAbits.SREN = 0;
  2695  002E18  9AAB               	bcf	4011,5,c	;volatile
  2696                           
  2697                           ;uart.h: 33: RCSTAbits.CREN = 1;
  2698  002E1A  88AB               	bsf	4011,4,c	;volatile
  2699                           
  2700                           ;uart.h: 34: RCSTAbits.ADDEN = 0;
  2701  002E1C  96AB               	bcf	4011,3,c	;volatile
  2702                           
  2703                           ;uart.h: 36: BAUDCONbits.BRG16 = 1;
  2704  002E1E  86B8               	bsf	4024,3,c	;volatile
  2705                           
  2706                           ;uart.h: 38: SPBRG = 25;
  2707  002E20  0E19               	movlw	25
  2708  002E22  6EAF               	movwf	4015,c	;volatile
  2709                           
  2710                           ;uart.h: 40: INTCONbits.GIE = 1;
  2711  002E24  8EF2               	bsf	intcon,7,c	;volatile
  2712                           
  2713                           ;uart.h: 41: INTCONbits.PEIE = 1;
  2714  002E26  8CF2               	bsf	intcon,6,c	;volatile
  2715                           
  2716                           ;uart.h: 42: PIE1bits.RCIE = 1;
  2717  002E28  8A9D               	bsf	3997,5,c	;volatile
  2718                           
  2719                           ;uart.h: 43: PIR1bits.RCIF = 0;
  2720  002E2A  9A9E               	bcf	3998,5,c	;volatile
  2721  002E2C  0012               	return		;funcret
  2722  002E2E                     __end_of_configureUart:
  2723                           	opt stack 0
  2724                           tblptru	equ	0xFF8
  2725                           tblptrh	equ	0xFF7
  2726                           tblptrl	equ	0xFF6
  2727                           tablat	equ	0xFF5
  2728                           intcon	equ	0xFF2
  2729                           indf0	equ	0xFEF
  2730                           postinc0	equ	0xFEE
  2731                           fsr0h	equ	0xFEA
  2732                           fsr0l	equ	0xFE9
  2733                           wreg	equ	0xFE8
  2734                           status	equ	0xFD8
  2735                           
  2736 ;; *************** function _configureTimer0 *****************
  2737 ;; Defined at:
  2738 ;;		line 23 in file "timer0.h"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;		None
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;		None
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		wreg, status,2
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;Total ram usage:        0 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    6
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_main
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text8
  2767  002EBC                     __ptext8:
  2768                           	opt stack 0
  2769  002EBC                     _configureTimer0:
  2770                           	opt stack 24
  2771                           
  2772                           ;timer0.h: 24: T0CONbits.T08BIT = 0;
  2773                           
  2774                           ;incstack = 0
  2775  002EBC  9CD5               	bcf	4053,6,c	;volatile
  2776                           
  2777                           ;timer0.h: 25: T0CONbits.T0CS = 0;
  2778  002EBE  9AD5               	bcf	4053,5,c	;volatile
  2779                           
  2780                           ;timer0.h: 26: T0CONbits.T0SE = 1;
  2781  002EC0  88D5               	bsf	4053,4,c	;volatile
  2782                           
  2783                           ;timer0.h: 27: T0CONbits.PSA = 0;
  2784  002EC2  96D5               	bcf	4053,3,c	;volatile
  2785                           
  2786                           ;timer0.h: 28: T0CONbits.T0PS = 0b001;
  2787  002EC4  50D5               	movf	4053,w,c	;volatile
  2788  002EC6  0BF8               	andlw	-8
  2789  002EC8  0901               	iorlw	1
  2790  002ECA  6ED5               	movwf	4053,c	;volatile
  2791                           
  2792                           ;timer0.h: 29: TMR0L = 0xDB;
  2793  002ECC  0EDB               	movlw	219
  2794  002ECE  6ED6               	movwf	4054,c	;volatile
  2795                           
  2796                           ;timer0.h: 30: TMR0H = 0x0B;
  2797  002ED0  0E0B               	movlw	11
  2798  002ED2  6ED7               	movwf	4055,c	;volatile
  2799                           
  2800                           ;timer0.h: 31: T0CONbits.TMR0ON = 0;
  2801  002ED4  9ED5               	bcf	4053,7,c	;volatile
  2802  002ED6  0012               	return		;funcret
  2803  002ED8                     __end_of_configureTimer0:
  2804                           	opt stack 0
  2805                           tblptru	equ	0xFF8
  2806                           tblptrh	equ	0xFF7
  2807                           tblptrl	equ	0xFF6
  2808                           tablat	equ	0xFF5
  2809                           intcon	equ	0xFF2
  2810                           indf0	equ	0xFEF
  2811                           postinc0	equ	0xFEE
  2812                           fsr0h	equ	0xFEA
  2813                           fsr0l	equ	0xFE9
  2814                           wreg	equ	0xFE8
  2815                           status	equ	0xFD8
  2816                           
  2817 ;; *************** function _configureInterrupts *****************
  2818 ;; Defined at:
  2819 ;;		line 6 in file "interrupts.h"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;		None
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;		None
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  1    wreg      void 
  2826 ;; Registers used:
  2827 ;;		None
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;Total ram usage:        0 bytes
  2838 ;; Hardware stack levels used:    1
  2839 ;; Hardware stack levels required when called:    6
  2840 ;; This function calls:
  2841 ;;		Nothing
  2842 ;; This function is called by:
  2843 ;;		_main
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           	psect	text9
  2848  002FB6                     __ptext9:
  2849                           	opt stack 0
  2850  002FB6                     _configureInterrupts:
  2851                           	opt stack 24
  2852                           
  2853                           ;interrupts.h: 7: INTCONbits.GIE = 1;
  2854                           
  2855                           ;incstack = 0
  2856  002FB6  8EF2               	bsf	intcon,7,c	;volatile
  2857                           
  2858                           ;interrupts.h: 8: INTCONbits.PEIE = 1;
  2859  002FB8  8CF2               	bsf	intcon,6,c	;volatile
  2860                           
  2861                           ;interrupts.h: 9: INTCONbits.TMR0IE = 1;
  2862  002FBA  8AF2               	bsf	intcon,5,c	;volatile
  2863                           
  2864                           ;interrupts.h: 10: INTCONbits.TMR0IF = 0;
  2865  002FBC  94F2               	bcf	intcon,2,c	;volatile
  2866  002FBE  0012               	return		;funcret
  2867  002FC0                     __end_of_configureInterrupts:
  2868                           	opt stack 0
  2869                           tblptru	equ	0xFF8
  2870                           tblptrh	equ	0xFF7
  2871                           tblptrl	equ	0xFF6
  2872                           tablat	equ	0xFF5
  2873                           intcon	equ	0xFF2
  2874                           indf0	equ	0xFEF
  2875                           postinc0	equ	0xFEE
  2876                           fsr0h	equ	0xFEA
  2877                           fsr0l	equ	0xFE9
  2878                           wreg	equ	0xFE8
  2879                           status	equ	0xFD8
  2880                           
  2881 ;; *************** function _configureGpios *****************
  2882 ;; Defined at:
  2883 ;;		line 83 in file "aplicacao.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;		None
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;		None
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      void 
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;Total ram usage:        0 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:    7
  2904 ;; This function calls:
  2905 ;;		_desabilitarCarregamentoDaBateria
  2906 ;;		_desabilitarDescarregamentoDaBateria
  2907 ;; This function is called by:
  2908 ;;		_main
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text10
  2913  002F72                     __ptext10:
  2914                           	opt stack 0
  2915  002F72                     _configureGpios:
  2916                           	opt stack 23
  2917                           
  2918                           ;aplicacao.c: 84: TRISB = 0b00000100;
  2919                           
  2920                           ;incstack = 0
  2921  002F72  0E04               	movlw	4
  2922  002F74  6E93               	movwf	3987,c	;volatile
  2923                           
  2924                           ;aplicacao.c: 85: PORTB = 0b00000000;
  2925  002F76  0E00               	movlw	0
  2926  002F78  6E81               	movwf	3969,c	;volatile
  2927                           
  2928                           ;aplicacao.c: 87: desabilitarCarregamentoDaBateria();
  2929  002F7A  EC9B  F017         	call	_desabilitarCarregamentoDaBateria	;wreg free
  2930                           
  2931                           ;aplicacao.c: 88: desabilitarDescarregamentoDaBateria();
  2932  002F7E  EC91  F017         	call	_desabilitarDescarregamentoDaBateria	;wreg free
  2933  002F82  0012               	return		;funcret
  2934  002F84                     __end_of_configureGpios:
  2935                           	opt stack 0
  2936                           tblptru	equ	0xFF8
  2937                           tblptrh	equ	0xFF7
  2938                           tblptrl	equ	0xFF6
  2939                           tablat	equ	0xFF5
  2940                           intcon	equ	0xFF2
  2941                           indf0	equ	0xFEF
  2942                           postinc0	equ	0xFEE
  2943                           fsr0h	equ	0xFEA
  2944                           fsr0l	equ	0xFE9
  2945                           wreg	equ	0xFE8
  2946                           status	equ	0xFD8
  2947                           
  2948 ;; *************** function _desabilitarDescarregamentoDaBateria *****************
  2949 ;; Defined at:
  2950 ;;		line 10 in file "controleDaBateria.h"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;		None
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;		None
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		wreg
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;Total ram usage:        1 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; Hardware stack levels required when called:    6
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_configureGpios
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text11
  2979  002F22                     __ptext11:
  2980                           	opt stack 0
  2981  002F22                     _desabilitarDescarregamentoDaBateria:
  2982                           	opt stack 23
  2983                           
  2984                           ;controleDaBateria.h: 11: PORTBbits.RB1 = 1;
  2985                           
  2986                           ;incstack = 0
  2987  002F22  8281               	bsf	3969,1,c	;volatile
  2988                           
  2989                           ;controleDaBateria.h: 12: _delay((unsigned long)((20)*(1000000/4000.0)));
  2990  002F24  0E07               	movlw	7
  2991  002F26  0101               	movlb	1	; () banked
  2992  002F28  6F00               	movwf	??_desabilitarDescarregamentoDaBateria& (0+255),b
  2993  002F2A  0E7D               	movlw	125
  2994  002F2C                     u3637:
  2995  002F2C  2EE8               	decfsz	wreg,f,c
  2996  002F2E  D7FE               	bra	u3637
  2997  002F30  2F00               	decfsz	??_desabilitarDescarregamentoDaBateria& (0+255),f,b
  2998  002F32  D7FC               	bra	u3637
  2999  002F34  0012               	return		;funcret
  3000  002F36                     __end_of_desabilitarDescarregamentoDaBateria:
  3001                           	opt stack 0
  3002                           tblptru	equ	0xFF8
  3003                           tblptrh	equ	0xFF7
  3004                           tblptrl	equ	0xFF6
  3005                           tablat	equ	0xFF5
  3006                           intcon	equ	0xFF2
  3007                           indf0	equ	0xFEF
  3008                           postinc0	equ	0xFEE
  3009                           fsr0h	equ	0xFEA
  3010                           fsr0l	equ	0xFE9
  3011                           wreg	equ	0xFE8
  3012                           status	equ	0xFD8
  3013                           
  3014 ;; *************** function _desabilitarCarregamentoDaBateria *****************
  3015 ;; Defined at:
  3016 ;;		line 15 in file "controleDaBateria.h"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;		None
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;		None
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      void 
  3023 ;; Registers used:
  3024 ;;		wreg
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3032 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3033 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3034 ;;Total ram usage:        1 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; Hardware stack levels required when called:    6
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_configureGpios
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           	psect	text12
  3045  002F36                     __ptext12:
  3046                           	opt stack 0
  3047  002F36                     _desabilitarCarregamentoDaBateria:
  3048                           	opt stack 23
  3049                           
  3050                           ;controleDaBateria.h: 16: PORTBbits.RB0 = 1;
  3051                           
  3052                           ;incstack = 0
  3053  002F36  8081               	bsf	3969,0,c	;volatile
  3054                           
  3055                           ;controleDaBateria.h: 17: _delay((unsigned long)((20)*(1000000/4000.0)));
  3056  002F38  0E07               	movlw	7
  3057  002F3A  0101               	movlb	1	; () banked
  3058  002F3C  6F00               	movwf	??_desabilitarCarregamentoDaBateria& (0+255),b
  3059  002F3E  0E7D               	movlw	125
  3060  002F40                     u3647:
  3061  002F40  2EE8               	decfsz	wreg,f,c
  3062  002F42  D7FE               	bra	u3647
  3063  002F44  2F00               	decfsz	??_desabilitarCarregamentoDaBateria& (0+255),f,b
  3064  002F46  D7FC               	bra	u3647
  3065  002F48  0012               	return		;funcret
  3066  002F4A                     __end_of_desabilitarCarregamentoDaBateria:
  3067                           	opt stack 0
  3068                           tblptru	equ	0xFF8
  3069                           tblptrh	equ	0xFF7
  3070                           tblptrl	equ	0xFF6
  3071                           tablat	equ	0xFF5
  3072                           intcon	equ	0xFF2
  3073                           indf0	equ	0xFEF
  3074                           postinc0	equ	0xFEE
  3075                           fsr0h	equ	0xFEA
  3076                           fsr0l	equ	0xFE9
  3077                           wreg	equ	0xFE8
  3078                           status	equ	0xFD8
  3079                           
  3080 ;; *************** function _configureAdc *****************
  3081 ;; Defined at:
  3082 ;;		line 44 in file "adc.h"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;		None
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;		None
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  1    wreg      void 
  3089 ;; Registers used:
  3090 ;;		wreg, status,2
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3098 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3099 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;Total ram usage:        1 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    6
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_main
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text13
  3111  002DCE                     __ptext13:
  3112                           	opt stack 0
  3113  002DCE                     _configureAdc:
  3114                           	opt stack 24
  3115                           
  3116                           ;adc.h: 45: ADCON0bits.GO_nDONE = 0;
  3117                           
  3118                           ;incstack = 0
  3119  002DCE  92C2               	bcf	4034,1,c	;volatile
  3120                           
  3121                           ;adc.h: 46: ADCON0bits.ADON = 0;
  3122  002DD0  90C2               	bcf	4034,0,c	;volatile
  3123                           
  3124                           ;adc.h: 47: ADCON1bits.VCFG1 = 0;
  3125  002DD2  9AC1               	bcf	4033,5,c	;volatile
  3126                           
  3127                           ;adc.h: 48: ADCON1bits.VCFG0 = 0;
  3128  002DD4  98C1               	bcf	4033,4,c	;volatile
  3129                           
  3130                           ;adc.h: 49: ADCON1bits.PCFG = 0b1100;
  3131  002DD6  50C1               	movf	4033,w,c	;volatile
  3132  002DD8  0BF0               	andlw	-16
  3133  002DDA  090C               	iorlw	12
  3134  002DDC  6EC1               	movwf	4033,c	;volatile
  3135                           
  3136                           ;adc.h: 50: ADCON2bits.ADFM = 1;
  3137  002DDE  8EC0               	bsf	4032,7,c	;volatile
  3138                           
  3139                           ;adc.h: 51: ADCON2bits.ACQT = 0b001;
  3140  002DE0  50C0               	movf	4032,w,c	;volatile
  3141  002DE2  0BC7               	andlw	-57
  3142  002DE4  0908               	iorlw	8
  3143  002DE6  6EC0               	movwf	4032,c	;volatile
  3144                           
  3145                           ;adc.h: 52: ADCON2bits.ADCS = 0b100;
  3146  002DE8  50C0               	movf	4032,w,c	;volatile
  3147  002DEA  0BF8               	andlw	-8
  3148  002DEC  0904               	iorlw	4
  3149  002DEE  6EC0               	movwf	4032,c	;volatile
  3150                           
  3151                           ;adc.h: 53: _delay((unsigned long)((10)*(1000000/4000.0)));
  3152  002DF0  0E04               	movlw	4
  3153  002DF2  0101               	movlb	1	; () banked
  3154  002DF4  6F00               	movwf	??_configureAdc& (0+255),b
  3155  002DF6  0E3D               	movlw	61
  3156  002DF8                     u3657:
  3157  002DF8  2EE8               	decfsz	wreg,f,c
  3158  002DFA  D7FE               	bra	u3657
  3159  002DFC  2F00               	decfsz	??_configureAdc& (0+255),f,b
  3160  002DFE  D7FC               	bra	u3657
  3161  002E00  D000               	nop2	
  3162  002E02  0012               	return		;funcret
  3163  002E04                     __end_of_configureAdc:
  3164                           	opt stack 0
  3165                           tblptru	equ	0xFF8
  3166                           tblptrh	equ	0xFF7
  3167                           tblptrl	equ	0xFF6
  3168                           tablat	equ	0xFF5
  3169                           intcon	equ	0xFF2
  3170                           indf0	equ	0xFEF
  3171                           postinc0	equ	0xFEE
  3172                           fsr0h	equ	0xFEA
  3173                           fsr0l	equ	0xFE9
  3174                           wreg	equ	0xFE8
  3175                           status	equ	0xFD8
  3176                           
  3177 ;; *************** function _tratamento *****************
  3178 ;; Defined at:
  3179 ;;		line 91 in file "aplicacao.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;		None
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  correnteMedi    3   37[BANK0 ] float 
  3184 ;;  tensaoMedia     3   34[BANK0 ] float 
  3185 ;;  correnteMedi    3   40[BANK0 ] float 
  3186 ;;  tensaoMedia     3   29[BANK0 ] float 
  3187 ;;  indexTensaoM    2   32[BANK0 ] int 
  3188 ;;  correnteMedi    3   26[BANK0 ] float 
  3189 ;;  tensaoMedia     3   23[BANK0 ] float 
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Locals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3203 ;;Total ram usage:       51 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; Hardware stack levels required when called:    5
  3206 ;; This function calls:
  3207 ;;		___awtoft
  3208 ;;		___ftadd
  3209 ;;		___ftdiv
  3210 ;;		___ftge
  3211 ;;		___ftmul
  3212 ;;		___ftneg
  3213 ;;		___wmul
  3214 ;;		_converterFloatParaString
  3215 ;;		_converterIntParaString
  3216 ;;		_habilitarCarregamentoDaBateria
  3217 ;;		_habilitarDescarregamentoDaBateria
  3218 ;;		_indexDoMenorValor
  3219 ;;		_lerAdcAn0
  3220 ;;		_lerAdcAn1
  3221 ;;		_sinalizacaoAprovada
  3222 ;;		_sinalizacaoFalha
  3223 ;;		i2_desabilitarCarregamentoDaBateria
  3224 ;;		i2_desabilitarDescarregamentoDaBateria
  3225 ;;		i2_desabilitarTimer0
  3226 ;;		i2_escreverStringUart
  3227 ;; This function is called by:
  3228 ;;		Interrupt level 2
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232                           	psect	intcode
  3233  000008                     __pintcode:
  3234                           	opt stack 0
  3235  000008                     _tratamento:
  3236                           	opt stack 23
  3237                           
  3238                           ;incstack = 0
  3239  000008  827D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3240  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
  3241                           tblptru	equ	0xFF8
  3242                           tblptrh	equ	0xFF7
  3243                           tblptrl	equ	0xFF6
  3244                           tablat	equ	0xFF5
  3245                           intcon	equ	0xFF2
  3246                           indf0	equ	0xFEF
  3247                           postinc0	equ	0xFEE
  3248                           fsr0h	equ	0xFEA
  3249                           fsr0l	equ	0xFE9
  3250                           wreg	equ	0xFE8
  3251                           status	equ	0xFD8
  3252                           
  3253                           	psect	intcode_body
  3254  000012                     __pintcode_body:
  3255                           	opt stack 23
  3256  000012                     int_func:
  3257                           	opt stack 23
  3258  000012  0006               	pop		; remove dummy address from shadow register refresh
  3259  000014  CFFA F086          	movff	pclath,??_tratamento+2
  3260  000018  CFFB F087          	movff	pclatu,??_tratamento+3
  3261  00001C  CFE9 F088          	movff	fsr0l,??_tratamento+4
  3262  000020  CFEA F089          	movff	fsr0h,??_tratamento+5
  3263  000024  CFE1 F08A          	movff	fsr1l,??_tratamento+6
  3264  000028  CFE2 F08B          	movff	fsr1h,??_tratamento+7
  3265  00002C  CFD9 F08C          	movff	fsr2l,??_tratamento+8
  3266  000030  CFDA F08D          	movff	fsr2h,??_tratamento+9
  3267  000034  CFF3 F08E          	movff	prodl,??_tratamento+10
  3268  000038  CFF4 F08F          	movff	prodh,??_tratamento+11
  3269  00003C  CFF6 F090          	movff	tblptrl,??_tratamento+12
  3270  000040  CFF7 F091          	movff	tblptrh,??_tratamento+13
  3271  000044  CFF8 F092          	movff	tblptru,??_tratamento+14
  3272  000048  CFF5 F093          	movff	tablat,??_tratamento+15
  3273                           
  3274                           ;aplicacao.c: 93: if((INTCONbits.TMR0IE == 1) && (INTCONbits.TMR0IF == 1)) {
  3275  00004C  BAF2               	btfsc	intcon,5,c	;volatile
  3276  00004E  A4F2               	btfss	intcon,2,c	;volatile
  3277  000050  EF5F  F008         	goto	i2l201
  3278                           
  3279                           ;aplicacao.c: 95: if(statusDaBateria == 0) {
  3280  000054  0100               	movlb	0	; () banked
  3281  000056  51CB               	movf	_statusDaBateria& (0+255),w,b
  3282  000058  A4D8               	btfss	status,2,c
  3283  00005A  D259               	goto	i2l3518
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;aplicacao.c: 96: desabilitarDescarregamentoDaBateria();
  3287  00005C  ECA5  F017         	call	i2_desabilitarDescarregamentoDaBateria	;wreg free
  3288                           
  3289                           ;aplicacao.c: 97: habilitarCarregamentoDaBateria();
  3290  000060  ECD5  F017         	call	_habilitarCarregamentoDaBateria	;wreg free
  3291                           
  3292                           ;aplicacao.c: 99: _delay((unsigned long)((500)*(1000000/4000.0)));
  3293  000064  0EA3               	movlw	163
  3294  000066  0100               	movlb	0	; () banked
  3295  000068  6F84               	movwf	??_tratamento& (0+255),b
  3296  00006A  0E55               	movlw	85
  3297  00006C                     i2u366_47:
  3298  00006C  2EE8               	decfsz	wreg,f,c
  3299  00006E  D7FE               	bra	i2u366_47
  3300  000070  2F84               	decfsz	??_tratamento& (0+255),f,b
  3301  000072  D7FC               	bra	i2u366_47
  3302                           
  3303                           ;aplicacao.c: 101: tensaoNaBateria[tempoEmSegundos] = ((5.0 * lerAdcAn0()) / 1023);
  3304  000074  0E00               	movlw	0
  3305  000076  6E18               	movwf	___ftmul@f2,c
  3306  000078  0EA0               	movlw	160
  3307  00007A  6E19               	movwf	___ftmul@f2+1,c
  3308  00007C  0E40               	movlw	64
  3309  00007E  6E1A               	movwf	___ftmul@f2+2,c
  3310  000080  EC91  F016         	call	_lerAdcAn0	;wreg free
  3311  000084  C001  F009         	movff	?_lerAdcAn0,___awtoft@c
  3312  000088  C002  F00A         	movff	?_lerAdcAn0+1,___awtoft@c+1
  3313  00008C  ECCB  F016         	call	___awtoft	;wreg free
  3314  000090  C009  F015         	movff	?___awtoft,___ftmul@f1
  3315  000094  C00A  F016         	movff	?___awtoft+1,___ftmul@f1+1
  3316  000098  C00B  F017         	movff	?___awtoft+2,___ftmul@f1+2
  3317  00009C  EC82  F011         	call	___ftmul	;wreg free
  3318  0000A0  C015  F024         	movff	?___ftmul,___ftdiv@f1
  3319  0000A4  C016  F025         	movff	?___ftmul+1,___ftdiv@f1+1
  3320  0000A8  C017  F026         	movff	?___ftmul+2,___ftdiv@f1+2
  3321  0000AC  0EC0               	movlw	192
  3322  0000AE  6E27               	movwf	___ftdiv@f2,c
  3323  0000B0  0E7F               	movlw	127
  3324  0000B2  6E28               	movwf	___ftdiv@f2+1,c
  3325  0000B4  0E44               	movlw	68
  3326  0000B6  6E29               	movwf	___ftdiv@f2+2,c
  3327  0000B8  ECEE  F012         	call	___ftdiv	;wreg free
  3328  0000BC  0100               	movlb	0	; () banked
  3329  0000BE  51CC               	movf	_tempoEmSegundos& (0+255),w,b
  3330  0000C0  0D03               	mullw	3
  3331  0000C2  0ECE               	movlw	low _tensaoNaBateria
  3332  0000C4  24F3               	addwf	prodl,w,c
  3333  0000C6  6ED9               	movwf	fsr2l,c
  3334  0000C8  0E00               	movlw	high _tensaoNaBateria
  3335  0000CA  20F4               	addwfc	prodh,w,c
  3336  0000CC  6EDA               	movwf	fsr2h,c
  3337  0000CE  C024  FFDE         	movff	?___ftdiv,postinc2
  3338  0000D2  C025  FFDE         	movff	?___ftdiv+1,postinc2
  3339  0000D6  C026  FFDE         	movff	?___ftdiv+2,postinc2
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;aplicacao.c: 102: correnteNaBateria[tempoEmSegundos] = ((((5.0 * lerAdcAn1()) / 1023) -
      +                           tensaoNaBateria[tempoEmSegundos]) / 0.47);
  3343  0000DA  0100               	movlb	0	; () banked
  3344  0000DC  51CC               	movf	_tempoEmSegundos& (0+255),w,b
  3345  0000DE  0D03               	mullw	3
  3346  0000E0  0ECE               	movlw	low _tensaoNaBateria
  3347  0000E2  24F3               	addwf	prodl,w,c
  3348  0000E4  6ED9               	movwf	fsr2l,c
  3349  0000E6  0E00               	movlw	high _tensaoNaBateria
  3350  0000E8  20F4               	addwfc	prodh,w,c
  3351  0000EA  6EDA               	movwf	fsr2h,c
  3352  0000EC  CFDE F033          	movff	postinc2,___ftneg@f1
  3353  0000F0  CFDE F034          	movff	postinc2,___ftneg@f1+1
  3354  0000F4  CFDD F035          	movff	postdec2,___ftneg@f1+2
  3355  0000F8  EC3C  F017         	call	___ftneg	;wreg free
  3356  0000FC  C033  F039         	movff	?___ftneg,___ftadd@f2
  3357  000100  C034  F03A         	movff	?___ftneg+1,___ftadd@f2+1
  3358  000104  C035  F03B         	movff	?___ftneg+2,___ftadd@f2+2
  3359  000108  0EC0               	movlw	192
  3360  00010A  6E27               	movwf	___ftdiv@f2,c
  3361  00010C  0E7F               	movlw	127
  3362  00010E  6E28               	movwf	___ftdiv@f2+1,c
  3363  000110  0E44               	movlw	68
  3364  000112  6E29               	movwf	___ftdiv@f2+2,c
  3365  000114  0E00               	movlw	0
  3366  000116  6E18               	movwf	___ftmul@f2,c
  3367  000118  0EA0               	movlw	160
  3368  00011A  6E19               	movwf	___ftmul@f2+1,c
  3369  00011C  0E40               	movlw	64
  3370  00011E  6E1A               	movwf	___ftmul@f2+2,c
  3371  000120  EC73  F016         	call	_lerAdcAn1	;wreg free
  3372  000124  C001  F009         	movff	?_lerAdcAn1,___awtoft@c
  3373  000128  C002  F00A         	movff	?_lerAdcAn1+1,___awtoft@c+1
  3374  00012C  ECCB  F016         	call	___awtoft	;wreg free
  3375  000130  C009  F015         	movff	?___awtoft,___ftmul@f1
  3376  000134  C00A  F016         	movff	?___awtoft+1,___ftmul@f1+1
  3377  000138  C00B  F017         	movff	?___awtoft+2,___ftmul@f1+2
  3378  00013C  EC82  F011         	call	___ftmul	;wreg free
  3379  000140  C015  F024         	movff	?___ftmul,___ftdiv@f1
  3380  000144  C016  F025         	movff	?___ftmul+1,___ftdiv@f1+1
  3381  000148  C017  F026         	movff	?___ftmul+2,___ftdiv@f1+2
  3382  00014C  ECEE  F012         	call	___ftdiv	;wreg free
  3383  000150  C024  F036         	movff	?___ftdiv,___ftadd@f1
  3384  000154  C025  F037         	movff	?___ftdiv+1,___ftadd@f1+1
  3385  000158  C026  F038         	movff	?___ftdiv+2,___ftadd@f1+2
  3386  00015C  EC7F  F00F         	call	___ftadd	;wreg free
  3387  000160  C036  F0AB         	movff	?___ftadd,_tratamento$1511
  3388  000164  C037  F0AC         	movff	?___ftadd+1,_tratamento$1511+1
  3389  000168  C038  F0AD         	movff	?___ftadd+2,_tratamento$1511+2
  3390                           
  3391                           ;aplicacao.c: 102: correnteNaBateria[tempoEmSegundos] = ((((5.0 * lerAdcAn1()) / 1023) -
      +                           tensaoNaBateria[tempoEmSegundos]) / 0.47);
  3392  00016C  C0AB  F024         	movff	_tratamento$1511,___ftdiv@f1
  3393  000170  C0AC  F025         	movff	_tratamento$1511+1,___ftdiv@f1+1
  3394  000174  C0AD  F026         	movff	_tratamento$1511+2,___ftdiv@f1+2
  3395  000178  0EA4               	movlw	164
  3396  00017A  6E27               	movwf	___ftdiv@f2,c
  3397  00017C  0EF0               	movlw	240
  3398  00017E  6E28               	movwf	___ftdiv@f2+1,c
  3399  000180  0E3E               	movlw	62
  3400  000182  6E29               	movwf	___ftdiv@f2+2,c
  3401  000184  ECEE  F012         	call	___ftdiv	;wreg free
  3402  000188  0100               	movlb	0	; () banked
  3403  00018A  51CC               	movf	_tempoEmSegundos& (0+255),w,b
  3404  00018C  0D03               	mullw	3
  3405  00018E  0EB7               	movlw	low _correnteNaBateria
  3406  000190  24F3               	addwf	prodl,w,c
  3407  000192  6ED9               	movwf	fsr2l,c
  3408  000194  0E00               	movlw	high _correnteNaBateria
  3409  000196  20F4               	addwfc	prodh,w,c
  3410  000198  6EDA               	movwf	fsr2h,c
  3411  00019A  C024  FFDE         	movff	?___ftdiv,postinc2
  3412  00019E  C025  FFDE         	movff	?___ftdiv+1,postinc2
  3413  0001A2  C026  FFDE         	movff	?___ftdiv+2,postinc2
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;aplicacao.c: 104: escreverStringUart("\nCarregamento: Habilitado | Descarregamento: Des
      +                          abilitado | Teste: ");
  3417  0001A6  0E21               	movlw	low STR_7
  3418  0001A8  6E79               	movwf	i2escreverStringUart@string,c
  3419  0001AA  0EFC               	movlw	high STR_7
  3420  0001AC  6E7A               	movwf	i2escreverStringUart@string+1,c
  3421  0001AE  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3422                           
  3423                           ;aplicacao.c: 105: escreverStringUart(converterIntParaString(tempoEmSegundos + 1));
  3424  0001B2  0E01               	movlw	1
  3425  0001B4  0100               	movlb	0	; () banked
  3426  0001B6  25CC               	addwf	_tempoEmSegundos& (0+255),w,b
  3427  0001B8  6E6C               	movwf	converterIntParaString@valorParaSerConvertido,c
  3428  0001BA  6A6D               	clrf	converterIntParaString@valorParaSerConvertido+1,c
  3429  0001BC  0E00               	movlw	0
  3430  0001BE  226D               	addwfc	converterIntParaString@valorParaSerConvertido+1,f,c
  3431  0001C0  EC4E  F017         	call	_converterIntParaString	;wreg free
  3432  0001C4  0100               	movlb	0	; () banked
  3433  0001C6  6F84               	movwf	??_tratamento& (0+255),b
  3434  0001C8  6B85               	clrf	(??_tratamento+1)& (0+255),b
  3435  0001CA  C084  F079         	movff	??_tratamento,i2escreverStringUart@string
  3436  0001CE  C085  F07A         	movff	??_tratamento+1,i2escreverStringUart@string+1
  3437  0001D2  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3438                           
  3439                           ;aplicacao.c: 106: escreverStringUart(" | ");
  3440  0001D6  0EE7               	movlw	low (STR_10+2)
  3441  0001D8  6E79               	movwf	i2escreverStringUart@string,c
  3442  0001DA  0EFF               	movlw	high (STR_10+2)
  3443  0001DC  6E7A               	movwf	i2escreverStringUart@string+1,c
  3444  0001DE  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3445                           
  3446                           ;aplicacao.c: 107: escreverStringUart("Tensao: ");
  3447  0001E2  0EDC               	movlw	low STR_9
  3448  0001E4  6E79               	movwf	i2escreverStringUart@string,c
  3449  0001E6  0EFF               	movlw	high STR_9
  3450  0001E8  6E7A               	movwf	i2escreverStringUart@string+1,c
  3451  0001EA  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3452                           
  3453                           ;aplicacao.c: 108: escreverStringUart(converterFloatParaString(tensaoNaBateria[tempoEmSe
      +                          gundos]));
  3454  0001EE  0100               	movlb	0	; () banked
  3455  0001F0  51CC               	movf	_tempoEmSegundos& (0+255),w,b
  3456  0001F2  0D03               	mullw	3
  3457  0001F4  0ECE               	movlw	low _tensaoNaBateria
  3458  0001F6  24F3               	addwf	prodl,w,c
  3459  0001F8  6ED9               	movwf	fsr2l,c
  3460  0001FA  0E00               	movlw	high _tensaoNaBateria
  3461  0001FC  20F4               	addwfc	prodh,w,c
  3462  0001FE  6EDA               	movwf	fsr2h,c
  3463  000200  CFDE F06C          	movff	postinc2,converterFloatParaString@valorParaSerConvertido
  3464  000204  CFDE F06D          	movff	postinc2,converterFloatParaString@valorParaSerConvertido+1
  3465  000208  CFDD F06E          	movff	postdec2,converterFloatParaString@valorParaSerConvertido+2
  3466  00020C  EC2A  F017         	call	_converterFloatParaString	;wreg free
  3467  000210  0100               	movlb	0	; () banked
  3468  000212  6F84               	movwf	??_tratamento& (0+255),b
  3469  000214  6B85               	clrf	(??_tratamento+1)& (0+255),b
  3470  000216  C084  F079         	movff	??_tratamento,i2escreverStringUart@string
  3471  00021A  C085  F07A         	movff	??_tratamento+1,i2escreverStringUart@string+1
  3472  00021E  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3473                           
  3474                           ;aplicacao.c: 109: escreverStringUart(" V | ");
  3475  000222  0EE5               	movlw	low STR_10
  3476  000224  6E79               	movwf	i2escreverStringUart@string,c
  3477  000226  0EFF               	movlw	high STR_10
  3478  000228  6E7A               	movwf	i2escreverStringUart@string+1,c
  3479  00022A  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3480                           
  3481                           ;aplicacao.c: 110: escreverStringUart("Corrente: ");
  3482  00022E  0ED1               	movlw	low STR_11
  3483  000230  6E79               	movwf	i2escreverStringUart@string,c
  3484  000232  0EFF               	movlw	high STR_11
  3485  000234  6E7A               	movwf	i2escreverStringUart@string+1,c
  3486  000236  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3487                           
  3488                           ;aplicacao.c: 111: escreverStringUart(converterFloatParaString(correnteNaBateria[tempoEm
      +                          Segundos]));
  3489  00023A  0100               	movlb	0	; () banked
  3490  00023C  51CC               	movf	_tempoEmSegundos& (0+255),w,b
  3491  00023E  0D03               	mullw	3
  3492  000240  0EB7               	movlw	low _correnteNaBateria
  3493  000242  24F3               	addwf	prodl,w,c
  3494  000244  6ED9               	movwf	fsr2l,c
  3495  000246  0E00               	movlw	high _correnteNaBateria
  3496  000248  20F4               	addwfc	prodh,w,c
  3497  00024A  6EDA               	movwf	fsr2h,c
  3498  00024C  CFDE F06C          	movff	postinc2,converterFloatParaString@valorParaSerConvertido
  3499  000250  CFDE F06D          	movff	postinc2,converterFloatParaString@valorParaSerConvertido+1
  3500  000254  CFDD F06E          	movff	postdec2,converterFloatParaString@valorParaSerConvertido+2
  3501  000258  EC2A  F017         	call	_converterFloatParaString	;wreg free
  3502  00025C  0100               	movlb	0	; () banked
  3503  00025E  6F84               	movwf	??_tratamento& (0+255),b
  3504  000260  6B85               	clrf	(??_tratamento+1)& (0+255),b
  3505  000262  C084  F079         	movff	??_tratamento,i2escreverStringUart@string
  3506  000266  C085  F07A         	movff	??_tratamento+1,i2escreverStringUart@string+1
  3507  00026A  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3508                           
  3509                           ;aplicacao.c: 112: escreverStringUart(" A");
  3510  00026E  0EF3               	movlw	low STR_12
  3511  000270  6E79               	movwf	i2escreverStringUart@string,c
  3512  000272  0EFF               	movlw	high STR_12
  3513  000274  6E7A               	movwf	i2escreverStringUart@string+1,c
  3514  000276  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3515                           
  3516                           ;aplicacao.c: 114: tempoEmSegundos++;
  3517  00027A  0100               	movlb	0	; () banked
  3518  00027C  2BCC               	incf	_tempoEmSegundos& (0+255),f,b
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;aplicacao.c: 116: if(tempoEmSegundos == 5) {
  3522  00027E  0E05               	movlw	5
  3523  000280  0100               	movlb	0	; () banked
  3524  000282  19CC               	xorwf	_tempoEmSegundos& (0+255),w,b
  3525  000284  A4D8               	btfss	status,2,c
  3526  000286  EF5A  F008         	goto	i2l3758
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;aplicacao.c: 117: contador = 0;
  3530  00028A  0E00               	movlw	0
  3531  00028C  0100               	movlb	0	; () banked
  3532  00028E  6FCD               	movwf	_contador& (0+255),b
  3533                           
  3534                           ;aplicacao.c: 118: tempoEmSegundos = 0;
  3535  000290  0E00               	movlw	0
  3536  000292  0100               	movlb	0	; () banked
  3537  000294  6FCC               	movwf	_tempoEmSegundos& (0+255),b
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;aplicacao.c: 119: float tensaoMedia = ((tensaoNaBateria[0] + tensaoNaBateria[1] + tensa
      +                          oNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4]) / 5);
  3541  000296  C0D4  F039         	movff	_tensaoNaBateria+6,___ftadd@f2
  3542  00029A  C0D5  F03A         	movff	_tensaoNaBateria+7,___ftadd@f2+1
  3543  00029E  C0D6  F03B         	movff	_tensaoNaBateria+8,___ftadd@f2+2
  3544  0002A2  C0D1  F036         	movff	_tensaoNaBateria+3,___ftadd@f1
  3545  0002A6  C0D2  F037         	movff	_tensaoNaBateria+4,___ftadd@f1+1
  3546  0002AA  C0D3  F038         	movff	_tensaoNaBateria+5,___ftadd@f1+2
  3547  0002AE  EC7F  F00F         	call	___ftadd	;wreg free
  3548  0002B2  C036  F0AE         	movff	?___ftadd,_tratamento$1512
  3549  0002B6  C037  F0AF         	movff	?___ftadd+1,_tratamento$1512+1
  3550  0002BA  C038  F0B0         	movff	?___ftadd+2,_tratamento$1512+2
  3551                           
  3552                           ;aplicacao.c: 119: float tensaoMedia = ((tensaoNaBateria[0] + tensaoNaBateria[1] + tensa
      +                          oNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4]) / 5);
  3553  0002BE  C0D7  F039         	movff	_tensaoNaBateria+9,___ftadd@f2
  3554  0002C2  C0D8  F03A         	movff	_tensaoNaBateria+10,___ftadd@f2+1
  3555  0002C6  C0D9  F03B         	movff	_tensaoNaBateria+11,___ftadd@f2+2
  3556  0002CA  C0AE  F036         	movff	_tratamento$1512,___ftadd@f1
  3557  0002CE  C0AF  F037         	movff	_tratamento$1512+1,___ftadd@f1+1
  3558  0002D2  C0B0  F038         	movff	_tratamento$1512+2,___ftadd@f1+2
  3559  0002D6  EC7F  F00F         	call	___ftadd	;wreg free
  3560  0002DA  C036  F0B1         	movff	?___ftadd,_tratamento$1513
  3561  0002DE  C037  F0B2         	movff	?___ftadd+1,_tratamento$1513+1
  3562  0002E2  C038  F0B3         	movff	?___ftadd+2,_tratamento$1513+2
  3563                           
  3564                           ;aplicacao.c: 119: float tensaoMedia = ((tensaoNaBateria[0] + tensaoNaBateria[1] + tensa
      +                          oNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4]) / 5);
  3565  0002E6  C0DA  F039         	movff	_tensaoNaBateria+12,___ftadd@f2
  3566  0002EA  C0DB  F03A         	movff	_tensaoNaBateria+13,___ftadd@f2+1
  3567  0002EE  C0DC  F03B         	movff	_tensaoNaBateria+14,___ftadd@f2+2
  3568  0002F2  C0B1  F036         	movff	_tratamento$1513,___ftadd@f1
  3569  0002F6  C0B2  F037         	movff	_tratamento$1513+1,___ftadd@f1+1
  3570  0002FA  C0B3  F038         	movff	_tratamento$1513+2,___ftadd@f1+2
  3571  0002FE  EC7F  F00F         	call	___ftadd	;wreg free
  3572  000302  C036  F0B4         	movff	?___ftadd,_tratamento$1514
  3573  000306  C037  F0B5         	movff	?___ftadd+1,_tratamento$1514+1
  3574  00030A  C038  F0B6         	movff	?___ftadd+2,_tratamento$1514+2
  3575                           
  3576                           ;aplicacao.c: 119: float tensaoMedia = ((tensaoNaBateria[0] + tensaoNaBateria[1] + tensa
      +                          oNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4]) / 5);
  3577  00030E  C0CE  F039         	movff	_tensaoNaBateria,___ftadd@f2
  3578  000312  C0CF  F03A         	movff	_tensaoNaBateria+1,___ftadd@f2+1
  3579  000316  C0D0  F03B         	movff	_tensaoNaBateria+2,___ftadd@f2+2
  3580  00031A  C0B4  F036         	movff	_tratamento$1514,___ftadd@f1
  3581  00031E  C0B5  F037         	movff	_tratamento$1514+1,___ftadd@f1+1
  3582  000322  C0B6  F038         	movff	_tratamento$1514+2,___ftadd@f1+2
  3583  000326  EC7F  F00F         	call	___ftadd	;wreg free
  3584  00032A  C036  F024         	movff	?___ftadd,___ftdiv@f1
  3585  00032E  C037  F025         	movff	?___ftadd+1,___ftdiv@f1+1
  3586  000332  C038  F026         	movff	?___ftadd+2,___ftdiv@f1+2
  3587  000336  0E00               	movlw	0
  3588  000338  6E27               	movwf	___ftdiv@f2,c
  3589  00033A  0EA0               	movlw	160
  3590  00033C  6E28               	movwf	___ftdiv@f2+1,c
  3591  00033E  0E40               	movlw	64
  3592  000340  6E29               	movwf	___ftdiv@f2+2,c
  3593  000342  ECEE  F012         	call	___ftdiv	;wreg free
  3594  000346  C024  F097         	movff	?___ftdiv,tratamento@tensaoMedia
  3595  00034A  C025  F098         	movff	?___ftdiv+1,tratamento@tensaoMedia+1
  3596  00034E  C026  F099         	movff	?___ftdiv+2,tratamento@tensaoMedia+2
  3597                           
  3598                           ;aplicacao.c: 120: float correnteMedia = ((correnteNaBateria[0] + correnteNaBateria[1] +
      +                           correnteNaBateria[2] + correnteNaBateria[3] + correnteNaBateria[4]) /5);
  3599  000352  C0BD  F039         	movff	_correnteNaBateria+6,___ftadd@f2
  3600  000356  C0BE  F03A         	movff	_correnteNaBateria+7,___ftadd@f2+1
  3601  00035A  C0BF  F03B         	movff	_correnteNaBateria+8,___ftadd@f2+2
  3602  00035E  C0BA  F036         	movff	_correnteNaBateria+3,___ftadd@f1
  3603  000362  C0BB  F037         	movff	_correnteNaBateria+4,___ftadd@f1+1
  3604  000366  C0BC  F038         	movff	_correnteNaBateria+5,___ftadd@f1+2
  3605  00036A  EC7F  F00F         	call	___ftadd	;wreg free
  3606  00036E  C036  F0AE         	movff	?___ftadd,_tratamento$1512
  3607  000372  C037  F0AF         	movff	?___ftadd+1,_tratamento$1512+1
  3608  000376  C038  F0B0         	movff	?___ftadd+2,_tratamento$1512+2
  3609                           
  3610                           ;aplicacao.c: 120: float correnteMedia = ((correnteNaBateria[0] + correnteNaBateria[1] +
      +                           correnteNaBateria[2] + correnteNaBateria[3] + correnteNaBateria[4]) /5);
  3611  00037A  C0C0  F039         	movff	_correnteNaBateria+9,___ftadd@f2
  3612  00037E  C0C1  F03A         	movff	_correnteNaBateria+10,___ftadd@f2+1
  3613  000382  C0C2  F03B         	movff	_correnteNaBateria+11,___ftadd@f2+2
  3614  000386  C0AE  F036         	movff	_tratamento$1512,___ftadd@f1
  3615  00038A  C0AF  F037         	movff	_tratamento$1512+1,___ftadd@f1+1
  3616  00038E  C0B0  F038         	movff	_tratamento$1512+2,___ftadd@f1+2
  3617  000392  EC7F  F00F         	call	___ftadd	;wreg free
  3618  000396  C036  F0B1         	movff	?___ftadd,_tratamento$1513
  3619  00039A  C037  F0B2         	movff	?___ftadd+1,_tratamento$1513+1
  3620  00039E  C038  F0B3         	movff	?___ftadd+2,_tratamento$1513+2
  3621                           
  3622                           ;aplicacao.c: 120: float correnteMedia = ((correnteNaBateria[0] + correnteNaBateria[1] +
      +                           correnteNaBateria[2] + correnteNaBateria[3] + correnteNaBateria[4]) /5);
  3623  0003A2  C0C3  F039         	movff	_correnteNaBateria+12,___ftadd@f2
  3624  0003A6  C0C4  F03A         	movff	_correnteNaBateria+13,___ftadd@f2+1
  3625  0003AA  C0C5  F03B         	movff	_correnteNaBateria+14,___ftadd@f2+2
  3626  0003AE  C0B1  F036         	movff	_tratamento$1513,___ftadd@f1
  3627  0003B2  C0B2  F037         	movff	_tratamento$1513+1,___ftadd@f1+1
  3628  0003B6  C0B3  F038         	movff	_tratamento$1513+2,___ftadd@f1+2
  3629  0003BA  EC7F  F00F         	call	___ftadd	;wreg free
  3630  0003BE  C036  F0B4         	movff	?___ftadd,_tratamento$1514
  3631  0003C2  C037  F0B5         	movff	?___ftadd+1,_tratamento$1514+1
  3632  0003C6  C038  F0B6         	movff	?___ftadd+2,_tratamento$1514+2
  3633                           
  3634                           ;aplicacao.c: 120: float correnteMedia = ((correnteNaBateria[0] + correnteNaBateria[1] +
      +                           correnteNaBateria[2] + correnteNaBateria[3] + correnteNaBateria[4]) /5);
  3635  0003CA  C0B7  F039         	movff	_correnteNaBateria,___ftadd@f2
  3636  0003CE  C0B8  F03A         	movff	_correnteNaBateria+1,___ftadd@f2+1
  3637  0003D2  C0B9  F03B         	movff	_correnteNaBateria+2,___ftadd@f2+2
  3638  0003D6  C0B4  F036         	movff	_tratamento$1514,___ftadd@f1
  3639  0003DA  C0B5  F037         	movff	_tratamento$1514+1,___ftadd@f1+1
  3640  0003DE  C0B6  F038         	movff	_tratamento$1514+2,___ftadd@f1+2
  3641  0003E2  EC7F  F00F         	call	___ftadd	;wreg free
  3642  0003E6  C036  F024         	movff	?___ftadd,___ftdiv@f1
  3643  0003EA  C037  F025         	movff	?___ftadd+1,___ftdiv@f1+1
  3644  0003EE  C038  F026         	movff	?___ftadd+2,___ftdiv@f1+2
  3645  0003F2  0E00               	movlw	0
  3646  0003F4  6E27               	movwf	___ftdiv@f2,c
  3647  0003F6  0EA0               	movlw	160
  3648  0003F8  6E28               	movwf	___ftdiv@f2+1,c
  3649  0003FA  0E40               	movlw	64
  3650  0003FC  6E29               	movwf	___ftdiv@f2+2,c
  3651  0003FE  ECEE  F012         	call	___ftdiv	;wreg free
  3652  000402  C024  F09A         	movff	?___ftdiv,tratamento@correnteMedia
  3653  000406  C025  F09B         	movff	?___ftdiv+1,tratamento@correnteMedia+1
  3654  00040A  C026  F09C         	movff	?___ftdiv+2,tratamento@correnteMedia+2
  3655                           
  3656                           ;aplicacao.c: 122: escreverStringUart("\nTensao media: ");
  3657  00040E  0EC1               	movlw	low STR_13
  3658  000410  6E79               	movwf	i2escreverStringUart@string,c
  3659  000412  0EFF               	movlw	high STR_13
  3660  000414  6E7A               	movwf	i2escreverStringUart@string+1,c
  3661  000416  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3662                           
  3663                           ;aplicacao.c: 123: escreverStringUart(converterFloatParaString(tensaoMedia));
  3664  00041A  C097  F06C         	movff	tratamento@tensaoMedia,converterFloatParaString@valorParaSerConvertido
  3665  00041E  C098  F06D         	movff	tratamento@tensaoMedia+1,converterFloatParaString@valorParaSerConvertido+1
  3666  000422  C099  F06E         	movff	tratamento@tensaoMedia+2,converterFloatParaString@valorParaSerConvertido+2
  3667  000426  EC2A  F017         	call	_converterFloatParaString	;wreg free
  3668  00042A  0100               	movlb	0	; () banked
  3669  00042C  6F84               	movwf	??_tratamento& (0+255),b
  3670  00042E  6B85               	clrf	(??_tratamento+1)& (0+255),b
  3671  000430  C084  F079         	movff	??_tratamento,i2escreverStringUart@string
  3672  000434  C085  F07A         	movff	??_tratamento+1,i2escreverStringUart@string+1
  3673  000438  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3674                           
  3675                           ;aplicacao.c: 124: escreverStringUart(" V");
  3676  00043C  0EF6               	movlw	low STR_14
  3677  00043E  6E79               	movwf	i2escreverStringUart@string,c
  3678  000440  0EFF               	movlw	high STR_14
  3679  000442  6E7A               	movwf	i2escreverStringUart@string+1,c
  3680  000444  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3681                           
  3682                           ;aplicacao.c: 126: escreverStringUart("\nCorrente media: ");
  3683  000448  0E8E               	movlw	low STR_15
  3684  00044A  6E79               	movwf	i2escreverStringUart@string,c
  3685  00044C  0EFF               	movlw	high STR_15
  3686  00044E  6E7A               	movwf	i2escreverStringUart@string+1,c
  3687  000450  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3688                           
  3689                           ;aplicacao.c: 127: escreverStringUart(converterFloatParaString(correnteMedia));
  3690  000454  C09A  F06C         	movff	tratamento@correnteMedia,converterFloatParaString@valorParaSerConvertido
  3691  000458  C09B  F06D         	movff	tratamento@correnteMedia+1,converterFloatParaString@valorParaSerConvertido+1
  3692  00045C  C09C  F06E         	movff	tratamento@correnteMedia+2,converterFloatParaString@valorParaSerConvertido+2
  3693  000460  EC2A  F017         	call	_converterFloatParaString	;wreg free
  3694  000464  0100               	movlb	0	; () banked
  3695  000466  6F84               	movwf	??_tratamento& (0+255),b
  3696  000468  6B85               	clrf	(??_tratamento+1)& (0+255),b
  3697  00046A  C084  F079         	movff	??_tratamento,i2escreverStringUart@string
  3698  00046E  C085  F07A         	movff	??_tratamento+1,i2escreverStringUart@string+1
  3699  000472  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3700                           
  3701                           ;aplicacao.c: 128: escreverStringUart(" A");
  3702  000476  0EF3               	movlw	low STR_12
  3703  000478  6E79               	movwf	i2escreverStringUart@string,c
  3704  00047A  0EFF               	movlw	high STR_12
  3705  00047C  6E7A               	movwf	i2escreverStringUart@string+1,c
  3706  00047E  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3707                           
  3708                           ;aplicacao.c: 130: if((tensaoMedia >= 2) && (correnteMedia >= 0.200)) {
  3709  000482  C097  F015         	movff	tratamento@tensaoMedia,___ftge@ff1
  3710  000486  C098  F016         	movff	tratamento@tensaoMedia+1,___ftge@ff1+1
  3711  00048A  C099  F017         	movff	tratamento@tensaoMedia+2,___ftge@ff1+2
  3712  00048E  0E00               	movlw	0
  3713  000490  6E18               	movwf	___ftge@ff2,c
  3714  000492  0E00               	movlw	0
  3715  000494  6E19               	movwf	___ftge@ff2+1,c
  3716  000496  0E40               	movlw	64
  3717  000498  6E1A               	movwf	___ftge@ff2+2,c
  3718  00049A  EC59  F014         	call	___ftge	;wreg free
  3719  00049E  A0D8               	btfss	status,0,c
  3720  0004A0  D021               	goto	i2l3512
  3721  0004A2  C09A  F015         	movff	tratamento@correnteMedia,___ftge@ff1
  3722  0004A6  C09B  F016         	movff	tratamento@correnteMedia+1,___ftge@ff1+1
  3723  0004AA  C09C  F017         	movff	tratamento@correnteMedia+2,___ftge@ff1+2
  3724  0004AE  0ECD               	movlw	205
  3725  0004B0  6E18               	movwf	___ftge@ff2,c
  3726  0004B2  0E4C               	movlw	76
  3727  0004B4  6E19               	movwf	___ftge@ff2+1,c
  3728  0004B6  0E3E               	movlw	62
  3729  0004B8  6E1A               	movwf	___ftge@ff2+2,c
  3730  0004BA  EC59  F014         	call	___ftge	;wreg free
  3731  0004BE  A0D8               	btfss	status,0,c
  3732  0004C0  D011               	goto	i2l3512
  3733                           
  3734                           ;aplicacao.c: 131: resultadoDosTestes[0] = 1;
  3735  0004C2  0E01               	movlw	1
  3736  0004C4  0100               	movlb	0	; () banked
  3737  0004C6  6FC6               	movwf	_resultadoDosTestes& (0+255),b
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;aplicacao.c: 132: escreverStringUart("\nTeste de polaridade: OK");
  3741  0004C8  0E5E               	movlw	low STR_17
  3742  0004CA  6E79               	movwf	i2escreverStringUart@string,c
  3743  0004CC  0EFF               	movlw	high STR_17
  3744  0004CE  6E7A               	movwf	i2escreverStringUart@string+1,c
  3745  0004D0  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3746                           
  3747                           ;aplicacao.c: 133: escreverStringUart("\n\nTeste de Carregamento habilitado!");
  3748  0004D4  0E8B               	movlw	low STR_18
  3749  0004D6  6E79               	movwf	i2escreverStringUart@string,c
  3750  0004D8  0EFE               	movlw	high STR_18
  3751  0004DA  6E7A               	movwf	i2escreverStringUart@string+1,c
  3752  0004DC  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3753                           
  3754                           ;aplicacao.c: 134: statusDaBateria = 1;
  3755  0004E0  0E01               	movlw	1
  3756  0004E2  D011               	goto	L1
  3757  0004E4                     i2l3512:
  3758                           
  3759                           ;aplicacao.c: 136: else {
  3760                           ;aplicacao.c: 137: resultadoDosTestes[0] = 0;
  3761  0004E4  0E00               	movlw	0
  3762  0004E6  0100               	movlb	0	; () banked
  3763  0004E8  6FC6               	movwf	_resultadoDosTestes& (0+255),b
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;aplicacao.c: 138: escreverStringUart("\nTeste de Polaridade: NOK");
  3767  0004EA  0E44               	movlw	low STR_19
  3768  0004EC  6E79               	movwf	i2escreverStringUart@string,c
  3769  0004EE  0EFF               	movlw	high STR_19
  3770  0004F0  6E7A               	movwf	i2escreverStringUart@string+1,c
  3771  0004F2  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3772                           
  3773                           ;aplicacao.c: 139: escreverStringUart("\n\nTeste de Carregamento nao habilitado!\n");
  3774  0004F6  0E51               	movlw	low STR_20
  3775  0004F8  6E79               	movwf	i2escreverStringUart@string,c
  3776  0004FA  0EFD               	movlw	high STR_20
  3777  0004FC  6E7A               	movwf	i2escreverStringUart@string+1,c
  3778  0004FE  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3779  000502  EFF7  F007         	goto	i2l3724
  3780  000506                     L1:
  3781  000506  0100               	movlb	0	; () banked
  3782  000508  6FCB               	movwf	_statusDaBateria& (0+255),b
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;aplicacao.c: 141: }
  3786                           ;aplicacao.c: 142: }
  3787                           ;aplicacao.c: 144: }
  3788                           
  3789                           ; BSR set to: 0
  3790  00050A  EF5A  F008         	goto	i2l3758
  3791  00050E                     i2l3518:
  3792                           
  3793                           ; BSR set to: 0
  3794                           ;aplicacao.c: 145: else if(statusDaBateria == 1) {
  3795  00050E  0100               	movlb	0	; () banked
  3796  000510  05CB               	decf	_statusDaBateria& (0+255),w,b
  3797  000512  A4D8               	btfss	status,2,c
  3798  000514  D2A6               	goto	i2l3624
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;aplicacao.c: 146: desabilitarDescarregamentoDaBateria();
  3802  000516  ECA5  F017         	call	i2_desabilitarDescarregamentoDaBateria	;wreg free
  3803                           
  3804                           ;aplicacao.c: 147: habilitarCarregamentoDaBateria();
  3805  00051A  ECD5  F017         	call	_habilitarCarregamentoDaBateria	;wreg free
  3806                           
  3807                           ;aplicacao.c: 148: tempoEmSegundos++;
  3808  00051E  0100               	movlb	0	; () banked
  3809  000520  2BCC               	incf	_tempoEmSegundos& (0+255),f,b
  3810                           
  3811                           ;aplicacao.c: 150: if(tempoEmSegundos == 8 || tempoEmSegundos == 16 || tempoEmSegundos =
      +                          = 24 || tempoEmSegundos == 32 || tempoEmSegundos == 40) {
  3812  000522  0E08               	movlw	8
  3813  000524  0100               	movlb	0	; () banked
  3814  000526  19CC               	xorwf	_tempoEmSegundos& (0+255),w,b
  3815  000528  B4D8               	btfsc	status,2,c
  3816  00052A  D015               	goto	i2l3534
  3817                           
  3818                           ; BSR set to: 0
  3819  00052C  0E10               	movlw	16
  3820  00052E  0100               	movlb	0	; () banked
  3821  000530  19CC               	xorwf	_tempoEmSegundos& (0+255),w,b
  3822  000532  B4D8               	btfsc	status,2,c
  3823  000534  D010               	goto	i2l3534
  3824                           
  3825                           ; BSR set to: 0
  3826  000536  0E18               	movlw	24
  3827  000538  0100               	movlb	0	; () banked
  3828  00053A  19CC               	xorwf	_tempoEmSegundos& (0+255),w,b
  3829  00053C  B4D8               	btfsc	status,2,c
  3830  00053E  D00B               	goto	i2l3534
  3831                           
  3832                           ; BSR set to: 0
  3833  000540  0E20               	movlw	32
  3834  000542  0100               	movlb	0	; () banked
  3835  000544  19CC               	xorwf	_tempoEmSegundos& (0+255),w,b
  3836  000546  B4D8               	btfsc	status,2,c
  3837  000548  D006               	goto	i2l3534
  3838                           
  3839                           ; BSR set to: 0
  3840  00054A  0E28               	movlw	40
  3841  00054C  0100               	movlb	0	; () banked
  3842  00054E  19CC               	xorwf	_tempoEmSegundos& (0+255),w,b
  3843  000550  A4D8               	btfss	status,2,c
  3844  000552  EF5A  F008         	goto	i2l3758
  3845  000556                     i2l3534:
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;aplicacao.c: 151: tensaoNaBateria[contador] = ((5.0 * lerAdcAn0()) / 1023);
  3849  000556  0E00               	movlw	0
  3850  000558  6E18               	movwf	___ftmul@f2,c
  3851  00055A  0EA0               	movlw	160
  3852  00055C  6E19               	movwf	___ftmul@f2+1,c
  3853  00055E  0E40               	movlw	64
  3854  000560  6E1A               	movwf	___ftmul@f2+2,c
  3855  000562  EC91  F016         	call	_lerAdcAn0	;wreg free
  3856  000566  C001  F009         	movff	?_lerAdcAn0,___awtoft@c
  3857  00056A  C002  F00A         	movff	?_lerAdcAn0+1,___awtoft@c+1
  3858  00056E  ECCB  F016         	call	___awtoft	;wreg free
  3859  000572  C009  F015         	movff	?___awtoft,___ftmul@f1
  3860  000576  C00A  F016         	movff	?___awtoft+1,___ftmul@f1+1
  3861  00057A  C00B  F017         	movff	?___awtoft+2,___ftmul@f1+2
  3862  00057E  EC82  F011         	call	___ftmul	;wreg free
  3863  000582  C015  F024         	movff	?___ftmul,___ftdiv@f1
  3864  000586  C016  F025         	movff	?___ftmul+1,___ftdiv@f1+1
  3865  00058A  C017  F026         	movff	?___ftmul+2,___ftdiv@f1+2
  3866  00058E  0EC0               	movlw	192
  3867  000590  6E27               	movwf	___ftdiv@f2,c
  3868  000592  0E7F               	movlw	127
  3869  000594  6E28               	movwf	___ftdiv@f2+1,c
  3870  000596  0E44               	movlw	68
  3871  000598  6E29               	movwf	___ftdiv@f2+2,c
  3872  00059A  ECEE  F012         	call	___ftdiv	;wreg free
  3873  00059E  0100               	movlb	0	; () banked
  3874  0005A0  51CD               	movf	_contador& (0+255),w,b
  3875  0005A2  0D03               	mullw	3
  3876  0005A4  0ECE               	movlw	low _tensaoNaBateria
  3877  0005A6  24F3               	addwf	prodl,w,c
  3878  0005A8  6ED9               	movwf	fsr2l,c
  3879  0005AA  0E00               	movlw	high _tensaoNaBateria
  3880  0005AC  20F4               	addwfc	prodh,w,c
  3881  0005AE  6EDA               	movwf	fsr2h,c
  3882  0005B0  C024  FFDE         	movff	?___ftdiv,postinc2
  3883  0005B4  C025  FFDE         	movff	?___ftdiv+1,postinc2
  3884  0005B8  C026  FFDE         	movff	?___ftdiv+2,postinc2
  3885                           
  3886                           ;aplicacao.c: 152: correnteNaBateria[contador] = ((((5.0 * lerAdcAn1()) / 1023) - tensao
      +                          NaBateria[contador]) / 0.47);
  3887  0005BC  0100               	movlb	0	; () banked
  3888  0005BE  51CD               	movf	_contador& (0+255),w,b
  3889  0005C0  0D03               	mullw	3
  3890  0005C2  0ECE               	movlw	low _tensaoNaBateria
  3891  0005C4  24F3               	addwf	prodl,w,c
  3892  0005C6  6ED9               	movwf	fsr2l,c
  3893  0005C8  0E00               	movlw	high _tensaoNaBateria
  3894  0005CA  20F4               	addwfc	prodh,w,c
  3895  0005CC  6EDA               	movwf	fsr2h,c
  3896  0005CE  CFDE F033          	movff	postinc2,___ftneg@f1
  3897  0005D2  CFDE F034          	movff	postinc2,___ftneg@f1+1
  3898  0005D6  CFDD F035          	movff	postdec2,___ftneg@f1+2
  3899  0005DA  EC3C  F017         	call	___ftneg	;wreg free
  3900  0005DE  C033  F039         	movff	?___ftneg,___ftadd@f2
  3901  0005E2  C034  F03A         	movff	?___ftneg+1,___ftadd@f2+1
  3902  0005E6  C035  F03B         	movff	?___ftneg+2,___ftadd@f2+2
  3903  0005EA  0EC0               	movlw	192
  3904  0005EC  6E27               	movwf	___ftdiv@f2,c
  3905  0005EE  0E7F               	movlw	127
  3906  0005F0  6E28               	movwf	___ftdiv@f2+1,c
  3907  0005F2  0E44               	movlw	68
  3908  0005F4  6E29               	movwf	___ftdiv@f2+2,c
  3909  0005F6  0E00               	movlw	0
  3910  0005F8  6E18               	movwf	___ftmul@f2,c
  3911  0005FA  0EA0               	movlw	160
  3912  0005FC  6E19               	movwf	___ftmul@f2+1,c
  3913  0005FE  0E40               	movlw	64
  3914  000600  6E1A               	movwf	___ftmul@f2+2,c
  3915  000602  EC73  F016         	call	_lerAdcAn1	;wreg free
  3916  000606  C001  F009         	movff	?_lerAdcAn1,___awtoft@c
  3917  00060A  C002  F00A         	movff	?_lerAdcAn1+1,___awtoft@c+1
  3918  00060E  ECCB  F016         	call	___awtoft	;wreg free
  3919  000612  C009  F015         	movff	?___awtoft,___ftmul@f1
  3920  000616  C00A  F016         	movff	?___awtoft+1,___ftmul@f1+1
  3921  00061A  C00B  F017         	movff	?___awtoft+2,___ftmul@f1+2
  3922  00061E  EC82  F011         	call	___ftmul	;wreg free
  3923  000622  C015  F024         	movff	?___ftmul,___ftdiv@f1
  3924  000626  C016  F025         	movff	?___ftmul+1,___ftdiv@f1+1
  3925  00062A  C017  F026         	movff	?___ftmul+2,___ftdiv@f1+2
  3926  00062E  ECEE  F012         	call	___ftdiv	;wreg free
  3927  000632  C024  F036         	movff	?___ftdiv,___ftadd@f1
  3928  000636  C025  F037         	movff	?___ftdiv+1,___ftadd@f1+1
  3929  00063A  C026  F038         	movff	?___ftdiv+2,___ftadd@f1+2
  3930  00063E  EC7F  F00F         	call	___ftadd	;wreg free
  3931  000642  C036  F0AB         	movff	?___ftadd,_tratamento$1511
  3932  000646  C037  F0AC         	movff	?___ftadd+1,_tratamento$1511+1
  3933  00064A  C038  F0AD         	movff	?___ftadd+2,_tratamento$1511+2
  3934                           
  3935                           ;aplicacao.c: 152: correnteNaBateria[contador] = ((((5.0 * lerAdcAn1()) / 1023) - tensao
      +                          NaBateria[contador]) / 0.47);
  3936  00064E  C0AB  F024         	movff	_tratamento$1511,___ftdiv@f1
  3937  000652  C0AC  F025         	movff	_tratamento$1511+1,___ftdiv@f1+1
  3938  000656  C0AD  F026         	movff	_tratamento$1511+2,___ftdiv@f1+2
  3939  00065A  0EA4               	movlw	164
  3940  00065C  6E27               	movwf	___ftdiv@f2,c
  3941  00065E  0EF0               	movlw	240
  3942  000660  6E28               	movwf	___ftdiv@f2+1,c
  3943  000662  0E3E               	movlw	62
  3944  000664  6E29               	movwf	___ftdiv@f2+2,c
  3945  000666  ECEE  F012         	call	___ftdiv	;wreg free
  3946  00066A  0100               	movlb	0	; () banked
  3947  00066C  51CD               	movf	_contador& (0+255),w,b
  3948  00066E  0D03               	mullw	3
  3949  000670  0EB7               	movlw	low _correnteNaBateria
  3950  000672  24F3               	addwf	prodl,w,c
  3951  000674  6ED9               	movwf	fsr2l,c
  3952  000676  0E00               	movlw	high _correnteNaBateria
  3953  000678  20F4               	addwfc	prodh,w,c
  3954  00067A  6EDA               	movwf	fsr2h,c
  3955  00067C  C024  FFDE         	movff	?___ftdiv,postinc2
  3956  000680  C025  FFDE         	movff	?___ftdiv+1,postinc2
  3957  000684  C026  FFDE         	movff	?___ftdiv+2,postinc2
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;aplicacao.c: 154: escreverStringUart("\nCarregamento: Habilitado | Descarregamento: Des
      +                          abilitado | Teste: ");
  3961  000688  0E21               	movlw	low STR_7
  3962  00068A  6E79               	movwf	i2escreverStringUart@string,c
  3963  00068C  0EFC               	movlw	high STR_7
  3964  00068E  6E7A               	movwf	i2escreverStringUart@string+1,c
  3965  000690  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3966                           
  3967                           ;aplicacao.c: 155: escreverStringUart(converterIntParaString(contador + 1));
  3968  000694  0E01               	movlw	1
  3969  000696  0100               	movlb	0	; () banked
  3970  000698  25CD               	addwf	_contador& (0+255),w,b
  3971  00069A  6E6C               	movwf	converterIntParaString@valorParaSerConvertido,c
  3972  00069C  6A6D               	clrf	converterIntParaString@valorParaSerConvertido+1,c
  3973  00069E  0E00               	movlw	0
  3974  0006A0  226D               	addwfc	converterIntParaString@valorParaSerConvertido+1,f,c
  3975  0006A2  EC4E  F017         	call	_converterIntParaString	;wreg free
  3976  0006A6  0100               	movlb	0	; () banked
  3977  0006A8  6F84               	movwf	??_tratamento& (0+255),b
  3978  0006AA  6B85               	clrf	(??_tratamento+1)& (0+255),b
  3979  0006AC  C084  F079         	movff	??_tratamento,i2escreverStringUart@string
  3980  0006B0  C085  F07A         	movff	??_tratamento+1,i2escreverStringUart@string+1
  3981  0006B4  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3982                           
  3983                           ;aplicacao.c: 156: escreverStringUart(" | ");
  3984  0006B8  0EE7               	movlw	low (STR_10+2)
  3985  0006BA  6E79               	movwf	i2escreverStringUart@string,c
  3986  0006BC  0EFF               	movlw	high (STR_10+2)
  3987  0006BE  6E7A               	movwf	i2escreverStringUart@string+1,c
  3988  0006C0  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3989                           
  3990                           ;aplicacao.c: 157: escreverStringUart("Tensao: ");
  3991  0006C4  0EDC               	movlw	low STR_9
  3992  0006C6  6E79               	movwf	i2escreverStringUart@string,c
  3993  0006C8  0EFF               	movlw	high STR_9
  3994  0006CA  6E7A               	movwf	i2escreverStringUart@string+1,c
  3995  0006CC  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  3996                           
  3997                           ;aplicacao.c: 158: escreverStringUart(converterFloatParaString(tensaoNaBateria[contador]
      +                          ));
  3998  0006D0  0100               	movlb	0	; () banked
  3999  0006D2  51CD               	movf	_contador& (0+255),w,b
  4000  0006D4  0D03               	mullw	3
  4001  0006D6  0ECE               	movlw	low _tensaoNaBateria
  4002  0006D8  24F3               	addwf	prodl,w,c
  4003  0006DA  6ED9               	movwf	fsr2l,c
  4004  0006DC  0E00               	movlw	high _tensaoNaBateria
  4005  0006DE  20F4               	addwfc	prodh,w,c
  4006  0006E0  6EDA               	movwf	fsr2h,c
  4007  0006E2  CFDE F06C          	movff	postinc2,converterFloatParaString@valorParaSerConvertido
  4008  0006E6  CFDE F06D          	movff	postinc2,converterFloatParaString@valorParaSerConvertido+1
  4009  0006EA  CFDD F06E          	movff	postdec2,converterFloatParaString@valorParaSerConvertido+2
  4010  0006EE  EC2A  F017         	call	_converterFloatParaString	;wreg free
  4011  0006F2  0100               	movlb	0	; () banked
  4012  0006F4  6F84               	movwf	??_tratamento& (0+255),b
  4013  0006F6  6B85               	clrf	(??_tratamento+1)& (0+255),b
  4014  0006F8  C084  F079         	movff	??_tratamento,i2escreverStringUart@string
  4015  0006FC  C085  F07A         	movff	??_tratamento+1,i2escreverStringUart@string+1
  4016  000700  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4017                           
  4018                           ;aplicacao.c: 159: escreverStringUart(" V | ");
  4019  000704  0EE5               	movlw	low STR_10
  4020  000706  6E79               	movwf	i2escreverStringUart@string,c
  4021  000708  0EFF               	movlw	high STR_10
  4022  00070A  6E7A               	movwf	i2escreverStringUart@string+1,c
  4023  00070C  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4024                           
  4025                           ;aplicacao.c: 160: escreverStringUart("Corrente: ");
  4026  000710  0ED1               	movlw	low STR_11
  4027  000712  6E79               	movwf	i2escreverStringUart@string,c
  4028  000714  0EFF               	movlw	high STR_11
  4029  000716  6E7A               	movwf	i2escreverStringUart@string+1,c
  4030  000718  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4031                           
  4032                           ;aplicacao.c: 161: escreverStringUart(converterFloatParaString(correnteNaBateria[contado
      +                          r]));
  4033  00071C  0100               	movlb	0	; () banked
  4034  00071E  51CD               	movf	_contador& (0+255),w,b
  4035  000720  0D03               	mullw	3
  4036  000722  0EB7               	movlw	low _correnteNaBateria
  4037  000724  24F3               	addwf	prodl,w,c
  4038  000726  6ED9               	movwf	fsr2l,c
  4039  000728  0E00               	movlw	high _correnteNaBateria
  4040  00072A  20F4               	addwfc	prodh,w,c
  4041  00072C  6EDA               	movwf	fsr2h,c
  4042  00072E  CFDE F06C          	movff	postinc2,converterFloatParaString@valorParaSerConvertido
  4043  000732  CFDE F06D          	movff	postinc2,converterFloatParaString@valorParaSerConvertido+1
  4044  000736  CFDD F06E          	movff	postdec2,converterFloatParaString@valorParaSerConvertido+2
  4045  00073A  EC2A  F017         	call	_converterFloatParaString	;wreg free
  4046  00073E  0100               	movlb	0	; () banked
  4047  000740  6F84               	movwf	??_tratamento& (0+255),b
  4048  000742  6B85               	clrf	(??_tratamento+1)& (0+255),b
  4049  000744  C084  F079         	movff	??_tratamento,i2escreverStringUart@string
  4050  000748  C085  F07A         	movff	??_tratamento+1,i2escreverStringUart@string+1
  4051  00074C  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4052                           
  4053                           ;aplicacao.c: 162: escreverStringUart(" A");
  4054  000750  0EF3               	movlw	low STR_12
  4055  000752  6E79               	movwf	i2escreverStringUart@string,c
  4056  000754  0EFF               	movlw	high STR_12
  4057  000756  6E7A               	movwf	i2escreverStringUart@string+1,c
  4058  000758  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4059                           
  4060                           ;aplicacao.c: 164: contador++;
  4061  00075C  0100               	movlb	0	; () banked
  4062  00075E  2BCD               	incf	_contador& (0+255),f,b
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;aplicacao.c: 166: if(tempoEmSegundos == 40) {
  4066  000760  0E28               	movlw	40
  4067  000762  0100               	movlb	0	; () banked
  4068  000764  19CC               	xorwf	_tempoEmSegundos& (0+255),w,b
  4069  000766  A4D8               	btfss	status,2,c
  4070  000768  EF5A  F008         	goto	i2l3758
  4071                           
  4072                           ; BSR set to: 0
  4073                           ;aplicacao.c: 167: contador = 0;
  4074  00076C  0E00               	movlw	0
  4075  00076E  0100               	movlb	0	; () banked
  4076  000770  6FCD               	movwf	_contador& (0+255),b
  4077                           
  4078                           ;aplicacao.c: 168: tempoEmSegundos = 0;
  4079  000772  0E00               	movlw	0
  4080  000774  0100               	movlb	0	; () banked
  4081  000776  6FCC               	movwf	_tempoEmSegundos& (0+255),b
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;aplicacao.c: 170: float tensaoMedia = (( tensaoNaBateria[0] + tensaoNaBateria[1] + tens
      +                          aoNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4] ) / 5);
  4085  000778  C0D4  F039         	movff	_tensaoNaBateria+6,___ftadd@f2
  4086  00077C  C0D5  F03A         	movff	_tensaoNaBateria+7,___ftadd@f2+1
  4087  000780  C0D6  F03B         	movff	_tensaoNaBateria+8,___ftadd@f2+2
  4088  000784  C0D1  F036         	movff	_tensaoNaBateria+3,___ftadd@f1
  4089  000788  C0D2  F037         	movff	_tensaoNaBateria+4,___ftadd@f1+1
  4090  00078C  C0D3  F038         	movff	_tensaoNaBateria+5,___ftadd@f1+2
  4091  000790  EC7F  F00F         	call	___ftadd	;wreg free
  4092  000794  C036  F0AE         	movff	?___ftadd,_tratamento$1512
  4093  000798  C037  F0AF         	movff	?___ftadd+1,_tratamento$1512+1
  4094  00079C  C038  F0B0         	movff	?___ftadd+2,_tratamento$1512+2
  4095                           
  4096                           ;aplicacao.c: 170: float tensaoMedia = (( tensaoNaBateria[0] + tensaoNaBateria[1] + tens
      +                          aoNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4] ) / 5);
  4097  0007A0  C0D7  F039         	movff	_tensaoNaBateria+9,___ftadd@f2
  4098  0007A4  C0D8  F03A         	movff	_tensaoNaBateria+10,___ftadd@f2+1
  4099  0007A8  C0D9  F03B         	movff	_tensaoNaBateria+11,___ftadd@f2+2
  4100  0007AC  C0AE  F036         	movff	_tratamento$1512,___ftadd@f1
  4101  0007B0  C0AF  F037         	movff	_tratamento$1512+1,___ftadd@f1+1
  4102  0007B4  C0B0  F038         	movff	_tratamento$1512+2,___ftadd@f1+2
  4103  0007B8  EC7F  F00F         	call	___ftadd	;wreg free
  4104  0007BC  C036  F0B1         	movff	?___ftadd,_tratamento$1513
  4105  0007C0  C037  F0B2         	movff	?___ftadd+1,_tratamento$1513+1
  4106  0007C4  C038  F0B3         	movff	?___ftadd+2,_tratamento$1513+2
  4107                           
  4108                           ;aplicacao.c: 170: float tensaoMedia = (( tensaoNaBateria[0] + tensaoNaBateria[1] + tens
      +                          aoNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4] ) / 5);
  4109  0007C8  C0DA  F039         	movff	_tensaoNaBateria+12,___ftadd@f2
  4110  0007CC  C0DB  F03A         	movff	_tensaoNaBateria+13,___ftadd@f2+1
  4111  0007D0  C0DC  F03B         	movff	_tensaoNaBateria+14,___ftadd@f2+2
  4112  0007D4  C0B1  F036         	movff	_tratamento$1513,___ftadd@f1
  4113  0007D8  C0B2  F037         	movff	_tratamento$1513+1,___ftadd@f1+1
  4114  0007DC  C0B3  F038         	movff	_tratamento$1513+2,___ftadd@f1+2
  4115  0007E0  EC7F  F00F         	call	___ftadd	;wreg free
  4116  0007E4  C036  F0B4         	movff	?___ftadd,_tratamento$1514
  4117  0007E8  C037  F0B5         	movff	?___ftadd+1,_tratamento$1514+1
  4118  0007EC  C038  F0B6         	movff	?___ftadd+2,_tratamento$1514+2
  4119                           
  4120                           ;aplicacao.c: 170: float tensaoMedia = (( tensaoNaBateria[0] + tensaoNaBateria[1] + tens
      +                          aoNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4] ) / 5);
  4121  0007F0  C0CE  F039         	movff	_tensaoNaBateria,___ftadd@f2
  4122  0007F4  C0CF  F03A         	movff	_tensaoNaBateria+1,___ftadd@f2+1
  4123  0007F8  C0D0  F03B         	movff	_tensaoNaBateria+2,___ftadd@f2+2
  4124  0007FC  C0B4  F036         	movff	_tratamento$1514,___ftadd@f1
  4125  000800  C0B5  F037         	movff	_tratamento$1514+1,___ftadd@f1+1
  4126  000804  C0B6  F038         	movff	_tratamento$1514+2,___ftadd@f1+2
  4127  000808  EC7F  F00F         	call	___ftadd	;wreg free
  4128  00080C  C036  F024         	movff	?___ftadd,___ftdiv@f1
  4129  000810  C037  F025         	movff	?___ftadd+1,___ftdiv@f1+1
  4130  000814  C038  F026         	movff	?___ftadd+2,___ftdiv@f1+2
  4131  000818  0E00               	movlw	0
  4132  00081A  6E27               	movwf	___ftdiv@f2,c
  4133  00081C  0EA0               	movlw	160
  4134  00081E  6E28               	movwf	___ftdiv@f2+1,c
  4135  000820  0E40               	movlw	64
  4136  000822  6E29               	movwf	___ftdiv@f2+2,c
  4137  000824  ECEE  F012         	call	___ftdiv	;wreg free
  4138  000828  C024  F0A2         	movff	?___ftdiv,tratamento@tensaoMedia_774
  4139  00082C  C025  F0A3         	movff	?___ftdiv+1,tratamento@tensaoMedia_774+1
  4140  000830  C026  F0A4         	movff	?___ftdiv+2,tratamento@tensaoMedia_774+2
  4141                           
  4142                           ;aplicacao.c: 172: escreverStringUart("\nTensao Media: ");
  4143  000834  0EB1               	movlw	low STR_27
  4144  000836  6E79               	movwf	i2escreverStringUart@string,c
  4145  000838  0EFF               	movlw	high STR_27
  4146  00083A  6E7A               	movwf	i2escreverStringUart@string+1,c
  4147  00083C  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4148                           
  4149                           ;aplicacao.c: 173: escreverStringUart(converterFloatParaString(tensaoMedia));
  4150  000840  C0A2  F06C         	movff	tratamento@tensaoMedia_774,converterFloatParaString@valorParaSerConvertido
  4151  000844  C0A3  F06D         	movff	tratamento@tensaoMedia_774+1,converterFloatParaString@valorParaSerConvertido+1
  4152  000848  C0A4  F06E         	movff	tratamento@tensaoMedia_774+2,converterFloatParaString@valorParaSerConvertido+2
  4153  00084C  EC2A  F017         	call	_converterFloatParaString	;wreg free
  4154  000850  0100               	movlb	0	; () banked
  4155  000852  6F84               	movwf	??_tratamento& (0+255),b
  4156  000854  6B85               	clrf	(??_tratamento+1)& (0+255),b
  4157  000856  C084  F079         	movff	??_tratamento,i2escreverStringUart@string
  4158  00085A  C085  F07A         	movff	??_tratamento+1,i2escreverStringUart@string+1
  4159  00085E  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4160                           
  4161                           ;aplicacao.c: 174: escreverStringUart(" V\n");
  4162  000862  0EEF               	movlw	low STR_28
  4163  000864  6E79               	movwf	i2escreverStringUart@string,c
  4164  000866  0EFF               	movlw	high STR_28
  4165  000868  6E7A               	movwf	i2escreverStringUart@string+1,c
  4166  00086A  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4167                           
  4168                           ;aplicacao.c: 175: if( (tensaoMedia >= 3.2) && (tensaoMedia <= 4.3) ) {
  4169  00086E  C0A2  F015         	movff	tratamento@tensaoMedia_774,___ftge@ff1
  4170  000872  C0A3  F016         	movff	tratamento@tensaoMedia_774+1,___ftge@ff1+1
  4171  000876  C0A4  F017         	movff	tratamento@tensaoMedia_774+2,___ftge@ff1+2
  4172  00087A  0ECD               	movlw	205
  4173  00087C  6E18               	movwf	___ftge@ff2,c
  4174  00087E  0E4C               	movlw	76
  4175  000880  6E19               	movwf	___ftge@ff2+1,c
  4176  000882  0E40               	movlw	64
  4177  000884  6E1A               	movwf	___ftge@ff2+2,c
  4178  000886  EC59  F014         	call	___ftge	;wreg free
  4179  00088A  A0D8               	btfss	status,0,c
  4180  00088C  D01A               	goto	i2l3582
  4181  00088E  0E9A               	movlw	154
  4182  000890  6E15               	movwf	___ftge@ff1,c
  4183  000892  0E89               	movlw	137
  4184  000894  6E16               	movwf	___ftge@ff1+1,c
  4185  000896  0E40               	movlw	64
  4186  000898  6E17               	movwf	___ftge@ff1+2,c
  4187  00089A  C0A2  F018         	movff	tratamento@tensaoMedia_774,___ftge@ff2
  4188  00089E  C0A3  F019         	movff	tratamento@tensaoMedia_774+1,___ftge@ff2+1
  4189  0008A2  C0A4  F01A         	movff	tratamento@tensaoMedia_774+2,___ftge@ff2+2
  4190  0008A6  EC59  F014         	call	___ftge	;wreg free
  4191  0008AA  A0D8               	btfss	status,0,c
  4192  0008AC  D00A               	goto	i2l3582
  4193                           
  4194                           ;aplicacao.c: 176: resultadoDosTestes[1] = 1;
  4195  0008AE  0E01               	movlw	1
  4196  0008B0  0100               	movlb	0	; () banked
  4197  0008B2  6FC7               	movwf	(_resultadoDosTestes+1)& (0+255),b
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;aplicacao.c: 177: escreverStringUart("Teste de Tensao no Carregamento: OK\n");
  4201  0008B4  0E66               	movlw	low STR_29
  4202  0008B6  6E79               	movwf	i2escreverStringUart@string,c
  4203  0008B8  0EFE               	movlw	high STR_29
  4204  0008BA  6E7A               	movwf	i2escreverStringUart@string+1,c
  4205  0008BC  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4206                           
  4207                           ;aplicacao.c: 178: }
  4208  0008C0  D009               	goto	i2l3586
  4209  0008C2                     i2l3582:
  4210                           
  4211                           ;aplicacao.c: 179: else {
  4212                           ;aplicacao.c: 180: resultadoDosTestes[1] = 0;
  4213  0008C2  0E00               	movlw	0
  4214  0008C4  0100               	movlb	0	; () banked
  4215  0008C6  6FC7               	movwf	(_resultadoDosTestes+1)& (0+255),b
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;aplicacao.c: 181: escreverStringUart("Teste de Tensao no Carregamento: NOK\n");
  4219  0008C8  0E1A               	movlw	low STR_30
  4220  0008CA  6E79               	movwf	i2escreverStringUart@string,c
  4221  0008CC  0EFE               	movlw	high STR_30
  4222  0008CE  6E7A               	movwf	i2escreverStringUart@string+1,c
  4223  0008D0  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4224  0008D4                     i2l3586:
  4225                           
  4226                           ;aplicacao.c: 182: }
  4227                           ;aplicacao.c: 184: float correnteMedia = (( correnteNaBateria[0] + correnteNaBateria[1] 
      +                          + correnteNaBateria[2] + correnteNaBateria[3] + correnteNaBateria[4] ) / 5);
  4228  0008D4  C0BD  F039         	movff	_correnteNaBateria+6,___ftadd@f2
  4229  0008D8  C0BE  F03A         	movff	_correnteNaBateria+7,___ftadd@f2+1
  4230  0008DC  C0BF  F03B         	movff	_correnteNaBateria+8,___ftadd@f2+2
  4231  0008E0  C0BA  F036         	movff	_correnteNaBateria+3,___ftadd@f1
  4232  0008E4  C0BB  F037         	movff	_correnteNaBateria+4,___ftadd@f1+1
  4233  0008E8  C0BC  F038         	movff	_correnteNaBateria+5,___ftadd@f1+2
  4234  0008EC  EC7F  F00F         	call	___ftadd	;wreg free
  4235  0008F0  C036  F0AE         	movff	?___ftadd,_tratamento$1512
  4236  0008F4  C037  F0AF         	movff	?___ftadd+1,_tratamento$1512+1
  4237  0008F8  C038  F0B0         	movff	?___ftadd+2,_tratamento$1512+2
  4238                           
  4239                           ;aplicacao.c: 182: }
  4240                           ;aplicacao.c: 184: float correnteMedia = (( correnteNaBateria[0] + correnteNaBateria[1] 
      +                          + correnteNaBateria[2] + correnteNaBateria[3] + correnteNaBateria[4] ) / 5);
  4241  0008FC  C0C0  F039         	movff	_correnteNaBateria+9,___ftadd@f2
  4242  000900  C0C1  F03A         	movff	_correnteNaBateria+10,___ftadd@f2+1
  4243  000904  C0C2  F03B         	movff	_correnteNaBateria+11,___ftadd@f2+2
  4244  000908  C0AE  F036         	movff	_tratamento$1512,___ftadd@f1
  4245  00090C  C0AF  F037         	movff	_tratamento$1512+1,___ftadd@f1+1
  4246  000910  C0B0  F038         	movff	_tratamento$1512+2,___ftadd@f1+2
  4247  000914  EC7F  F00F         	call	___ftadd	;wreg free
  4248  000918  C036  F0B1         	movff	?___ftadd,_tratamento$1513
  4249  00091C  C037  F0B2         	movff	?___ftadd+1,_tratamento$1513+1
  4250  000920  C038  F0B3         	movff	?___ftadd+2,_tratamento$1513+2
  4251                           
  4252                           ;aplicacao.c: 182: }
  4253                           ;aplicacao.c: 184: float correnteMedia = (( correnteNaBateria[0] + correnteNaBateria[1] 
      +                          + correnteNaBateria[2] + correnteNaBateria[3] + correnteNaBateria[4] ) / 5);
  4254  000924  C0C3  F039         	movff	_correnteNaBateria+12,___ftadd@f2
  4255  000928  C0C4  F03A         	movff	_correnteNaBateria+13,___ftadd@f2+1
  4256  00092C  C0C5  F03B         	movff	_correnteNaBateria+14,___ftadd@f2+2
  4257  000930  C0B1  F036         	movff	_tratamento$1513,___ftadd@f1
  4258  000934  C0B2  F037         	movff	_tratamento$1513+1,___ftadd@f1+1
  4259  000938  C0B3  F038         	movff	_tratamento$1513+2,___ftadd@f1+2
  4260  00093C  EC7F  F00F         	call	___ftadd	;wreg free
  4261  000940  C036  F0B4         	movff	?___ftadd,_tratamento$1514
  4262  000944  C037  F0B5         	movff	?___ftadd+1,_tratamento$1514+1
  4263  000948  C038  F0B6         	movff	?___ftadd+2,_tratamento$1514+2
  4264                           
  4265                           ;aplicacao.c: 182: }
  4266                           ;aplicacao.c: 184: float correnteMedia = (( correnteNaBateria[0] + correnteNaBateria[1] 
      +                          + correnteNaBateria[2] + correnteNaBateria[3] + correnteNaBateria[4] ) / 5);
  4267  00094C  C0B7  F039         	movff	_correnteNaBateria,___ftadd@f2
  4268  000950  C0B8  F03A         	movff	_correnteNaBateria+1,___ftadd@f2+1
  4269  000954  C0B9  F03B         	movff	_correnteNaBateria+2,___ftadd@f2+2
  4270  000958  C0B4  F036         	movff	_tratamento$1514,___ftadd@f1
  4271  00095C  C0B5  F037         	movff	_tratamento$1514+1,___ftadd@f1+1
  4272  000960  C0B6  F038         	movff	_tratamento$1514+2,___ftadd@f1+2
  4273  000964  EC7F  F00F         	call	___ftadd	;wreg free
  4274  000968  C036  F024         	movff	?___ftadd,___ftdiv@f1
  4275  00096C  C037  F025         	movff	?___ftadd+1,___ftdiv@f1+1
  4276  000970  C038  F026         	movff	?___ftadd+2,___ftdiv@f1+2
  4277  000974  0E00               	movlw	0
  4278  000976  6E27               	movwf	___ftdiv@f2,c
  4279  000978  0EA0               	movlw	160
  4280  00097A  6E28               	movwf	___ftdiv@f2+1,c
  4281  00097C  0E40               	movlw	64
  4282  00097E  6E29               	movwf	___ftdiv@f2+2,c
  4283  000980  ECEE  F012         	call	___ftdiv	;wreg free
  4284  000984  C024  F0A5         	movff	?___ftdiv,tratamento@correnteMedia_779
  4285  000988  C025  F0A6         	movff	?___ftdiv+1,tratamento@correnteMedia_779+1
  4286  00098C  C026  F0A7         	movff	?___ftdiv+2,tratamento@correnteMedia_779+2
  4287                           
  4288                           ;aplicacao.c: 185: escreverStringUart("Corrente Media: ");
  4289  000990  0EA0               	movlw	low STR_31
  4290  000992  6E79               	movwf	i2escreverStringUart@string,c
  4291  000994  0EFF               	movlw	high STR_31
  4292  000996  6E7A               	movwf	i2escreverStringUart@string+1,c
  4293  000998  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4294                           
  4295                           ;aplicacao.c: 186: escreverStringUart(converterFloatParaString(correnteMedia));
  4296  00099C  C0A5  F06C         	movff	tratamento@correnteMedia_779,converterFloatParaString@valorParaSerConvertido
  4297  0009A0  C0A6  F06D         	movff	tratamento@correnteMedia_779+1,converterFloatParaString@valorParaSerConvertido+1
  4298  0009A4  C0A7  F06E         	movff	tratamento@correnteMedia_779+2,converterFloatParaString@valorParaSerConvertido+2
  4299  0009A8  EC2A  F017         	call	_converterFloatParaString	;wreg free
  4300  0009AC  0100               	movlb	0	; () banked
  4301  0009AE  6F84               	movwf	??_tratamento& (0+255),b
  4302  0009B0  6B85               	clrf	(??_tratamento+1)& (0+255),b
  4303  0009B2  C084  F079         	movff	??_tratamento,i2escreverStringUart@string
  4304  0009B6  C085  F07A         	movff	??_tratamento+1,i2escreverStringUart@string+1
  4305  0009BA  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4306                           
  4307                           ;aplicacao.c: 187: escreverStringUart(" A\n");
  4308  0009BE  0EEB               	movlw	low STR_32
  4309  0009C0  6E79               	movwf	i2escreverStringUart@string,c
  4310  0009C2  0EFF               	movlw	high STR_32
  4311  0009C4  6E7A               	movwf	i2escreverStringUart@string+1,c
  4312  0009C6  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4313                           
  4314                           ;aplicacao.c: 188: if( (correnteMedia >= 0.200) && (correnteMedia <= 0.350) ) {
  4315  0009CA  C0A5  F015         	movff	tratamento@correnteMedia_779,___ftge@ff1
  4316  0009CE  C0A6  F016         	movff	tratamento@correnteMedia_779+1,___ftge@ff1+1
  4317  0009D2  C0A7  F017         	movff	tratamento@correnteMedia_779+2,___ftge@ff1+2
  4318  0009D6  0ECD               	movlw	205
  4319  0009D8  6E18               	movwf	___ftge@ff2,c
  4320  0009DA  0E4C               	movlw	76
  4321  0009DC  6E19               	movwf	___ftge@ff2+1,c
  4322  0009DE  0E3E               	movlw	62
  4323  0009E0  6E1A               	movwf	___ftge@ff2+2,c
  4324  0009E2  EC59  F014         	call	___ftge	;wreg free
  4325  0009E6  A0D8               	btfss	status,0,c
  4326  0009E8  D01A               	goto	i2l3608
  4327  0009EA  0E33               	movlw	51
  4328  0009EC  6E15               	movwf	___ftge@ff1,c
  4329  0009EE  0EB3               	movlw	179
  4330  0009F0  6E16               	movwf	___ftge@ff1+1,c
  4331  0009F2  0E3E               	movlw	62
  4332  0009F4  6E17               	movwf	___ftge@ff1+2,c
  4333  0009F6  C0A5  F018         	movff	tratamento@correnteMedia_779,___ftge@ff2
  4334  0009FA  C0A6  F019         	movff	tratamento@correnteMedia_779+1,___ftge@ff2+1
  4335  0009FE  C0A7  F01A         	movff	tratamento@correnteMedia_779+2,___ftge@ff2+2
  4336  000A02  EC59  F014         	call	___ftge	;wreg free
  4337  000A06  A0D8               	btfss	status,0,c
  4338  000A08  D00A               	goto	i2l3608
  4339                           
  4340                           ;aplicacao.c: 189: resultadoDosTestes[2] = 1;
  4341  000A0A  0E01               	movlw	1
  4342  000A0C  0100               	movlb	0	; () banked
  4343  000A0E  6FC8               	movwf	(_resultadoDosTestes+2)& (0+255),b
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;aplicacao.c: 190: escreverStringUart("Teste de Corrente no Carregamento: OK\n");
  4347  000A10  0EF3               	movlw	low STR_33
  4348  000A12  6E79               	movwf	i2escreverStringUart@string,c
  4349  000A14  0EFD               	movlw	high STR_33
  4350  000A16  6E7A               	movwf	i2escreverStringUart@string+1,c
  4351  000A18  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4352                           
  4353                           ;aplicacao.c: 191: }
  4354  000A1C  D009               	goto	i2l3612
  4355  000A1E                     i2l3608:
  4356                           
  4357                           ;aplicacao.c: 192: else {
  4358                           ;aplicacao.c: 193: resultadoDosTestes[2] = 0;
  4359  000A1E  0E00               	movlw	0
  4360  000A20  0100               	movlb	0	; () banked
  4361  000A22  6FC8               	movwf	(_resultadoDosTestes+2)& (0+255),b
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;aplicacao.c: 194: escreverStringUart("Teste de Corrente no Carregamento: NOK\n");
  4365  000A24  0ECB               	movlw	low STR_34
  4366  000A26  6E79               	movwf	i2escreverStringUart@string,c
  4367  000A28  0EFD               	movlw	high STR_34
  4368  000A2A  6E7A               	movwf	i2escreverStringUart@string+1,c
  4369  000A2C  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4370  000A30                     i2l3612:
  4371                           
  4372                           ;aplicacao.c: 195: }
  4373                           ;aplicacao.c: 197: if((resultadoDosTestes[1] == 1) && resultadoDosTestes[2] == 1) {
  4374  000A30  0100               	movlb	0	; () banked
  4375  000A32  05C7               	decf	(_resultadoDosTestes+1)& (0+255),w,b
  4376  000A34  A4D8               	btfss	status,2,c
  4377  000A36  D00E               	goto	i2l3620
  4378                           
  4379                           ; BSR set to: 0
  4380  000A38  0100               	movlb	0	; () banked
  4381  000A3A  05C8               	decf	(_resultadoDosTestes+2)& (0+255),w,b
  4382  000A3C  A4D8               	btfss	status,2,c
  4383  000A3E  D00A               	goto	i2l3620
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;aplicacao.c: 198: statusDaBateria = 2;
  4387  000A40  0E02               	movlw	2
  4388  000A42  0100               	movlb	0	; () banked
  4389  000A44  6FCB               	movwf	_statusDaBateria& (0+255),b
  4390                           
  4391                           ; BSR set to: 0
  4392                           ;aplicacao.c: 199: escreverStringUart("\nTeste de Descarregamento Habilitado!");
  4393  000A46  0E40               	movlw	low STR_35
  4394  000A48  6E79               	movwf	i2escreverStringUart@string,c
  4395  000A4A  0EFE               	movlw	high STR_35
  4396  000A4C  6E7A               	movwf	i2escreverStringUart@string+1,c
  4397  000A4E  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4398                           
  4399                           ;aplicacao.c: 200: }
  4400  000A52  D330               	goto	i2l3758
  4401  000A54                     i2l3620:
  4402                           
  4403                           ;aplicacao.c: 201: else {
  4404                           ;aplicacao.c: 202: escreverStringUart("\nTeste de Descarregamento nao Habilitado!\n");
  4405  000A54  0ED1               	movlw	low STR_36
  4406  000A56  6E79               	movwf	i2escreverStringUart@string,c
  4407  000A58  0EFC               	movlw	high STR_36
  4408  000A5A  6E7A               	movwf	i2escreverStringUart@string+1,c
  4409  000A5C  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4410  000A60  D2C6               	goto	i2l3724
  4411  000A62                     i2l3624:
  4412                           
  4413                           ; BSR set to: 0
  4414                           ;aplicacao.c: 210: else if(statusDaBateria == 2) {
  4415  000A62  0E02               	movlw	2
  4416  000A64  0100               	movlb	0	; () banked
  4417  000A66  19CB               	xorwf	_statusDaBateria& (0+255),w,b
  4418  000A68  A4D8               	btfss	status,2,c
  4419  000A6A  D2C4               	goto	i2l3726
  4420                           
  4421                           ; BSR set to: 0
  4422                           ;aplicacao.c: 211: desabilitarCarregamentoDaBateria();
  4423  000A6C  ECAF  F017         	call	i2_desabilitarCarregamentoDaBateria	;wreg free
  4424                           
  4425                           ;aplicacao.c: 212: habilitarDescarregamentoDaBateria();
  4426  000A70  ECCF  F017         	call	_habilitarDescarregamentoDaBateria	;wreg free
  4427                           
  4428                           ;aplicacao.c: 213: tempoEmSegundos++;
  4429  000A74  0100               	movlb	0	; () banked
  4430  000A76  2BCC               	incf	_tempoEmSegundos& (0+255),f,b
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;aplicacao.c: 215: tensaoNaBateria[contador] = ((5.0 * lerAdcAn0()) / 1023);
  4434  000A78  0E00               	movlw	0
  4435  000A7A  6E18               	movwf	___ftmul@f2,c
  4436  000A7C  0EA0               	movlw	160
  4437  000A7E  6E19               	movwf	___ftmul@f2+1,c
  4438  000A80  0E40               	movlw	64
  4439  000A82  6E1A               	movwf	___ftmul@f2+2,c
  4440  000A84  EC91  F016         	call	_lerAdcAn0	;wreg free
  4441  000A88  C001  F009         	movff	?_lerAdcAn0,___awtoft@c
  4442  000A8C  C002  F00A         	movff	?_lerAdcAn0+1,___awtoft@c+1
  4443  000A90  ECCB  F016         	call	___awtoft	;wreg free
  4444  000A94  C009  F015         	movff	?___awtoft,___ftmul@f1
  4445  000A98  C00A  F016         	movff	?___awtoft+1,___ftmul@f1+1
  4446  000A9C  C00B  F017         	movff	?___awtoft+2,___ftmul@f1+2
  4447  000AA0  EC82  F011         	call	___ftmul	;wreg free
  4448  000AA4  C015  F024         	movff	?___ftmul,___ftdiv@f1
  4449  000AA8  C016  F025         	movff	?___ftmul+1,___ftdiv@f1+1
  4450  000AAC  C017  F026         	movff	?___ftmul+2,___ftdiv@f1+2
  4451  000AB0  0EC0               	movlw	192
  4452  000AB2  6E27               	movwf	___ftdiv@f2,c
  4453  000AB4  0E7F               	movlw	127
  4454  000AB6  6E28               	movwf	___ftdiv@f2+1,c
  4455  000AB8  0E44               	movlw	68
  4456  000ABA  6E29               	movwf	___ftdiv@f2+2,c
  4457  000ABC  ECEE  F012         	call	___ftdiv	;wreg free
  4458  000AC0  0100               	movlb	0	; () banked
  4459  000AC2  51CD               	movf	_contador& (0+255),w,b
  4460  000AC4  0D03               	mullw	3
  4461  000AC6  0ECE               	movlw	low _tensaoNaBateria
  4462  000AC8  24F3               	addwf	prodl,w,c
  4463  000ACA  6ED9               	movwf	fsr2l,c
  4464  000ACC  0E00               	movlw	high _tensaoNaBateria
  4465  000ACE  20F4               	addwfc	prodh,w,c
  4466  000AD0  6EDA               	movwf	fsr2h,c
  4467  000AD2  C024  FFDE         	movff	?___ftdiv,postinc2
  4468  000AD6  C025  FFDE         	movff	?___ftdiv+1,postinc2
  4469  000ADA  C026  FFDE         	movff	?___ftdiv+2,postinc2
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;aplicacao.c: 216: correnteNaBateria[contador] = (((tensaoNaBateria[contador]) - ((5.0 *
      +                           lerAdcAn1()) / 1023)) / 0.47);
  4473  000ADE  0100               	movlb	0	; () banked
  4474  000AE0  51CD               	movf	_contador& (0+255),w,b
  4475  000AE2  0D03               	mullw	3
  4476  000AE4  0ECE               	movlw	low _tensaoNaBateria
  4477  000AE6  24F3               	addwf	prodl,w,c
  4478  000AE8  6ED9               	movwf	fsr2l,c
  4479  000AEA  0E00               	movlw	high _tensaoNaBateria
  4480  000AEC  20F4               	addwfc	prodh,w,c
  4481  000AEE  6EDA               	movwf	fsr2h,c
  4482  000AF0  CFDE F039          	movff	postinc2,___ftadd@f2
  4483  000AF4  CFDE F03A          	movff	postinc2,___ftadd@f2+1
  4484  000AF8  CFDD F03B          	movff	postdec2,___ftadd@f2+2
  4485  000AFC  0EC0               	movlw	192
  4486  000AFE  6E27               	movwf	___ftdiv@f2,c
  4487  000B00  0E7F               	movlw	127
  4488  000B02  6E28               	movwf	___ftdiv@f2+1,c
  4489  000B04  0E44               	movlw	68
  4490  000B06  6E29               	movwf	___ftdiv@f2+2,c
  4491  000B08  0E00               	movlw	0
  4492  000B0A  6E18               	movwf	___ftmul@f2,c
  4493  000B0C  0EA0               	movlw	160
  4494  000B0E  6E19               	movwf	___ftmul@f2+1,c
  4495  000B10  0E40               	movlw	64
  4496  000B12  6E1A               	movwf	___ftmul@f2+2,c
  4497  000B14  EC73  F016         	call	_lerAdcAn1	;wreg free
  4498  000B18  C001  F009         	movff	?_lerAdcAn1,___awtoft@c
  4499  000B1C  C002  F00A         	movff	?_lerAdcAn1+1,___awtoft@c+1
  4500  000B20  ECCB  F016         	call	___awtoft	;wreg free
  4501  000B24  C009  F015         	movff	?___awtoft,___ftmul@f1
  4502  000B28  C00A  F016         	movff	?___awtoft+1,___ftmul@f1+1
  4503  000B2C  C00B  F017         	movff	?___awtoft+2,___ftmul@f1+2
  4504  000B30  EC82  F011         	call	___ftmul	;wreg free
  4505  000B34  C015  F024         	movff	?___ftmul,___ftdiv@f1
  4506  000B38  C016  F025         	movff	?___ftmul+1,___ftdiv@f1+1
  4507  000B3C  C017  F026         	movff	?___ftmul+2,___ftdiv@f1+2
  4508  000B40  ECEE  F012         	call	___ftdiv	;wreg free
  4509  000B44  C024  F033         	movff	?___ftdiv,___ftneg@f1
  4510  000B48  C025  F034         	movff	?___ftdiv+1,___ftneg@f1+1
  4511  000B4C  C026  F035         	movff	?___ftdiv+2,___ftneg@f1+2
  4512  000B50  EC3C  F017         	call	___ftneg	;wreg free
  4513  000B54  C033  F036         	movff	?___ftneg,___ftadd@f1
  4514  000B58  C034  F037         	movff	?___ftneg+1,___ftadd@f1+1
  4515  000B5C  C035  F038         	movff	?___ftneg+2,___ftadd@f1+2
  4516  000B60  EC7F  F00F         	call	___ftadd	;wreg free
  4517  000B64  C036  F0AB         	movff	?___ftadd,_tratamento$1511
  4518  000B68  C037  F0AC         	movff	?___ftadd+1,_tratamento$1511+1
  4519  000B6C  C038  F0AD         	movff	?___ftadd+2,_tratamento$1511+2
  4520                           
  4521                           ;aplicacao.c: 216: correnteNaBateria[contador] = (((tensaoNaBateria[contador]) - ((5.0 *
      +                           lerAdcAn1()) / 1023)) / 0.47);
  4522  000B70  C0AB  F024         	movff	_tratamento$1511,___ftdiv@f1
  4523  000B74  C0AC  F025         	movff	_tratamento$1511+1,___ftdiv@f1+1
  4524  000B78  C0AD  F026         	movff	_tratamento$1511+2,___ftdiv@f1+2
  4525  000B7C  0EA4               	movlw	164
  4526  000B7E  6E27               	movwf	___ftdiv@f2,c
  4527  000B80  0EF0               	movlw	240
  4528  000B82  6E28               	movwf	___ftdiv@f2+1,c
  4529  000B84  0E3E               	movlw	62
  4530  000B86  6E29               	movwf	___ftdiv@f2+2,c
  4531  000B88  ECEE  F012         	call	___ftdiv	;wreg free
  4532  000B8C  0100               	movlb	0	; () banked
  4533  000B8E  51CD               	movf	_contador& (0+255),w,b
  4534  000B90  0D03               	mullw	3
  4535  000B92  0EB7               	movlw	low _correnteNaBateria
  4536  000B94  24F3               	addwf	prodl,w,c
  4537  000B96  6ED9               	movwf	fsr2l,c
  4538  000B98  0E00               	movlw	high _correnteNaBateria
  4539  000B9A  20F4               	addwfc	prodh,w,c
  4540  000B9C  6EDA               	movwf	fsr2h,c
  4541  000B9E  C024  FFDE         	movff	?___ftdiv,postinc2
  4542  000BA2  C025  FFDE         	movff	?___ftdiv+1,postinc2
  4543  000BA6  C026  FFDE         	movff	?___ftdiv+2,postinc2
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;aplicacao.c: 218: escreverStringUart("\nCarregamento: Desabilitado | Descarregamento: H
      +                          abilitado | Teste: ");
  4547  000BAA  0EDD               	movlw	low STR_37
  4548  000BAC  6E79               	movwf	i2escreverStringUart@string,c
  4549  000BAE  0EFB               	movlw	high STR_37
  4550  000BB0  6E7A               	movwf	i2escreverStringUart@string+1,c
  4551  000BB2  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4552                           
  4553                           ;aplicacao.c: 219: escreverStringUart(converterIntParaString(contador + 1));
  4554  000BB6  0E01               	movlw	1
  4555  000BB8  0100               	movlb	0	; () banked
  4556  000BBA  25CD               	addwf	_contador& (0+255),w,b
  4557  000BBC  6E6C               	movwf	converterIntParaString@valorParaSerConvertido,c
  4558  000BBE  6A6D               	clrf	converterIntParaString@valorParaSerConvertido+1,c
  4559  000BC0  0E00               	movlw	0
  4560  000BC2  226D               	addwfc	converterIntParaString@valorParaSerConvertido+1,f,c
  4561  000BC4  EC4E  F017         	call	_converterIntParaString	;wreg free
  4562  000BC8  0100               	movlb	0	; () banked
  4563  000BCA  6F84               	movwf	??_tratamento& (0+255),b
  4564  000BCC  6B85               	clrf	(??_tratamento+1)& (0+255),b
  4565  000BCE  C084  F079         	movff	??_tratamento,i2escreverStringUart@string
  4566  000BD2  C085  F07A         	movff	??_tratamento+1,i2escreverStringUart@string+1
  4567  000BD6  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4568                           
  4569                           ;aplicacao.c: 220: escreverStringUart(" | ");
  4570  000BDA  0EE7               	movlw	low (STR_10+2)
  4571  000BDC  6E79               	movwf	i2escreverStringUart@string,c
  4572  000BDE  0EFF               	movlw	high (STR_10+2)
  4573  000BE0  6E7A               	movwf	i2escreverStringUart@string+1,c
  4574  000BE2  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4575                           
  4576                           ;aplicacao.c: 221: escreverStringUart("Tensao: ");
  4577  000BE6  0EDC               	movlw	low STR_9
  4578  000BE8  6E79               	movwf	i2escreverStringUart@string,c
  4579  000BEA  0EFF               	movlw	high STR_9
  4580  000BEC  6E7A               	movwf	i2escreverStringUart@string+1,c
  4581  000BEE  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4582                           
  4583                           ;aplicacao.c: 222: escreverStringUart(converterFloatParaString(tensaoNaBateria[contador]
      +                          ));
  4584  000BF2  0100               	movlb	0	; () banked
  4585  000BF4  51CD               	movf	_contador& (0+255),w,b
  4586  000BF6  0D03               	mullw	3
  4587  000BF8  0ECE               	movlw	low _tensaoNaBateria
  4588  000BFA  24F3               	addwf	prodl,w,c
  4589  000BFC  6ED9               	movwf	fsr2l,c
  4590  000BFE  0E00               	movlw	high _tensaoNaBateria
  4591  000C00  20F4               	addwfc	prodh,w,c
  4592  000C02  6EDA               	movwf	fsr2h,c
  4593  000C04  CFDE F06C          	movff	postinc2,converterFloatParaString@valorParaSerConvertido
  4594  000C08  CFDE F06D          	movff	postinc2,converterFloatParaString@valorParaSerConvertido+1
  4595  000C0C  CFDD F06E          	movff	postdec2,converterFloatParaString@valorParaSerConvertido+2
  4596  000C10  EC2A  F017         	call	_converterFloatParaString	;wreg free
  4597  000C14  0100               	movlb	0	; () banked
  4598  000C16  6F84               	movwf	??_tratamento& (0+255),b
  4599  000C18  6B85               	clrf	(??_tratamento+1)& (0+255),b
  4600  000C1A  C084  F079         	movff	??_tratamento,i2escreverStringUart@string
  4601  000C1E  C085  F07A         	movff	??_tratamento+1,i2escreverStringUart@string+1
  4602  000C22  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4603                           
  4604                           ;aplicacao.c: 223: escreverStringUart(" V | ");
  4605  000C26  0EE5               	movlw	low STR_10
  4606  000C28  6E79               	movwf	i2escreverStringUart@string,c
  4607  000C2A  0EFF               	movlw	high STR_10
  4608  000C2C  6E7A               	movwf	i2escreverStringUart@string+1,c
  4609  000C2E  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4610                           
  4611                           ;aplicacao.c: 224: escreverStringUart("Corrente: ");
  4612  000C32  0ED1               	movlw	low STR_11
  4613  000C34  6E79               	movwf	i2escreverStringUart@string,c
  4614  000C36  0EFF               	movlw	high STR_11
  4615  000C38  6E7A               	movwf	i2escreverStringUart@string+1,c
  4616  000C3A  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4617                           
  4618                           ;aplicacao.c: 225: escreverStringUart(converterFloatParaString(correnteNaBateria[contado
      +                          r]));
  4619  000C3E  0100               	movlb	0	; () banked
  4620  000C40  51CD               	movf	_contador& (0+255),w,b
  4621  000C42  0D03               	mullw	3
  4622  000C44  0EB7               	movlw	low _correnteNaBateria
  4623  000C46  24F3               	addwf	prodl,w,c
  4624  000C48  6ED9               	movwf	fsr2l,c
  4625  000C4A  0E00               	movlw	high _correnteNaBateria
  4626  000C4C  20F4               	addwfc	prodh,w,c
  4627  000C4E  6EDA               	movwf	fsr2h,c
  4628  000C50  CFDE F06C          	movff	postinc2,converterFloatParaString@valorParaSerConvertido
  4629  000C54  CFDE F06D          	movff	postinc2,converterFloatParaString@valorParaSerConvertido+1
  4630  000C58  CFDD F06E          	movff	postdec2,converterFloatParaString@valorParaSerConvertido+2
  4631  000C5C  EC2A  F017         	call	_converterFloatParaString	;wreg free
  4632  000C60  0100               	movlb	0	; () banked
  4633  000C62  6F84               	movwf	??_tratamento& (0+255),b
  4634  000C64  6B85               	clrf	(??_tratamento+1)& (0+255),b
  4635  000C66  C084  F079         	movff	??_tratamento,i2escreverStringUart@string
  4636  000C6A  C085  F07A         	movff	??_tratamento+1,i2escreverStringUart@string+1
  4637  000C6E  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4638                           
  4639                           ;aplicacao.c: 226: escreverStringUart(" A");
  4640  000C72  0EF3               	movlw	low STR_12
  4641  000C74  6E79               	movwf	i2escreverStringUart@string,c
  4642  000C76  0EFF               	movlw	high STR_12
  4643  000C78  6E7A               	movwf	i2escreverStringUart@string+1,c
  4644  000C7A  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4645                           
  4646                           ;aplicacao.c: 228: contador++;
  4647  000C7E  0100               	movlb	0	; () banked
  4648  000C80  2BCD               	incf	_contador& (0+255),f,b
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;aplicacao.c: 230: if(tempoEmSegundos == 5) {
  4652  000C82  0E05               	movlw	5
  4653  000C84  0100               	movlb	0	; () banked
  4654  000C86  19CC               	xorwf	_tempoEmSegundos& (0+255),w,b
  4655  000C88  A4D8               	btfss	status,2,c
  4656  000C8A  D214               	goto	i2l3758
  4657                           
  4658                           ; BSR set to: 0
  4659                           ;aplicacao.c: 231: contador = 0;
  4660  000C8C  0E00               	movlw	0
  4661  000C8E  0100               	movlb	0	; () banked
  4662  000C90  6FCD               	movwf	_contador& (0+255),b
  4663                           
  4664                           ;aplicacao.c: 232: tempoEmSegundos = 0;
  4665  000C92  0E00               	movlw	0
  4666  000C94  0100               	movlb	0	; () banked
  4667  000C96  6FCC               	movwf	_tempoEmSegundos& (0+255),b
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;aplicacao.c: 234: float tensaoMedia = (( tensaoNaBateria[0] + tensaoNaBateria[1] + tens
      +                          aoNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4] ) / 5);
  4671  000C98  C0D4  F039         	movff	_tensaoNaBateria+6,___ftadd@f2
  4672  000C9C  C0D5  F03A         	movff	_tensaoNaBateria+7,___ftadd@f2+1
  4673  000CA0  C0D6  F03B         	movff	_tensaoNaBateria+8,___ftadd@f2+2
  4674  000CA4  C0D1  F036         	movff	_tensaoNaBateria+3,___ftadd@f1
  4675  000CA8  C0D2  F037         	movff	_tensaoNaBateria+4,___ftadd@f1+1
  4676  000CAC  C0D3  F038         	movff	_tensaoNaBateria+5,___ftadd@f1+2
  4677  000CB0  EC7F  F00F         	call	___ftadd	;wreg free
  4678  000CB4  C036  F0AE         	movff	?___ftadd,_tratamento$1512
  4679  000CB8  C037  F0AF         	movff	?___ftadd+1,_tratamento$1512+1
  4680  000CBC  C038  F0B0         	movff	?___ftadd+2,_tratamento$1512+2
  4681                           
  4682                           ;aplicacao.c: 234: float tensaoMedia = (( tensaoNaBateria[0] + tensaoNaBateria[1] + tens
      +                          aoNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4] ) / 5);
  4683  000CC0  C0D7  F039         	movff	_tensaoNaBateria+9,___ftadd@f2
  4684  000CC4  C0D8  F03A         	movff	_tensaoNaBateria+10,___ftadd@f2+1
  4685  000CC8  C0D9  F03B         	movff	_tensaoNaBateria+11,___ftadd@f2+2
  4686  000CCC  C0AE  F036         	movff	_tratamento$1512,___ftadd@f1
  4687  000CD0  C0AF  F037         	movff	_tratamento$1512+1,___ftadd@f1+1
  4688  000CD4  C0B0  F038         	movff	_tratamento$1512+2,___ftadd@f1+2
  4689  000CD8  EC7F  F00F         	call	___ftadd	;wreg free
  4690  000CDC  C036  F0B1         	movff	?___ftadd,_tratamento$1513
  4691  000CE0  C037  F0B2         	movff	?___ftadd+1,_tratamento$1513+1
  4692  000CE4  C038  F0B3         	movff	?___ftadd+2,_tratamento$1513+2
  4693                           
  4694                           ;aplicacao.c: 234: float tensaoMedia = (( tensaoNaBateria[0] + tensaoNaBateria[1] + tens
      +                          aoNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4] ) / 5);
  4695  000CE8  C0DA  F039         	movff	_tensaoNaBateria+12,___ftadd@f2
  4696  000CEC  C0DB  F03A         	movff	_tensaoNaBateria+13,___ftadd@f2+1
  4697  000CF0  C0DC  F03B         	movff	_tensaoNaBateria+14,___ftadd@f2+2
  4698  000CF4  C0B1  F036         	movff	_tratamento$1513,___ftadd@f1
  4699  000CF8  C0B2  F037         	movff	_tratamento$1513+1,___ftadd@f1+1
  4700  000CFC  C0B3  F038         	movff	_tratamento$1513+2,___ftadd@f1+2
  4701  000D00  EC7F  F00F         	call	___ftadd	;wreg free
  4702  000D04  C036  F0B4         	movff	?___ftadd,_tratamento$1514
  4703  000D08  C037  F0B5         	movff	?___ftadd+1,_tratamento$1514+1
  4704  000D0C  C038  F0B6         	movff	?___ftadd+2,_tratamento$1514+2
  4705                           
  4706                           ;aplicacao.c: 234: float tensaoMedia = (( tensaoNaBateria[0] + tensaoNaBateria[1] + tens
      +                          aoNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4] ) / 5);
  4707  000D10  C0CE  F039         	movff	_tensaoNaBateria,___ftadd@f2
  4708  000D14  C0CF  F03A         	movff	_tensaoNaBateria+1,___ftadd@f2+1
  4709  000D18  C0D0  F03B         	movff	_tensaoNaBateria+2,___ftadd@f2+2
  4710  000D1C  C0B4  F036         	movff	_tratamento$1514,___ftadd@f1
  4711  000D20  C0B5  F037         	movff	_tratamento$1514+1,___ftadd@f1+1
  4712  000D24  C0B6  F038         	movff	_tratamento$1514+2,___ftadd@f1+2
  4713  000D28  EC7F  F00F         	call	___ftadd	;wreg free
  4714  000D2C  C036  F024         	movff	?___ftadd,___ftdiv@f1
  4715  000D30  C037  F025         	movff	?___ftadd+1,___ftdiv@f1+1
  4716  000D34  C038  F026         	movff	?___ftadd+2,___ftdiv@f1+2
  4717  000D38  0E00               	movlw	0
  4718  000D3A  6E27               	movwf	___ftdiv@f2,c
  4719  000D3C  0EA0               	movlw	160
  4720  000D3E  6E28               	movwf	___ftdiv@f2+1,c
  4721  000D40  0E40               	movlw	64
  4722  000D42  6E29               	movwf	___ftdiv@f2+2,c
  4723  000D44  ECEE  F012         	call	___ftdiv	;wreg free
  4724  000D48  C024  F09D         	movff	?___ftdiv,tratamento@tensaoMedia_793
  4725  000D4C  C025  F09E         	movff	?___ftdiv+1,tratamento@tensaoMedia_793+1
  4726  000D50  C026  F09F         	movff	?___ftdiv+2,tratamento@tensaoMedia_793+2
  4727                           
  4728                           ;aplicacao.c: 235: int indexTensaoMinima = indexDoMenorValor(tensaoNaBateria,5);
  4729  000D54  0ECE               	movlw	low _tensaoNaBateria
  4730  000D56  6E1E               	movwf	indexDoMenorValor@dados,c
  4731  000D58  0E00               	movlw	high _tensaoNaBateria
  4732  000D5A  6E1F               	movwf	indexDoMenorValor@dados+1,c
  4733  000D5C  0E00               	movlw	0
  4734  000D5E  6E21               	movwf	indexDoMenorValor@quantidadeDeValoresParaAnalisar+1,c
  4735  000D60  0E05               	movlw	5
  4736  000D62  6E20               	movwf	indexDoMenorValor@quantidadeDeValoresParaAnalisar,c
  4737  000D64  EC76  F012         	call	_indexDoMenorValor	;wreg free
  4738  000D68  C01E  F0A0         	movff	?_indexDoMenorValor,tratamento@indexTensaoMinima
  4739  000D6C  C01F  F0A1         	movff	?_indexDoMenorValor+1,tratamento@indexTensaoMinima+1
  4740                           
  4741                           ;aplicacao.c: 237: escreverStringUart("\nTensao Media: ");
  4742  000D70  0EB1               	movlw	low STR_27
  4743  000D72  6E79               	movwf	i2escreverStringUart@string,c
  4744  000D74  0EFF               	movlw	high STR_27
  4745  000D76  6E7A               	movwf	i2escreverStringUart@string+1,c
  4746  000D78  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4747                           
  4748                           ;aplicacao.c: 238: escreverStringUart(converterFloatParaString(tensaoMedia));
  4749  000D7C  C09D  F06C         	movff	tratamento@tensaoMedia_793,converterFloatParaString@valorParaSerConvertido
  4750  000D80  C09E  F06D         	movff	tratamento@tensaoMedia_793+1,converterFloatParaString@valorParaSerConvertido+1
  4751  000D84  C09F  F06E         	movff	tratamento@tensaoMedia_793+2,converterFloatParaString@valorParaSerConvertido+2
  4752  000D88  EC2A  F017         	call	_converterFloatParaString	;wreg free
  4753  000D8C  0100               	movlb	0	; () banked
  4754  000D8E  6F84               	movwf	??_tratamento& (0+255),b
  4755  000D90  6B85               	clrf	(??_tratamento+1)& (0+255),b
  4756  000D92  C084  F079         	movff	??_tratamento,i2escreverStringUart@string
  4757  000D96  C085  F07A         	movff	??_tratamento+1,i2escreverStringUart@string+1
  4758  000D9A  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4759                           
  4760                           ;aplicacao.c: 239: escreverStringUart(" V");
  4761  000D9E  0EF6               	movlw	low STR_14
  4762  000DA0  6E79               	movwf	i2escreverStringUart@string,c
  4763  000DA2  0EFF               	movlw	high STR_14
  4764  000DA4  6E7A               	movwf	i2escreverStringUart@string+1,c
  4765  000DA6  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4766                           
  4767                           ;aplicacao.c: 240: escreverStringUart("\nMenor tensao medida: ");
  4768  000DAA  0E77               	movlw	low STR_45
  4769  000DAC  6E79               	movwf	i2escreverStringUart@string,c
  4770  000DAE  0EFF               	movlw	high STR_45
  4771  000DB0  6E7A               	movwf	i2escreverStringUart@string+1,c
  4772  000DB2  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4773                           
  4774                           ;aplicacao.c: 241: escreverStringUart(converterFloatParaString(tensaoNaBateria[indexTens
      +                          aoMinima]));
  4775  000DB6  C0A0  F00F         	movff	tratamento@indexTensaoMinima,___wmul@multiplier
  4776  000DBA  C0A1  F010         	movff	tratamento@indexTensaoMinima+1,___wmul@multiplier+1
  4777  000DBE  0E00               	movlw	0
  4778  000DC0  6E12               	movwf	___wmul@multiplicand+1,c
  4779  000DC2  0E03               	movlw	3
  4780  000DC4  6E11               	movwf	___wmul@multiplicand,c
  4781  000DC6  EC17  F017         	call	___wmul	;wreg free
  4782  000DCA  0ECE               	movlw	low _tensaoNaBateria
  4783  000DCC  240F               	addwf	?___wmul,w,c
  4784  000DCE  6ED9               	movwf	fsr2l,c
  4785  000DD0  0E00               	movlw	high _tensaoNaBateria
  4786  000DD2  2010               	addwfc	?___wmul+1,w,c
  4787  000DD4  6EDA               	movwf	fsr2h,c
  4788  000DD6  CFDE F094          	movff	postinc2,_tratamento$1515
  4789  000DDA  CFDE F095          	movff	postinc2,_tratamento$1515+1
  4790  000DDE  CFDD F096          	movff	postdec2,_tratamento$1515+2
  4791                           
  4792                           ;aplicacao.c: 241: escreverStringUart(converterFloatParaString(tensaoNaBateria[indexTens
      +                          aoMinima]));
  4793  000DE2  C094  F06C         	movff	_tratamento$1515,converterFloatParaString@valorParaSerConvertido
  4794  000DE6  C095  F06D         	movff	_tratamento$1515+1,converterFloatParaString@valorParaSerConvertido+1
  4795  000DEA  C096  F06E         	movff	_tratamento$1515+2,converterFloatParaString@valorParaSerConvertido+2
  4796  000DEE  EC2A  F017         	call	_converterFloatParaString	;wreg free
  4797  000DF2  0100               	movlb	0	; () banked
  4798  000DF4  6F84               	movwf	??_tratamento& (0+255),b
  4799  000DF6  6B85               	clrf	(??_tratamento+1)& (0+255),b
  4800  000DF8  C084  F079         	movff	??_tratamento,i2escreverStringUart@string
  4801  000DFC  C085  F07A         	movff	??_tratamento+1,i2escreverStringUart@string+1
  4802  000E00  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4803                           
  4804                           ;aplicacao.c: 242: escreverStringUart(" V\n");
  4805  000E04  0EEF               	movlw	low STR_28
  4806  000E06  6E79               	movwf	i2escreverStringUart@string,c
  4807  000E08  0EFF               	movlw	high STR_28
  4808  000E0A  6E7A               	movwf	i2escreverStringUart@string+1,c
  4809  000E0C  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4810                           
  4811                           ;aplicacao.c: 243: if((tensaoMedia >= 3.0) && (tensaoNaBateria[indexTensaoMinima] >= 2.7
      +                          )) {
  4812  000E10  C09D  F015         	movff	tratamento@tensaoMedia_793,___ftge@ff1
  4813  000E14  C09E  F016         	movff	tratamento@tensaoMedia_793+1,___ftge@ff1+1
  4814  000E18  C09F  F017         	movff	tratamento@tensaoMedia_793+2,___ftge@ff1+2
  4815  000E1C  0E00               	movlw	0
  4816  000E1E  6E18               	movwf	___ftge@ff2,c
  4817  000E20  0E40               	movlw	64
  4818  000E22  6E19               	movwf	___ftge@ff2+1,c
  4819  000E24  0E40               	movlw	64
  4820  000E26  6E1A               	movwf	___ftge@ff2+2,c
  4821  000E28  EC59  F014         	call	___ftge	;wreg free
  4822  000E2C  A0D8               	btfss	status,0,c
  4823  000E2E  D028               	goto	i2l3694
  4824  000E30  C0A0  F00F         	movff	tratamento@indexTensaoMinima,___wmul@multiplier
  4825  000E34  C0A1  F010         	movff	tratamento@indexTensaoMinima+1,___wmul@multiplier+1
  4826  000E38  0E00               	movlw	0
  4827  000E3A  6E12               	movwf	___wmul@multiplicand+1,c
  4828  000E3C  0E03               	movlw	3
  4829  000E3E  6E11               	movwf	___wmul@multiplicand,c
  4830  000E40  EC17  F017         	call	___wmul	;wreg free
  4831  000E44  0ECE               	movlw	low _tensaoNaBateria
  4832  000E46  240F               	addwf	?___wmul,w,c
  4833  000E48  6ED9               	movwf	fsr2l,c
  4834  000E4A  0E00               	movlw	high _tensaoNaBateria
  4835  000E4C  2010               	addwfc	?___wmul+1,w,c
  4836  000E4E  6EDA               	movwf	fsr2h,c
  4837  000E50  CFDE F015          	movff	postinc2,___ftge@ff1
  4838  000E54  CFDE F016          	movff	postinc2,___ftge@ff1+1
  4839  000E58  CFDD F017          	movff	postdec2,___ftge@ff1+2
  4840  000E5C  0ECD               	movlw	205
  4841  000E5E  6E18               	movwf	___ftge@ff2,c
  4842  000E60  0E2C               	movlw	44
  4843  000E62  6E19               	movwf	___ftge@ff2+1,c
  4844  000E64  0E40               	movlw	64
  4845  000E66  6E1A               	movwf	___ftge@ff2+2,c
  4846  000E68  EC59  F014         	call	___ftge	;wreg free
  4847  000E6C  A0D8               	btfss	status,0,c
  4848  000E6E  D008               	goto	i2l3694
  4849                           
  4850                           ;aplicacao.c: 244: escreverStringUart("Teste de Tensao no Descarregamento: OK\n");
  4851  000E70  0EA3               	movlw	low STR_47
  4852  000E72  6E79               	movwf	i2escreverStringUart@string,c
  4853  000E74  0EFD               	movlw	high STR_47
  4854  000E76  6E7A               	movwf	i2escreverStringUart@string+1,c
  4855  000E78  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4856                           
  4857                           ;aplicacao.c: 245: resultadoDosTestes[3] = 1;
  4858  000E7C  0E01               	movlw	1
  4859  000E7E  D007               	goto	L2
  4860  000E80                     i2l3694:
  4861                           
  4862                           ;aplicacao.c: 247: else {
  4863                           ;aplicacao.c: 248: escreverStringUart("Teste de Tensao no Descarregamento: NOK\n");
  4864  000E80  0E7A               	movlw	low STR_48
  4865  000E82  6E79               	movwf	i2escreverStringUart@string,c
  4866  000E84  0EFD               	movlw	high STR_48
  4867  000E86  6E7A               	movwf	i2escreverStringUart@string+1,c
  4868  000E88  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4869                           
  4870                           ;aplicacao.c: 249: resultadoDosTestes[3] = 0;
  4871  000E8C  0E00               	movlw	0
  4872  000E8E                     L2:
  4873  000E8E  0100               	movlb	0	; () banked
  4874  000E90  6FC9               	movwf	(_resultadoDosTestes+3)& (0+255),b
  4875                           
  4876                           ; BSR set to: 0
  4877                           ;aplicacao.c: 250: }
  4878                           ;aplicacao.c: 252: float correnteMedia = (( correnteNaBateria[0] + correnteNaBateria[1] 
      +                          + correnteNaBateria[2] + correnteNaBateria[3] + correnteNaBateria[4] ) / 5);
  4879                           
  4880                           ; BSR set to: 0
  4881  000E92  C0BD  F039         	movff	_correnteNaBateria+6,___ftadd@f2
  4882  000E96  C0BE  F03A         	movff	_correnteNaBateria+7,___ftadd@f2+1
  4883  000E9A  C0BF  F03B         	movff	_correnteNaBateria+8,___ftadd@f2+2
  4884  000E9E  C0BA  F036         	movff	_correnteNaBateria+3,___ftadd@f1
  4885  000EA2  C0BB  F037         	movff	_correnteNaBateria+4,___ftadd@f1+1
  4886  000EA6  C0BC  F038         	movff	_correnteNaBateria+5,___ftadd@f1+2
  4887  000EAA  EC7F  F00F         	call	___ftadd	;wreg free
  4888  000EAE  C036  F0AE         	movff	?___ftadd,_tratamento$1512
  4889  000EB2  C037  F0AF         	movff	?___ftadd+1,_tratamento$1512+1
  4890  000EB6  C038  F0B0         	movff	?___ftadd+2,_tratamento$1512+2
  4891                           
  4892                           ;aplicacao.c: 250: }
  4893                           ;aplicacao.c: 252: float correnteMedia = (( correnteNaBateria[0] + correnteNaBateria[1] 
      +                          + correnteNaBateria[2] + correnteNaBateria[3] + correnteNaBateria[4] ) / 5);
  4894  000EBA  C0C0  F039         	movff	_correnteNaBateria+9,___ftadd@f2
  4895  000EBE  C0C1  F03A         	movff	_correnteNaBateria+10,___ftadd@f2+1
  4896  000EC2  C0C2  F03B         	movff	_correnteNaBateria+11,___ftadd@f2+2
  4897  000EC6  C0AE  F036         	movff	_tratamento$1512,___ftadd@f1
  4898  000ECA  C0AF  F037         	movff	_tratamento$1512+1,___ftadd@f1+1
  4899  000ECE  C0B0  F038         	movff	_tratamento$1512+2,___ftadd@f1+2
  4900  000ED2  EC7F  F00F         	call	___ftadd	;wreg free
  4901  000ED6  C036  F0B1         	movff	?___ftadd,_tratamento$1513
  4902  000EDA  C037  F0B2         	movff	?___ftadd+1,_tratamento$1513+1
  4903  000EDE  C038  F0B3         	movff	?___ftadd+2,_tratamento$1513+2
  4904                           
  4905                           ;aplicacao.c: 250: }
  4906                           ;aplicacao.c: 252: float correnteMedia = (( correnteNaBateria[0] + correnteNaBateria[1] 
      +                          + correnteNaBateria[2] + correnteNaBateria[3] + correnteNaBateria[4] ) / 5);
  4907  000EE2  C0C3  F039         	movff	_correnteNaBateria+12,___ftadd@f2
  4908  000EE6  C0C4  F03A         	movff	_correnteNaBateria+13,___ftadd@f2+1
  4909  000EEA  C0C5  F03B         	movff	_correnteNaBateria+14,___ftadd@f2+2
  4910  000EEE  C0B1  F036         	movff	_tratamento$1513,___ftadd@f1
  4911  000EF2  C0B2  F037         	movff	_tratamento$1513+1,___ftadd@f1+1
  4912  000EF6  C0B3  F038         	movff	_tratamento$1513+2,___ftadd@f1+2
  4913  000EFA  EC7F  F00F         	call	___ftadd	;wreg free
  4914  000EFE  C036  F0B4         	movff	?___ftadd,_tratamento$1514
  4915  000F02  C037  F0B5         	movff	?___ftadd+1,_tratamento$1514+1
  4916  000F06  C038  F0B6         	movff	?___ftadd+2,_tratamento$1514+2
  4917                           
  4918                           ;aplicacao.c: 250: }
  4919                           ;aplicacao.c: 252: float correnteMedia = (( correnteNaBateria[0] + correnteNaBateria[1] 
      +                          + correnteNaBateria[2] + correnteNaBateria[3] + correnteNaBateria[4] ) / 5);
  4920  000F0A  C0B7  F039         	movff	_correnteNaBateria,___ftadd@f2
  4921  000F0E  C0B8  F03A         	movff	_correnteNaBateria+1,___ftadd@f2+1
  4922  000F12  C0B9  F03B         	movff	_correnteNaBateria+2,___ftadd@f2+2
  4923  000F16  C0B4  F036         	movff	_tratamento$1514,___ftadd@f1
  4924  000F1A  C0B5  F037         	movff	_tratamento$1514+1,___ftadd@f1+1
  4925  000F1E  C0B6  F038         	movff	_tratamento$1514+2,___ftadd@f1+2
  4926  000F22  EC7F  F00F         	call	___ftadd	;wreg free
  4927  000F26  C036  F024         	movff	?___ftadd,___ftdiv@f1
  4928  000F2A  C037  F025         	movff	?___ftadd+1,___ftdiv@f1+1
  4929  000F2E  C038  F026         	movff	?___ftadd+2,___ftdiv@f1+2
  4930  000F32  0E00               	movlw	0
  4931  000F34  6E27               	movwf	___ftdiv@f2,c
  4932  000F36  0EA0               	movlw	160
  4933  000F38  6E28               	movwf	___ftdiv@f2+1,c
  4934  000F3A  0E40               	movlw	64
  4935  000F3C  6E29               	movwf	___ftdiv@f2+2,c
  4936  000F3E  ECEE  F012         	call	___ftdiv	;wreg free
  4937  000F42  C024  F0A8         	movff	?___ftdiv,tratamento@correnteMedia_802
  4938  000F46  C025  F0A9         	movff	?___ftdiv+1,tratamento@correnteMedia_802+1
  4939  000F4A  C026  F0AA         	movff	?___ftdiv+2,tratamento@correnteMedia_802+2
  4940                           
  4941                           ;aplicacao.c: 253: escreverStringUart("Corrente Media: ");
  4942  000F4E  0EA0               	movlw	low STR_31
  4943  000F50  6E79               	movwf	i2escreverStringUart@string,c
  4944  000F52  0EFF               	movlw	high STR_31
  4945  000F54  6E7A               	movwf	i2escreverStringUart@string+1,c
  4946  000F56  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4947                           
  4948                           ;aplicacao.c: 254: escreverStringUart(converterFloatParaString(correnteMedia));
  4949  000F5A  C0A8  F06C         	movff	tratamento@correnteMedia_802,converterFloatParaString@valorParaSerConvertido
  4950  000F5E  C0A9  F06D         	movff	tratamento@correnteMedia_802+1,converterFloatParaString@valorParaSerConvertido+1
  4951  000F62  C0AA  F06E         	movff	tratamento@correnteMedia_802+2,converterFloatParaString@valorParaSerConvertido+2
  4952  000F66  EC2A  F017         	call	_converterFloatParaString	;wreg free
  4953  000F6A  0100               	movlb	0	; () banked
  4954  000F6C  6F84               	movwf	??_tratamento& (0+255),b
  4955  000F6E  6B85               	clrf	(??_tratamento+1)& (0+255),b
  4956  000F70  C084  F079         	movff	??_tratamento,i2escreverStringUart@string
  4957  000F74  C085  F07A         	movff	??_tratamento+1,i2escreverStringUart@string+1
  4958  000F78  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4959                           
  4960                           ;aplicacao.c: 255: escreverStringUart(" A\n");
  4961  000F7C  0EEB               	movlw	low STR_32
  4962  000F7E  6E79               	movwf	i2escreverStringUart@string,c
  4963  000F80  0EFF               	movlw	high STR_32
  4964  000F82  6E7A               	movwf	i2escreverStringUart@string+1,c
  4965  000F84  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  4966                           
  4967                           ;aplicacao.c: 256: if( (correnteMedia >= 0.050) && (correnteMedia <= 0.150) ) {
  4968  000F88  C0A8  F015         	movff	tratamento@correnteMedia_802,___ftge@ff1
  4969  000F8C  C0A9  F016         	movff	tratamento@correnteMedia_802+1,___ftge@ff1+1
  4970  000F90  C0AA  F017         	movff	tratamento@correnteMedia_802+2,___ftge@ff1+2
  4971  000F94  0ECD               	movlw	205
  4972  000F96  6E18               	movwf	___ftge@ff2,c
  4973  000F98  0E4C               	movlw	76
  4974  000F9A  6E19               	movwf	___ftge@ff2+1,c
  4975  000F9C  0E3D               	movlw	61
  4976  000F9E  6E1A               	movwf	___ftge@ff2+2,c
  4977  000FA0  EC59  F014         	call	___ftge	;wreg free
  4978  000FA4  A0D8               	btfss	status,0,c
  4979  000FA6  D01A               	goto	i2l3720
  4980  000FA8  0E9A               	movlw	154
  4981  000FAA  6E15               	movwf	___ftge@ff1,c
  4982  000FAC  0E19               	movlw	25
  4983  000FAE  6E16               	movwf	___ftge@ff1+1,c
  4984  000FB0  0E3E               	movlw	62
  4985  000FB2  6E17               	movwf	___ftge@ff1+2,c
  4986  000FB4  C0A8  F018         	movff	tratamento@correnteMedia_802,___ftge@ff2
  4987  000FB8  C0A9  F019         	movff	tratamento@correnteMedia_802+1,___ftge@ff2+1
  4988  000FBC  C0AA  F01A         	movff	tratamento@correnteMedia_802+2,___ftge@ff2+2
  4989  000FC0  EC59  F014         	call	___ftge	;wreg free
  4990  000FC4  A0D8               	btfss	status,0,c
  4991  000FC6  D00A               	goto	i2l3720
  4992                           
  4993                           ;aplicacao.c: 257: resultadoDosTestes[4] = 1;
  4994  000FC8  0E01               	movlw	1
  4995  000FCA  0100               	movlb	0	; () banked
  4996  000FCC  6FCA               	movwf	(_resultadoDosTestes+4)& (0+255),b
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;aplicacao.c: 258: escreverStringUart("Teste de Corrente no Descarregamento: OK\n");
  5000  000FCE  0E27               	movlw	low STR_51
  5001  000FD0  6E79               	movwf	i2escreverStringUart@string,c
  5002  000FD2  0EFD               	movlw	high STR_51
  5003  000FD4  6E7A               	movwf	i2escreverStringUart@string+1,c
  5004  000FD6  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  5005                           
  5006                           ;aplicacao.c: 259: }
  5007  000FDA  D009               	goto	i2l3724
  5008  000FDC                     i2l3720:
  5009                           
  5010                           ;aplicacao.c: 260: else {
  5011                           ;aplicacao.c: 261: resultadoDosTestes[4] = 0;
  5012  000FDC  0E00               	movlw	0
  5013  000FDE  0100               	movlb	0	; () banked
  5014  000FE0  6FCA               	movwf	(_resultadoDosTestes+4)& (0+255),b
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;aplicacao.c: 262: escreverStringUart("Teste de Corrente no Descarregamento: NOK\n");
  5018  000FE2  0EFC               	movlw	low STR_52
  5019  000FE4  6E79               	movwf	i2escreverStringUart@string,c
  5020  000FE6  0EFC               	movlw	high STR_52
  5021  000FE8  6E7A               	movwf	i2escreverStringUart@string+1,c
  5022  000FEA  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  5023  000FEE                     i2l3724:
  5024                           
  5025                           ;aplicacao.c: 263: }
  5026                           ;aplicacao.c: 265: statusDaBateria = 3;
  5027  000FEE  0E03               	movlw	3
  5028  000FF0  EF83  F002         	goto	L1
  5029  000FF4                     i2l3726:
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;aplicacao.c: 268: else if(statusDaBateria == 3) {
  5033  000FF4  0E03               	movlw	3
  5034  000FF6  0100               	movlb	0	; () banked
  5035  000FF8  19CB               	xorwf	_statusDaBateria& (0+255),w,b
  5036  000FFA  A4D8               	btfss	status,2,c
  5037  000FFC  D05B               	goto	i2l3758
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;aplicacao.c: 269: desabilitarTimer0();
  5041  000FFE  ECE4  F017         	call	i2_desabilitarTimer0	;wreg free
  5042                           
  5043                           ;aplicacao.c: 270: desabilitarCarregamentoDaBateria();
  5044  001002  ECAF  F017         	call	i2_desabilitarCarregamentoDaBateria	;wreg free
  5045                           
  5046                           ;aplicacao.c: 271: desabilitarDescarregamentoDaBateria();
  5047  001006  ECA5  F017         	call	i2_desabilitarDescarregamentoDaBateria	;wreg free
  5048                           
  5049                           ;aplicacao.c: 272: statusDaBateria = 0;
  5050  00100A  0E00               	movlw	0
  5051  00100C  0100               	movlb	0	; () banked
  5052  00100E  6FCB               	movwf	_statusDaBateria& (0+255),b
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;aplicacao.c: 273: if((resultadoDosTestes[0] + resultadoDosTestes[1] + resultadoDosTeste
      +                          s[2] + resultadoDosTestes[3] + resultadoDosTestes[4]) == 5) {
  5056  001010  0100               	movlb	0	; () banked
  5057  001012  51C7               	movf	(_resultadoDosTestes+1)& (0+255),w,b
  5058  001014  C0C6  F084         	movff	_resultadoDosTestes,??_tratamento
  5059  001018  0100               	movlb	0	; () banked
  5060  00101A  6B85               	clrf	(??_tratamento+1)& (0+255),b
  5061  00101C  0100               	movlb	0	; () banked
  5062  00101E  2784               	addwf	??_tratamento& (0+255),f,b
  5063  001020  0E00               	movlw	0
  5064  001022  2385               	addwfc	(??_tratamento+1)& (0+255),f,b
  5065  001024  0100               	movlb	0	; () banked
  5066  001026  51C8               	movf	(_resultadoDosTestes+2)& (0+255),w,b
  5067  001028  0100               	movlb	0	; () banked
  5068  00102A  2784               	addwf	??_tratamento& (0+255),f,b
  5069  00102C  0E00               	movlw	0
  5070  00102E  2385               	addwfc	(??_tratamento+1)& (0+255),f,b
  5071  001030  0100               	movlb	0	; () banked
  5072  001032  51C9               	movf	(_resultadoDosTestes+3)& (0+255),w,b
  5073  001034  0100               	movlb	0	; () banked
  5074  001036  2784               	addwf	??_tratamento& (0+255),f,b
  5075  001038  0E00               	movlw	0
  5076  00103A  2385               	addwfc	(??_tratamento+1)& (0+255),f,b
  5077  00103C  0100               	movlb	0	; () banked
  5078  00103E  51CA               	movf	(_resultadoDosTestes+4)& (0+255),w,b
  5079  001040  0100               	movlb	0	; () banked
  5080  001042  2784               	addwf	??_tratamento& (0+255),f,b
  5081  001044  0E00               	movlw	0
  5082  001046  2385               	addwfc	(??_tratamento+1)& (0+255),f,b
  5083  001048  0E05               	movlw	5
  5084  00104A  0100               	movlb	0	; () banked
  5085  00104C  1984               	xorwf	??_tratamento& (0+255),w,b
  5086  00104E  0100               	movlb	0	; () banked
  5087  001050  1185               	iorwf	(??_tratamento+1)& (0+255),w,b
  5088  001052  A4D8               	btfss	status,2,c
  5089  001054  D018               	goto	i2l3748
  5090                           
  5091                           ; BSR set to: 0
  5092                           ;aplicacao.c: 274: escreverStringUart("\n*** BATERIA APROVADA! ***\n");
  5093  001056  0E28               	movlw	low STR_53
  5094  001058  6E79               	movwf	i2escreverStringUart@string,c
  5095  00105A  0EFF               	movlw	high STR_53
  5096  00105C  6E7A               	movwf	i2escreverStringUart@string+1,c
  5097  00105E  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  5098                           
  5099                           ;aplicacao.c: 275: escreverStringUart("\n*** Testes finalizados ***\n");
  5100  001062  0E0B               	movlw	low STR_54
  5101  001064  6E79               	movwf	i2escreverStringUart@string,c
  5102  001066  0EFF               	movlw	high STR_54
  5103  001068  6E7A               	movwf	i2escreverStringUart@string+1,c
  5104  00106A  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  5105                           
  5106                           ;aplicacao.c: 276: escreverStringUart("\n\n\n\n*** Pressione o botao para iniciar os tes
      +                          tes! ***\n");
  5107  00106E  0E65               	movlw	low STR_55
  5108  001070  6E79               	movwf	i2escreverStringUart@string,c
  5109  001072  0EFC               	movlw	high STR_55
  5110  001074  6E7A               	movwf	i2escreverStringUart@string+1,c
  5111  001076  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  5112                           
  5113                           ;aplicacao.c: 277: PORTBbits.RB4 = 1;
  5114  00107A  8881               	bsf	3969,4,c	;volatile
  5115                           
  5116                           ;aplicacao.c: 278: PORTBbits.RB5 = 0;
  5117  00107C  9A81               	bcf	3969,5,c	;volatile
  5118                           
  5119                           ;aplicacao.c: 279: PORTBbits.RB6 = 0;
  5120  00107E  9C81               	bcf	3969,6,c	;volatile
  5121                           
  5122                           ;aplicacao.c: 280: sinalizacaoAprovada();
  5123  001080  ECAF  F016         	call	_sinalizacaoAprovada	;wreg free
  5124                           
  5125                           ;aplicacao.c: 281: }
  5126  001084  D017               	goto	i2l3758
  5127  001086                     i2l3748:
  5128                           
  5129                           ;aplicacao.c: 282: else {
  5130                           ;aplicacao.c: 283: escreverStringUart("\n*** BATERIA REPROVADA! ***\n");
  5131  001086  0EEE               	movlw	low STR_56
  5132  001088  6E79               	movwf	i2escreverStringUart@string,c
  5133  00108A  0EFE               	movlw	high STR_56
  5134  00108C  6E7A               	movwf	i2escreverStringUart@string+1,c
  5135  00108E  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  5136                           
  5137                           ;aplicacao.c: 284: escreverStringUart("\n*** Testes finalizados ***\n");
  5138  001092  0E0B               	movlw	low STR_54
  5139  001094  6E79               	movwf	i2escreverStringUart@string,c
  5140  001096  0EFF               	movlw	high STR_54
  5141  001098  6E7A               	movwf	i2escreverStringUart@string+1,c
  5142  00109A  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  5143                           
  5144                           ;aplicacao.c: 285: escreverStringUart("\n\n\n\n*** Pressione o botao para iniciar os tes
      +                          tes! ***\n");
  5145  00109E  0E65               	movlw	low STR_55
  5146  0010A0  6E79               	movwf	i2escreverStringUart@string,c
  5147  0010A2  0EFC               	movlw	high STR_55
  5148  0010A4  6E7A               	movwf	i2escreverStringUart@string+1,c
  5149  0010A6  ECA1  F014         	call	i2_escreverStringUart	;wreg free
  5150                           
  5151                           ;aplicacao.c: 286: PORTBbits.RB4 = 0;
  5152  0010AA  9881               	bcf	3969,4,c	;volatile
  5153                           
  5154                           ;aplicacao.c: 287: PORTBbits.RB5 = 0;
  5155  0010AC  9A81               	bcf	3969,5,c	;volatile
  5156                           
  5157                           ;aplicacao.c: 288: PORTBbits.RB6 = 1 ;
  5158  0010AE  8C81               	bsf	3969,6,c	;volatile
  5159                           
  5160                           ;aplicacao.c: 289: sinalizacaoFalha();
  5161  0010B0  EC6C  F017         	call	_sinalizacaoFalha	;wreg free
  5162  0010B4                     i2l3758:
  5163                           
  5164                           ;aplicacao.c: 290: }
  5165                           ;aplicacao.c: 291: }
  5166                           ;aplicacao.c: 293: TMR0L = 0xDB;
  5167  0010B4  0EDB               	movlw	219
  5168  0010B6  6ED6               	movwf	4054,c	;volatile
  5169                           
  5170                           ;aplicacao.c: 294: TMR0H = 0x0B;
  5171  0010B8  0E0B               	movlw	11
  5172  0010BA  6ED7               	movwf	4055,c	;volatile
  5173                           
  5174                           ;aplicacao.c: 295: INTCONbits.TMR0IF = 0;
  5175  0010BC  94F2               	bcf	intcon,2,c	;volatile
  5176  0010BE                     i2l201:
  5177  0010BE  C093  FFF5         	movff	??_tratamento+15,tablat
  5178  0010C2  C092  FFF8         	movff	??_tratamento+14,tblptru
  5179  0010C6  C091  FFF7         	movff	??_tratamento+13,tblptrh
  5180  0010CA  C090  FFF6         	movff	??_tratamento+12,tblptrl
  5181  0010CE  C08F  FFF4         	movff	??_tratamento+11,prodh
  5182  0010D2  C08E  FFF3         	movff	??_tratamento+10,prodl
  5183  0010D6  C08D  FFDA         	movff	??_tratamento+9,fsr2h
  5184  0010DA  C08C  FFD9         	movff	??_tratamento+8,fsr2l
  5185  0010DE  C08B  FFE2         	movff	??_tratamento+7,fsr1h
  5186  0010E2  C08A  FFE1         	movff	??_tratamento+6,fsr1l
  5187  0010E6  C089  FFEA         	movff	??_tratamento+5,fsr0h
  5188  0010EA  C088  FFE9         	movff	??_tratamento+4,fsr0l
  5189  0010EE  C087  FFFB         	movff	??_tratamento+3,pclatu
  5190  0010F2  C086  FFFA         	movff	??_tratamento+2,pclath
  5191  0010F6  927D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5192  0010F8  0011               	retfie		f
  5193  0010FA                     __end_of_tratamento:
  5194                           	opt stack 0
  5195                           pclatu	equ	0xFFB
  5196                           pclath	equ	0xFFA
  5197                           tblptru	equ	0xFF8
  5198                           tblptrh	equ	0xFF7
  5199                           tblptrl	equ	0xFF6
  5200                           tablat	equ	0xFF5
  5201                           prodh	equ	0xFF4
  5202                           prodl	equ	0xFF3
  5203                           intcon	equ	0xFF2
  5204                           indf0	equ	0xFEF
  5205                           postinc0	equ	0xFEE
  5206                           fsr0h	equ	0xFEA
  5207                           fsr0l	equ	0xFE9
  5208                           wreg	equ	0xFE8
  5209                           fsr1h	equ	0xFE2
  5210                           fsr1l	equ	0xFE1
  5211                           postinc2	equ	0xFDE
  5212                           postdec2	equ	0xFDD
  5213                           fsr2h	equ	0xFDA
  5214                           fsr2l	equ	0xFD9
  5215                           status	equ	0xFD8
  5216                           
  5217 ;; *************** function i2_escreverStringUart *****************
  5218 ;; Defined at:
  5219 ;;		line 104 in file "uart.h"
  5220 ;; Parameters:    Size  Location     Type
  5221 ;;  string          2  120[COMRAM] PTR unsigned char 
  5222 ;;		 -> STR_58(55), STR_57(29), STR_56(29), STR_55(55), 
  5223 ;;		 -> STR_54(29), STR_53(28), STR_52(43), STR_51(42), 
  5224 ;;		 -> STR_50(4), STR_49(17), STR_48(41), STR_47(40), 
  5225 ;;		 -> STR_46(4), STR_45(23), STR_44(3), STR_43(16), 
  5226 ;;		 -> STR_42(3), STR_41(11), STR_40(6), STR_39(9), 
  5227 ;;		 -> STR_38(4), STR_37(68), STR_36(43), STR_35(38), 
  5228 ;;		 -> STR_34(40), STR_33(39), STR_32(4), STR_31(17), 
  5229 ;;		 -> STR_30(38), STR_29(37), STR_28(4), STR_27(16), 
  5230 ;;		 -> STR_26(3), STR_25(11), STR_24(6), STR_23(9), 
  5231 ;;		 -> STR_22(4), STR_21(68), STR_20(41), STR_19(26), 
  5232 ;;		 -> STR_18(36), STR_17(25), STR_16(3), STR_15(18), 
  5233 ;;		 -> STR_14(3), STR_13(16), STR_12(3), STR_11(11), 
  5234 ;;		 -> STR_10(6), STR_9(9), STR_8(4), RAM(3967), 
  5235 ;;		 -> STR_7(68), STR_6(32), STR_5(31), STR_4(52), 
  5236 ;;		 -> STR_3(53), 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;  escreverStri    2    2[BANK0 ] int 
  5239 ;;  escreverStri    2    0[BANK0 ] int 
  5240 ;; Return value:  Size  Location     Type
  5241 ;;                  1    wreg      void 
  5242 ;; Registers used:
  5243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5244 ;; Tracked objects:
  5245 ;;		On entry : 0/0
  5246 ;;		On exit  : 0/0
  5247 ;;		Unchanged: 0/0
  5248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5250 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5251 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5252 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5253 ;;Total ram usage:        8 bytes
  5254 ;; Hardware stack levels used:    1
  5255 ;; Hardware stack levels required when called:    1
  5256 ;; This function calls:
  5257 ;;		i2_escreverCharUart
  5258 ;;		i2_tamanhoDaString
  5259 ;; This function is called by:
  5260 ;;		_tratamento
  5261 ;; This function uses a non-reentrant model
  5262 ;;
  5263                           
  5264                           	psect	text15
  5265  002942                     __ptext15:
  5266                           	opt stack 0
  5267  002942                     i2_escreverStringUart:
  5268                           	opt stack 26
  5269                           
  5270                           ;uart.h: 105: int contador = 0;
  5271                           
  5272                           ;incstack = 0
  5273  002942  0E00               	movlw	0
  5274  002944  0100               	movlb	0	; () banked
  5275  002946  6F83               	movwf	(i2escreverStringUart@contador+1)& (0+255),b
  5276  002948  0E00               	movlw	0
  5277  00294A  6F82               	movwf	i2escreverStringUart@contador& (0+255),b
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;uart.h: 106: int tamanhoDaStr = tamanhoDaString(string);
  5281  00294C  C079  F001         	movff	i2escreverStringUart@string,i2tamanhoDaString@string
  5282  002950  C07A  F002         	movff	i2escreverStringUart@string+1,i2tamanhoDaString@string+1
  5283  002954  EC2D  F016         	call	i2_tamanhoDaString	;wreg free
  5284  002958  C001  F080         	movff	?i2_tamanhoDaString,i2escreverStringUart@tamanhoDaStr
  5285  00295C  C002  F081         	movff	?i2_tamanhoDaString+1,i2escreverStringUart@tamanhoDaStr+1
  5286                           
  5287                           ;uart.h: 108: for(contador = 0; contador < tamanhoDaStr; contador++) {
  5288  002960  0E00               	movlw	0
  5289  002962  0100               	movlb	0	; () banked
  5290  002964  6F83               	movwf	(i2escreverStringUart@contador+1)& (0+255),b
  5291  002966  0E00               	movlw	0
  5292  002968  6F82               	movwf	i2escreverStringUart@contador& (0+255),b
  5293  00296A  D01E               	goto	i2l3376
  5294  00296C                     i2l3372:
  5295                           
  5296                           ; BSR set to: 0
  5297                           ;uart.h: 109: escreverCharUart(string[contador]);
  5298  00296C  0100               	movlb	0	; () banked
  5299  00296E  5182               	movf	i2escreverStringUart@contador& (0+255),w,b
  5300  002970  2479               	addwf	i2escreverStringUart@string,w,c
  5301  002972  6E7B               	movwf	??i2_escreverStringUart& (0+255),c
  5302  002974  0100               	movlb	0	; () banked
  5303  002976  5183               	movf	(i2escreverStringUart@contador+1)& (0+255),w,b
  5304  002978  207A               	addwfc	i2escreverStringUart@string+1,w,c
  5305  00297A  6E7C               	movwf	(??i2_escreverStringUart+1)& (0+255),c
  5306  00297C  C07B  FFF6         	movff	??i2_escreverStringUart,tblptrl
  5307  002980  C07C  FFF7         	movff	??i2_escreverStringUart+1,tblptrh
  5308  002984  0E00               	movlw	low (__mediumconst shr (0+16))
  5309  002986  6EF8               	movwf	tblptru,c
  5310  002988  0E0F               	movlw	(high __ramtop+-1)
  5311  00298A  64F7               	cpfsgt	tblptrh,c
  5312  00298C  D003               	bra	i2u320_47
  5313  00298E  0008               	tblrd		*
  5314  002990  50F5               	movf	tablat,w,c
  5315  002992  D005               	bra	i2u320_40
  5316  002994                     i2u320_47:
  5317  002994  CFF6 FFE9          	movff	tblptrl,fsr0l
  5318  002998  CFF7 FFEA          	movff	tblptrh,fsr0h
  5319  00299C  50EF               	movf	indf0,w,c
  5320  00299E                     i2u320_40:
  5321  00299E  ECC9  F017         	call	i2_escreverCharUart
  5322  0029A2  0100               	movlb	0	; () banked
  5323  0029A4  4B82               	infsnz	i2escreverStringUart@contador& (0+255),f,b
  5324  0029A6  2B83               	incf	(i2escreverStringUart@contador+1)& (0+255),f,b
  5325  0029A8                     i2l3376:
  5326                           
  5327                           ; BSR set to: 0
  5328  0029A8  0100               	movlb	0	; () banked
  5329  0029AA  5180               	movf	i2escreverStringUart@tamanhoDaStr& (0+255),w,b
  5330  0029AC  0100               	movlb	0	; () banked
  5331  0029AE  5D82               	subwf	i2escreverStringUart@contador& (0+255),w,b
  5332  0029B0  0100               	movlb	0	; () banked
  5333  0029B2  5183               	movf	(i2escreverStringUart@contador+1)& (0+255),w,b
  5334  0029B4  0A80               	xorlw	128
  5335  0029B6  6E7B               	movwf	??i2_escreverStringUart& (0+255),c
  5336  0029B8  0100               	movlb	0	; () banked
  5337  0029BA  5181               	movf	(i2escreverStringUart@tamanhoDaStr+1)& (0+255),w,b
  5338  0029BC  0A80               	xorlw	128
  5339  0029BE  587B               	subwfb	??i2_escreverStringUart& (0+255),w,c
  5340  0029C0  B0D8               	btfsc	status,0,c
  5341  0029C2  0012               	return	
  5342  0029C4  D7D3               	goto	i2l3372
  5343  0029C6                     __end_ofi2_escreverStringUart:
  5344                           	opt stack 0
  5345                           pclatu	equ	0xFFB
  5346                           pclath	equ	0xFFA
  5347                           tblptru	equ	0xFF8
  5348                           tblptrh	equ	0xFF7
  5349                           tblptrl	equ	0xFF6
  5350                           tablat	equ	0xFF5
  5351                           prodh	equ	0xFF4
  5352                           prodl	equ	0xFF3
  5353                           intcon	equ	0xFF2
  5354                           indf0	equ	0xFEF
  5355                           postinc0	equ	0xFEE
  5356                           fsr0h	equ	0xFEA
  5357                           fsr0l	equ	0xFE9
  5358                           wreg	equ	0xFE8
  5359                           fsr1h	equ	0xFE2
  5360                           fsr1l	equ	0xFE1
  5361                           postinc2	equ	0xFDE
  5362                           postdec2	equ	0xFDD
  5363                           fsr2h	equ	0xFDA
  5364                           fsr2l	equ	0xFD9
  5365                           status	equ	0xFD8
  5366                           
  5367 ;; *************** function i2_tamanhoDaString *****************
  5368 ;; Defined at:
  5369 ;;		line 92 in file "uart.h"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;  string          2    0[COMRAM] PTR unsigned char 
  5372 ;;		 -> STR_58(55), STR_57(29), STR_56(29), STR_55(55), 
  5373 ;;		 -> STR_54(29), STR_53(28), STR_52(43), STR_51(42), 
  5374 ;;		 -> STR_50(4), STR_49(17), STR_48(41), STR_47(40), 
  5375 ;;		 -> STR_46(4), STR_45(23), STR_44(3), STR_43(16), 
  5376 ;;		 -> STR_42(3), STR_41(11), STR_40(6), STR_39(9), 
  5377 ;;		 -> STR_38(4), STR_37(68), STR_36(43), STR_35(38), 
  5378 ;;		 -> STR_34(40), STR_33(39), STR_32(4), STR_31(17), 
  5379 ;;		 -> STR_30(38), STR_29(37), STR_28(4), STR_27(16), 
  5380 ;;		 -> STR_26(3), STR_25(11), STR_24(6), STR_23(9), 
  5381 ;;		 -> STR_22(4), STR_21(68), STR_20(41), STR_19(26), 
  5382 ;;		 -> STR_18(36), STR_17(25), STR_16(3), STR_15(18), 
  5383 ;;		 -> STR_14(3), STR_13(16), STR_12(3), STR_11(11), 
  5384 ;;		 -> STR_10(6), STR_9(9), STR_8(4), RAM(3967), 
  5385 ;;		 -> STR_7(68), STR_6(32), STR_5(31), STR_4(52), 
  5386 ;;		 -> STR_3(53), 
  5387 ;; Auto vars:     Size  Location     Type
  5388 ;;  tamanhoDaStr    2    4[COMRAM] int 
  5389 ;; Return value:  Size  Location     Type
  5390 ;;                  2    0[COMRAM] int 
  5391 ;; Registers used:
  5392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5393 ;; Tracked objects:
  5394 ;;		On entry : 0/0
  5395 ;;		On exit  : 0/0
  5396 ;;		Unchanged: 0/0
  5397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5398 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5399 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5400 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5401 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5402 ;;Total ram usage:        6 bytes
  5403 ;; Hardware stack levels used:    1
  5404 ;; This function calls:
  5405 ;;		Nothing
  5406 ;; This function is called by:
  5407 ;;		i2_escreverStringUart
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411                           	psect	text16
  5412  002C5A                     __ptext16:
  5413                           	opt stack 0
  5414  002C5A                     i2_tamanhoDaString:
  5415                           	opt stack 26
  5416                           
  5417                           ;uart.h: 93: int lenght = 0;
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;incstack = 0
  5421  002C5A  0E00               	movlw	0
  5422  002C5C  6E06               	movwf	i2tamanhoDaString@lenght+1,c
  5423  002C5E  0E00               	movlw	0
  5424  002C60  6E05               	movwf	i2tamanhoDaString@lenght,c
  5425                           
  5426                           ;uart.h: 94: while(string[lenght] != '\0') {
  5427  002C62  D002               	goto	i2l3162
  5428  002C64                     i2l3160:
  5429                           
  5430                           ;uart.h: 95: lenght++;
  5431  002C64  4A05               	infsnz	i2tamanhoDaString@lenght,f,c
  5432  002C66  2A06               	incf	i2tamanhoDaString@lenght+1,f,c
  5433  002C68                     i2l3162:
  5434  002C68  5005               	movf	i2tamanhoDaString@lenght,w,c
  5435  002C6A  2401               	addwf	i2tamanhoDaString@string,w,c
  5436  002C6C  6E03               	movwf	??i2_tamanhoDaString& (0+255),c
  5437  002C6E  5006               	movf	i2tamanhoDaString@lenght+1,w,c
  5438  002C70  2002               	addwfc	i2tamanhoDaString@string+1,w,c
  5439  002C72  6E04               	movwf	(??i2_tamanhoDaString+1)& (0+255),c
  5440  002C74  C003  FFF6         	movff	??i2_tamanhoDaString,tblptrl
  5441  002C78  C004  FFF7         	movff	??i2_tamanhoDaString+1,tblptrh
  5442  002C7C  0E00               	movlw	low (__mediumconst shr (0+16))
  5443  002C7E  6EF8               	movwf	tblptru,c
  5444  002C80  0E0F               	movlw	(high __ramtop+-1)
  5445  002C82  64F7               	cpfsgt	tblptrh,c
  5446  002C84  D003               	bra	i2u302_47
  5447  002C86  0008               	tblrd		*
  5448  002C88  50F5               	movf	tablat,w,c
  5449  002C8A  D005               	bra	i2u302_40
  5450  002C8C                     i2u302_47:
  5451  002C8C  CFF6 FFE9          	movff	tblptrl,fsr0l
  5452  002C90  CFF7 FFEA          	movff	tblptrh,fsr0h
  5453  002C94  50EF               	movf	indf0,w,c
  5454  002C96                     i2u302_40:
  5455  002C96  0900               	iorlw	0
  5456  002C98  A4D8               	btfss	status,2,c
  5457  002C9A  D7E4               	goto	i2l3160
  5458                           
  5459                           ;uart.h: 96: }
  5460                           ;uart.h: 97: return lenght;
  5461  002C9C  C005  F001         	movff	i2tamanhoDaString@lenght,?i2_tamanhoDaString
  5462  002CA0  C006  F002         	movff	i2tamanhoDaString@lenght+1,?i2_tamanhoDaString+1
  5463  002CA4  0012               	return		;funcret
  5464  002CA6                     __end_ofi2_tamanhoDaString:
  5465                           	opt stack 0
  5466                           pclatu	equ	0xFFB
  5467                           pclath	equ	0xFFA
  5468                           tblptru	equ	0xFF8
  5469                           tblptrh	equ	0xFF7
  5470                           tblptrl	equ	0xFF6
  5471                           tablat	equ	0xFF5
  5472                           prodh	equ	0xFF4
  5473                           prodl	equ	0xFF3
  5474                           intcon	equ	0xFF2
  5475                           indf0	equ	0xFEF
  5476                           postinc0	equ	0xFEE
  5477                           fsr0h	equ	0xFEA
  5478                           fsr0l	equ	0xFE9
  5479                           wreg	equ	0xFE8
  5480                           fsr1h	equ	0xFE2
  5481                           fsr1l	equ	0xFE1
  5482                           postinc2	equ	0xFDE
  5483                           postdec2	equ	0xFDD
  5484                           fsr2h	equ	0xFDA
  5485                           fsr2l	equ	0xFD9
  5486                           status	equ	0xFD8
  5487                           
  5488 ;; *************** function i2_escreverCharUart *****************
  5489 ;; Defined at:
  5490 ;;		line 50 in file "uart.h"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;  caracter        1    wreg     unsigned char 
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;  caracter        1    0[COMRAM] unsigned char 
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  1    wreg      void 
  5497 ;; Registers used:
  5498 ;;		wreg
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5505 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5507 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5508 ;;Total ram usage:        1 bytes
  5509 ;; Hardware stack levels used:    1
  5510 ;; This function calls:
  5511 ;;		Nothing
  5512 ;; This function is called by:
  5513 ;;		i2_escreverStringUart
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517                           	psect	text17
  5518  002F92                     __ptext17:
  5519                           	opt stack 0
  5520  002F92                     i2_escreverCharUart:
  5521                           	opt stack 26
  5522                           
  5523                           ;incstack = 0
  5524                           ;i2escreverCharUart@caracter stored from wreg
  5525  002F92  6E01               	movwf	i2escreverCharUart@caracter,c
  5526                           
  5527                           ;uart.h: 51: TXREG = caracter;
  5528  002F94  C001  FFAD         	movff	i2escreverCharUart@caracter,4013	;volatile
  5529  002F98                     i2l81:
  5530  002F98  B2AC               	btfsc	4012,1,c	;volatile
  5531  002F9A  0012               	return	
  5532  002F9C  D7FD               	goto	i2l81
  5533  002F9E                     __end_ofi2_escreverCharUart:
  5534                           	opt stack 0
  5535                           pclatu	equ	0xFFB
  5536                           pclath	equ	0xFFA
  5537                           tblptru	equ	0xFF8
  5538                           tblptrh	equ	0xFF7
  5539                           tblptrl	equ	0xFF6
  5540                           tablat	equ	0xFF5
  5541                           prodh	equ	0xFF4
  5542                           prodl	equ	0xFF3
  5543                           intcon	equ	0xFF2
  5544                           indf0	equ	0xFEF
  5545                           postinc0	equ	0xFEE
  5546                           fsr0h	equ	0xFEA
  5547                           fsr0l	equ	0xFE9
  5548                           wreg	equ	0xFE8
  5549                           fsr1h	equ	0xFE2
  5550                           fsr1l	equ	0xFE1
  5551                           postinc2	equ	0xFDE
  5552                           postdec2	equ	0xFDD
  5553                           fsr2h	equ	0xFDA
  5554                           fsr2l	equ	0xFD9
  5555                           status	equ	0xFD8
  5556                           
  5557 ;; *************** function i2_desabilitarTimer0 *****************
  5558 ;; Defined at:
  5559 ;;		line 38 in file "timer0.h"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;		None
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;		None
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  1    wreg      void 
  5566 ;; Registers used:
  5567 ;;		None
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5577 ;;Total ram usage:        0 bytes
  5578 ;; Hardware stack levels used:    1
  5579 ;; This function calls:
  5580 ;;		Nothing
  5581 ;; This function is called by:
  5582 ;;		_tratamento
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           	psect	text18
  5587  002FC8                     __ptext18:
  5588                           	opt stack 0
  5589  002FC8                     i2_desabilitarTimer0:
  5590                           	opt stack 27
  5591                           
  5592                           ;timer0.h: 39: T0CONbits.TMR0ON = 0;
  5593                           
  5594                           ;incstack = 0
  5595  002FC8  9ED5               	bcf	4053,7,c	;volatile
  5596  002FCA  0012               	return		;funcret
  5597  002FCC                     __end_ofi2_desabilitarTimer0:
  5598                           	opt stack 0
  5599                           pclatu	equ	0xFFB
  5600                           pclath	equ	0xFFA
  5601                           tblptru	equ	0xFF8
  5602                           tblptrh	equ	0xFF7
  5603                           tblptrl	equ	0xFF6
  5604                           tablat	equ	0xFF5
  5605                           prodh	equ	0xFF4
  5606                           prodl	equ	0xFF3
  5607                           intcon	equ	0xFF2
  5608                           indf0	equ	0xFEF
  5609                           postinc0	equ	0xFEE
  5610                           fsr0h	equ	0xFEA
  5611                           fsr0l	equ	0xFE9
  5612                           wreg	equ	0xFE8
  5613                           fsr1h	equ	0xFE2
  5614                           fsr1l	equ	0xFE1
  5615                           postinc2	equ	0xFDE
  5616                           postdec2	equ	0xFDD
  5617                           fsr2h	equ	0xFDA
  5618                           fsr2l	equ	0xFD9
  5619                           status	equ	0xFD8
  5620                           
  5621 ;; *************** function i2_desabilitarDescarregamentoDaBateria *****************
  5622 ;; Defined at:
  5623 ;;		line 10 in file "controleDaBateria.h"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;		None
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;		None
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  1    wreg      void 
  5630 ;; Registers used:
  5631 ;;		wreg
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5639 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;Total ram usage:        1 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; This function calls:
  5644 ;;		Nothing
  5645 ;; This function is called by:
  5646 ;;		_tratamento
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650                           	psect	text19
  5651  002F4A                     __ptext19:
  5652                           	opt stack 0
  5653  002F4A                     i2_desabilitarDescarregamentoDaBateria:
  5654                           	opt stack 27
  5655                           
  5656                           ;controleDaBateria.h: 11: PORTBbits.RB1 = 1;
  5657                           
  5658                           ;incstack = 0
  5659  002F4A  8281               	bsf	3969,1,c	;volatile
  5660                           
  5661                           ;controleDaBateria.h: 12: _delay((unsigned long)((20)*(1000000/4000.0)));
  5662  002F4C  0E07               	movlw	7
  5663  002F4E  6E01               	movwf	??i2_desabilitarDescarregamentoDaBateria& (0+255),c
  5664  002F50  0E7D               	movlw	125
  5665  002F52                     i2u367_47:
  5666  002F52  2EE8               	decfsz	wreg,f,c
  5667  002F54  D7FE               	bra	i2u367_47
  5668  002F56  2E01               	decfsz	??i2_desabilitarDescarregamentoDaBateria& (0+255),f,c
  5669  002F58  D7FC               	bra	i2u367_47
  5670  002F5A  F000               	nop	
  5671  002F5C  0012               	return		;funcret
  5672  002F5E                     __end_ofi2_desabilitarDescarregamentoDaBateria:
  5673                           	opt stack 0
  5674                           pclatu	equ	0xFFB
  5675                           pclath	equ	0xFFA
  5676                           tblptru	equ	0xFF8
  5677                           tblptrh	equ	0xFF7
  5678                           tblptrl	equ	0xFF6
  5679                           tablat	equ	0xFF5
  5680                           prodh	equ	0xFF4
  5681                           prodl	equ	0xFF3
  5682                           intcon	equ	0xFF2
  5683                           indf0	equ	0xFEF
  5684                           postinc0	equ	0xFEE
  5685                           fsr0h	equ	0xFEA
  5686                           fsr0l	equ	0xFE9
  5687                           wreg	equ	0xFE8
  5688                           fsr1h	equ	0xFE2
  5689                           fsr1l	equ	0xFE1
  5690                           postinc2	equ	0xFDE
  5691                           postdec2	equ	0xFDD
  5692                           fsr2h	equ	0xFDA
  5693                           fsr2l	equ	0xFD9
  5694                           status	equ	0xFD8
  5695                           
  5696 ;; *************** function i2_desabilitarCarregamentoDaBateria *****************
  5697 ;; Defined at:
  5698 ;;		line 15 in file "controleDaBateria.h"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;		None
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;		None
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  1    wreg      void 
  5705 ;; Registers used:
  5706 ;;		wreg
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5714 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5715 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5716 ;;Total ram usage:        1 bytes
  5717 ;; Hardware stack levels used:    1
  5718 ;; This function calls:
  5719 ;;		Nothing
  5720 ;; This function is called by:
  5721 ;;		_tratamento
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           	psect	text20
  5726  002F5E                     __ptext20:
  5727                           	opt stack 0
  5728  002F5E                     i2_desabilitarCarregamentoDaBateria:
  5729                           	opt stack 27
  5730                           
  5731                           ;controleDaBateria.h: 16: PORTBbits.RB0 = 1;
  5732                           
  5733                           ;incstack = 0
  5734  002F5E  8081               	bsf	3969,0,c	;volatile
  5735                           
  5736                           ;controleDaBateria.h: 17: _delay((unsigned long)((20)*(1000000/4000.0)));
  5737  002F60  0E07               	movlw	7
  5738  002F62  6E01               	movwf	??i2_desabilitarCarregamentoDaBateria& (0+255),c
  5739  002F64  0E7D               	movlw	125
  5740  002F66                     i2u368_47:
  5741  002F66  2EE8               	decfsz	wreg,f,c
  5742  002F68  D7FE               	bra	i2u368_47
  5743  002F6A  2E01               	decfsz	??i2_desabilitarCarregamentoDaBateria& (0+255),f,c
  5744  002F6C  D7FC               	bra	i2u368_47
  5745  002F6E  F000               	nop	
  5746  002F70  0012               	return		;funcret
  5747  002F72                     __end_ofi2_desabilitarCarregamentoDaBateria:
  5748                           	opt stack 0
  5749                           pclatu	equ	0xFFB
  5750                           pclath	equ	0xFFA
  5751                           tblptru	equ	0xFF8
  5752                           tblptrh	equ	0xFF7
  5753                           tblptrl	equ	0xFF6
  5754                           tablat	equ	0xFF5
  5755                           prodh	equ	0xFF4
  5756                           prodl	equ	0xFF3
  5757                           intcon	equ	0xFF2
  5758                           indf0	equ	0xFEF
  5759                           postinc0	equ	0xFEE
  5760                           fsr0h	equ	0xFEA
  5761                           fsr0l	equ	0xFE9
  5762                           wreg	equ	0xFE8
  5763                           fsr1h	equ	0xFE2
  5764                           fsr1l	equ	0xFE1
  5765                           postinc2	equ	0xFDE
  5766                           postdec2	equ	0xFDD
  5767                           fsr2h	equ	0xFDA
  5768                           fsr2l	equ	0xFD9
  5769                           status	equ	0xFD8
  5770                           
  5771 ;; *************** function _sinalizacaoFalha *****************
  5772 ;; Defined at:
  5773 ;;		line 23 in file "buzzer.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;		None
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;		None
  5778 ;; Return value:  Size  Location     Type
  5779 ;;                  1    wreg      void 
  5780 ;; Registers used:
  5781 ;;		wreg
  5782 ;; Tracked objects:
  5783 ;;		On entry : 0/0
  5784 ;;		On exit  : 0/0
  5785 ;;		Unchanged: 0/0
  5786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5789 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5790 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5791 ;;Total ram usage:        2 bytes
  5792 ;; Hardware stack levels used:    1
  5793 ;; This function calls:
  5794 ;;		Nothing
  5795 ;; This function is called by:
  5796 ;;		_tratamento
  5797 ;; This function uses a non-reentrant model
  5798 ;;
  5799                           
  5800                           	psect	text21
  5801  002ED8                     __ptext21:
  5802                           	opt stack 0
  5803  002ED8                     _sinalizacaoFalha:
  5804                           	opt stack 27
  5805                           
  5806                           ;buzzer.c: 24: PORTBbits.RB3 = 1;
  5807                           
  5808                           ;incstack = 0
  5809  002ED8  8681               	bsf	3969,3,c	;volatile
  5810                           
  5811                           ;buzzer.c: 25: _delay((unsigned long)((1000)*(1000000/4000.0)));
  5812  002EDA  0E02               	movlw	2
  5813  002EDC  6E02               	movwf	(??_sinalizacaoFalha+1)& (0+255),c
  5814  002EDE  0E45               	movlw	69
  5815  002EE0  6E01               	movwf	??_sinalizacaoFalha& (0+255),c
  5816  002EE2  0EAA               	movlw	170
  5817  002EE4                     i2u369_47:
  5818  002EE4  2EE8               	decfsz	wreg,f,c
  5819  002EE6  D7FE               	bra	i2u369_47
  5820  002EE8  2E01               	decfsz	??_sinalizacaoFalha& (0+255),f,c
  5821  002EEA  D7FC               	bra	i2u369_47
  5822  002EEC  2E02               	decfsz	(??_sinalizacaoFalha+1)& (0+255),f,c
  5823  002EEE  D7FA               	bra	i2u369_47
  5824                           
  5825                           ;buzzer.c: 26: PORTBbits.RB3 = 0;
  5826  002EF0  9681               	bcf	3969,3,c	;volatile
  5827  002EF2  0012               	return		;funcret
  5828  002EF4                     __end_of_sinalizacaoFalha:
  5829                           	opt stack 0
  5830                           pclatu	equ	0xFFB
  5831                           pclath	equ	0xFFA
  5832                           tblptru	equ	0xFF8
  5833                           tblptrh	equ	0xFF7
  5834                           tblptrl	equ	0xFF6
  5835                           tablat	equ	0xFF5
  5836                           prodh	equ	0xFF4
  5837                           prodl	equ	0xFF3
  5838                           intcon	equ	0xFF2
  5839                           indf0	equ	0xFEF
  5840                           postinc0	equ	0xFEE
  5841                           fsr0h	equ	0xFEA
  5842                           fsr0l	equ	0xFE9
  5843                           wreg	equ	0xFE8
  5844                           fsr1h	equ	0xFE2
  5845                           fsr1l	equ	0xFE1
  5846                           postinc2	equ	0xFDE
  5847                           postdec2	equ	0xFDD
  5848                           fsr2h	equ	0xFDA
  5849                           fsr2l	equ	0xFD9
  5850                           status	equ	0xFD8
  5851                           
  5852 ;; *************** function _sinalizacaoAprovada *****************
  5853 ;; Defined at:
  5854 ;;		line 13 in file "buzzer.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;		None
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;  repeticoes      1    1[COMRAM] unsigned char 
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  1    wreg      void 
  5861 ;; Registers used:
  5862 ;;		wreg, status,2, status,0
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5870 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5871 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5872 ;;Total ram usage:        2 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; This function calls:
  5875 ;;		Nothing
  5876 ;; This function is called by:
  5877 ;;		_tratamento
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           	psect	text22
  5882  002D5E                     __ptext22:
  5883                           	opt stack 0
  5884  002D5E                     _sinalizacaoAprovada:
  5885                           	opt stack 27
  5886                           
  5887                           ;buzzer.c: 14: char repeticoes = 0;
  5888                           
  5889                           ;incstack = 0
  5890  002D5E  0E00               	movlw	0
  5891  002D60  6E02               	movwf	sinalizacaoAprovada@repeticoes,c
  5892                           
  5893                           ;buzzer.c: 15: for(repeticoes = 0; repeticoes < 3; repeticoes++) {
  5894  002D62  0E00               	movlw	0
  5895  002D64  6E02               	movwf	sinalizacaoAprovada@repeticoes,c
  5896  002D66                     i2l3292:
  5897  002D66  0E02               	movlw	2
  5898  002D68  6402               	cpfsgt	sinalizacaoAprovada@repeticoes,c
  5899  002D6A  D001               	goto	i2l208
  5900  002D6C  0012               	return	
  5901  002D6E                     i2l208:
  5902                           
  5903                           ;buzzer.c: 16: PORTBbits.RB3 = 1;
  5904  002D6E  8681               	bsf	3969,3,c	;volatile
  5905                           
  5906                           ;buzzer.c: 17: _delay((unsigned long)((50)*(1000000/4000.0)));
  5907  002D70  0E11               	movlw	17
  5908  002D72  6E01               	movwf	??_sinalizacaoAprovada& (0+255),c
  5909  002D74  0E3A               	movlw	58
  5910  002D76                     i2u370_47:
  5911  002D76  2EE8               	decfsz	wreg,f,c
  5912  002D78  D7FE               	bra	i2u370_47
  5913  002D7A  2E01               	decfsz	??_sinalizacaoAprovada& (0+255),f,c
  5914  002D7C  D7FC               	bra	i2u370_47
  5915  002D7E  D000               	nop2	
  5916                           
  5917                           ;buzzer.c: 18: PORTBbits.RB3 = 0;
  5918  002D80  9681               	bcf	3969,3,c	;volatile
  5919                           
  5920                           ;buzzer.c: 19: _delay((unsigned long)((50)*(1000000/4000.0)));
  5921  002D82  0E11               	movlw	17
  5922  002D84  6E01               	movwf	??_sinalizacaoAprovada& (0+255),c
  5923  002D86  0E3A               	movlw	58
  5924  002D88                     i2u371_47:
  5925  002D88  2EE8               	decfsz	wreg,f,c
  5926  002D8A  D7FE               	bra	i2u371_47
  5927  002D8C  2E01               	decfsz	??_sinalizacaoAprovada& (0+255),f,c
  5928  002D8E  D7FC               	bra	i2u371_47
  5929  002D90  D000               	nop2	
  5930  002D92  2A02               	incf	sinalizacaoAprovada@repeticoes,f,c
  5931  002D94  D7E8               	goto	i2l3292
  5932  002D96                     __end_of_sinalizacaoAprovada:
  5933                           	opt stack 0
  5934                           pclatu	equ	0xFFB
  5935                           pclath	equ	0xFFA
  5936                           tblptru	equ	0xFF8
  5937                           tblptrh	equ	0xFF7
  5938                           tblptrl	equ	0xFF6
  5939                           tablat	equ	0xFF5
  5940                           prodh	equ	0xFF4
  5941                           prodl	equ	0xFF3
  5942                           intcon	equ	0xFF2
  5943                           indf0	equ	0xFEF
  5944                           postinc0	equ	0xFEE
  5945                           fsr0h	equ	0xFEA
  5946                           fsr0l	equ	0xFE9
  5947                           wreg	equ	0xFE8
  5948                           fsr1h	equ	0xFE2
  5949                           fsr1l	equ	0xFE1
  5950                           postinc2	equ	0xFDE
  5951                           postdec2	equ	0xFDD
  5952                           fsr2h	equ	0xFDA
  5953                           fsr2l	equ	0xFD9
  5954                           status	equ	0xFD8
  5955                           
  5956 ;; *************** function _lerAdcAn1 *****************
  5957 ;; Defined at:
  5958 ;;		line 20 in file "adc.h"
  5959 ;; Parameters:    Size  Location     Type
  5960 ;;		None
  5961 ;; Auto vars:     Size  Location     Type
  5962 ;;  valorLido       2    4[COMRAM] int 
  5963 ;; Return value:  Size  Location     Type
  5964 ;;                  2    0[COMRAM] int 
  5965 ;; Registers used:
  5966 ;;		wreg, status,2, status,0
  5967 ;; Tracked objects:
  5968 ;;		On entry : 0/0
  5969 ;;		On exit  : 0/0
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5972 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5973 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5974 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5975 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5976 ;;Total ram usage:        6 bytes
  5977 ;; Hardware stack levels used:    1
  5978 ;; This function calls:
  5979 ;;		Nothing
  5980 ;; This function is called by:
  5981 ;;		_tratamento
  5982 ;; This function uses a non-reentrant model
  5983 ;;
  5984                           
  5985                           	psect	text23
  5986  002CE6                     __ptext23:
  5987                           	opt stack 0
  5988  002CE6                     _lerAdcAn1:
  5989                           	opt stack 27
  5990                           
  5991                           ;adc.h: 21: ADCON0bits.CHS = 0b0001;
  5992                           
  5993                           ;incstack = 0
  5994  002CE6  50C2               	movf	4034,w,c	;volatile
  5995  002CE8  0BC3               	andlw	-61
  5996  002CEA  0904               	iorlw	4
  5997  002CEC  6EC2               	movwf	4034,c	;volatile
  5998                           
  5999                           ;adc.h: 22: ADCON0bits.ADON = 1;
  6000  002CEE  80C2               	bsf	4034,0,c	;volatile
  6001                           
  6002                           ;adc.h: 23: int valorLido = 0;
  6003  002CF0  0E00               	movlw	0
  6004  002CF2  6E06               	movwf	lerAdcAn1@valorLido+1,c
  6005  002CF4  0E00               	movlw	0
  6006  002CF6  6E05               	movwf	lerAdcAn1@valorLido,c
  6007                           
  6008                           ;adc.h: 24: ADCON0bits.GO_nDONE = 1;
  6009  002CF8  82C2               	bsf	4034,1,c	;volatile
  6010  002CFA                     i2l63:
  6011  002CFA  AC9E               	btfss	3998,6,c	;volatile
  6012  002CFC  D7FE               	goto	i2l63
  6013                           
  6014                           ;adc.h: 26: valorLido = ((ADRESH<<8) | ADRESL);
  6015  002CFE  50C3               	movf	4035,w,c	;volatile
  6016  002D00  CFC4 F003          	movff	4036,??_lerAdcAn1	;volatile
  6017  002D04  6A04               	clrf	(??_lerAdcAn1+1)& (0+255),c
  6018  002D06  C003  F004         	movff	??_lerAdcAn1,??_lerAdcAn1+1
  6019  002D0A  6A03               	clrf	??_lerAdcAn1,c
  6020  002D0C  1003               	iorwf	??_lerAdcAn1,w,c
  6021  002D0E  6E05               	movwf	lerAdcAn1@valorLido,c
  6022  002D10  5004               	movf	??_lerAdcAn1+1,w,c
  6023  002D12  6E06               	movwf	lerAdcAn1@valorLido+1,c
  6024                           
  6025                           ;adc.h: 27: PIR1bits.ADIF = 0;
  6026  002D14  9C9E               	bcf	3998,6,c	;volatile
  6027                           
  6028                           ;adc.h: 28: ADCON0bits.ADON = 0;
  6029  002D16  90C2               	bcf	4034,0,c	;volatile
  6030                           
  6031                           ;adc.h: 29: return valorLido;
  6032  002D18  C005  F001         	movff	lerAdcAn1@valorLido,?_lerAdcAn1
  6033  002D1C  C006  F002         	movff	lerAdcAn1@valorLido+1,?_lerAdcAn1+1
  6034  002D20  0012               	return	
  6035  002D22                     __end_of_lerAdcAn1:
  6036                           	opt stack 0
  6037                           pclatu	equ	0xFFB
  6038                           pclath	equ	0xFFA
  6039                           tblptru	equ	0xFF8
  6040                           tblptrh	equ	0xFF7
  6041                           tblptrl	equ	0xFF6
  6042                           tablat	equ	0xFF5
  6043                           prodh	equ	0xFF4
  6044                           prodl	equ	0xFF3
  6045                           intcon	equ	0xFF2
  6046                           indf0	equ	0xFEF
  6047                           postinc0	equ	0xFEE
  6048                           fsr0h	equ	0xFEA
  6049                           fsr0l	equ	0xFE9
  6050                           wreg	equ	0xFE8
  6051                           fsr1h	equ	0xFE2
  6052                           fsr1l	equ	0xFE1
  6053                           postinc2	equ	0xFDE
  6054                           postdec2	equ	0xFDD
  6055                           fsr2h	equ	0xFDA
  6056                           fsr2l	equ	0xFD9
  6057                           status	equ	0xFD8
  6058                           
  6059 ;; *************** function _lerAdcAn0 *****************
  6060 ;; Defined at:
  6061 ;;		line 8 in file "adc.h"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;		None
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;  valorLido       2    4[COMRAM] int 
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  2    0[COMRAM] int 
  6068 ;; Registers used:
  6069 ;;		wreg, status,2, status,0
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6076 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6077 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6078 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6079 ;;Total ram usage:        6 bytes
  6080 ;; Hardware stack levels used:    1
  6081 ;; This function calls:
  6082 ;;		Nothing
  6083 ;; This function is called by:
  6084 ;;		_tratamento
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088                           	psect	text24
  6089  002D22                     __ptext24:
  6090                           	opt stack 0
  6091  002D22                     _lerAdcAn0:
  6092                           	opt stack 27
  6093                           
  6094                           ;adc.h: 9: ADCON0bits.CHS = 0b0000;
  6095                           
  6096                           ;incstack = 0
  6097  002D22  94C2               	bcf	4034,2,c	;volatile
  6098  002D24  96C2               	bcf	4034,3,c	;volatile
  6099  002D26  98C2               	bcf	4034,4,c	;volatile
  6100  002D28  9AC2               	bcf	4034,5,c	;volatile
  6101                           
  6102                           ;adc.h: 10: ADCON0bits.ADON = 1;
  6103  002D2A  80C2               	bsf	4034,0,c	;volatile
  6104                           
  6105                           ;adc.h: 11: int valorLido = 0;
  6106  002D2C  0E00               	movlw	0
  6107  002D2E  6E06               	movwf	lerAdcAn0@valorLido+1,c
  6108  002D30  0E00               	movlw	0
  6109  002D32  6E05               	movwf	lerAdcAn0@valorLido,c
  6110                           
  6111                           ;adc.h: 12: ADCON0bits.GO_nDONE = 1;
  6112  002D34  82C2               	bsf	4034,1,c	;volatile
  6113  002D36                     i2l57:
  6114  002D36  AC9E               	btfss	3998,6,c	;volatile
  6115  002D38  D7FE               	goto	i2l57
  6116                           
  6117                           ;adc.h: 14: valorLido = ((ADRESH<<8) | ADRESL);
  6118  002D3A  50C3               	movf	4035,w,c	;volatile
  6119  002D3C  CFC4 F003          	movff	4036,??_lerAdcAn0	;volatile
  6120  002D40  6A04               	clrf	(??_lerAdcAn0+1)& (0+255),c
  6121  002D42  C003  F004         	movff	??_lerAdcAn0,??_lerAdcAn0+1
  6122  002D46  6A03               	clrf	??_lerAdcAn0,c
  6123  002D48  1003               	iorwf	??_lerAdcAn0,w,c
  6124  002D4A  6E05               	movwf	lerAdcAn0@valorLido,c
  6125  002D4C  5004               	movf	??_lerAdcAn0+1,w,c
  6126  002D4E  6E06               	movwf	lerAdcAn0@valorLido+1,c
  6127                           
  6128                           ;adc.h: 15: PIR1bits.ADIF = 0;
  6129  002D50  9C9E               	bcf	3998,6,c	;volatile
  6130                           
  6131                           ;adc.h: 16: ADCON0bits.ADON = 0;
  6132  002D52  90C2               	bcf	4034,0,c	;volatile
  6133                           
  6134                           ;adc.h: 17: return valorLido;
  6135  002D54  C005  F001         	movff	lerAdcAn0@valorLido,?_lerAdcAn0
  6136  002D58  C006  F002         	movff	lerAdcAn0@valorLido+1,?_lerAdcAn0+1
  6137  002D5C  0012               	return	
  6138  002D5E                     __end_of_lerAdcAn0:
  6139                           	opt stack 0
  6140                           pclatu	equ	0xFFB
  6141                           pclath	equ	0xFFA
  6142                           tblptru	equ	0xFF8
  6143                           tblptrh	equ	0xFF7
  6144                           tblptrl	equ	0xFF6
  6145                           tablat	equ	0xFF5
  6146                           prodh	equ	0xFF4
  6147                           prodl	equ	0xFF3
  6148                           intcon	equ	0xFF2
  6149                           indf0	equ	0xFEF
  6150                           postinc0	equ	0xFEE
  6151                           fsr0h	equ	0xFEA
  6152                           fsr0l	equ	0xFE9
  6153                           wreg	equ	0xFE8
  6154                           fsr1h	equ	0xFE2
  6155                           fsr1l	equ	0xFE1
  6156                           postinc2	equ	0xFDE
  6157                           postdec2	equ	0xFDD
  6158                           fsr2h	equ	0xFDA
  6159                           fsr2l	equ	0xFD9
  6160                           status	equ	0xFD8
  6161                           
  6162 ;; *************** function _indexDoMenorValor *****************
  6163 ;; Defined at:
  6164 ;;		line 3 in file "analiseDeDados.h"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;  dados           2   29[COMRAM] PTR float 
  6167 ;;		 -> tensaoNaBateria(15), 
  6168 ;;  quantidadeDe    2   31[COMRAM] int 
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;  menorValor      3   34[COMRAM] float 
  6171 ;;  contador        2   39[COMRAM] int 
  6172 ;;  index           2   37[COMRAM] int 
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  2   29[COMRAM] int 
  6175 ;; Registers used:
  6176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6182 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6183 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6185 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6186 ;;Total ram usage:       12 bytes
  6187 ;; Hardware stack levels used:    1
  6188 ;; Hardware stack levels required when called:    1
  6189 ;; This function calls:
  6190 ;;		___ftge
  6191 ;;		___wmul
  6192 ;; This function is called by:
  6193 ;;		_tratamento
  6194 ;; This function uses a non-reentrant model
  6195 ;;
  6196                           
  6197                           	psect	text25
  6198  0024EC                     __ptext25:
  6199                           	opt stack 0
  6200  0024EC                     _indexDoMenorValor:
  6201                           	opt stack 26
  6202                           
  6203                           ;analiseDeDados.h: 4: int index = 0;
  6204                           
  6205                           ;incstack = 0
  6206  0024EC  0E00               	movlw	0
  6207  0024EE  6E27               	movwf	indexDoMenorValor@index+1,c
  6208  0024F0  0E00               	movlw	0
  6209  0024F2  6E26               	movwf	indexDoMenorValor@index,c
  6210                           
  6211                           ;analiseDeDados.h: 5: int contador = 0;
  6212  0024F4  0E00               	movlw	0
  6213  0024F6  6E29               	movwf	indexDoMenorValor@contador+1,c
  6214  0024F8  0E00               	movlw	0
  6215  0024FA  6E28               	movwf	indexDoMenorValor@contador,c
  6216                           
  6217                           ;analiseDeDados.h: 6: float menorValor = 0;
  6218  0024FC  0E00               	movlw	0
  6219  0024FE  6E23               	movwf	indexDoMenorValor@menorValor,c
  6220  002500  0E00               	movlw	0
  6221  002502  6E24               	movwf	indexDoMenorValor@menorValor+1,c
  6222  002504  0E00               	movlw	0
  6223  002506  6E25               	movwf	indexDoMenorValor@menorValor+2,c
  6224                           
  6225                           ;analiseDeDados.h: 7: menorValor = dados[contador];
  6226  002508  C028  F00F         	movff	indexDoMenorValor@contador,___wmul@multiplier
  6227  00250C  C029  F010         	movff	indexDoMenorValor@contador+1,___wmul@multiplier+1
  6228  002510  0E00               	movlw	0
  6229  002512  6E12               	movwf	___wmul@multiplicand+1,c
  6230  002514  0E03               	movlw	3
  6231  002516  6E11               	movwf	___wmul@multiplicand,c
  6232  002518  EC17  F017         	call	___wmul	;wreg free
  6233  00251C  500F               	movf	?___wmul,w,c
  6234  00251E  241E               	addwf	indexDoMenorValor@dados,w,c
  6235  002520  6ED9               	movwf	fsr2l,c
  6236  002522  5010               	movf	?___wmul+1,w,c
  6237  002524  201F               	addwfc	indexDoMenorValor@dados+1,w,c
  6238  002526  6EDA               	movwf	fsr2h,c
  6239  002528  CFDE F023          	movff	postinc2,indexDoMenorValor@menorValor
  6240  00252C  CFDE F024          	movff	postinc2,indexDoMenorValor@menorValor+1
  6241  002530  CFDD F025          	movff	postdec2,indexDoMenorValor@menorValor+2
  6242                           
  6243                           ;analiseDeDados.h: 8: index = contador;
  6244  002534  C028  F026         	movff	indexDoMenorValor@contador,indexDoMenorValor@index
  6245  002538  C029  F027         	movff	indexDoMenorValor@contador+1,indexDoMenorValor@index+1
  6246                           
  6247                           ;analiseDeDados.h: 10: for(contador = 0; contador < quantidadeDeValoresParaAnalisar; con
      +                          tador++) {
  6248  00253C  0E00               	movlw	0
  6249  00253E  6E29               	movwf	indexDoMenorValor@contador+1,c
  6250  002540  0E00               	movlw	0
  6251  002542  6E28               	movwf	indexDoMenorValor@contador,c
  6252  002544  D03C               	goto	i2l3276
  6253  002546                     i2l3268:
  6254                           
  6255                           ;analiseDeDados.h: 11: if(dados[contador] < menorValor) {
  6256  002546  C028  F00F         	movff	indexDoMenorValor@contador,___wmul@multiplier
  6257  00254A  C029  F010         	movff	indexDoMenorValor@contador+1,___wmul@multiplier+1
  6258  00254E  0E00               	movlw	0
  6259  002550  6E12               	movwf	___wmul@multiplicand+1,c
  6260  002552  0E03               	movlw	3
  6261  002554  6E11               	movwf	___wmul@multiplicand,c
  6262  002556  EC17  F017         	call	___wmul	;wreg free
  6263  00255A  500F               	movf	?___wmul,w,c
  6264  00255C  241E               	addwf	indexDoMenorValor@dados,w,c
  6265  00255E  6ED9               	movwf	fsr2l,c
  6266  002560  5010               	movf	?___wmul+1,w,c
  6267  002562  201F               	addwfc	indexDoMenorValor@dados+1,w,c
  6268  002564  6EDA               	movwf	fsr2h,c
  6269  002566  CFDE F015          	movff	postinc2,___ftge@ff1
  6270  00256A  CFDE F016          	movff	postinc2,___ftge@ff1+1
  6271  00256E  CFDD F017          	movff	postdec2,___ftge@ff1+2
  6272  002572  C023  F018         	movff	indexDoMenorValor@menorValor,___ftge@ff2
  6273  002576  C024  F019         	movff	indexDoMenorValor@menorValor+1,___ftge@ff2+1
  6274  00257A  C025  F01A         	movff	indexDoMenorValor@menorValor+2,___ftge@ff2+2
  6275  00257E  EC59  F014         	call	___ftge	;wreg free
  6276  002582  B0D8               	btfsc	status,0,c
  6277  002584  D01A               	goto	i2l3274
  6278                           
  6279                           ;analiseDeDados.h: 12: index = contador;
  6280  002586  C028  F026         	movff	indexDoMenorValor@contador,indexDoMenorValor@index
  6281  00258A  C029  F027         	movff	indexDoMenorValor@contador+1,indexDoMenorValor@index+1
  6282                           
  6283                           ;analiseDeDados.h: 13: menorValor = dados[contador];
  6284  00258E  C028  F00F         	movff	indexDoMenorValor@contador,___wmul@multiplier
  6285  002592  C029  F010         	movff	indexDoMenorValor@contador+1,___wmul@multiplier+1
  6286  002596  0E00               	movlw	0
  6287  002598  6E12               	movwf	___wmul@multiplicand+1,c
  6288  00259A  0E03               	movlw	3
  6289  00259C  6E11               	movwf	___wmul@multiplicand,c
  6290  00259E  EC17  F017         	call	___wmul	;wreg free
  6291  0025A2  500F               	movf	?___wmul,w,c
  6292  0025A4  241E               	addwf	indexDoMenorValor@dados,w,c
  6293  0025A6  6ED9               	movwf	fsr2l,c
  6294  0025A8  5010               	movf	?___wmul+1,w,c
  6295  0025AA  201F               	addwfc	indexDoMenorValor@dados+1,w,c
  6296  0025AC  6EDA               	movwf	fsr2h,c
  6297  0025AE  CFDE F023          	movff	postinc2,indexDoMenorValor@menorValor
  6298  0025B2  CFDE F024          	movff	postinc2,indexDoMenorValor@menorValor+1
  6299  0025B6  CFDD F025          	movff	postdec2,indexDoMenorValor@menorValor+2
  6300  0025BA                     i2l3274:
  6301  0025BA  4A28               	infsnz	indexDoMenorValor@contador,f,c
  6302  0025BC  2A29               	incf	indexDoMenorValor@contador+1,f,c
  6303  0025BE                     i2l3276:
  6304  0025BE  5020               	movf	indexDoMenorValor@quantidadeDeValoresParaAnalisar,w,c
  6305  0025C0  5C28               	subwf	indexDoMenorValor@contador,w,c
  6306  0025C2  5029               	movf	indexDoMenorValor@contador+1,w,c
  6307  0025C4  0A80               	xorlw	128
  6308  0025C6  6E22               	movwf	??_indexDoMenorValor& (0+255),c
  6309  0025C8  5021               	movf	indexDoMenorValor@quantidadeDeValoresParaAnalisar+1,w,c
  6310  0025CA  0A80               	xorlw	128
  6311  0025CC  5822               	subwfb	??_indexDoMenorValor& (0+255),w,c
  6312  0025CE  A0D8               	btfss	status,0,c
  6313  0025D0  D7BA               	goto	i2l3268
  6314                           
  6315                           ;analiseDeDados.h: 14: }
  6316                           ;analiseDeDados.h: 15: }
  6317                           ;analiseDeDados.h: 17: return index;
  6318  0025D2  C026  F01E         	movff	indexDoMenorValor@index,?_indexDoMenorValor
  6319  0025D6  C027  F01F         	movff	indexDoMenorValor@index+1,?_indexDoMenorValor+1
  6320  0025DA  0012               	return		;funcret
  6321  0025DC                     __end_of_indexDoMenorValor:
  6322                           	opt stack 0
  6323                           pclatu	equ	0xFFB
  6324                           pclath	equ	0xFFA
  6325                           tblptru	equ	0xFF8
  6326                           tblptrh	equ	0xFF7
  6327                           tblptrl	equ	0xFF6
  6328                           tablat	equ	0xFF5
  6329                           prodh	equ	0xFF4
  6330                           prodl	equ	0xFF3
  6331                           intcon	equ	0xFF2
  6332                           indf0	equ	0xFEF
  6333                           postinc0	equ	0xFEE
  6334                           fsr0h	equ	0xFEA
  6335                           fsr0l	equ	0xFE9
  6336                           wreg	equ	0xFE8
  6337                           fsr1h	equ	0xFE2
  6338                           fsr1l	equ	0xFE1
  6339                           postinc2	equ	0xFDE
  6340                           postdec2	equ	0xFDD
  6341                           fsr2h	equ	0xFDA
  6342                           fsr2l	equ	0xFD9
  6343                           status	equ	0xFD8
  6344                           
  6345 ;; *************** function _habilitarDescarregamentoDaBateria *****************
  6346 ;; Defined at:
  6347 ;;		line 31 in file "controleDaBateria.h"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;		None
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;		None
  6352 ;; Return value:  Size  Location     Type
  6353 ;;                  1    wreg      void 
  6354 ;; Registers used:
  6355 ;;		None
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6365 ;;Total ram usage:        0 bytes
  6366 ;; Hardware stack levels used:    1
  6367 ;; This function calls:
  6368 ;;		Nothing
  6369 ;; This function is called by:
  6370 ;;		_tratamento
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           	psect	text26
  6375  002F9E                     __ptext26:
  6376                           	opt stack 0
  6377  002F9E                     _habilitarDescarregamentoDaBateria:
  6378                           	opt stack 27
  6379                           
  6380                           ;controleDaBateria.h: 33: if(PORTBbits.RB0 == 1) {
  6381                           
  6382                           ;incstack = 0
  6383  002F9E  A081               	btfss	3969,0,c	;volatile
  6384  002FA0  D002               	goto	i2l131
  6385                           
  6386                           ;controleDaBateria.h: 34: PORTBbits.RB1 = 0;
  6387  002FA2  9281               	bcf	3969,1,c	;volatile
  6388                           
  6389                           ;controleDaBateria.h: 35: }
  6390  002FA4  0012               	return	
  6391  002FA6                     i2l131:
  6392                           
  6393                           ;controleDaBateria.h: 36: else {
  6394                           ;controleDaBateria.h: 37: PORTBbits.RB1 = 1;
  6395  002FA6  8281               	bsf	3969,1,c	;volatile
  6396  002FA8  0012               	return	
  6397  002FAA                     __end_of_habilitarDescarregamentoDaBateria:
  6398                           	opt stack 0
  6399                           pclatu	equ	0xFFB
  6400                           pclath	equ	0xFFA
  6401                           tblptru	equ	0xFF8
  6402                           tblptrh	equ	0xFF7
  6403                           tblptrl	equ	0xFF6
  6404                           tablat	equ	0xFF5
  6405                           prodh	equ	0xFF4
  6406                           prodl	equ	0xFF3
  6407                           intcon	equ	0xFF2
  6408                           indf0	equ	0xFEF
  6409                           postinc0	equ	0xFEE
  6410                           fsr0h	equ	0xFEA
  6411                           fsr0l	equ	0xFE9
  6412                           wreg	equ	0xFE8
  6413                           fsr1h	equ	0xFE2
  6414                           fsr1l	equ	0xFE1
  6415                           postinc2	equ	0xFDE
  6416                           postdec2	equ	0xFDD
  6417                           fsr2h	equ	0xFDA
  6418                           fsr2l	equ	0xFD9
  6419                           status	equ	0xFD8
  6420                           
  6421 ;; *************** function _habilitarCarregamentoDaBateria *****************
  6422 ;; Defined at:
  6423 ;;		line 20 in file "controleDaBateria.h"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;		None
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;		None
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  1    wreg      void 
  6430 ;; Registers used:
  6431 ;;		None
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6441 ;;Total ram usage:        0 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; This function calls:
  6444 ;;		Nothing
  6445 ;; This function is called by:
  6446 ;;		_tratamento
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449                           
  6450                           	psect	text27
  6451  002FAA                     __ptext27:
  6452                           	opt stack 0
  6453  002FAA                     _habilitarCarregamentoDaBateria:
  6454                           	opt stack 27
  6455                           
  6456                           ;controleDaBateria.h: 22: if(PORTBbits.RB1 == 1) {
  6457                           
  6458                           ;incstack = 0
  6459  002FAA  A281               	btfss	3969,1,c	;volatile
  6460  002FAC  D002               	goto	i2l126
  6461                           
  6462                           ;controleDaBateria.h: 23: PORTBbits.RB0 = 0;
  6463  002FAE  9081               	bcf	3969,0,c	;volatile
  6464                           
  6465                           ;controleDaBateria.h: 24: }
  6466  002FB0  0012               	return	
  6467  002FB2                     i2l126:
  6468                           
  6469                           ;controleDaBateria.h: 25: else {
  6470                           ;controleDaBateria.h: 26: PORTBbits.RB0 = 1;
  6471  002FB2  8081               	bsf	3969,0,c	;volatile
  6472  002FB4  0012               	return	
  6473  002FB6                     __end_of_habilitarCarregamentoDaBateria:
  6474                           	opt stack 0
  6475                           pclatu	equ	0xFFB
  6476                           pclath	equ	0xFFA
  6477                           tblptru	equ	0xFF8
  6478                           tblptrh	equ	0xFF7
  6479                           tblptrl	equ	0xFF6
  6480                           tablat	equ	0xFF5
  6481                           prodh	equ	0xFF4
  6482                           prodl	equ	0xFF3
  6483                           intcon	equ	0xFF2
  6484                           indf0	equ	0xFEF
  6485                           postinc0	equ	0xFEE
  6486                           fsr0h	equ	0xFEA
  6487                           fsr0l	equ	0xFE9
  6488                           wreg	equ	0xFE8
  6489                           fsr1h	equ	0xFE2
  6490                           fsr1l	equ	0xFE1
  6491                           postinc2	equ	0xFDE
  6492                           postdec2	equ	0xFDD
  6493                           fsr2h	equ	0xFDA
  6494                           fsr2l	equ	0xFD9
  6495                           status	equ	0xFD8
  6496                           
  6497 ;; *************** function _converterIntParaString *****************
  6498 ;; Defined at:
  6499 ;;		line 60 in file "uart.h"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;  valorParaSer    2  107[COMRAM] int 
  6502 ;; Auto vars:     Size  Location     Type
  6503 ;;  string          7  109[COMRAM] unsigned char [7]
  6504 ;; Return value:  Size  Location     Type
  6505 ;;                  1    wreg      unsigned char 
  6506 ;; Registers used:
  6507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6508 ;; Tracked objects:
  6509 ;;		On entry : 0/0
  6510 ;;		On exit  : 0/0
  6511 ;;		Unchanged: 0/0
  6512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6514 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6516 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6517 ;;Total ram usage:        9 bytes
  6518 ;; Hardware stack levels used:    1
  6519 ;; Hardware stack levels required when called:    4
  6520 ;; This function calls:
  6521 ;;		_sprintf
  6522 ;; This function is called by:
  6523 ;;		_tratamento
  6524 ;; This function uses a non-reentrant model
  6525 ;;
  6526                           
  6527                           	psect	text28
  6528  002E9C                     __ptext28:
  6529                           	opt stack 0
  6530  002E9C                     _converterIntParaString:
  6531                           	opt stack 23
  6532                           
  6533                           ;uart.h: 61: char string[7];
  6534                           ;uart.h: 62: sprintf(string, "%d", valorParaSerConvertido);
  6535                           
  6536                           ;incstack = 0
  6537  002E9C  0E6E               	movlw	low converterIntParaString@string
  6538  002E9E  6E48               	movwf	sprintf@sp,c
  6539  002EA0  0E00               	movlw	high converterIntParaString@string
  6540  002EA2  6E49               	movwf	sprintf@sp+1,c
  6541  002EA4  0EF9               	movlw	low STR_1
  6542  002EA6  6E4A               	movwf	sprintf@f,c
  6543  002EA8  0EFF               	movlw	high STR_1
  6544  002EAA  6E4B               	movwf	sprintf@f+1,c
  6545  002EAC  C06C  F04C         	movff	converterIntParaString@valorParaSerConvertido,?_sprintf+4
  6546  002EB0  C06D  F04D         	movff	converterIntParaString@valorParaSerConvertido+1,?_sprintf+5
  6547  002EB4  EC7D  F008         	call	_sprintf	;wreg free
  6548                           
  6549                           ;uart.h: 63: return string;
  6550  002EB8  0E6E               	movlw	converterIntParaString@string& (0+255)
  6551  002EBA  0012               	return	
  6552  002EBC                     __end_of_converterIntParaString:
  6553                           	opt stack 0
  6554                           pclatu	equ	0xFFB
  6555                           pclath	equ	0xFFA
  6556                           tblptru	equ	0xFF8
  6557                           tblptrh	equ	0xFF7
  6558                           tblptrl	equ	0xFF6
  6559                           tablat	equ	0xFF5
  6560                           prodh	equ	0xFF4
  6561                           prodl	equ	0xFF3
  6562                           intcon	equ	0xFF2
  6563                           indf0	equ	0xFEF
  6564                           postinc0	equ	0xFEE
  6565                           fsr0h	equ	0xFEA
  6566                           fsr0l	equ	0xFE9
  6567                           wreg	equ	0xFE8
  6568                           fsr1h	equ	0xFE2
  6569                           fsr1l	equ	0xFE1
  6570                           postinc2	equ	0xFDE
  6571                           postdec2	equ	0xFDD
  6572                           fsr2h	equ	0xFDA
  6573                           fsr2l	equ	0xFD9
  6574                           status	equ	0xFD8
  6575                           
  6576 ;; *************** function _converterFloatParaString *****************
  6577 ;; Defined at:
  6578 ;;		line 71 in file "uart.h"
  6579 ;; Parameters:    Size  Location     Type
  6580 ;;  valorParaSer    3  107[COMRAM] float 
  6581 ;; Auto vars:     Size  Location     Type
  6582 ;;  string         10  110[COMRAM] unsigned char [10]
  6583 ;; Return value:  Size  Location     Type
  6584 ;;                  1    wreg      unsigned char 
  6585 ;; Registers used:
  6586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6587 ;; Tracked objects:
  6588 ;;		On entry : 0/0
  6589 ;;		On exit  : 0/0
  6590 ;;		Unchanged: 0/0
  6591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6592 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6593 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6595 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6596 ;;Total ram usage:       13 bytes
  6597 ;; Hardware stack levels used:    1
  6598 ;; Hardware stack levels required when called:    4
  6599 ;; This function calls:
  6600 ;;		_sprintf
  6601 ;; This function is called by:
  6602 ;;		_tratamento
  6603 ;; This function uses a non-reentrant model
  6604 ;;
  6605                           
  6606                           	psect	text29
  6607  002E54                     __ptext29:
  6608                           	opt stack 0
  6609  002E54                     _converterFloatParaString:
  6610                           	opt stack 23
  6611                           
  6612                           ;uart.h: 72: char string[10];
  6613                           ;uart.h: 73: sprintf(string, "%f", valorParaSerConvertido);
  6614                           
  6615                           ;incstack = 0
  6616  002E54  0E6F               	movlw	low converterFloatParaString@string
  6617  002E56  6E48               	movwf	sprintf@sp,c
  6618  002E58  0E00               	movlw	high converterFloatParaString@string
  6619  002E5A  6E49               	movwf	sprintf@sp+1,c
  6620  002E5C  0EFC               	movlw	low STR_2
  6621  002E5E  6E4A               	movwf	sprintf@f,c
  6622  002E60  0EFF               	movlw	high STR_2
  6623  002E62  6E4B               	movwf	sprintf@f+1,c
  6624  002E64  C06C  F04C         	movff	converterFloatParaString@valorParaSerConvertido,?_sprintf+4
  6625  002E68  C06D  F04D         	movff	converterFloatParaString@valorParaSerConvertido+1,?_sprintf+5
  6626  002E6C  C06E  F04E         	movff	converterFloatParaString@valorParaSerConvertido+2,?_sprintf+6
  6627  002E70  EC7D  F008         	call	_sprintf	;wreg free
  6628                           
  6629                           ;uart.h: 74: return string;
  6630  002E74  0E6F               	movlw	converterFloatParaString@string& (0+255)
  6631  002E76  0012               	return	
  6632  002E78                     __end_of_converterFloatParaString:
  6633                           	opt stack 0
  6634                           pclatu	equ	0xFFB
  6635                           pclath	equ	0xFFA
  6636                           tblptru	equ	0xFF8
  6637                           tblptrh	equ	0xFF7
  6638                           tblptrl	equ	0xFF6
  6639                           tablat	equ	0xFF5
  6640                           prodh	equ	0xFF4
  6641                           prodl	equ	0xFF3
  6642                           intcon	equ	0xFF2
  6643                           indf0	equ	0xFEF
  6644                           postinc0	equ	0xFEE
  6645                           fsr0h	equ	0xFEA
  6646                           fsr0l	equ	0xFE9
  6647                           wreg	equ	0xFE8
  6648                           fsr1h	equ	0xFE2
  6649                           fsr1l	equ	0xFE1
  6650                           postinc2	equ	0xFDE
  6651                           postdec2	equ	0xFDD
  6652                           fsr2h	equ	0xFDA
  6653                           fsr2l	equ	0xFD9
  6654                           status	equ	0xFD8
  6655                           
  6656 ;; *************** function _sprintf *****************
  6657 ;; Defined at:
  6658 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\doprnt.c"
  6659 ;; Parameters:    Size  Location     Type
  6660 ;;  sp              2   71[COMRAM] PTR unsigned char 
  6661 ;;		 -> converterFloatParaString@string(10), converterIntParaString@string(7), 
  6662 ;;  f               2   73[COMRAM] PTR const unsigned char 
  6663 ;;		 -> STR_2(3), STR_1(3), 
  6664 ;; Auto vars:     Size  Location     Type
  6665 ;;  tmpval          4   99[COMRAM] struct .
  6666 ;;  val             4   93[COMRAM] unsigned long 
  6667 ;;  fval            3  103[COMRAM] unsigned long 
  6668 ;;  cp              3    0        PTR const unsigned char 
  6669 ;;  exp             2   97[COMRAM] int 
  6670 ;;  prec            2   91[COMRAM] int 
  6671 ;;  flag            2   89[COMRAM] unsigned short 
  6672 ;;  ap              2   87[COMRAM] PTR void [1]
  6673 ;;		 -> ?_sprintf(2), 
  6674 ;;  len             2    0        unsigned int 
  6675 ;;  width           2    0        int 
  6676 ;;  c               1  106[COMRAM] char 
  6677 ;;  d               1    0        unsigned char 
  6678 ;; Return value:  Size  Location     Type
  6679 ;;                  2   71[COMRAM] int 
  6680 ;; Registers used:
  6681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6682 ;; Tracked objects:
  6683 ;;		On entry : 0/0
  6684 ;;		On exit  : 0/0
  6685 ;;		Unchanged: 0/0
  6686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6687 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6688 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6689 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6690 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6691 ;;Total ram usage:       36 bytes
  6692 ;; Hardware stack levels used:    1
  6693 ;; Hardware stack levels required when called:    3
  6694 ;; This function calls:
  6695 ;;		___awdiv
  6696 ;;		___ftadd
  6697 ;;		___ftge
  6698 ;;		___ftmul
  6699 ;;		___ftneg
  6700 ;;		___ftsub
  6701 ;;		___fttol
  6702 ;;		___lldiv
  6703 ;;		___llmod
  6704 ;;		___lltoft
  6705 ;;		___wmul
  6706 ;;		__div_to_l_
  6707 ;;		__tdiv_to_l_
  6708 ;;		_fround
  6709 ;;		_scale
  6710 ;; This function is called by:
  6711 ;;		_converterIntParaString
  6712 ;;		_converterFloatParaString
  6713 ;; This function uses a non-reentrant model
  6714 ;;
  6715                           
  6716                           	psect	text30
  6717  0010FA                     __ptext30:
  6718                           	opt stack 0
  6719  0010FA                     _sprintf:
  6720                           	opt stack 23
  6721                           
  6722                           ;doprnt.c: 494: va_list ap;
  6723                           ;doprnt.c: 499: signed char c;
  6724                           ;doprnt.c: 501: int width;
  6725                           ;doprnt.c: 504: int prec;
  6726                           ;doprnt.c: 508: unsigned short flag;
  6727                           ;doprnt.c: 515: char d;
  6728                           ;doprnt.c: 516: double fval;
  6729                           ;doprnt.c: 517: int exp;
  6730                           ;doprnt.c: 523: union {
  6731                           ;doprnt.c: 524: unsigned long vd;
  6732                           ;doprnt.c: 525: double integ;
  6733                           ;doprnt.c: 526: } tmpval;
  6734                           ;doprnt.c: 528: unsigned long val;
  6735                           ;doprnt.c: 529: unsigned len;
  6736                           ;doprnt.c: 530: const char * cp;
  6737                           ;doprnt.c: 533: *ap = __va_start();
  6738                           
  6739                           ;incstack = 0
  6740  0010FA  0E4C               	movlw	low (?_sprintf+4)
  6741  0010FC  6E58               	movwf	sprintf@ap,c
  6742  0010FE  0E00               	movlw	high (?_sprintf+4)
  6743  001100  6E59               	movwf	sprintf@ap+1,c
  6744                           
  6745                           ;doprnt.c: 536: while(c = *f++) {
  6746  001102  D398               	goto	i2l3136
  6747  001104                     i2l2936:
  6748                           
  6749                           ;doprnt.c: 538: if(c != '%')
  6750  001104  0E25               	movlw	37
  6751  001106  186B               	xorwf	sprintf@c,w,c
  6752  001108  B4D8               	btfsc	status,2,c
  6753  00110A  D009               	goto	i2l2942
  6754                           
  6755                           ;doprnt.c: 540: {
  6756                           ;doprnt.c: 541: ((*sp++ = (c)));
  6757  00110C  C048  FFD9         	movff	sprintf@sp,fsr2l
  6758  001110  C049  FFDA         	movff	sprintf@sp+1,fsr2h
  6759  001114  C06B  FFDF         	movff	sprintf@c,indf2
  6760  001118  4A48               	infsnz	sprintf@sp,f,c
  6761  00111A  2A49               	incf	sprintf@sp+1,f,c
  6762                           
  6763                           ;doprnt.c: 542: continue;
  6764  00111C  D38B               	goto	i2l3136
  6765  00111E                     i2l2942:
  6766                           
  6767                           ;doprnt.c: 543: }
  6768                           ;doprnt.c: 548: flag = 0;
  6769  00111E  0E00               	movlw	0
  6770  001120  6E5B               	movwf	sprintf@flag+1,c
  6771  001122  0E00               	movlw	0
  6772  001124  6E5A               	movwf	sprintf@flag,c
  6773                           
  6774                           ;doprnt.c: 635: switch(c = *f++) {
  6775  001126  D002               	goto	i2l2948
  6776  001128                     i2l2944:
  6777                           
  6778                           ;doprnt.c: 663: flag |= 0x400;
  6779  001128  845B               	bsf	sprintf@flag+1,2,c
  6780                           
  6781                           ;doprnt.c: 698: case 'i':
  6782                           ;doprnt.c: 699: break;
  6783                           
  6784                           ;doprnt.c: 697: case 'd':
  6785                           
  6786                           ;doprnt.c: 664: break;
  6787  00112A  D017               	goto	i2l2950
  6788  00112C                     i2l2948:
  6789  00112C  C04A  FFF6         	movff	sprintf@f,tblptrl
  6790  001130  C04B  FFF7         	movff	sprintf@f+1,tblptrh
  6791  001134  4A4A               	infsnz	sprintf@f,f,c
  6792  001136  2A4B               	incf	sprintf@f+1,f,c
  6793  001138                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6794  001138  6AF8               	clrf	tblptru,c
  6795  00113A                     	endif
  6796  00113A                     	if	0	;tblptru may be non-zero
  6797  00113A                     	endif
  6798  00113A  0008               	tblrd		*
  6799  00113C  CFF5 F06B          	movff	tablat,sprintf@c
  6800  001140  506B               	movf	sprintf@c,w,c
  6801                           
  6802                           ; Switch size 1, requested type "space"
  6803                           ; Number of cases is 4, Range of values is 0 to 105
  6804                           ; switch strategies available:
  6805                           ; Name         Instructions Cycles
  6806                           ; simple_byte           13     7 (average)
  6807                           ;	Chosen strategy is simple_byte
  6808  001142  0A00               	xorlw	0	; case 0
  6809  001144  B4D8               	btfsc	status,2,c
  6810  001146  D383               	goto	i2l3138
  6811  001148  0A64               	xorlw	100	; case 100
  6812  00114A  B4D8               	btfsc	status,2,c
  6813  00114C  D006               	goto	i2l2950
  6814  00114E  0A02               	xorlw	2	; case 102
  6815  001150  B4D8               	btfsc	status,2,c
  6816  001152  D7EA               	goto	i2l2944
  6817  001154  0A0F               	xorlw	15	; case 105
  6818  001156  A4D8               	btfss	status,2,c
  6819  001158  D36D               	goto	i2l3136
  6820  00115A                     i2l2950:
  6821                           
  6822                           ;doprnt.c: 825: if(flag & (0x700)) {
  6823  00115A  0E07               	movlw	7
  6824  00115C  145B               	andwf	sprintf@flag+1,w,c
  6825  00115E  B4D8               	btfsc	status,2,c
  6826  001160  D2C5               	goto	i2l3096
  6827                           
  6828                           ;doprnt.c: 829: prec = 6;
  6829  001162  0E00               	movlw	0
  6830  001164  6E5D               	movwf	sprintf@prec+1,c
  6831  001166  0E06               	movlw	6
  6832  001168  6E5C               	movwf	sprintf@prec,c
  6833                           
  6834                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6835  00116A  C058  FFD9         	movff	sprintf@ap,fsr2l
  6836  00116E  C059  FFDA         	movff	sprintf@ap+1,fsr2h
  6837  001172  CFDE F068          	movff	postinc2,sprintf@fval
  6838  001176  CFDE F069          	movff	postinc2,sprintf@fval+1
  6839  00117A  CFDD F06A          	movff	postdec2,sprintf@fval+2
  6840  00117E  0E03               	movlw	3
  6841  001180  2658               	addwf	sprintf@ap,f,c
  6842  001182  0E00               	movlw	0
  6843  001184  2259               	addwfc	sprintf@ap+1,f,c
  6844                           
  6845                           ;doprnt.c: 831: if(fval < 0.0) {
  6846  001186  AE6A               	btfss	sprintf@fval+2,7,c
  6847  001188  D010               	goto	i2l2964
  6848                           
  6849                           ;doprnt.c: 832: fval = -fval;
  6850  00118A  C068  F033         	movff	sprintf@fval,___ftneg@f1
  6851  00118E  C069  F034         	movff	sprintf@fval+1,___ftneg@f1+1
  6852  001192  C06A  F035         	movff	sprintf@fval+2,___ftneg@f1+2
  6853  001196  EC3C  F017         	call	___ftneg	;wreg free
  6854  00119A  C033  F068         	movff	?___ftneg,sprintf@fval
  6855  00119E  C034  F069         	movff	?___ftneg+1,sprintf@fval+1
  6856  0011A2  C035  F06A         	movff	?___ftneg+2,sprintf@fval+2
  6857                           
  6858                           ;doprnt.c: 833: flag |= 0x03;
  6859  0011A6  0E03               	movlw	3
  6860  0011A8  125A               	iorwf	sprintf@flag,f,c
  6861  0011AA                     i2l2964:
  6862                           
  6863                           ;doprnt.c: 834: }
  6864                           ;doprnt.c: 835: exp = 0;
  6865  0011AA  0E00               	movlw	0
  6866  0011AC  6E63               	movwf	sprintf@exp+1,c
  6867  0011AE  0E00               	movlw	0
  6868  0011B0  6E62               	movwf	sprintf@exp,c
  6869                           
  6870                           ;doprnt.c: 836: if( fval!=0) {
  6871  0011B2  5068               	movf	sprintf@fval,w,c
  6872  0011B4  1069               	iorwf	sprintf@fval+1,w,c
  6873  0011B6  106A               	iorwf	sprintf@fval+2,w,c
  6874  0011B8  B4D8               	btfsc	status,2,c
  6875  0011BA  D083               	goto	i2l2992
  6876                           
  6877                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  6878  0011BC  0E82               	movlw	130
  6879  0011BE  6E4F               	movwf	??_sprintf& (0+255),c
  6880  0011C0  0EFF               	movlw	255
  6881  0011C2  6E50               	movwf	(??_sprintf+1)& (0+255),c
  6882  0011C4  C068  F051         	movff	sprintf@fval,??_sprintf+2
  6883  0011C8  C069  F052         	movff	sprintf@fval+1,??_sprintf+3
  6884  0011CC  C06A  F053         	movff	sprintf@fval+2,??_sprintf+4
  6885  0011D0  C06B  F054         	movff	sprintf@fval+3,??_sprintf+5
  6886  0011D4  0E10               	movlw	16
  6887  0011D6  D005               	goto	i2u272_40
  6888  0011D8                     i2u272_45:
  6889  0011D8  90D8               	bcf	status,0,c
  6890  0011DA  3254               	rrcf	??_sprintf+5,f,c
  6891  0011DC  3253               	rrcf	??_sprintf+4,f,c
  6892  0011DE  3252               	rrcf	??_sprintf+3,f,c
  6893  0011E0  3251               	rrcf	??_sprintf+2,f,c
  6894  0011E2                     i2u272_40:
  6895  0011E2  2EE8               	decfsz	wreg,f,c
  6896  0011E4  D7F9               	goto	i2u272_45
  6897  0011E6  5051               	movf	??_sprintf+2,w,c
  6898  0011E8  244F               	addwf	??_sprintf,w,c
  6899  0011EA  6E62               	movwf	sprintf@exp,c
  6900  0011EC  0E00               	movlw	0
  6901  0011EE  2050               	addwfc	??_sprintf+1,w,c
  6902  0011F0  6E63               	movwf	sprintf@exp+1,c
  6903                           
  6904                           ;doprnt.c: 838: exp--;
  6905  0011F2  0662               	decf	sprintf@exp,f,c
  6906  0011F4  A0D8               	btfss	status,0,c
  6907  0011F6  0663               	decf	sprintf@exp+1,f,c
  6908                           
  6909                           ;doprnt.c: 839: exp *= 3;
  6910  0011F8  C062  F00F         	movff	sprintf@exp,___wmul@multiplier
  6911  0011FC  C063  F010         	movff	sprintf@exp+1,___wmul@multiplier+1
  6912  001200  0E00               	movlw	0
  6913  001202  6E12               	movwf	___wmul@multiplicand+1,c
  6914  001204  0E03               	movlw	3
  6915  001206  6E11               	movwf	___wmul@multiplicand,c
  6916  001208  EC17  F017         	call	___wmul	;wreg free
  6917  00120C  C00F  F062         	movff	?___wmul,sprintf@exp
  6918  001210  C010  F063         	movff	?___wmul+1,sprintf@exp+1
  6919                           
  6920                           ;doprnt.c: 840: exp /= 10;
  6921  001214  C062  F007         	movff	sprintf@exp,___awdiv@dividend
  6922  001218  C063  F008         	movff	sprintf@exp+1,___awdiv@dividend+1
  6923  00121C  0E00               	movlw	0
  6924  00121E  6E0A               	movwf	___awdiv@divisor+1,c
  6925  001220  0E0A               	movlw	10
  6926  001222  6E09               	movwf	___awdiv@divisor,c
  6927  001224  ECE3  F014         	call	___awdiv	;wreg free
  6928  001228  C007  F062         	movff	?___awdiv,sprintf@exp
  6929  00122C  C008  F063         	movff	?___awdiv+1,sprintf@exp+1
  6930                           
  6931                           ;doprnt.c: 841: if(exp < 0)
  6932  001230  AE63               	btfss	sprintf@exp+1,7,c
  6933  001232  D003               	goto	i2l2980
  6934                           
  6935                           ;doprnt.c: 842: exp--;
  6936  001234  0662               	decf	sprintf@exp,f,c
  6937  001236  A0D8               	btfss	status,0,c
  6938  001238  0663               	decf	sprintf@exp+1,f,c
  6939  00123A                     i2l2980:
  6940                           
  6941                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6942  00123A  5062               	movf	sprintf@exp,w,c
  6943  00123C  0800               	sublw	0
  6944  00123E  EC2E  F00C         	call	_scale
  6945  001242  C024  F064         	movff	?_scale,sprintf@tmpval
  6946  001246  C025  F065         	movff	?_scale+1,sprintf@tmpval+1
  6947  00124A  C026  F066         	movff	?_scale+2,sprintf@tmpval+2
  6948                           
  6949                           ;doprnt.c: 847: tmpval.integ *= fval;
  6950  00124E  C064  F015         	movff	sprintf@tmpval,___ftmul@f1
  6951  001252  C065  F016         	movff	sprintf@tmpval+1,___ftmul@f1+1
  6952  001256  C066  F017         	movff	sprintf@tmpval+2,___ftmul@f1+2
  6953  00125A  C068  F018         	movff	sprintf@fval,___ftmul@f2
  6954  00125E  C069  F019         	movff	sprintf@fval+1,___ftmul@f2+1
  6955  001262  C06A  F01A         	movff	sprintf@fval+2,___ftmul@f2+2
  6956  001266  EC82  F011         	call	___ftmul	;wreg free
  6957  00126A  C015  F064         	movff	?___ftmul,sprintf@tmpval
  6958  00126E  C016  F065         	movff	?___ftmul+1,sprintf@tmpval+1
  6959  001272  C017  F066         	movff	?___ftmul+2,sprintf@tmpval+2
  6960                           
  6961                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6962  001276  C064  F015         	movff	sprintf@tmpval,___ftge@ff1
  6963  00127A  C065  F016         	movff	sprintf@tmpval+1,___ftge@ff1+1
  6964  00127E  C066  F017         	movff	sprintf@tmpval+2,___ftge@ff1+2
  6965  001282  0E00               	movlw	0
  6966  001284  6E18               	movwf	___ftge@ff2,c
  6967  001286  0E80               	movlw	128
  6968  001288  6E19               	movwf	___ftge@ff2+1,c
  6969  00128A  0E3F               	movlw	63
  6970  00128C  6E1A               	movwf	___ftge@ff2+2,c
  6971  00128E  EC59  F014         	call	___ftge	;wreg free
  6972  001292  B0D8               	btfsc	status,0,c
  6973  001294  D004               	goto	i2l2988
  6974                           
  6975                           ;doprnt.c: 849: exp--;
  6976  001296  0662               	decf	sprintf@exp,f,c
  6977  001298  A0D8               	btfss	status,0,c
  6978  00129A  0663               	decf	sprintf@exp+1,f,c
  6979  00129C  D012               	goto	i2l2992
  6980  00129E                     i2l2988:
  6981                           
  6982                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6983  00129E  C064  F015         	movff	sprintf@tmpval,___ftge@ff1
  6984  0012A2  C065  F016         	movff	sprintf@tmpval+1,___ftge@ff1+1
  6985  0012A6  C066  F017         	movff	sprintf@tmpval+2,___ftge@ff1+2
  6986  0012AA  0E00               	movlw	0
  6987  0012AC  6E18               	movwf	___ftge@ff2,c
  6988  0012AE  0E20               	movlw	32
  6989  0012B0  6E19               	movwf	___ftge@ff2+1,c
  6990  0012B2  0E41               	movlw	65
  6991  0012B4  6E1A               	movwf	___ftge@ff2+2,c
  6992  0012B6  EC59  F014         	call	___ftge	;wreg free
  6993  0012BA  A0D8               	btfss	status,0,c
  6994  0012BC  D002               	goto	i2l2992
  6995                           
  6996                           ;doprnt.c: 851: exp++;
  6997  0012BE  4A62               	infsnz	sprintf@exp,f,c
  6998  0012C0  2A63               	incf	sprintf@exp+1,f,c
  6999  0012C2                     i2l2992:
  7000                           
  7001                           ;doprnt.c: 852: }
  7002                           ;doprnt.c: 1112: if(prec <= 12)
  7003  0012C2  BE5D               	btfsc	sprintf@prec+1,7,c
  7004  0012C4  D006               	goto	i2l2994
  7005  0012C6  505D               	movf	sprintf@prec+1,w,c
  7006  0012C8  E11B               	bnz	i2l2996
  7007  0012CA  0E0D               	movlw	13
  7008  0012CC  5C5C               	subwf	sprintf@prec,w,c
  7009  0012CE  B0D8               	btfsc	status,0,c
  7010  0012D0  D017               	goto	i2l2996
  7011  0012D2                     i2l2994:
  7012                           
  7013                           ;doprnt.c: 1113: fval += fround(prec);
  7014  0012D2  C068  F036         	movff	sprintf@fval,___ftadd@f1
  7015  0012D6  C069  F037         	movff	sprintf@fval+1,___ftadd@f1+1
  7016  0012DA  C06A  F038         	movff	sprintf@fval+2,___ftadd@f1+2
  7017  0012DE  505C               	movf	sprintf@prec,w,c
  7018  0012E0  EC4A  F00E         	call	_fround
  7019  0012E4  C024  F039         	movff	?_fround,___ftadd@f2
  7020  0012E8  C025  F03A         	movff	?_fround+1,___ftadd@f2+1
  7021  0012EC  C026  F03B         	movff	?_fround+2,___ftadd@f2+2
  7022  0012F0  EC7F  F00F         	call	___ftadd	;wreg free
  7023  0012F4  C036  F068         	movff	?___ftadd,sprintf@fval
  7024  0012F8  C037  F069         	movff	?___ftadd+1,sprintf@fval+1
  7025  0012FC  C038  F06A         	movff	?___ftadd+2,sprintf@fval+2
  7026  001300                     i2l2996:
  7027                           
  7028                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7029  001300  BE63               	btfsc	sprintf@exp+1,7,c
  7030  001302  D006               	goto	i2l2998
  7031  001304  5063               	movf	sprintf@exp+1,w,c
  7032  001306  E11E               	bnz	i2l3004
  7033  001308  0E0A               	movlw	10
  7034  00130A  5C62               	subwf	sprintf@exp,w,c
  7035  00130C  B0D8               	btfsc	status,0,c
  7036  00130E  D01A               	goto	i2l3004
  7037  001310                     i2l2998:
  7038  001310  5068               	movf	sprintf@fval,w,c
  7039  001312  1069               	iorwf	sprintf@fval+1,w,c
  7040  001314  106A               	iorwf	sprintf@fval+2,w,c
  7041  001316  B4D8               	btfsc	status,2,c
  7042  001318  D051               	goto	i2l3018
  7043  00131A  C068  F024         	movff	sprintf@fval,___fttol@f1
  7044  00131E  C069  F025         	movff	sprintf@fval+1,___fttol@f1+1
  7045  001322  C06A  F026         	movff	sprintf@fval+2,___fttol@f1+2
  7046  001326  ECFC  F011         	call	___fttol	;wreg free
  7047  00132A  5024               	movf	?___fttol,w,c
  7048  00132C  1025               	iorwf	?___fttol+1,w,c
  7049  00132E  1026               	iorwf	?___fttol+2,w,c
  7050  001330  1027               	iorwf	?___fttol+3,w,c
  7051  001332  B4D8               	btfsc	status,2,c
  7052  001334  BE63               	btfsc	sprintf@exp+1,7,c
  7053  001336  D042               	goto	i2l3018
  7054  001338  5063               	movf	sprintf@exp+1,w,c
  7055  00133A  E104               	bnz	i2l3004
  7056  00133C  0E02               	movlw	2
  7057  00133E  5C62               	subwf	sprintf@exp,w,c
  7058  001340  A0D8               	btfss	status,0,c
  7059  001342  D03C               	goto	i2l3018
  7060  001344                     i2l3004:
  7061                           
  7062                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7063  001344  C064  F015         	movff	sprintf@tmpval,___ftge@ff1
  7064  001348  C065  F016         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7065  00134C  C066  F017         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7066  001350  0E70               	movlw	112
  7067  001352  6E18               	movwf	___ftge@ff2,c
  7068  001354  0E89               	movlw	137
  7069  001356  6E19               	movwf	___ftge@ff2+1,c
  7070  001358  0E40               	movlw	64
  7071  00135A  6E1A               	movwf	___ftge@ff2+2,c
  7072  00135C  EC59  F014         	call	___ftge	;wreg free
  7073  001360  B0D8               	btfsc	status,0,c
  7074  001362  D002               	goto	i2l3008
  7075                           
  7076                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7077  001364  0EF7               	movlw	247
  7078  001366  D001               	goto	L3
  7079  001368                     i2l3008:
  7080                           
  7081                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7082  001368  0EF8               	movlw	248
  7083  00136A                     L3:
  7084  00136A  2662               	addwf	sprintf@exp,f,c
  7085  00136C  0EFF               	movlw	255
  7086  00136E  2263               	addwfc	sprintf@exp+1,f,c
  7087                           
  7088                           ;doprnt.c: 1124: }
  7089                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  7090  001370  5062               	movf	sprintf@exp,w,c
  7091  001372  EC2E  F00C         	call	_scale
  7092  001376  C024  F064         	movff	?_scale,sprintf@tmpval
  7093  00137A  C025  F065         	movff	?_scale+1,sprintf@tmpval+1
  7094  00137E  C026  F066         	movff	?_scale+2,sprintf@tmpval+2
  7095                           
  7096                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7097  001382  C068  F001         	movff	sprintf@fval,__tdiv_to_l_@f1
  7098  001386  C069  F002         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  7099  00138A  C06A  F003         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  7100  00138E  C064  F004         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  7101  001392  C065  F005         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  7102  001396  C066  F006         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  7103  00139A  EC55  F010         	call	__tdiv_to_l_	;wreg free
  7104  00139E  C001  F05E         	movff	?__tdiv_to_l_,sprintf@val
  7105  0013A2  C002  F05F         	movff	?__tdiv_to_l_+1,sprintf@val+1
  7106  0013A6  C003  F060         	movff	?__tdiv_to_l_+2,sprintf@val+2
  7107  0013AA  C004  F061         	movff	?__tdiv_to_l_+3,sprintf@val+3
  7108                           
  7109                           ;doprnt.c: 1129: fval = 0.0;
  7110  0013AE  0E00               	movlw	0
  7111  0013B0  6E68               	movwf	sprintf@fval,c
  7112  0013B2  0E00               	movlw	0
  7113  0013B4  6E69               	movwf	sprintf@fval+1,c
  7114  0013B6  0E00               	movlw	0
  7115  0013B8  6E6A               	movwf	sprintf@fval+2,c
  7116                           
  7117                           ;doprnt.c: 1130: } else {
  7118  0013BA  D032               	goto	i2l3022
  7119  0013BC                     i2l3018:
  7120                           
  7121                           ;doprnt.c: 1131: val = (unsigned long)fval;
  7122  0013BC  C068  F024         	movff	sprintf@fval,___fttol@f1
  7123  0013C0  C069  F025         	movff	sprintf@fval+1,___fttol@f1+1
  7124  0013C4  C06A  F026         	movff	sprintf@fval+2,___fttol@f1+2
  7125  0013C8  ECFC  F011         	call	___fttol	;wreg free
  7126  0013CC  C024  F05E         	movff	?___fttol,sprintf@val
  7127  0013D0  C025  F05F         	movff	?___fttol+1,sprintf@val+1
  7128  0013D4  C026  F060         	movff	?___fttol+2,sprintf@val+2
  7129  0013D8  C027  F061         	movff	?___fttol+3,sprintf@val+3
  7130                           
  7131                           ;doprnt.c: 1132: fval -= (double)val;
  7132  0013DC  C068  F042         	movff	sprintf@fval,___ftsub@f1
  7133  0013E0  C069  F043         	movff	sprintf@fval+1,___ftsub@f1+1
  7134  0013E4  C06A  F044         	movff	sprintf@fval+2,___ftsub@f1+2
  7135  0013E8  C05E  F009         	movff	sprintf@val,___lltoft@c
  7136  0013EC  C05F  F00A         	movff	sprintf@val+1,___lltoft@c+1
  7137  0013F0  C060  F00B         	movff	sprintf@val+2,___lltoft@c+2
  7138  0013F4  C061  F00C         	movff	sprintf@val+3,___lltoft@c+3
  7139  0013F8  ECFF  F015         	call	___lltoft	;wreg free
  7140  0013FC  C009  F045         	movff	?___lltoft,___ftsub@f2
  7141  001400  C00A  F046         	movff	?___lltoft+1,___ftsub@f2+1
  7142  001404  C00B  F047         	movff	?___lltoft+2,___ftsub@f2+2
  7143  001408  EC53  F016         	call	___ftsub	;wreg free
  7144  00140C  C042  F068         	movff	?___ftsub,sprintf@fval
  7145  001410  C043  F069         	movff	?___ftsub+1,sprintf@fval+1
  7146  001414  C044  F06A         	movff	?___ftsub+2,sprintf@fval+2
  7147                           
  7148                           ;doprnt.c: 1133: exp = 0;
  7149  001418  0E00               	movlw	0
  7150  00141A  6E63               	movwf	sprintf@exp+1,c
  7151  00141C  0E00               	movlw	0
  7152  00141E  6E62               	movwf	sprintf@exp,c
  7153  001420                     i2l3022:
  7154                           
  7155                           ;doprnt.c: 1134: }
  7156                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7157  001420  0E01               	movlw	1
  7158  001422  6E6B               	movwf	sprintf@c,c
  7159  001424                     i2l3024:
  7160  001424  0E0A               	movlw	10
  7161  001426  186B               	xorwf	sprintf@c,w,c
  7162  001428  B4D8               	btfsc	status,2,c
  7163  00142A  D01B               	goto	i2l3036
  7164                           
  7165                           ;doprnt.c: 1137: if(val < dpowers[c])
  7166  00142C  506B               	movf	sprintf@c,w,c
  7167  00142E  0D04               	mullw	4
  7168  001430  0E67               	movlw	low _dpowers
  7169  001432  24F3               	addwf	prodl,w,c
  7170  001434  6EF6               	movwf	tblptrl,c
  7171  001436  0EFB               	movlw	high _dpowers
  7172  001438  20F4               	addwfc	prodh,w,c
  7173  00143A  6EF7               	movwf	tblptrh,c
  7174  00143C                     	if	1	;There are 3 active tblptr bytes
  7175  00143C  6AF8               	clrf	tblptru,c
  7176  00143E  0E00               	movlw	low (__mediumconst shr (0+16))
  7177  001440  22F8               	addwfc	tblptru,f,c
  7178  001442                     	endif
  7179  001442  0009               	tblrd		*+
  7180  001444  50F5               	movf	tablat,w,c
  7181  001446  5C5E               	subwf	sprintf@val,w,c
  7182  001448  0009               	tblrd		*+
  7183  00144A  50F5               	movf	tablat,w,c
  7184  00144C  585F               	subwfb	sprintf@val+1,w,c
  7185  00144E  0009               	tblrd		*+
  7186  001450  50F5               	movf	tablat,w,c
  7187  001452  5860               	subwfb	sprintf@val+2,w,c
  7188  001454  0009               	tblrd		*+
  7189  001456  50F5               	movf	tablat,w,c
  7190  001458  5861               	subwfb	sprintf@val+3,w,c
  7191  00145A  A0D8               	btfss	status,0,c
  7192  00145C  D002               	goto	i2l3036
  7193                           
  7194                           ;doprnt.c: 1138: break;
  7195  00145E  2A6B               	incf	sprintf@c,f,c
  7196  001460  D7E1               	goto	i2l3024
  7197  001462                     i2l3036:
  7198                           
  7199                           ;doprnt.c: 1175: {
  7200                           ;doprnt.c: 1188: if(flag & 0x03)
  7201  001462  0E03               	movlw	3
  7202  001464  145A               	andwf	sprintf@flag,w,c
  7203  001466  6E4F               	movwf	??_sprintf& (0+255),c
  7204  001468  0E00               	movlw	0
  7205  00146A  145B               	andwf	sprintf@flag+1,w,c
  7206  00146C  6E50               	movwf	(??_sprintf+1)& (0+255),c
  7207  00146E  504F               	movf	??_sprintf,w,c
  7208  001470  1050               	iorwf	??_sprintf+1,w,c
  7209  001472  B4D8               	btfsc	status,2,c
  7210  001474  D054               	goto	i2l3050
  7211                           
  7212                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7213  001476  C048  FFD9         	movff	sprintf@sp,fsr2l
  7214  00147A  C049  FFDA         	movff	sprintf@sp+1,fsr2h
  7215  00147E  0E2D               	movlw	45
  7216  001480  D04C               	goto	L4
  7217  001482                     i2l3040:
  7218  001482  4A48               	infsnz	sprintf@sp,f,c
  7219  001484  2A49               	incf	sprintf@sp+1,f,c
  7220                           
  7221                           ;doprnt.c: 1195: }
  7222                           ;doprnt.c: 1196: while(c--) {
  7223  001486  D04B               	goto	i2l3050
  7224  001488                     i2l3042:
  7225                           
  7226                           ;doprnt.c: 1200: {
  7227                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7228  001488  C05E  F001         	movff	sprintf@val,___lldiv@dividend
  7229  00148C  C05F  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  7230  001490  C060  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  7231  001494  C061  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  7232  001498  506B               	movf	sprintf@c,w,c
  7233  00149A  0D04               	mullw	4
  7234  00149C  0E67               	movlw	low _dpowers
  7235  00149E  24F3               	addwf	prodl,w,c
  7236  0014A0  6EF6               	movwf	tblptrl,c
  7237  0014A2  0EFB               	movlw	high _dpowers
  7238  0014A4  20F4               	addwfc	prodh,w,c
  7239  0014A6  6EF7               	movwf	tblptrh,c
  7240  0014A8                     	if	1	;There are 3 active tblptr bytes
  7241  0014A8  6AF8               	clrf	tblptru,c
  7242  0014AA  0E00               	movlw	low (__mediumconst shr (0+16))
  7243  0014AC  22F8               	addwfc	tblptru,f,c
  7244  0014AE                     	endif
  7245  0014AE  0009               	tblrd		*+
  7246  0014B0  CFF5 F005          	movff	tablat,___lldiv@divisor
  7247  0014B4  0009               	tblrd		*+
  7248  0014B6  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  7249  0014BA  0009               	tblrd		*+
  7250  0014BC  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  7251  0014C0  000A               	tblrd		*-
  7252  0014C2  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  7253  0014C6  EC25  F015         	call	___lldiv	;wreg free
  7254  0014CA  C001  F064         	movff	?___lldiv,sprintf@tmpval
  7255  0014CE  C002  F065         	movff	?___lldiv+1,sprintf@tmpval+1
  7256  0014D2  C003  F066         	movff	?___lldiv+2,sprintf@tmpval+2
  7257  0014D6  C004  F067         	movff	?___lldiv+3,sprintf@tmpval+3
  7258                           
  7259                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7260  0014DA  C064  F00E         	movff	sprintf@tmpval,___llmod@dividend
  7261  0014DE  C065  F00F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7262  0014E2  C066  F010         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7263  0014E6  C067  F011         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7264  0014EA  0E0A               	movlw	10
  7265  0014EC  6E12               	movwf	___llmod@divisor,c
  7266  0014EE  0E00               	movlw	0
  7267  0014F0  6E13               	movwf	___llmod@divisor+1,c
  7268  0014F2  0E00               	movlw	0
  7269  0014F4  6E14               	movwf	___llmod@divisor+2,c
  7270  0014F6  0E00               	movlw	0
  7271  0014F8  6E15               	movwf	___llmod@divisor+3,c
  7272  0014FA  EC9E  F015         	call	___llmod	;wreg free
  7273  0014FE  C00E  F064         	movff	?___llmod,sprintf@tmpval
  7274  001502  C00F  F065         	movff	?___llmod+1,sprintf@tmpval+1
  7275  001506  C010  F066         	movff	?___llmod+2,sprintf@tmpval+2
  7276  00150A  C011  F067         	movff	?___llmod+3,sprintf@tmpval+3
  7277                           
  7278                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7279  00150E  5064               	movf	sprintf@tmpval,w,c
  7280  001510  0F30               	addlw	48
  7281  001512  C048  FFD9         	movff	sprintf@sp,fsr2l
  7282  001516  C049  FFDA         	movff	sprintf@sp+1,fsr2h
  7283  00151A                     L4:
  7284  00151A  6EDF               	movwf	indf2,c
  7285  00151C  D7B2               	goto	i2l3040
  7286  00151E                     i2l3050:
  7287  00151E  066B               	decf	sprintf@c,f,c
  7288  001520  286B               	incf	sprintf@c,w,c
  7289  001522  B4D8               	btfsc	status,2,c
  7290  001524  D00C               	goto	i2l3058
  7291  001526  D7B0               	goto	i2l3042
  7292  001528                     i2l3052:
  7293                           
  7294                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7295  001528  C048  FFD9         	movff	sprintf@sp,fsr2l
  7296  00152C  C049  FFDA         	movff	sprintf@sp+1,fsr2h
  7297  001530  0E30               	movlw	48
  7298  001532  6EDF               	movwf	indf2,c
  7299  001534  4A48               	infsnz	sprintf@sp,f,c
  7300  001536  2A49               	incf	sprintf@sp+1,f,c
  7301                           
  7302                           ;doprnt.c: 1209: exp--;
  7303  001538  0662               	decf	sprintf@exp,f,c
  7304  00153A  A0D8               	btfss	status,0,c
  7305  00153C  0663               	decf	sprintf@exp+1,f,c
  7306  00153E                     i2l3058:
  7307  00153E  BE63               	btfsc	sprintf@exp+1,7,c
  7308  001540  D005               	goto	i2l3060
  7309  001542  5063               	movf	sprintf@exp+1,w,c
  7310  001544  E1F1               	bnz	i2l3052
  7311  001546  0462               	decf	sprintf@exp,w,c
  7312  001548  B0D8               	btfsc	status,0,c
  7313  00154A  D7EE               	goto	i2l3052
  7314  00154C                     i2l3060:
  7315                           
  7316                           ;doprnt.c: 1210: }
  7317                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7318  00154C  BE5D               	btfsc	sprintf@prec+1,7,c
  7319  00154E  D009               	goto	i2l288
  7320  001550  505D               	movf	sprintf@prec+1,w,c
  7321  001552  E104               	bnz	i2u288_40
  7322  001554  0E09               	movlw	9
  7323  001556  5C5C               	subwf	sprintf@prec,w,c
  7324  001558  A0D8               	btfss	status,0,c
  7325  00155A  D003               	goto	i2l288
  7326  00155C                     i2u288_40:
  7327                           
  7328                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7329  00155C  0E08               	movlw	8
  7330  00155E  6E6B               	movwf	sprintf@c,c
  7331  001560  D002               	goto	i2l3064
  7332  001562                     i2l288:
  7333                           
  7334                           ;doprnt.c: 1213: else
  7335                           ;doprnt.c: 1214: c = prec;
  7336  001562  C05C  F06B         	movff	sprintf@prec,sprintf@c
  7337  001566                     i2l3064:
  7338                           
  7339                           ;doprnt.c: 1215: prec -= c;
  7340  001566  506B               	movf	sprintf@c,w,c
  7341  001568  5E5C               	subwf	sprintf@prec,f,c
  7342  00156A  0E00               	movlw	0
  7343  00156C  BE6B               	btfsc	sprintf@c,7,c
  7344  00156E  0EFF               	movlw	255
  7345  001570  5A5D               	subwfb	sprintf@prec+1,f,c
  7346                           
  7347                           ;doprnt.c: 1219: if(c)
  7348  001572  506B               	movf	sprintf@c,w,c
  7349  001574  B4D8               	btfsc	status,2,c
  7350  001576  D008               	goto	i2l3072
  7351                           
  7352                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7353  001578  C048  FFD9         	movff	sprintf@sp,fsr2l
  7354  00157C  C049  FFDA         	movff	sprintf@sp+1,fsr2h
  7355  001580  0E2E               	movlw	46
  7356  001582  6EDF               	movwf	indf2,c
  7357  001584  4A48               	infsnz	sprintf@sp,f,c
  7358  001586  2A49               	incf	sprintf@sp+1,f,c
  7359  001588                     i2l3072:
  7360                           
  7361                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7362  001588  506B               	movf	sprintf@c,w,c
  7363  00158A  EC2E  F00C         	call	_scale
  7364  00158E  C024  F055         	movff	?_scale,_sprintf$1519
  7365  001592  C025  F056         	movff	?_scale+1,_sprintf$1519+1
  7366  001596  C026  F057         	movff	?_scale+2,_sprintf$1519+2
  7367                           
  7368                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7369  00159A  C068  F018         	movff	sprintf@fval,___ftmul@f2
  7370  00159E  C069  F019         	movff	sprintf@fval+1,___ftmul@f2+1
  7371  0015A2  C06A  F01A         	movff	sprintf@fval+2,___ftmul@f2+2
  7372  0015A6  C055  F015         	movff	_sprintf$1519,___ftmul@f1
  7373  0015AA  C056  F016         	movff	_sprintf$1519+1,___ftmul@f1+1
  7374  0015AE  C057  F017         	movff	_sprintf$1519+2,___ftmul@f1+2
  7375  0015B2  EC82  F011         	call	___ftmul	;wreg free
  7376  0015B6  C015  F024         	movff	?___ftmul,___fttol@f1
  7377  0015BA  C016  F025         	movff	?___ftmul+1,___fttol@f1+1
  7378  0015BE  C017  F026         	movff	?___ftmul+2,___fttol@f1+2
  7379  0015C2  ECFC  F011         	call	___fttol	;wreg free
  7380  0015C6  C024  F05E         	movff	?___fttol,sprintf@val
  7381  0015CA  C025  F05F         	movff	?___fttol+1,sprintf@val+1
  7382  0015CE  C026  F060         	movff	?___fttol+2,sprintf@val+2
  7383  0015D2  C027  F061         	movff	?___fttol+3,sprintf@val+3
  7384                           
  7385                           ;doprnt.c: 1228: while(c--) {
  7386  0015D6  D075               	goto	i2l3086
  7387  0015D8                     i2l3076:
  7388                           
  7389                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7390  0015D8  C05E  F001         	movff	sprintf@val,___lldiv@dividend
  7391  0015DC  C05F  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  7392  0015E0  C060  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  7393  0015E4  C061  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  7394  0015E8  506B               	movf	sprintf@c,w,c
  7395  0015EA  0D04               	mullw	4
  7396  0015EC  0E67               	movlw	low _dpowers
  7397  0015EE  24F3               	addwf	prodl,w,c
  7398  0015F0  6EF6               	movwf	tblptrl,c
  7399  0015F2  0EFB               	movlw	high _dpowers
  7400  0015F4  20F4               	addwfc	prodh,w,c
  7401  0015F6  6EF7               	movwf	tblptrh,c
  7402  0015F8                     	if	1	;There are 3 active tblptr bytes
  7403  0015F8  6AF8               	clrf	tblptru,c
  7404  0015FA  0E00               	movlw	low (__mediumconst shr (0+16))
  7405  0015FC  22F8               	addwfc	tblptru,f,c
  7406  0015FE                     	endif
  7407  0015FE  0009               	tblrd		*+
  7408  001600  CFF5 F005          	movff	tablat,___lldiv@divisor
  7409  001604  0009               	tblrd		*+
  7410  001606  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  7411  00160A  0009               	tblrd		*+
  7412  00160C  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  7413  001610  000A               	tblrd		*-
  7414  001612  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  7415  001616  EC25  F015         	call	___lldiv	;wreg free
  7416  00161A  C001  F064         	movff	?___lldiv,sprintf@tmpval
  7417  00161E  C002  F065         	movff	?___lldiv+1,sprintf@tmpval+1
  7418  001622  C003  F066         	movff	?___lldiv+2,sprintf@tmpval+2
  7419  001626  C004  F067         	movff	?___lldiv+3,sprintf@tmpval+3
  7420                           
  7421                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7422  00162A  C064  F00E         	movff	sprintf@tmpval,___llmod@dividend
  7423  00162E  C065  F00F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7424  001632  C066  F010         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7425  001636  C067  F011         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7426  00163A  0E0A               	movlw	10
  7427  00163C  6E12               	movwf	___llmod@divisor,c
  7428  00163E  0E00               	movlw	0
  7429  001640  6E13               	movwf	___llmod@divisor+1,c
  7430  001642  0E00               	movlw	0
  7431  001644  6E14               	movwf	___llmod@divisor+2,c
  7432  001646  0E00               	movlw	0
  7433  001648  6E15               	movwf	___llmod@divisor+3,c
  7434  00164A  EC9E  F015         	call	___llmod	;wreg free
  7435  00164E  C00E  F064         	movff	?___llmod,sprintf@tmpval
  7436  001652  C00F  F065         	movff	?___llmod+1,sprintf@tmpval+1
  7437  001656  C010  F066         	movff	?___llmod+2,sprintf@tmpval+2
  7438  00165A  C011  F067         	movff	?___llmod+3,sprintf@tmpval+3
  7439                           
  7440                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7441  00165E  5064               	movf	sprintf@tmpval,w,c
  7442  001660  0F30               	addlw	48
  7443  001662  C048  FFD9         	movff	sprintf@sp,fsr2l
  7444  001666  C049  FFDA         	movff	sprintf@sp+1,fsr2h
  7445  00166A  6EDF               	movwf	indf2,c
  7446  00166C  4A48               	infsnz	sprintf@sp,f,c
  7447  00166E  2A49               	incf	sprintf@sp+1,f,c
  7448                           
  7449                           ;doprnt.c: 1232: val %= dpowers[c];
  7450  001670  C05E  F00E         	movff	sprintf@val,___llmod@dividend
  7451  001674  C05F  F00F         	movff	sprintf@val+1,___llmod@dividend+1
  7452  001678  C060  F010         	movff	sprintf@val+2,___llmod@dividend+2
  7453  00167C  C061  F011         	movff	sprintf@val+3,___llmod@dividend+3
  7454  001680  506B               	movf	sprintf@c,w,c
  7455  001682  0D04               	mullw	4
  7456  001684  0E67               	movlw	low _dpowers
  7457  001686  24F3               	addwf	prodl,w,c
  7458  001688  6EF6               	movwf	tblptrl,c
  7459  00168A  0EFB               	movlw	high _dpowers
  7460  00168C  20F4               	addwfc	prodh,w,c
  7461  00168E  6EF7               	movwf	tblptrh,c
  7462  001690                     	if	1	;There are 3 active tblptr bytes
  7463  001690  6AF8               	clrf	tblptru,c
  7464  001692  0E00               	movlw	low (__mediumconst shr (0+16))
  7465  001694  22F8               	addwfc	tblptru,f,c
  7466  001696                     	endif
  7467  001696  0009               	tblrd		*+
  7468  001698  CFF5 F012          	movff	tablat,___llmod@divisor
  7469  00169C  0009               	tblrd		*+
  7470  00169E  CFF5 F013          	movff	tablat,___llmod@divisor+1
  7471  0016A2  0009               	tblrd		*+
  7472  0016A4  CFF5 F014          	movff	tablat,___llmod@divisor+2
  7473  0016A8  000A               	tblrd		*-
  7474  0016AA  CFF5 F015          	movff	tablat,___llmod@divisor+3
  7475  0016AE  EC9E  F015         	call	___llmod	;wreg free
  7476  0016B2  C00E  F05E         	movff	?___llmod,sprintf@val
  7477  0016B6  C00F  F05F         	movff	?___llmod+1,sprintf@val+1
  7478  0016BA  C010  F060         	movff	?___llmod+2,sprintf@val+2
  7479  0016BE  C011  F061         	movff	?___llmod+3,sprintf@val+3
  7480  0016C2                     i2l3086:
  7481  0016C2  066B               	decf	sprintf@c,f,c
  7482  0016C4  286B               	incf	sprintf@c,w,c
  7483  0016C6  B4D8               	btfsc	status,2,c
  7484  0016C8  D00C               	goto	i2l3094
  7485  0016CA  D786               	goto	i2l3076
  7486  0016CC                     i2l3088:
  7487                           
  7488                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7489  0016CC  C048  FFD9         	movff	sprintf@sp,fsr2l
  7490  0016D0  C049  FFDA         	movff	sprintf@sp+1,fsr2h
  7491  0016D4  0E30               	movlw	48
  7492  0016D6  6EDF               	movwf	indf2,c
  7493  0016D8  4A48               	infsnz	sprintf@sp,f,c
  7494  0016DA  2A49               	incf	sprintf@sp+1,f,c
  7495                           
  7496                           ;doprnt.c: 1237: prec--;
  7497  0016DC  065C               	decf	sprintf@prec,f,c
  7498  0016DE  A0D8               	btfss	status,0,c
  7499  0016E0  065D               	decf	sprintf@prec+1,f,c
  7500  0016E2                     i2l3094:
  7501  0016E2  505C               	movf	sprintf@prec,w,c
  7502  0016E4  105D               	iorwf	sprintf@prec+1,w,c
  7503  0016E6  B4D8               	btfsc	status,2,c
  7504  0016E8  D0A5               	goto	i2l3136
  7505  0016EA  D7F0               	goto	i2l3088
  7506  0016EC                     i2l3096:
  7507                           
  7508                           ;doprnt.c: 1246: }
  7509                           ;doprnt.c: 1253: {
  7510                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  7511  0016EC  C058  FFD9         	movff	sprintf@ap,fsr2l
  7512  0016F0  C059  FFDA         	movff	sprintf@ap+1,fsr2h
  7513  0016F4  CFDE F05E          	movff	postinc2,sprintf@val
  7514  0016F8  CFDD F05F          	movff	postdec2,sprintf@val+1
  7515  0016FC  0E00               	movlw	0
  7516  0016FE  BE5F               	btfsc	sprintf@val+1,7,c
  7517  001700  0EFF               	movlw	-1
  7518  001702  6E60               	movwf	sprintf@val+2,c
  7519  001704  6E61               	movwf	sprintf@val+3,c
  7520  001706  0E02               	movlw	2
  7521  001708  2658               	addwf	sprintf@ap,f,c
  7522  00170A  0E00               	movlw	0
  7523  00170C  2259               	addwfc	sprintf@ap+1,f,c
  7524                           
  7525                           ;doprnt.c: 1261: if((long)val < 0) {
  7526  00170E  AE61               	btfss	sprintf@val+3,7,c
  7527  001710  D00A               	goto	i2l3106
  7528                           
  7529                           ;doprnt.c: 1262: flag |= 0x03;
  7530  001712  0E03               	movlw	3
  7531  001714  125A               	iorwf	sprintf@flag,f,c
  7532                           
  7533                           ;doprnt.c: 1263: val = -val;
  7534  001716  1E61               	comf	sprintf@val+3,f,c
  7535  001718  1E60               	comf	sprintf@val+2,f,c
  7536  00171A  1E5F               	comf	sprintf@val+1,f,c
  7537  00171C  6C5E               	negf	sprintf@val,c
  7538  00171E  0E00               	movlw	0
  7539  001720  225F               	addwfc	sprintf@val+1,f,c
  7540  001722  2260               	addwfc	sprintf@val+2,f,c
  7541  001724  2261               	addwfc	sprintf@val+3,f,c
  7542  001726                     i2l3106:
  7543                           
  7544                           ;doprnt.c: 1264: }
  7545                           ;doprnt.c: 1266: }
  7546                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7547  001726  0E01               	movlw	1
  7548  001728  6E6B               	movwf	sprintf@c,c
  7549  00172A                     i2l3108:
  7550  00172A  0E0A               	movlw	10
  7551  00172C  186B               	xorwf	sprintf@c,w,c
  7552  00172E  B4D8               	btfsc	status,2,c
  7553  001730  D01B               	goto	i2l3120
  7554                           
  7555                           ;doprnt.c: 1306: if(val < dpowers[c])
  7556  001732  506B               	movf	sprintf@c,w,c
  7557  001734  0D04               	mullw	4
  7558  001736  0E67               	movlw	low _dpowers
  7559  001738  24F3               	addwf	prodl,w,c
  7560  00173A  6EF6               	movwf	tblptrl,c
  7561  00173C  0EFB               	movlw	high _dpowers
  7562  00173E  20F4               	addwfc	prodh,w,c
  7563  001740  6EF7               	movwf	tblptrh,c
  7564  001742                     	if	1	;There are 3 active tblptr bytes
  7565  001742  6AF8               	clrf	tblptru,c
  7566  001744  0E00               	movlw	low (__mediumconst shr (0+16))
  7567  001746  22F8               	addwfc	tblptru,f,c
  7568  001748                     	endif
  7569  001748  0009               	tblrd		*+
  7570  00174A  50F5               	movf	tablat,w,c
  7571  00174C  5C5E               	subwf	sprintf@val,w,c
  7572  00174E  0009               	tblrd		*+
  7573  001750  50F5               	movf	tablat,w,c
  7574  001752  585F               	subwfb	sprintf@val+1,w,c
  7575  001754  0009               	tblrd		*+
  7576  001756  50F5               	movf	tablat,w,c
  7577  001758  5860               	subwfb	sprintf@val+2,w,c
  7578  00175A  0009               	tblrd		*+
  7579  00175C  50F5               	movf	tablat,w,c
  7580  00175E  5861               	subwfb	sprintf@val+3,w,c
  7581  001760  A0D8               	btfss	status,0,c
  7582  001762  D002               	goto	i2l3120
  7583                           
  7584                           ;doprnt.c: 1307: break;
  7585  001764  2A6B               	incf	sprintf@c,f,c
  7586  001766  D7E1               	goto	i2l3108
  7587  001768                     i2l3120:
  7588                           
  7589                           ;doprnt.c: 1422: {
  7590                           ;doprnt.c: 1438: if(flag & 0x03)
  7591  001768  0E03               	movlw	3
  7592  00176A  145A               	andwf	sprintf@flag,w,c
  7593  00176C  6E4F               	movwf	??_sprintf& (0+255),c
  7594  00176E  0E00               	movlw	0
  7595  001770  145B               	andwf	sprintf@flag+1,w,c
  7596  001772  6E50               	movwf	(??_sprintf+1)& (0+255),c
  7597  001774  504F               	movf	??_sprintf,w,c
  7598  001776  1050               	iorwf	??_sprintf+1,w,c
  7599  001778  B4D8               	btfsc	status,2,c
  7600  00177A  D008               	goto	i2l3126
  7601                           
  7602                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7603  00177C  C048  FFD9         	movff	sprintf@sp,fsr2l
  7604  001780  C049  FFDA         	movff	sprintf@sp+1,fsr2h
  7605  001784  0E2D               	movlw	45
  7606  001786  6EDF               	movwf	indf2,c
  7607  001788  4A48               	infsnz	sprintf@sp,f,c
  7608  00178A  2A49               	incf	sprintf@sp+1,f,c
  7609  00178C                     i2l3126:
  7610                           
  7611                           ;doprnt.c: 1469: }
  7612                           ;doprnt.c: 1472: prec = c;
  7613  00178C  506B               	movf	sprintf@c,w,c
  7614  00178E  6E5C               	movwf	sprintf@prec,c
  7615  001790  6A5D               	clrf	sprintf@prec+1,c
  7616  001792  BE5C               	btfsc	sprintf@prec,7,c
  7617  001794  065D               	decf	sprintf@prec+1,f,c
  7618                           
  7619                           ;doprnt.c: 1474: while(prec--) {
  7620  001796  D046               	goto	i2l3134
  7621  001798                     i2l3128:
  7622                           
  7623                           ;doprnt.c: 1478: {
  7624                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  7625  001798  C05C  F04F         	movff	sprintf@prec,??_sprintf
  7626  00179C  C05D  F050         	movff	sprintf@prec+1,??_sprintf+1
  7627  0017A0  90D8               	bcf	status,0,c
  7628  0017A2  364F               	rlcf	??_sprintf,f,c
  7629  0017A4  3650               	rlcf	??_sprintf+1,f,c
  7630  0017A6  90D8               	bcf	status,0,c
  7631  0017A8  364F               	rlcf	??_sprintf,f,c
  7632  0017AA  3650               	rlcf	??_sprintf+1,f,c
  7633  0017AC  0E67               	movlw	low _dpowers
  7634  0017AE  244F               	addwf	??_sprintf,w,c
  7635  0017B0  6EF6               	movwf	tblptrl,c
  7636  0017B2  0EFB               	movlw	high _dpowers
  7637  0017B4  2050               	addwfc	??_sprintf+1,w,c
  7638  0017B6  6EF7               	movwf	tblptrh,c
  7639  0017B8                     	if	1	;There are 3 active tblptr bytes
  7640  0017B8  6AF8               	clrf	tblptru,c
  7641  0017BA  0E00               	movlw	low (__mediumconst shr (0+16))
  7642  0017BC  22F8               	addwfc	tblptru,f,c
  7643  0017BE                     	endif
  7644  0017BE  0009               	tblrd		*+
  7645  0017C0  CFF5 F005          	movff	tablat,___lldiv@divisor
  7646  0017C4  0009               	tblrd		*+
  7647  0017C6  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  7648  0017CA  0009               	tblrd		*+
  7649  0017CC  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  7650  0017D0  000A               	tblrd		*-
  7651  0017D2  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  7652  0017D6  C05E  F001         	movff	sprintf@val,___lldiv@dividend
  7653  0017DA  C05F  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  7654  0017DE  C060  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  7655  0017E2  C061  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  7656  0017E6  EC25  F015         	call	___lldiv	;wreg free
  7657  0017EA  C001  F00E         	movff	?___lldiv,___llmod@dividend
  7658  0017EE  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  7659  0017F2  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  7660  0017F6  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  7661  0017FA  0E0A               	movlw	10
  7662  0017FC  6E12               	movwf	___llmod@divisor,c
  7663  0017FE  0E00               	movlw	0
  7664  001800  6E13               	movwf	___llmod@divisor+1,c
  7665  001802  0E00               	movlw	0
  7666  001804  6E14               	movwf	___llmod@divisor+2,c
  7667  001806  0E00               	movlw	0
  7668  001808  6E15               	movwf	___llmod@divisor+3,c
  7669  00180A  EC9E  F015         	call	___llmod	;wreg free
  7670  00180E  500E               	movf	?___llmod,w,c
  7671  001810  0F30               	addlw	48
  7672  001812  6E6B               	movwf	sprintf@c,c
  7673                           
  7674                           ;doprnt.c: 1523: }
  7675                           ;doprnt.c: 1524: ((*sp++ = (c)));
  7676  001814  C048  FFD9         	movff	sprintf@sp,fsr2l
  7677  001818  C049  FFDA         	movff	sprintf@sp+1,fsr2h
  7678  00181C  C06B  FFDF         	movff	sprintf@c,indf2
  7679  001820  4A48               	infsnz	sprintf@sp,f,c
  7680  001822  2A49               	incf	sprintf@sp+1,f,c
  7681  001824                     i2l3134:
  7682  001824  065C               	decf	sprintf@prec,f,c
  7683  001826  A0D8               	btfss	status,0,c
  7684  001828  065D               	decf	sprintf@prec+1,f,c
  7685  00182A  285C               	incf	sprintf@prec,w,c
  7686  00182C  E1B5               	bnz	i2l3128
  7687  00182E  285D               	incf	sprintf@prec+1,w,c
  7688  001830  A4D8               	btfss	status,2,c
  7689  001832  D7B2               	goto	i2l3128
  7690  001834                     i2l3136:
  7691  001834  C04A  FFF6         	movff	sprintf@f,tblptrl
  7692  001838  C04B  FFF7         	movff	sprintf@f+1,tblptrh
  7693  00183C  4A4A               	infsnz	sprintf@f,f,c
  7694  00183E  2A4B               	incf	sprintf@f+1,f,c
  7695  001840                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7696  001840  6AF8               	clrf	tblptru,c
  7697  001842                     	endif
  7698  001842                     	if	0	;tblptru may be non-zero
  7699  001842                     	endif
  7700  001842  0008               	tblrd		*
  7701  001844  CFF5 F06B          	movff	tablat,sprintf@c
  7702  001848  506B               	movf	sprintf@c,w,c
  7703  00184A  A4D8               	btfss	status,2,c
  7704  00184C  D45B               	goto	i2l2936
  7705  00184E                     i2l3138:
  7706                           
  7707                           ;doprnt.c: 1538: *sp = 0;
  7708  00184E  C048  FFD9         	movff	sprintf@sp,fsr2l
  7709  001852  C049  FFDA         	movff	sprintf@sp+1,fsr2h
  7710  001856  0E00               	movlw	0
  7711  001858  6EDF               	movwf	indf2,c
  7712  00185A  0012               	return	
  7713  00185C                     __end_of_sprintf:
  7714                           	opt stack 0
  7715                           pclatu	equ	0xFFB
  7716                           pclath	equ	0xFFA
  7717                           tblptru	equ	0xFF8
  7718                           tblptrh	equ	0xFF7
  7719                           tblptrl	equ	0xFF6
  7720                           tablat	equ	0xFF5
  7721                           prodh	equ	0xFF4
  7722                           prodl	equ	0xFF3
  7723                           intcon	equ	0xFF2
  7724                           indf0	equ	0xFEF
  7725                           postinc0	equ	0xFEE
  7726                           fsr0h	equ	0xFEA
  7727                           fsr0l	equ	0xFE9
  7728                           wreg	equ	0xFE8
  7729                           fsr1h	equ	0xFE2
  7730                           fsr1l	equ	0xFE1
  7731                           indf2	equ	0xFDF
  7732                           postinc2	equ	0xFDE
  7733                           postdec2	equ	0xFDD
  7734                           fsr2h	equ	0xFDA
  7735                           fsr2l	equ	0xFD9
  7736                           status	equ	0xFD8
  7737                           
  7738 ;; *************** function _scale *****************
  7739 ;; Defined at:
  7740 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\doprnt.c"
  7741 ;; Parameters:    Size  Location     Type
  7742 ;;  scl             1    wreg     char 
  7743 ;; Auto vars:     Size  Location     Type
  7744 ;;  scl             1   41[COMRAM] char 
  7745 ;; Return value:  Size  Location     Type
  7746 ;;                  3   35[COMRAM] char 
  7747 ;; Registers used:
  7748 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7749 ;; Tracked objects:
  7750 ;;		On entry : 0/0
  7751 ;;		On exit  : 0/0
  7752 ;;		Unchanged: 0/0
  7753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7754 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7755 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7757 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7758 ;;Total ram usage:        7 bytes
  7759 ;; Hardware stack levels used:    1
  7760 ;; Hardware stack levels required when called:    2
  7761 ;; This function calls:
  7762 ;;		___awdiv
  7763 ;;		___awmod
  7764 ;;		___ftmul
  7765 ;;		___wmul
  7766 ;; This function is called by:
  7767 ;;		_sprintf
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           	psect	text31
  7772  00185C                     __ptext31:
  7773                           	opt stack 0
  7774  00185C                     _scale:
  7775                           	opt stack 23
  7776                           
  7777                           ;incstack = 0
  7778                           ;scale@scl stored from wreg
  7779  00185C  6E2A               	movwf	scale@scl,c
  7780                           
  7781                           ;doprnt.c: 428: if(scl < 0) {
  7782  00185E  AE2A               	btfss	scale@scl,7,c
  7783  001860  D10D               	goto	i2l2674
  7784                           
  7785                           ;doprnt.c: 429: scl = -scl;
  7786  001862  6C2A               	negf	scale@scl,c
  7787                           
  7788                           ;doprnt.c: 430: if(scl>=110)
  7789  001864  502A               	movf	scale@scl,w,c
  7790  001866  0A80               	xorlw	128
  7791  001868  0F12               	addlw	-238
  7792  00186A  A0D8               	btfss	status,0,c
  7793  00186C  D09A               	goto	i2l2664
  7794                           
  7795                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7796  00186E  0E00               	movlw	0
  7797  001870  6E12               	movwf	___wmul@multiplicand+1,c
  7798  001872  0E03               	movlw	3
  7799  001874  6E11               	movwf	___wmul@multiplicand,c
  7800  001876  0E00               	movlw	0
  7801  001878  6E0A               	movwf	___awdiv@divisor+1,c
  7802  00187A  0E0A               	movlw	10
  7803  00187C  6E09               	movwf	___awdiv@divisor,c
  7804  00187E  0E00               	movlw	0
  7805  001880  6E04               	movwf	___awmod@divisor+1,c
  7806  001882  0E64               	movlw	100
  7807  001884  6E03               	movwf	___awmod@divisor,c
  7808  001886  502A               	movf	scale@scl,w,c
  7809  001888  6E01               	movwf	___awmod@dividend,c
  7810  00188A  6A02               	clrf	___awmod@dividend+1,c
  7811  00188C  BE01               	btfsc	___awmod@dividend,7,c
  7812  00188E  0602               	decf	___awmod@dividend+1,f,c
  7813  001890  EC66  F015         	call	___awmod	;wreg free
  7814  001894  C001  F007         	movff	?___awmod,___awdiv@dividend
  7815  001898  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  7816  00189C  ECE3  F014         	call	___awdiv	;wreg free
  7817  0018A0  0E09               	movlw	9
  7818  0018A2  2407               	addwf	?___awdiv,w,c
  7819  0018A4  6E0F               	movwf	___wmul@multiplier,c
  7820  0018A6  0E00               	movlw	0
  7821  0018A8  2008               	addwfc	?___awdiv+1,w,c
  7822  0018AA  6E10               	movwf	___wmul@multiplier+1,c
  7823  0018AC  EC17  F017         	call	___wmul	;wreg free
  7824  0018B0  0EB6               	movlw	low __npowers_
  7825  0018B2  240F               	addwf	?___wmul,w,c
  7826  0018B4  6EF6               	movwf	tblptrl,c
  7827  0018B6  0EFB               	movlw	high __npowers_
  7828  0018B8  2010               	addwfc	?___wmul+1,w,c
  7829  0018BA  6EF7               	movwf	tblptrh,c
  7830  0018BC                     	if	1	;There are 3 active tblptr bytes
  7831  0018BC  6AF8               	clrf	tblptru,c
  7832  0018BE  0E00               	movlw	low (__mediumconst shr (0+16))
  7833  0018C0  22F8               	addwfc	tblptru,f,c
  7834  0018C2                     	endif
  7835  0018C2  0009               	tblrd		*+
  7836  0018C4  CFF5 F018          	movff	tablat,___ftmul@f2
  7837  0018C8  0009               	tblrd		*+
  7838  0018CA  CFF5 F019          	movff	tablat,___ftmul@f2+1
  7839  0018CE  000A               	tblrd		*-
  7840  0018D0  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  7841  0018D4  0E00               	movlw	0
  7842  0018D6  6E0A               	movwf	___awdiv@divisor+1,c
  7843  0018D8  0E64               	movlw	100
  7844  0018DA  6E09               	movwf	___awdiv@divisor,c
  7845  0018DC  502A               	movf	scale@scl,w,c
  7846  0018DE  6E07               	movwf	___awdiv@dividend,c
  7847  0018E0  6A08               	clrf	___awdiv@dividend+1,c
  7848  0018E2  BE07               	btfsc	___awdiv@dividend,7,c
  7849  0018E4  0608               	decf	___awdiv@dividend+1,f,c
  7850  0018E6  ECE3  F014         	call	___awdiv	;wreg free
  7851  0018EA  0E12               	movlw	18
  7852  0018EC  2407               	addwf	?___awdiv,w,c
  7853  0018EE  6E0F               	movwf	___wmul@multiplier,c
  7854  0018F0  0E00               	movlw	0
  7855  0018F2  2008               	addwfc	?___awdiv+1,w,c
  7856  0018F4  6E10               	movwf	___wmul@multiplier+1,c
  7857  0018F6  0E00               	movlw	0
  7858  0018F8  6E12               	movwf	___wmul@multiplicand+1,c
  7859  0018FA  0E03               	movlw	3
  7860  0018FC  6E11               	movwf	___wmul@multiplicand,c
  7861  0018FE  EC17  F017         	call	___wmul	;wreg free
  7862  001902  0EB6               	movlw	low __npowers_
  7863  001904  240F               	addwf	?___wmul,w,c
  7864  001906  6EF6               	movwf	tblptrl,c
  7865  001908  0EFB               	movlw	high __npowers_
  7866  00190A  2010               	addwfc	?___wmul+1,w,c
  7867  00190C  6EF7               	movwf	tblptrh,c
  7868  00190E                     	if	1	;There are 3 active tblptr bytes
  7869  00190E  6AF8               	clrf	tblptru,c
  7870  001910  0E00               	movlw	low (__mediumconst shr (0+16))
  7871  001912  22F8               	addwfc	tblptru,f,c
  7872  001914                     	endif
  7873  001914  0009               	tblrd		*+
  7874  001916  CFF5 F015          	movff	tablat,___ftmul@f1
  7875  00191A  0009               	tblrd		*+
  7876  00191C  CFF5 F016          	movff	tablat,___ftmul@f1+1
  7877  001920  000A               	tblrd		*-
  7878  001922  CFF5 F017          	movff	tablat,___ftmul@f1+2
  7879  001926  EC82  F011         	call	___ftmul	;wreg free
  7880  00192A  C015  F027         	movff	?___ftmul,_scale$1518
  7881  00192E  C016  F028         	movff	?___ftmul+1,_scale$1518+1
  7882  001932  C017  F029         	movff	?___ftmul+2,_scale$1518+2
  7883                           
  7884                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7885  001936  C027  F015         	movff	_scale$1518,___ftmul@f1
  7886  00193A  C028  F016         	movff	_scale$1518+1,___ftmul@f1+1
  7887  00193E  C029  F017         	movff	_scale$1518+2,___ftmul@f1+2
  7888  001942  0E00               	movlw	0
  7889  001944  6E12               	movwf	___wmul@multiplicand+1,c
  7890  001946  0E03               	movlw	3
  7891  001948  6E11               	movwf	___wmul@multiplicand,c
  7892  00194A  0E00               	movlw	0
  7893  00194C  6E04               	movwf	___awmod@divisor+1,c
  7894  00194E  0E0A               	movlw	10
  7895  001950  6E03               	movwf	___awmod@divisor,c
  7896  001952  502A               	movf	scale@scl,w,c
  7897  001954  6E01               	movwf	___awmod@dividend,c
  7898  001956  6A02               	clrf	___awmod@dividend+1,c
  7899  001958  BE01               	btfsc	___awmod@dividend,7,c
  7900  00195A  0602               	decf	___awmod@dividend+1,f,c
  7901  00195C  EC66  F015         	call	___awmod	;wreg free
  7902  001960  C001  F00F         	movff	?___awmod,___wmul@multiplier
  7903  001964  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  7904  001968  EC17  F017         	call	___wmul	;wreg free
  7905  00196C  0EB6               	movlw	low __npowers_
  7906  00196E  240F               	addwf	?___wmul,w,c
  7907  001970  6EF6               	movwf	tblptrl,c
  7908  001972  0EFB               	movlw	high __npowers_
  7909  001974  2010               	addwfc	?___wmul+1,w,c
  7910  001976  6EF7               	movwf	tblptrh,c
  7911  001978                     	if	1	;There are 3 active tblptr bytes
  7912  001978  6AF8               	clrf	tblptru,c
  7913  00197A  0E00               	movlw	low (__mediumconst shr (0+16))
  7914  00197C  22F8               	addwfc	tblptru,f,c
  7915  00197E                     	endif
  7916  00197E  0009               	tblrd		*+
  7917  001980  CFF5 F018          	movff	tablat,___ftmul@f2
  7918  001984  0009               	tblrd		*+
  7919  001986  CFF5 F019          	movff	tablat,___ftmul@f2+1
  7920  00198A  000A               	tblrd		*-
  7921  00198C  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  7922  001990  EC82  F011         	call	___ftmul	;wreg free
  7923  001994  C015  F024         	movff	?___ftmul,?_scale
  7924  001998  C016  F025         	movff	?___ftmul+1,?_scale+1
  7925  00199C  C017  F026         	movff	?___ftmul+2,?_scale+2
  7926  0019A0  0012               	return	
  7927  0019A2                     i2l2664:
  7928                           
  7929                           ;doprnt.c: 432: else if(scl > 10)
  7930  0019A2  502A               	movf	scale@scl,w,c
  7931  0019A4  0A80               	xorlw	128
  7932  0019A6  0F75               	addlw	-139
  7933  0019A8  A0D8               	btfss	status,0,c
  7934  0019AA  D053               	goto	i2l2670
  7935                           
  7936                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7937  0019AC  0E00               	movlw	0
  7938  0019AE  6E0A               	movwf	___awdiv@divisor+1,c
  7939  0019B0  0E0A               	movlw	10
  7940  0019B2  6E09               	movwf	___awdiv@divisor,c
  7941  0019B4  502A               	movf	scale@scl,w,c
  7942  0019B6  6E07               	movwf	___awdiv@dividend,c
  7943  0019B8  6A08               	clrf	___awdiv@dividend+1,c
  7944  0019BA  BE07               	btfsc	___awdiv@dividend,7,c
  7945  0019BC  0608               	decf	___awdiv@dividend+1,f,c
  7946  0019BE  ECE3  F014         	call	___awdiv	;wreg free
  7947  0019C2  0E09               	movlw	9
  7948  0019C4  2407               	addwf	?___awdiv,w,c
  7949  0019C6  6E0F               	movwf	___wmul@multiplier,c
  7950  0019C8  0E00               	movlw	0
  7951  0019CA  2008               	addwfc	?___awdiv+1,w,c
  7952  0019CC  6E10               	movwf	___wmul@multiplier+1,c
  7953  0019CE  0E00               	movlw	0
  7954  0019D0  6E12               	movwf	___wmul@multiplicand+1,c
  7955  0019D2  0E03               	movlw	3
  7956  0019D4  6E11               	movwf	___wmul@multiplicand,c
  7957  0019D6  EC17  F017         	call	___wmul	;wreg free
  7958  0019DA  0EB6               	movlw	low __npowers_
  7959  0019DC  240F               	addwf	?___wmul,w,c
  7960  0019DE  6EF6               	movwf	tblptrl,c
  7961  0019E0  0EFB               	movlw	high __npowers_
  7962  0019E2  2010               	addwfc	?___wmul+1,w,c
  7963  0019E4  6EF7               	movwf	tblptrh,c
  7964  0019E6                     	if	1	;There are 3 active tblptr bytes
  7965  0019E6  6AF8               	clrf	tblptru,c
  7966  0019E8  0E00               	movlw	low (__mediumconst shr (0+16))
  7967  0019EA  22F8               	addwfc	tblptru,f,c
  7968  0019EC                     	endif
  7969  0019EC  0009               	tblrd		*+
  7970  0019EE  CFF5 F015          	movff	tablat,___ftmul@f1
  7971  0019F2  0009               	tblrd		*+
  7972  0019F4  CFF5 F016          	movff	tablat,___ftmul@f1+1
  7973  0019F8  000A               	tblrd		*-
  7974  0019FA  CFF5 F017          	movff	tablat,___ftmul@f1+2
  7975  0019FE  0E00               	movlw	0
  7976  001A00  6E12               	movwf	___wmul@multiplicand+1,c
  7977  001A02  0E03               	movlw	3
  7978  001A04  6E11               	movwf	___wmul@multiplicand,c
  7979  001A06  0E00               	movlw	0
  7980  001A08  6E04               	movwf	___awmod@divisor+1,c
  7981  001A0A  0E0A               	movlw	10
  7982  001A0C  6E03               	movwf	___awmod@divisor,c
  7983  001A0E  502A               	movf	scale@scl,w,c
  7984  001A10  6E01               	movwf	___awmod@dividend,c
  7985  001A12  6A02               	clrf	___awmod@dividend+1,c
  7986  001A14  BE01               	btfsc	___awmod@dividend,7,c
  7987  001A16  0602               	decf	___awmod@dividend+1,f,c
  7988  001A18  EC66  F015         	call	___awmod	;wreg free
  7989  001A1C  C001  F00F         	movff	?___awmod,___wmul@multiplier
  7990  001A20  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  7991  001A24  EC17  F017         	call	___wmul	;wreg free
  7992  001A28  0EB6               	movlw	low __npowers_
  7993  001A2A  240F               	addwf	?___wmul,w,c
  7994  001A2C  6EF6               	movwf	tblptrl,c
  7995  001A2E  0EFB               	movlw	high __npowers_
  7996  001A30  2010               	addwfc	?___wmul+1,w,c
  7997  001A32  6EF7               	movwf	tblptrh,c
  7998  001A34                     	if	1	;There are 3 active tblptr bytes
  7999  001A34  6AF8               	clrf	tblptru,c
  8000  001A36  0E00               	movlw	low (__mediumconst shr (0+16))
  8001  001A38  22F8               	addwfc	tblptru,f,c
  8002  001A3A                     	endif
  8003  001A3A  0009               	tblrd		*+
  8004  001A3C  CFF5 F018          	movff	tablat,___ftmul@f2
  8005  001A40  0009               	tblrd		*+
  8006  001A42  CFF5 F019          	movff	tablat,___ftmul@f2+1
  8007  001A46  000A               	tblrd		*-
  8008  001A48  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  8009  001A4C  EC82  F011         	call	___ftmul	;wreg free
  8010  001A50  D7A1               	goto	L5
  8011  001A52                     i2l2670:
  8012                           
  8013                           ;doprnt.c: 434: return _npowers_[scl];
  8014  001A52  502A               	movf	scale@scl,w,c
  8015  001A54  0D03               	mullw	3
  8016  001A56  0EB6               	movlw	low __npowers_
  8017  001A58  24F3               	addwf	prodl,w,c
  8018  001A5A  6EF6               	movwf	tblptrl,c
  8019  001A5C  0EFB               	movlw	high __npowers_
  8020  001A5E  20F4               	addwfc	prodh,w,c
  8021  001A60  6EF7               	movwf	tblptrh,c
  8022  001A62                     	if	1	;There are 3 active tblptr bytes
  8023  001A62  6AF8               	clrf	tblptru,c
  8024  001A64  0E00               	movlw	low (__mediumconst shr (0+16))
  8025  001A66  22F8               	addwfc	tblptru,f,c
  8026  001A68                     	endif
  8027  001A68  0009               	tblrd		*+
  8028  001A6A  CFF5 F024          	movff	tablat,?_scale
  8029  001A6E  0009               	tblrd		*+
  8030  001A70  CFF5 F025          	movff	tablat,?_scale+1
  8031  001A74  000A               	tblrd		*-
  8032  001A76  CFF5 F026          	movff	tablat,?_scale+2
  8033  001A7A  0012               	return	
  8034  001A7C                     i2l2674:
  8035                           
  8036                           ;doprnt.c: 435: }
  8037                           ;doprnt.c: 436: if(scl>=110)
  8038  001A7C  502A               	movf	scale@scl,w,c
  8039  001A7E  0A80               	xorlw	128
  8040  001A80  0F12               	addlw	-238
  8041  001A82  A0D8               	btfss	status,0,c
  8042  001A84  D09A               	goto	i2l2682
  8043                           
  8044                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8045  001A86  0E00               	movlw	0
  8046  001A88  6E12               	movwf	___wmul@multiplicand+1,c
  8047  001A8A  0E03               	movlw	3
  8048  001A8C  6E11               	movwf	___wmul@multiplicand,c
  8049  001A8E  0E00               	movlw	0
  8050  001A90  6E0A               	movwf	___awdiv@divisor+1,c
  8051  001A92  0E0A               	movlw	10
  8052  001A94  6E09               	movwf	___awdiv@divisor,c
  8053  001A96  0E00               	movlw	0
  8054  001A98  6E04               	movwf	___awmod@divisor+1,c
  8055  001A9A  0E64               	movlw	100
  8056  001A9C  6E03               	movwf	___awmod@divisor,c
  8057  001A9E  502A               	movf	scale@scl,w,c
  8058  001AA0  6E01               	movwf	___awmod@dividend,c
  8059  001AA2  6A02               	clrf	___awmod@dividend+1,c
  8060  001AA4  BE01               	btfsc	___awmod@dividend,7,c
  8061  001AA6  0602               	decf	___awmod@dividend+1,f,c
  8062  001AA8  EC66  F015         	call	___awmod	;wreg free
  8063  001AAC  C001  F007         	movff	?___awmod,___awdiv@dividend
  8064  001AB0  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  8065  001AB4  ECE3  F014         	call	___awdiv	;wreg free
  8066  001AB8  0E09               	movlw	9
  8067  001ABA  2407               	addwf	?___awdiv,w,c
  8068  001ABC  6E0F               	movwf	___wmul@multiplier,c
  8069  001ABE  0E00               	movlw	0
  8070  001AC0  2008               	addwfc	?___awdiv+1,w,c
  8071  001AC2  6E10               	movwf	___wmul@multiplier+1,c
  8072  001AC4  EC17  F017         	call	___wmul	;wreg free
  8073  001AC8  0E8F               	movlw	low __powers_
  8074  001ACA  240F               	addwf	?___wmul,w,c
  8075  001ACC  6EF6               	movwf	tblptrl,c
  8076  001ACE  0EFB               	movlw	high __powers_
  8077  001AD0  2010               	addwfc	?___wmul+1,w,c
  8078  001AD2  6EF7               	movwf	tblptrh,c
  8079  001AD4                     	if	1	;There are 3 active tblptr bytes
  8080  001AD4  6AF8               	clrf	tblptru,c
  8081  001AD6  0E00               	movlw	low (__mediumconst shr (0+16))
  8082  001AD8  22F8               	addwfc	tblptru,f,c
  8083  001ADA                     	endif
  8084  001ADA  0009               	tblrd		*+
  8085  001ADC  CFF5 F018          	movff	tablat,___ftmul@f2
  8086  001AE0  0009               	tblrd		*+
  8087  001AE2  CFF5 F019          	movff	tablat,___ftmul@f2+1
  8088  001AE6  000A               	tblrd		*-
  8089  001AE8  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  8090  001AEC  0E00               	movlw	0
  8091  001AEE  6E0A               	movwf	___awdiv@divisor+1,c
  8092  001AF0  0E64               	movlw	100
  8093  001AF2  6E09               	movwf	___awdiv@divisor,c
  8094  001AF4  502A               	movf	scale@scl,w,c
  8095  001AF6  6E07               	movwf	___awdiv@dividend,c
  8096  001AF8  6A08               	clrf	___awdiv@dividend+1,c
  8097  001AFA  BE07               	btfsc	___awdiv@dividend,7,c
  8098  001AFC  0608               	decf	___awdiv@dividend+1,f,c
  8099  001AFE  ECE3  F014         	call	___awdiv	;wreg free
  8100  001B02  0E12               	movlw	18
  8101  001B04  2407               	addwf	?___awdiv,w,c
  8102  001B06  6E0F               	movwf	___wmul@multiplier,c
  8103  001B08  0E00               	movlw	0
  8104  001B0A  2008               	addwfc	?___awdiv+1,w,c
  8105  001B0C  6E10               	movwf	___wmul@multiplier+1,c
  8106  001B0E  0E00               	movlw	0
  8107  001B10  6E12               	movwf	___wmul@multiplicand+1,c
  8108  001B12  0E03               	movlw	3
  8109  001B14  6E11               	movwf	___wmul@multiplicand,c
  8110  001B16  EC17  F017         	call	___wmul	;wreg free
  8111  001B1A  0E8F               	movlw	low __powers_
  8112  001B1C  240F               	addwf	?___wmul,w,c
  8113  001B1E  6EF6               	movwf	tblptrl,c
  8114  001B20  0EFB               	movlw	high __powers_
  8115  001B22  2010               	addwfc	?___wmul+1,w,c
  8116  001B24  6EF7               	movwf	tblptrh,c
  8117  001B26                     	if	1	;There are 3 active tblptr bytes
  8118  001B26  6AF8               	clrf	tblptru,c
  8119  001B28  0E00               	movlw	low (__mediumconst shr (0+16))
  8120  001B2A  22F8               	addwfc	tblptru,f,c
  8121  001B2C                     	endif
  8122  001B2C  0009               	tblrd		*+
  8123  001B2E  CFF5 F015          	movff	tablat,___ftmul@f1
  8124  001B32  0009               	tblrd		*+
  8125  001B34  CFF5 F016          	movff	tablat,___ftmul@f1+1
  8126  001B38  000A               	tblrd		*-
  8127  001B3A  CFF5 F017          	movff	tablat,___ftmul@f1+2
  8128  001B3E  EC82  F011         	call	___ftmul	;wreg free
  8129  001B42  C015  F027         	movff	?___ftmul,_scale$1518
  8130  001B46  C016  F028         	movff	?___ftmul+1,_scale$1518+1
  8131  001B4A  C017  F029         	movff	?___ftmul+2,_scale$1518+2
  8132                           
  8133                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8134  001B4E  C027  F015         	movff	_scale$1518,___ftmul@f1
  8135  001B52  C028  F016         	movff	_scale$1518+1,___ftmul@f1+1
  8136  001B56  C029  F017         	movff	_scale$1518+2,___ftmul@f1+2
  8137  001B5A  0E00               	movlw	0
  8138  001B5C  6E12               	movwf	___wmul@multiplicand+1,c
  8139  001B5E  0E03               	movlw	3
  8140  001B60  6E11               	movwf	___wmul@multiplicand,c
  8141  001B62  0E00               	movlw	0
  8142  001B64  6E04               	movwf	___awmod@divisor+1,c
  8143  001B66  0E0A               	movlw	10
  8144  001B68  6E03               	movwf	___awmod@divisor,c
  8145  001B6A  502A               	movf	scale@scl,w,c
  8146  001B6C  6E01               	movwf	___awmod@dividend,c
  8147  001B6E  6A02               	clrf	___awmod@dividend+1,c
  8148  001B70  BE01               	btfsc	___awmod@dividend,7,c
  8149  001B72  0602               	decf	___awmod@dividend+1,f,c
  8150  001B74  EC66  F015         	call	___awmod	;wreg free
  8151  001B78  C001  F00F         	movff	?___awmod,___wmul@multiplier
  8152  001B7C  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  8153  001B80  EC17  F017         	call	___wmul	;wreg free
  8154  001B84  0E8F               	movlw	low __powers_
  8155  001B86  240F               	addwf	?___wmul,w,c
  8156  001B88  6EF6               	movwf	tblptrl,c
  8157  001B8A  0EFB               	movlw	high __powers_
  8158  001B8C  2010               	addwfc	?___wmul+1,w,c
  8159  001B8E  6EF7               	movwf	tblptrh,c
  8160  001B90                     	if	1	;There are 3 active tblptr bytes
  8161  001B90  6AF8               	clrf	tblptru,c
  8162  001B92  0E00               	movlw	low (__mediumconst shr (0+16))
  8163  001B94  22F8               	addwfc	tblptru,f,c
  8164  001B96                     	endif
  8165  001B96  0009               	tblrd		*+
  8166  001B98  CFF5 F018          	movff	tablat,___ftmul@f2
  8167  001B9C  0009               	tblrd		*+
  8168  001B9E  CFF5 F019          	movff	tablat,___ftmul@f2+1
  8169  001BA2  000A               	tblrd		*-
  8170  001BA4  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  8171  001BA8  EC82  F011         	call	___ftmul	;wreg free
  8172  001BAC  C015  F024         	movff	?___ftmul,?_scale
  8173  001BB0  C016  F025         	movff	?___ftmul+1,?_scale+1
  8174  001BB4  C017  F026         	movff	?___ftmul+2,?_scale+2
  8175  001BB8  0012               	return	
  8176  001BBA                     i2l2682:
  8177                           
  8178                           ;doprnt.c: 438: else if(scl > 10)
  8179  001BBA  502A               	movf	scale@scl,w,c
  8180  001BBC  0A80               	xorlw	128
  8181  001BBE  0F75               	addlw	-139
  8182  001BC0  A0D8               	btfss	status,0,c
  8183  001BC2  D053               	goto	i2l2688
  8184                           
  8185                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8186  001BC4  0E00               	movlw	0
  8187  001BC6  6E0A               	movwf	___awdiv@divisor+1,c
  8188  001BC8  0E0A               	movlw	10
  8189  001BCA  6E09               	movwf	___awdiv@divisor,c
  8190  001BCC  502A               	movf	scale@scl,w,c
  8191  001BCE  6E07               	movwf	___awdiv@dividend,c
  8192  001BD0  6A08               	clrf	___awdiv@dividend+1,c
  8193  001BD2  BE07               	btfsc	___awdiv@dividend,7,c
  8194  001BD4  0608               	decf	___awdiv@dividend+1,f,c
  8195  001BD6  ECE3  F014         	call	___awdiv	;wreg free
  8196  001BDA  0E09               	movlw	9
  8197  001BDC  2407               	addwf	?___awdiv,w,c
  8198  001BDE  6E0F               	movwf	___wmul@multiplier,c
  8199  001BE0  0E00               	movlw	0
  8200  001BE2  2008               	addwfc	?___awdiv+1,w,c
  8201  001BE4  6E10               	movwf	___wmul@multiplier+1,c
  8202  001BE6  0E00               	movlw	0
  8203  001BE8  6E12               	movwf	___wmul@multiplicand+1,c
  8204  001BEA  0E03               	movlw	3
  8205  001BEC  6E11               	movwf	___wmul@multiplicand,c
  8206  001BEE  EC17  F017         	call	___wmul	;wreg free
  8207  001BF2  0E8F               	movlw	low __powers_
  8208  001BF4  240F               	addwf	?___wmul,w,c
  8209  001BF6  6EF6               	movwf	tblptrl,c
  8210  001BF8  0EFB               	movlw	high __powers_
  8211  001BFA  2010               	addwfc	?___wmul+1,w,c
  8212  001BFC  6EF7               	movwf	tblptrh,c
  8213  001BFE                     	if	1	;There are 3 active tblptr bytes
  8214  001BFE  6AF8               	clrf	tblptru,c
  8215  001C00  0E00               	movlw	low (__mediumconst shr (0+16))
  8216  001C02  22F8               	addwfc	tblptru,f,c
  8217  001C04                     	endif
  8218  001C04  0009               	tblrd		*+
  8219  001C06  CFF5 F015          	movff	tablat,___ftmul@f1
  8220  001C0A  0009               	tblrd		*+
  8221  001C0C  CFF5 F016          	movff	tablat,___ftmul@f1+1
  8222  001C10  000A               	tblrd		*-
  8223  001C12  CFF5 F017          	movff	tablat,___ftmul@f1+2
  8224  001C16  0E00               	movlw	0
  8225  001C18  6E12               	movwf	___wmul@multiplicand+1,c
  8226  001C1A  0E03               	movlw	3
  8227  001C1C  6E11               	movwf	___wmul@multiplicand,c
  8228  001C1E  0E00               	movlw	0
  8229  001C20  6E04               	movwf	___awmod@divisor+1,c
  8230  001C22  0E0A               	movlw	10
  8231  001C24  6E03               	movwf	___awmod@divisor,c
  8232  001C26  502A               	movf	scale@scl,w,c
  8233  001C28  6E01               	movwf	___awmod@dividend,c
  8234  001C2A  6A02               	clrf	___awmod@dividend+1,c
  8235  001C2C  BE01               	btfsc	___awmod@dividend,7,c
  8236  001C2E  0602               	decf	___awmod@dividend+1,f,c
  8237  001C30  EC66  F015         	call	___awmod	;wreg free
  8238  001C34  C001  F00F         	movff	?___awmod,___wmul@multiplier
  8239  001C38  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  8240  001C3C  EC17  F017         	call	___wmul	;wreg free
  8241  001C40  0E8F               	movlw	low __powers_
  8242  001C42  240F               	addwf	?___wmul,w,c
  8243  001C44  6EF6               	movwf	tblptrl,c
  8244  001C46  0EFB               	movlw	high __powers_
  8245  001C48  2010               	addwfc	?___wmul+1,w,c
  8246  001C4A  6EF7               	movwf	tblptrh,c
  8247  001C4C                     	if	1	;There are 3 active tblptr bytes
  8248  001C4C  6AF8               	clrf	tblptru,c
  8249  001C4E  0E00               	movlw	low (__mediumconst shr (0+16))
  8250  001C50  22F8               	addwfc	tblptru,f,c
  8251  001C52                     	endif
  8252  001C52  0009               	tblrd		*+
  8253  001C54  CFF5 F018          	movff	tablat,___ftmul@f2
  8254  001C58  0009               	tblrd		*+
  8255  001C5A  CFF5 F019          	movff	tablat,___ftmul@f2+1
  8256  001C5E  000A               	tblrd		*-
  8257  001C60  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  8258  001C64  EC82  F011         	call	___ftmul	;wreg free
  8259  001C68  D7A1               	goto	L6
  8260  001C6A                     i2l2688:
  8261                           
  8262                           ;doprnt.c: 440: return _powers_[scl];
  8263  001C6A  502A               	movf	scale@scl,w,c
  8264  001C6C  0D03               	mullw	3
  8265  001C6E  0E8F               	movlw	low __powers_
  8266  001C70  24F3               	addwf	prodl,w,c
  8267  001C72  6EF6               	movwf	tblptrl,c
  8268  001C74  0EFB               	movlw	high __powers_
  8269  001C76  20F4               	addwfc	prodh,w,c
  8270  001C78  6EF7               	movwf	tblptrh,c
  8271  001C7A                     	if	1	;There are 3 active tblptr bytes
  8272  001C7A  6AF8               	clrf	tblptru,c
  8273  001C7C  0E00               	movlw	low (__mediumconst shr (0+16))
  8274  001C7E  22F8               	addwfc	tblptru,f,c
  8275  001C80                     	endif
  8276  001C80  0009               	tblrd		*+
  8277  001C82  CFF5 F024          	movff	tablat,?_scale
  8278  001C86  0009               	tblrd		*+
  8279  001C88  CFF5 F025          	movff	tablat,?_scale+1
  8280  001C8C  000A               	tblrd		*-
  8281  001C8E  CFF5 F026          	movff	tablat,?_scale+2
  8282  001C92  0012               	return	
  8283  001C94                     __end_of_scale:
  8284                           	opt stack 0
  8285                           pclatu	equ	0xFFB
  8286                           pclath	equ	0xFFA
  8287                           tblptru	equ	0xFF8
  8288                           tblptrh	equ	0xFF7
  8289                           tblptrl	equ	0xFF6
  8290                           tablat	equ	0xFF5
  8291                           prodh	equ	0xFF4
  8292                           prodl	equ	0xFF3
  8293                           intcon	equ	0xFF2
  8294                           indf0	equ	0xFEF
  8295                           postinc0	equ	0xFEE
  8296                           fsr0h	equ	0xFEA
  8297                           fsr0l	equ	0xFE9
  8298                           wreg	equ	0xFE8
  8299                           fsr1h	equ	0xFE2
  8300                           fsr1l	equ	0xFE1
  8301                           indf2	equ	0xFDF
  8302                           postinc2	equ	0xFDE
  8303                           postdec2	equ	0xFDD
  8304                           fsr2h	equ	0xFDA
  8305                           fsr2l	equ	0xFD9
  8306                           status	equ	0xFD8
  8307                           
  8308 ;; *************** function _fround *****************
  8309 ;; Defined at:
  8310 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\doprnt.c"
  8311 ;; Parameters:    Size  Location     Type
  8312 ;;  prec            1    wreg     unsigned char 
  8313 ;; Auto vars:     Size  Location     Type
  8314 ;;  prec            1   44[COMRAM] unsigned char 
  8315 ;; Return value:  Size  Location     Type
  8316 ;;                  3   35[COMRAM] unsigned char 
  8317 ;; Registers used:
  8318 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8319 ;; Tracked objects:
  8320 ;;		On entry : 0/0
  8321 ;;		On exit  : 0/0
  8322 ;;		Unchanged: 0/0
  8323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8324 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8325 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8327 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8328 ;;Total ram usage:       10 bytes
  8329 ;; Hardware stack levels used:    1
  8330 ;; Hardware stack levels required when called:    2
  8331 ;; This function calls:
  8332 ;;		___awdiv
  8333 ;;		___awmod
  8334 ;;		___ftmul
  8335 ;;		___wmul
  8336 ;; This function is called by:
  8337 ;;		_sprintf
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341                           	psect	text32
  8342  001C94                     __ptext32:
  8343                           	opt stack 0
  8344  001C94                     _fround:
  8345                           	opt stack 23
  8346                           
  8347                           ;incstack = 0
  8348                           ;fround@prec stored from wreg
  8349  001C94  6E2D               	movwf	fround@prec,c
  8350                           
  8351                           ;doprnt.c: 413: if(prec>=110)
  8352  001C96  0E6D               	movlw	109
  8353  001C98  642D               	cpfsgt	fround@prec,c
  8354  001C9A  D0A8               	goto	i2l2642
  8355                           
  8356                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8357  001C9C  0E00               	movlw	0
  8358  001C9E  6E12               	movwf	___wmul@multiplicand+1,c
  8359  001CA0  0E03               	movlw	3
  8360  001CA2  6E11               	movwf	___wmul@multiplicand,c
  8361  001CA4  0E00               	movlw	0
  8362  001CA6  6E0A               	movwf	___awdiv@divisor+1,c
  8363  001CA8  0E0A               	movlw	10
  8364  001CAA  6E09               	movwf	___awdiv@divisor,c
  8365  001CAC  0E00               	movlw	0
  8366  001CAE  6E04               	movwf	___awmod@divisor+1,c
  8367  001CB0  0E64               	movlw	100
  8368  001CB2  6E03               	movwf	___awmod@divisor,c
  8369  001CB4  C02D  F001         	movff	fround@prec,___awmod@dividend
  8370  001CB8  6A02               	clrf	___awmod@dividend+1,c
  8371  001CBA  EC66  F015         	call	___awmod	;wreg free
  8372  001CBE  C001  F007         	movff	?___awmod,___awdiv@dividend
  8373  001CC2  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  8374  001CC6  ECE3  F014         	call	___awdiv	;wreg free
  8375  001CCA  0E09               	movlw	9
  8376  001CCC  2407               	addwf	?___awdiv,w,c
  8377  001CCE  6E0F               	movwf	___wmul@multiplier,c
  8378  001CD0  0E00               	movlw	0
  8379  001CD2  2008               	addwfc	?___awdiv+1,w,c
  8380  001CD4  6E10               	movwf	___wmul@multiplier+1,c
  8381  001CD6  EC17  F017         	call	___wmul	;wreg free
  8382  001CDA  0EB6               	movlw	low __npowers_
  8383  001CDC  240F               	addwf	?___wmul,w,c
  8384  001CDE  6EF6               	movwf	tblptrl,c
  8385  001CE0  0EFB               	movlw	high __npowers_
  8386  001CE2  2010               	addwfc	?___wmul+1,w,c
  8387  001CE4  6EF7               	movwf	tblptrh,c
  8388  001CE6                     	if	1	;There are 3 active tblptr bytes
  8389  001CE6  6AF8               	clrf	tblptru,c
  8390  001CE8  0E00               	movlw	low (__mediumconst shr (0+16))
  8391  001CEA  22F8               	addwfc	tblptru,f,c
  8392  001CEC                     	endif
  8393  001CEC  0009               	tblrd		*+
  8394  001CEE  CFF5 F018          	movff	tablat,___ftmul@f2
  8395  001CF2  0009               	tblrd		*+
  8396  001CF4  CFF5 F019          	movff	tablat,___ftmul@f2+1
  8397  001CF8  000A               	tblrd		*-
  8398  001CFA  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  8399  001CFE  0E00               	movlw	0
  8400  001D00  6E0A               	movwf	___awdiv@divisor+1,c
  8401  001D02  0E64               	movlw	100
  8402  001D04  6E09               	movwf	___awdiv@divisor,c
  8403  001D06  C02D  F007         	movff	fround@prec,___awdiv@dividend
  8404  001D0A  6A08               	clrf	___awdiv@dividend+1,c
  8405  001D0C  ECE3  F014         	call	___awdiv	;wreg free
  8406  001D10  0E12               	movlw	18
  8407  001D12  2407               	addwf	?___awdiv,w,c
  8408  001D14  6E0F               	movwf	___wmul@multiplier,c
  8409  001D16  0E00               	movlw	0
  8410  001D18  2008               	addwfc	?___awdiv+1,w,c
  8411  001D1A  6E10               	movwf	___wmul@multiplier+1,c
  8412  001D1C  0E00               	movlw	0
  8413  001D1E  6E12               	movwf	___wmul@multiplicand+1,c
  8414  001D20  0E03               	movlw	3
  8415  001D22  6E11               	movwf	___wmul@multiplicand,c
  8416  001D24  EC17  F017         	call	___wmul	;wreg free
  8417  001D28  0EB6               	movlw	low __npowers_
  8418  001D2A  240F               	addwf	?___wmul,w,c
  8419  001D2C  6EF6               	movwf	tblptrl,c
  8420  001D2E  0EFB               	movlw	high __npowers_
  8421  001D30  2010               	addwfc	?___wmul+1,w,c
  8422  001D32  6EF7               	movwf	tblptrh,c
  8423  001D34                     	if	1	;There are 3 active tblptr bytes
  8424  001D34  6AF8               	clrf	tblptru,c
  8425  001D36  0E00               	movlw	low (__mediumconst shr (0+16))
  8426  001D38  22F8               	addwfc	tblptru,f,c
  8427  001D3A                     	endif
  8428  001D3A  0009               	tblrd		*+
  8429  001D3C  CFF5 F015          	movff	tablat,___ftmul@f1
  8430  001D40  0009               	tblrd		*+
  8431  001D42  CFF5 F016          	movff	tablat,___ftmul@f1+1
  8432  001D46  000A               	tblrd		*-
  8433  001D48  CFF5 F017          	movff	tablat,___ftmul@f1+2
  8434  001D4C  EC82  F011         	call	___ftmul	;wreg free
  8435  001D50  C015  F02A         	movff	?___ftmul,_fround$1516
  8436  001D54  C016  F02B         	movff	?___ftmul+1,_fround$1516+1
  8437  001D58  C017  F02C         	movff	?___ftmul+2,_fround$1516+2
  8438                           
  8439                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8440  001D5C  0E00               	movlw	0
  8441  001D5E  6E12               	movwf	___wmul@multiplicand+1,c
  8442  001D60  0E03               	movlw	3
  8443  001D62  6E11               	movwf	___wmul@multiplicand,c
  8444  001D64  0E00               	movlw	0
  8445  001D66  6E04               	movwf	___awmod@divisor+1,c
  8446  001D68  0E0A               	movlw	10
  8447  001D6A  6E03               	movwf	___awmod@divisor,c
  8448  001D6C  C02D  F001         	movff	fround@prec,___awmod@dividend
  8449  001D70  6A02               	clrf	___awmod@dividend+1,c
  8450  001D72  EC66  F015         	call	___awmod	;wreg free
  8451  001D76  C001  F00F         	movff	?___awmod,___wmul@multiplier
  8452  001D7A  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  8453  001D7E  EC17  F017         	call	___wmul	;wreg free
  8454  001D82  0EB6               	movlw	low __npowers_
  8455  001D84  240F               	addwf	?___wmul,w,c
  8456  001D86  6EF6               	movwf	tblptrl,c
  8457  001D88  0EFB               	movlw	high __npowers_
  8458  001D8A  2010               	addwfc	?___wmul+1,w,c
  8459  001D8C  6EF7               	movwf	tblptrh,c
  8460  001D8E                     	if	1	;There are 3 active tblptr bytes
  8461  001D8E  6AF8               	clrf	tblptru,c
  8462  001D90  0E00               	movlw	low (__mediumconst shr (0+16))
  8463  001D92  22F8               	addwfc	tblptru,f,c
  8464  001D94                     	endif
  8465  001D94  0009               	tblrd		*+
  8466  001D96  CFF5 F018          	movff	tablat,___ftmul@f2
  8467  001D9A  0009               	tblrd		*+
  8468  001D9C  CFF5 F019          	movff	tablat,___ftmul@f2+1
  8469  001DA0  000A               	tblrd		*-
  8470  001DA2  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  8471  001DA6  C02A  F015         	movff	_fround$1516,___ftmul@f1
  8472  001DAA  C02B  F016         	movff	_fround$1516+1,___ftmul@f1+1
  8473  001DAE  C02C  F017         	movff	_fround$1516+2,___ftmul@f1+2
  8474  001DB2  EC82  F011         	call	___ftmul	;wreg free
  8475  001DB6  C015  F027         	movff	?___ftmul,_fround$1517
  8476  001DBA  C016  F028         	movff	?___ftmul+1,_fround$1517+1
  8477  001DBE  C017  F029         	movff	?___ftmul+2,_fround$1517+2
  8478                           
  8479                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8480  001DC2  C027  F015         	movff	_fround$1517,___ftmul@f1
  8481  001DC6  C028  F016         	movff	_fround$1517+1,___ftmul@f1+1
  8482  001DCA  C029  F017         	movff	_fround$1517+2,___ftmul@f1+2
  8483  001DCE  0E00               	movlw	0
  8484  001DD0  6E18               	movwf	___ftmul@f2,c
  8485  001DD2  0E00               	movlw	0
  8486  001DD4  6E19               	movwf	___ftmul@f2+1,c
  8487  001DD6  0E3F               	movlw	63
  8488  001DD8  6E1A               	movwf	___ftmul@f2+2,c
  8489  001DDA  EC82  F011         	call	___ftmul	;wreg free
  8490  001DDE  C015  F024         	movff	?___ftmul,?_fround
  8491  001DE2  C016  F025         	movff	?___ftmul+1,?_fround+1
  8492  001DE6  C017  F026         	movff	?___ftmul+2,?_fround+2
  8493  001DEA  0012               	return	
  8494  001DEC                     i2l2642:
  8495                           
  8496                           ;doprnt.c: 415: else if(prec > 10)
  8497  001DEC  0E0A               	movlw	10
  8498  001DEE  642D               	cpfsgt	fround@prec,c
  8499  001DF0  D063               	goto	i2l2650
  8500                           
  8501                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8502  001DF2  0E00               	movlw	0
  8503  001DF4  6E12               	movwf	___wmul@multiplicand+1,c
  8504  001DF6  0E03               	movlw	3
  8505  001DF8  6E11               	movwf	___wmul@multiplicand,c
  8506  001DFA  0E00               	movlw	0
  8507  001DFC  6E04               	movwf	___awmod@divisor+1,c
  8508  001DFE  0E0A               	movlw	10
  8509  001E00  6E03               	movwf	___awmod@divisor,c
  8510  001E02  C02D  F001         	movff	fround@prec,___awmod@dividend
  8511  001E06  6A02               	clrf	___awmod@dividend+1,c
  8512  001E08  EC66  F015         	call	___awmod	;wreg free
  8513  001E0C  C001  F00F         	movff	?___awmod,___wmul@multiplier
  8514  001E10  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  8515  001E14  EC17  F017         	call	___wmul	;wreg free
  8516  001E18  0EB6               	movlw	low __npowers_
  8517  001E1A  240F               	addwf	?___wmul,w,c
  8518  001E1C  6EF6               	movwf	tblptrl,c
  8519  001E1E  0EFB               	movlw	high __npowers_
  8520  001E20  2010               	addwfc	?___wmul+1,w,c
  8521  001E22  6EF7               	movwf	tblptrh,c
  8522  001E24                     	if	1	;There are 3 active tblptr bytes
  8523  001E24  6AF8               	clrf	tblptru,c
  8524  001E26  0E00               	movlw	low (__mediumconst shr (0+16))
  8525  001E28  22F8               	addwfc	tblptru,f,c
  8526  001E2A                     	endif
  8527  001E2A  0009               	tblrd		*+
  8528  001E2C  CFF5 F018          	movff	tablat,___ftmul@f2
  8529  001E30  0009               	tblrd		*+
  8530  001E32  CFF5 F019          	movff	tablat,___ftmul@f2+1
  8531  001E36  000A               	tblrd		*-
  8532  001E38  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  8533  001E3C  0E00               	movlw	0
  8534  001E3E  6E0A               	movwf	___awdiv@divisor+1,c
  8535  001E40  0E0A               	movlw	10
  8536  001E42  6E09               	movwf	___awdiv@divisor,c
  8537  001E44  C02D  F007         	movff	fround@prec,___awdiv@dividend
  8538  001E48  6A08               	clrf	___awdiv@dividend+1,c
  8539  001E4A  ECE3  F014         	call	___awdiv	;wreg free
  8540  001E4E  0E09               	movlw	9
  8541  001E50  2407               	addwf	?___awdiv,w,c
  8542  001E52  6E0F               	movwf	___wmul@multiplier,c
  8543  001E54  0E00               	movlw	0
  8544  001E56  2008               	addwfc	?___awdiv+1,w,c
  8545  001E58  6E10               	movwf	___wmul@multiplier+1,c
  8546  001E5A  0E00               	movlw	0
  8547  001E5C  6E12               	movwf	___wmul@multiplicand+1,c
  8548  001E5E  0E03               	movlw	3
  8549  001E60  6E11               	movwf	___wmul@multiplicand,c
  8550  001E62  EC17  F017         	call	___wmul	;wreg free
  8551  001E66  0EB6               	movlw	low __npowers_
  8552  001E68  240F               	addwf	?___wmul,w,c
  8553  001E6A  6EF6               	movwf	tblptrl,c
  8554  001E6C  0EFB               	movlw	high __npowers_
  8555  001E6E  2010               	addwfc	?___wmul+1,w,c
  8556  001E70  6EF7               	movwf	tblptrh,c
  8557  001E72                     	if	1	;There are 3 active tblptr bytes
  8558  001E72  6AF8               	clrf	tblptru,c
  8559  001E74  0E00               	movlw	low (__mediumconst shr (0+16))
  8560  001E76  22F8               	addwfc	tblptru,f,c
  8561  001E78                     	endif
  8562  001E78  0009               	tblrd		*+
  8563  001E7A  CFF5 F015          	movff	tablat,___ftmul@f1
  8564  001E7E  0009               	tblrd		*+
  8565  001E80  CFF5 F016          	movff	tablat,___ftmul@f1+1
  8566  001E84  000A               	tblrd		*-
  8567  001E86  CFF5 F017          	movff	tablat,___ftmul@f1+2
  8568  001E8A  EC82  F011         	call	___ftmul	;wreg free
  8569  001E8E  C015  F02A         	movff	?___ftmul,_fround$1516
  8570  001E92  C016  F02B         	movff	?___ftmul+1,_fround$1516+1
  8571  001E96  C017  F02C         	movff	?___ftmul+2,_fround$1516+2
  8572                           
  8573                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8574  001E9A  C02A  F015         	movff	_fround$1516,___ftmul@f1
  8575  001E9E  C02B  F016         	movff	_fround$1516+1,___ftmul@f1+1
  8576  001EA2  C02C  F017         	movff	_fround$1516+2,___ftmul@f1+2
  8577  001EA6  0E00               	movlw	0
  8578  001EA8  6E18               	movwf	___ftmul@f2,c
  8579  001EAA  0E00               	movlw	0
  8580  001EAC  6E19               	movwf	___ftmul@f2+1,c
  8581  001EAE  0E3F               	movlw	63
  8582  001EB0  6E1A               	movwf	___ftmul@f2+2,c
  8583  001EB2  EC82  F011         	call	___ftmul	;wreg free
  8584  001EB6  D793               	goto	L7
  8585  001EB8                     i2l2650:
  8586                           
  8587                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8588  001EB8  502D               	movf	fround@prec,w,c
  8589  001EBA  0D03               	mullw	3
  8590  001EBC  0EB6               	movlw	low __npowers_
  8591  001EBE  24F3               	addwf	prodl,w,c
  8592  001EC0  6EF6               	movwf	tblptrl,c
  8593  001EC2  0EFB               	movlw	high __npowers_
  8594  001EC4  20F4               	addwfc	prodh,w,c
  8595  001EC6  6EF7               	movwf	tblptrh,c
  8596  001EC8                     	if	1	;There are 3 active tblptr bytes
  8597  001EC8  6AF8               	clrf	tblptru,c
  8598  001ECA  0E00               	movlw	low (__mediumconst shr (0+16))
  8599  001ECC  22F8               	addwfc	tblptru,f,c
  8600  001ECE                     	endif
  8601  001ECE  0009               	tblrd		*+
  8602  001ED0  CFF5 F015          	movff	tablat,___ftmul@f1
  8603  001ED4  0009               	tblrd		*+
  8604  001ED6  CFF5 F016          	movff	tablat,___ftmul@f1+1
  8605  001EDA  000A               	tblrd		*-
  8606  001EDC  CFF5 F017          	movff	tablat,___ftmul@f1+2
  8607  001EE0  0E00               	movlw	0
  8608  001EE2  6E18               	movwf	___ftmul@f2,c
  8609  001EE4  0E00               	movlw	0
  8610  001EE6  6E19               	movwf	___ftmul@f2+1,c
  8611  001EE8  0E3F               	movlw	63
  8612  001EEA  6E1A               	movwf	___ftmul@f2+2,c
  8613  001EEC  EC82  F011         	call	___ftmul	;wreg free
  8614  001EF0  C015  F024         	movff	?___ftmul,?_fround
  8615  001EF4  C016  F025         	movff	?___ftmul+1,?_fround+1
  8616  001EF8  C017  F026         	movff	?___ftmul+2,?_fround+2
  8617  001EFC  0012               	return	
  8618  001EFE                     __end_of_fround:
  8619                           	opt stack 0
  8620                           pclatu	equ	0xFFB
  8621                           pclath	equ	0xFFA
  8622                           tblptru	equ	0xFF8
  8623                           tblptrh	equ	0xFF7
  8624                           tblptrl	equ	0xFF6
  8625                           tablat	equ	0xFF5
  8626                           prodh	equ	0xFF4
  8627                           prodl	equ	0xFF3
  8628                           intcon	equ	0xFF2
  8629                           indf0	equ	0xFEF
  8630                           postinc0	equ	0xFEE
  8631                           fsr0h	equ	0xFEA
  8632                           fsr0l	equ	0xFE9
  8633                           wreg	equ	0xFE8
  8634                           fsr1h	equ	0xFE2
  8635                           fsr1l	equ	0xFE1
  8636                           indf2	equ	0xFDF
  8637                           postinc2	equ	0xFDE
  8638                           postdec2	equ	0xFDD
  8639                           fsr2h	equ	0xFDA
  8640                           fsr2l	equ	0xFD9
  8641                           status	equ	0xFD8
  8642                           
  8643 ;; *************** function ___wmul *****************
  8644 ;; Defined at:
  8645 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  8646 ;; Parameters:    Size  Location     Type
  8647 ;;  multiplier      2   14[COMRAM] unsigned int 
  8648 ;;  multiplicand    2   16[COMRAM] unsigned int 
  8649 ;; Auto vars:     Size  Location     Type
  8650 ;;  product         2   18[COMRAM] unsigned int 
  8651 ;; Return value:  Size  Location     Type
  8652 ;;                  2   14[COMRAM] unsigned int 
  8653 ;; Registers used:
  8654 ;;		wreg, status,2, status,0, prodl, prodh
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8661 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8663 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8664 ;;Total ram usage:        6 bytes
  8665 ;; Hardware stack levels used:    1
  8666 ;; This function calls:
  8667 ;;		Nothing
  8668 ;; This function is called by:
  8669 ;;		_indexDoMenorValor
  8670 ;;		_tratamento
  8671 ;;		_fround
  8672 ;;		_scale
  8673 ;;		_sprintf
  8674 ;; This function uses a non-reentrant model
  8675 ;;
  8676                           
  8677                           	psect	text33
  8678  002E2E                     __ptext33:
  8679                           	opt stack 0
  8680  002E2E                     ___wmul:
  8681                           	opt stack 26
  8682                           
  8683                           ;incstack = 0
  8684  002E2E  500F               	movf	___wmul@multiplier,w,c
  8685  002E30  0211               	mulwf	___wmul@multiplicand,c
  8686  002E32  CFF3 F013          	movff	prodl,___wmul@product
  8687  002E36  CFF4 F014          	movff	prodh,___wmul@product+1
  8688  002E3A  500F               	movf	___wmul@multiplier,w,c
  8689  002E3C  0212               	mulwf	___wmul@multiplicand+1,c
  8690  002E3E  50F3               	movf	prodl,w,c
  8691  002E40  2614               	addwf	___wmul@product+1,f,c
  8692  002E42  5010               	movf	___wmul@multiplier+1,w,c
  8693  002E44  0211               	mulwf	___wmul@multiplicand,c
  8694  002E46  50F3               	movf	prodl,w,c
  8695  002E48  2614               	addwf	___wmul@product+1,f,c
  8696  002E4A  C013  F00F         	movff	___wmul@product,?___wmul
  8697  002E4E  C014  F010         	movff	___wmul@product+1,?___wmul+1
  8698  002E52  0012               	return	
  8699  002E54                     __end_of___wmul:
  8700                           	opt stack 0
  8701                           pclatu	equ	0xFFB
  8702                           pclath	equ	0xFFA
  8703                           tblptru	equ	0xFF8
  8704                           tblptrh	equ	0xFF7
  8705                           tblptrl	equ	0xFF6
  8706                           tablat	equ	0xFF5
  8707                           prodh	equ	0xFF4
  8708                           prodl	equ	0xFF3
  8709                           intcon	equ	0xFF2
  8710                           indf0	equ	0xFEF
  8711                           postinc0	equ	0xFEE
  8712                           fsr0h	equ	0xFEA
  8713                           fsr0l	equ	0xFE9
  8714                           wreg	equ	0xFE8
  8715                           fsr1h	equ	0xFE2
  8716                           fsr1l	equ	0xFE1
  8717                           indf2	equ	0xFDF
  8718                           postinc2	equ	0xFDE
  8719                           postdec2	equ	0xFDD
  8720                           fsr2h	equ	0xFDA
  8721                           fsr2l	equ	0xFD9
  8722                           status	equ	0xFD8
  8723                           
  8724 ;; *************** function ___ftmul *****************
  8725 ;; Defined at:
  8726 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftmul.c"
  8727 ;; Parameters:    Size  Location     Type
  8728 ;;  f1              3   20[COMRAM] float 
  8729 ;;  f2              3   23[COMRAM] float 
  8730 ;; Auto vars:     Size  Location     Type
  8731 ;;  f3_as_produc    3   30[COMRAM] unsigned um
  8732 ;;  sign            1   34[COMRAM] unsigned char 
  8733 ;;  cntr            1   33[COMRAM] unsigned char 
  8734 ;;  exp             1   29[COMRAM] unsigned char 
  8735 ;; Return value:  Size  Location     Type
  8736 ;;                  3   20[COMRAM] float 
  8737 ;; Registers used:
  8738 ;;		wreg, status,2, status,0, cstack
  8739 ;; Tracked objects:
  8740 ;;		On entry : 0/0
  8741 ;;		On exit  : 0/0
  8742 ;;		Unchanged: 0/0
  8743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8744 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8745 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8746 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8747 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8748 ;;Total ram usage:       15 bytes
  8749 ;; Hardware stack levels used:    1
  8750 ;; Hardware stack levels required when called:    1
  8751 ;; This function calls:
  8752 ;;		___ftpack
  8753 ;; This function is called by:
  8754 ;;		_tratamento
  8755 ;;		_fround
  8756 ;;		_scale
  8757 ;;		_sprintf
  8758 ;; This function uses a non-reentrant model
  8759 ;;
  8760                           
  8761                           	psect	text34
  8762  002304                     __ptext34:
  8763                           	opt stack 0
  8764  002304                     ___ftmul:
  8765                           	opt stack 23
  8766                           
  8767                           ;incstack = 0
  8768  002304  C017  F01B         	movff	___ftmul@f1+2,??___ftmul
  8769  002308  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  8770  00230A  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  8771  00230C  3416               	rlcf	___ftmul@f1+1,w,c
  8772  00230E  361B               	rlcf	??___ftmul& (0+255),f,c
  8773  002310  E301               	bnc	u206_41
  8774  002312  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  8775  002314                     u206_41:
  8776  002314  501B               	movf	??___ftmul,w,c
  8777  002316  6E1E               	movwf	___ftmul@exp,c
  8778  002318  501E               	movf	___ftmul@exp,w,c
  8779  00231A  A4D8               	btfss	status,2,c
  8780  00231C  D007               	goto	i2l2510
  8781  00231E  0E00               	movlw	0
  8782  002320  6E15               	movwf	?___ftmul,c
  8783  002322  0E00               	movlw	0
  8784  002324  6E16               	movwf	?___ftmul+1,c
  8785  002326  0E00               	movlw	0
  8786  002328  6E17               	movwf	?___ftmul+2,c
  8787  00232A  0012               	return	
  8788  00232C                     i2l2510:
  8789  00232C  C01A  F01B         	movff	___ftmul@f2+2,??___ftmul
  8790  002330  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  8791  002332  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  8792  002334  3419               	rlcf	___ftmul@f2+1,w,c
  8793  002336  361B               	rlcf	??___ftmul& (0+255),f,c
  8794  002338  E301               	bnc	u208_41
  8795  00233A  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  8796  00233C                     u208_41:
  8797  00233C  501B               	movf	??___ftmul,w,c
  8798  00233E  6E23               	movwf	___ftmul@sign,c
  8799  002340  5023               	movf	___ftmul@sign,w,c
  8800  002342  A4D8               	btfss	status,2,c
  8801  002344  D007               	goto	i2l2516
  8802  002346  0E00               	movlw	0
  8803  002348  6E15               	movwf	?___ftmul,c
  8804  00234A  0E00               	movlw	0
  8805  00234C  6E16               	movwf	?___ftmul+1,c
  8806  00234E  0E00               	movlw	0
  8807  002350  6E17               	movwf	?___ftmul+2,c
  8808  002352  0012               	return	
  8809  002354                     i2l2516:
  8810  002354  5023               	movf	___ftmul@sign,w,c
  8811  002356  0F7B               	addlw	123
  8812  002358  261E               	addwf	___ftmul@exp,f,c
  8813  00235A  C017  F023         	movff	___ftmul@f1+2,___ftmul@sign
  8814  00235E  501A               	movf	___ftmul@f2+2,w,c
  8815  002360  1A23               	xorwf	___ftmul@sign,f,c
  8816  002362  0E80               	movlw	128
  8817  002364  1623               	andwf	___ftmul@sign,f,c
  8818  002366  8E16               	bsf	___ftmul@f1+1,7,c
  8819  002368  8E19               	bsf	___ftmul@f2+1,7,c
  8820  00236A  0EFF               	movlw	255
  8821  00236C  1618               	andwf	___ftmul@f2,f,c
  8822  00236E  0EFF               	movlw	255
  8823  002370  1619               	andwf	___ftmul@f2+1,f,c
  8824  002372  0E00               	movlw	0
  8825  002374  161A               	andwf	___ftmul@f2+2,f,c
  8826  002376  0E00               	movlw	0
  8827  002378  6E1F               	movwf	___ftmul@f3_as_product,c
  8828  00237A  0E00               	movlw	0
  8829  00237C  6E20               	movwf	___ftmul@f3_as_product+1,c
  8830  00237E  0E00               	movlw	0
  8831  002380  6E21               	movwf	___ftmul@f3_as_product+2,c
  8832  002382  0E07               	movlw	7
  8833  002384  6E22               	movwf	___ftmul@cntr,c
  8834  002386                     i2l2530:
  8835  002386  A015               	btfss	___ftmul@f1,0,c
  8836  002388  D006               	goto	i2l2534
  8837  00238A  5018               	movf	___ftmul@f2,w,c
  8838  00238C  261F               	addwf	___ftmul@f3_as_product,f,c
  8839  00238E  5019               	movf	___ftmul@f2+1,w,c
  8840  002390  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  8841  002392  501A               	movf	___ftmul@f2+2,w,c
  8842  002394  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  8843  002396                     i2l2534:
  8844  002396  90D8               	bcf	status,0,c
  8845  002398  3217               	rrcf	___ftmul@f1+2,f,c
  8846  00239A  3216               	rrcf	___ftmul@f1+1,f,c
  8847  00239C  3215               	rrcf	___ftmul@f1,f,c
  8848  00239E  90D8               	bcf	status,0,c
  8849  0023A0  3618               	rlcf	___ftmul@f2,f,c
  8850  0023A2  3619               	rlcf	___ftmul@f2+1,f,c
  8851  0023A4  361A               	rlcf	___ftmul@f2+2,f,c
  8852  0023A6  2E22               	decfsz	___ftmul@cntr,f,c
  8853  0023A8  D7EE               	goto	i2l2530
  8854  0023AA  0E09               	movlw	9
  8855  0023AC  6E22               	movwf	___ftmul@cntr,c
  8856  0023AE                     i2l2540:
  8857  0023AE  A015               	btfss	___ftmul@f1,0,c
  8858  0023B0  D006               	goto	i2l2544
  8859  0023B2  5018               	movf	___ftmul@f2,w,c
  8860  0023B4  261F               	addwf	___ftmul@f3_as_product,f,c
  8861  0023B6  5019               	movf	___ftmul@f2+1,w,c
  8862  0023B8  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  8863  0023BA  501A               	movf	___ftmul@f2+2,w,c
  8864  0023BC  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  8865  0023BE                     i2l2544:
  8866  0023BE  90D8               	bcf	status,0,c
  8867  0023C0  3217               	rrcf	___ftmul@f1+2,f,c
  8868  0023C2  3216               	rrcf	___ftmul@f1+1,f,c
  8869  0023C4  3215               	rrcf	___ftmul@f1,f,c
  8870  0023C6  90D8               	bcf	status,0,c
  8871  0023C8  3221               	rrcf	___ftmul@f3_as_product+2,f,c
  8872  0023CA  3220               	rrcf	___ftmul@f3_as_product+1,f,c
  8873  0023CC  321F               	rrcf	___ftmul@f3_as_product,f,c
  8874  0023CE  2E22               	decfsz	___ftmul@cntr,f,c
  8875  0023D0  D7EE               	goto	i2l2540
  8876  0023D2  C01F  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  8877  0023D6  C020  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  8878  0023DA  C021  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  8879  0023DE  C01E  F004         	movff	___ftmul@exp,___ftpack@exp
  8880  0023E2  C023  F005         	movff	___ftmul@sign,___ftpack@sign
  8881  0023E6  ECBA  F013         	call	___ftpack	;wreg free
  8882  0023EA  C001  F015         	movff	?___ftpack,?___ftmul
  8883  0023EE  C002  F016         	movff	?___ftpack+1,?___ftmul+1
  8884  0023F2  C003  F017         	movff	?___ftpack+2,?___ftmul+2
  8885  0023F6  0012               	return	
  8886  0023F8                     __end_of___ftmul:
  8887                           	opt stack 0
  8888                           pclatu	equ	0xFFB
  8889                           pclath	equ	0xFFA
  8890                           tblptru	equ	0xFF8
  8891                           tblptrh	equ	0xFF7
  8892                           tblptrl	equ	0xFF6
  8893                           tablat	equ	0xFF5
  8894                           prodh	equ	0xFF4
  8895                           prodl	equ	0xFF3
  8896                           intcon	equ	0xFF2
  8897                           indf0	equ	0xFEF
  8898                           postinc0	equ	0xFEE
  8899                           fsr0h	equ	0xFEA
  8900                           fsr0l	equ	0xFE9
  8901                           wreg	equ	0xFE8
  8902                           fsr1h	equ	0xFE2
  8903                           fsr1l	equ	0xFE1
  8904                           indf2	equ	0xFDF
  8905                           postinc2	equ	0xFDE
  8906                           postdec2	equ	0xFDD
  8907                           fsr2h	equ	0xFDA
  8908                           fsr2l	equ	0xFD9
  8909                           status	equ	0xFD8
  8910                           
  8911 ;; *************** function ___awmod *****************
  8912 ;; Defined at:
  8913 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awmod.c"
  8914 ;; Parameters:    Size  Location     Type
  8915 ;;  dividend        2    0[COMRAM] int 
  8916 ;;  divisor         2    2[COMRAM] int 
  8917 ;; Auto vars:     Size  Location     Type
  8918 ;;  sign            1    5[COMRAM] unsigned char 
  8919 ;;  counter         1    4[COMRAM] unsigned char 
  8920 ;; Return value:  Size  Location     Type
  8921 ;;                  2    0[COMRAM] int 
  8922 ;; Registers used:
  8923 ;;		wreg, status,2, status,0
  8924 ;; Tracked objects:
  8925 ;;		On entry : 0/0
  8926 ;;		On exit  : 0/0
  8927 ;;		Unchanged: 0/0
  8928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8929 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8930 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8932 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8933 ;;Total ram usage:        6 bytes
  8934 ;; Hardware stack levels used:    1
  8935 ;; This function calls:
  8936 ;;		Nothing
  8937 ;; This function is called by:
  8938 ;;		_fround
  8939 ;;		_scale
  8940 ;; This function uses a non-reentrant model
  8941 ;;
  8942                           
  8943                           	psect	text35
  8944  002ACC                     __ptext35:
  8945                           	opt stack 0
  8946  002ACC                     ___awmod:
  8947                           	opt stack 24
  8948                           
  8949                           ;incstack = 0
  8950  002ACC  0E00               	movlw	0
  8951  002ACE  6E06               	movwf	___awmod@sign,c
  8952  002AD0  AE02               	btfss	___awmod@dividend+1,7,c
  8953  002AD2  D006               	goto	i2l2604
  8954  002AD4  6C01               	negf	___awmod@dividend,c
  8955  002AD6  1E02               	comf	___awmod@dividend+1,f,c
  8956  002AD8  B0D8               	btfsc	status,0,c
  8957  002ADA  2A02               	incf	___awmod@dividend+1,f,c
  8958  002ADC  0E01               	movlw	1
  8959  002ADE  6E06               	movwf	___awmod@sign,c
  8960  002AE0                     i2l2604:
  8961  002AE0  AE04               	btfss	___awmod@divisor+1,7,c
  8962  002AE2  D004               	goto	i2l2608
  8963  002AE4  6C03               	negf	___awmod@divisor,c
  8964  002AE6  1E04               	comf	___awmod@divisor+1,f,c
  8965  002AE8  B0D8               	btfsc	status,0,c
  8966  002AEA  2A04               	incf	___awmod@divisor+1,f,c
  8967  002AEC                     i2l2608:
  8968  002AEC  5003               	movf	___awmod@divisor,w,c
  8969  002AEE  1004               	iorwf	___awmod@divisor+1,w,c
  8970  002AF0  B4D8               	btfsc	status,2,c
  8971  002AF2  D018               	goto	i2l2624
  8972  002AF4  0E01               	movlw	1
  8973  002AF6  6E05               	movwf	___awmod@counter,c
  8974  002AF8  D004               	goto	i2l2614
  8975  002AFA                     i2l2612:
  8976  002AFA  90D8               	bcf	status,0,c
  8977  002AFC  3603               	rlcf	___awmod@divisor,f,c
  8978  002AFE  3604               	rlcf	___awmod@divisor+1,f,c
  8979  002B00  2A05               	incf	___awmod@counter,f,c
  8980  002B02                     i2l2614:
  8981  002B02  AE04               	btfss	___awmod@divisor+1,7,c
  8982  002B04  D7FA               	goto	i2l2612
  8983  002B06                     i2l2616:
  8984  002B06  5003               	movf	___awmod@divisor,w,c
  8985  002B08  5C01               	subwf	___awmod@dividend,w,c
  8986  002B0A  5004               	movf	___awmod@divisor+1,w,c
  8987  002B0C  5802               	subwfb	___awmod@dividend+1,w,c
  8988  002B0E  A0D8               	btfss	status,0,c
  8989  002B10  D004               	goto	i2l2620
  8990  002B12  5003               	movf	___awmod@divisor,w,c
  8991  002B14  5E01               	subwf	___awmod@dividend,f,c
  8992  002B16  5004               	movf	___awmod@divisor+1,w,c
  8993  002B18  5A02               	subwfb	___awmod@dividend+1,f,c
  8994  002B1A                     i2l2620:
  8995  002B1A  90D8               	bcf	status,0,c
  8996  002B1C  3204               	rrcf	___awmod@divisor+1,f,c
  8997  002B1E  3203               	rrcf	___awmod@divisor,f,c
  8998  002B20  2E05               	decfsz	___awmod@counter,f,c
  8999  002B22  D7F1               	goto	i2l2616
  9000  002B24                     i2l2624:
  9001  002B24  5006               	movf	___awmod@sign,w,c
  9002  002B26  B4D8               	btfsc	status,2,c
  9003  002B28  D004               	goto	i2l2628
  9004  002B2A  6C01               	negf	___awmod@dividend,c
  9005  002B2C  1E02               	comf	___awmod@dividend+1,f,c
  9006  002B2E  B0D8               	btfsc	status,0,c
  9007  002B30  2A02               	incf	___awmod@dividend+1,f,c
  9008  002B32                     i2l2628:
  9009  002B32  C001  F001         	movff	___awmod@dividend,?___awmod
  9010  002B36  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9011  002B3A  0012               	return	
  9012  002B3C                     __end_of___awmod:
  9013                           	opt stack 0
  9014                           pclatu	equ	0xFFB
  9015                           pclath	equ	0xFFA
  9016                           tblptru	equ	0xFF8
  9017                           tblptrh	equ	0xFF7
  9018                           tblptrl	equ	0xFF6
  9019                           tablat	equ	0xFF5
  9020                           prodh	equ	0xFF4
  9021                           prodl	equ	0xFF3
  9022                           intcon	equ	0xFF2
  9023                           indf0	equ	0xFEF
  9024                           postinc0	equ	0xFEE
  9025                           fsr0h	equ	0xFEA
  9026                           fsr0l	equ	0xFE9
  9027                           wreg	equ	0xFE8
  9028                           fsr1h	equ	0xFE2
  9029                           fsr1l	equ	0xFE1
  9030                           indf2	equ	0xFDF
  9031                           postinc2	equ	0xFDE
  9032                           postdec2	equ	0xFDD
  9033                           fsr2h	equ	0xFDA
  9034                           fsr2l	equ	0xFD9
  9035                           status	equ	0xFD8
  9036                           
  9037 ;; *************** function ___awdiv *****************
  9038 ;; Defined at:
  9039 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
  9040 ;; Parameters:    Size  Location     Type
  9041 ;;  dividend        2    6[COMRAM] int 
  9042 ;;  divisor         2    8[COMRAM] int 
  9043 ;; Auto vars:     Size  Location     Type
  9044 ;;  quotient        2   12[COMRAM] int 
  9045 ;;  sign            1   11[COMRAM] unsigned char 
  9046 ;;  counter         1   10[COMRAM] unsigned char 
  9047 ;; Return value:  Size  Location     Type
  9048 ;;                  2    6[COMRAM] int 
  9049 ;; Registers used:
  9050 ;;		wreg, status,2, status,0
  9051 ;; Tracked objects:
  9052 ;;		On entry : 0/0
  9053 ;;		On exit  : 0/0
  9054 ;;		Unchanged: 0/0
  9055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9056 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9057 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9059 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9060 ;;Total ram usage:        8 bytes
  9061 ;; Hardware stack levels used:    1
  9062 ;; This function calls:
  9063 ;;		Nothing
  9064 ;; This function is called by:
  9065 ;;		_fround
  9066 ;;		_scale
  9067 ;;		_sprintf
  9068 ;; This function uses a non-reentrant model
  9069 ;;
  9070                           
  9071                           	psect	text36
  9072  0029C6                     __ptext36:
  9073                           	opt stack 0
  9074  0029C6                     ___awdiv:
  9075                           	opt stack 24
  9076                           
  9077                           ;incstack = 0
  9078  0029C6  0E00               	movlw	0
  9079  0029C8  6E0C               	movwf	___awdiv@sign,c
  9080  0029CA  AE0A               	btfss	___awdiv@divisor+1,7,c
  9081  0029CC  D006               	goto	i2l2560
  9082  0029CE  6C09               	negf	___awdiv@divisor,c
  9083  0029D0  1E0A               	comf	___awdiv@divisor+1,f,c
  9084  0029D2  B0D8               	btfsc	status,0,c
  9085  0029D4  2A0A               	incf	___awdiv@divisor+1,f,c
  9086  0029D6  0E01               	movlw	1
  9087  0029D8  6E0C               	movwf	___awdiv@sign,c
  9088  0029DA                     i2l2560:
  9089  0029DA  AE08               	btfss	___awdiv@dividend+1,7,c
  9090  0029DC  D006               	goto	i2l2566
  9091  0029DE  6C07               	negf	___awdiv@dividend,c
  9092  0029E0  1E08               	comf	___awdiv@dividend+1,f,c
  9093  0029E2  B0D8               	btfsc	status,0,c
  9094  0029E4  2A08               	incf	___awdiv@dividend+1,f,c
  9095  0029E6  0E01               	movlw	1
  9096  0029E8  1A0C               	xorwf	___awdiv@sign,f,c
  9097  0029EA                     i2l2566:
  9098  0029EA  0E00               	movlw	0
  9099  0029EC  6E0E               	movwf	___awdiv@quotient+1,c
  9100  0029EE  0E00               	movlw	0
  9101  0029F0  6E0D               	movwf	___awdiv@quotient,c
  9102  0029F2  5009               	movf	___awdiv@divisor,w,c
  9103  0029F4  100A               	iorwf	___awdiv@divisor+1,w,c
  9104  0029F6  B4D8               	btfsc	status,2,c
  9105  0029F8  D01C               	goto	i2l2588
  9106  0029FA  0E01               	movlw	1
  9107  0029FC  6E0B               	movwf	___awdiv@counter,c
  9108  0029FE  D004               	goto	i2l2574
  9109  002A00                     i2l2572:
  9110  002A00  90D8               	bcf	status,0,c
  9111  002A02  3609               	rlcf	___awdiv@divisor,f,c
  9112  002A04  360A               	rlcf	___awdiv@divisor+1,f,c
  9113  002A06  2A0B               	incf	___awdiv@counter,f,c
  9114  002A08                     i2l2574:
  9115  002A08  AE0A               	btfss	___awdiv@divisor+1,7,c
  9116  002A0A  D7FA               	goto	i2l2572
  9117  002A0C                     i2l2576:
  9118  002A0C  90D8               	bcf	status,0,c
  9119  002A0E  360D               	rlcf	___awdiv@quotient,f,c
  9120  002A10  360E               	rlcf	___awdiv@quotient+1,f,c
  9121  002A12  5009               	movf	___awdiv@divisor,w,c
  9122  002A14  5C07               	subwf	___awdiv@dividend,w,c
  9123  002A16  500A               	movf	___awdiv@divisor+1,w,c
  9124  002A18  5808               	subwfb	___awdiv@dividend+1,w,c
  9125  002A1A  A0D8               	btfss	status,0,c
  9126  002A1C  D005               	goto	i2l2584
  9127  002A1E  5009               	movf	___awdiv@divisor,w,c
  9128  002A20  5E07               	subwf	___awdiv@dividend,f,c
  9129  002A22  500A               	movf	___awdiv@divisor+1,w,c
  9130  002A24  5A08               	subwfb	___awdiv@dividend+1,f,c
  9131  002A26  800D               	bsf	___awdiv@quotient,0,c
  9132  002A28                     i2l2584:
  9133  002A28  90D8               	bcf	status,0,c
  9134  002A2A  320A               	rrcf	___awdiv@divisor+1,f,c
  9135  002A2C  3209               	rrcf	___awdiv@divisor,f,c
  9136  002A2E  2E0B               	decfsz	___awdiv@counter,f,c
  9137  002A30  D7ED               	goto	i2l2576
  9138  002A32                     i2l2588:
  9139  002A32  500C               	movf	___awdiv@sign,w,c
  9140  002A34  B4D8               	btfsc	status,2,c
  9141  002A36  D004               	goto	i2l2592
  9142  002A38  6C0D               	negf	___awdiv@quotient,c
  9143  002A3A  1E0E               	comf	___awdiv@quotient+1,f,c
  9144  002A3C  B0D8               	btfsc	status,0,c
  9145  002A3E  2A0E               	incf	___awdiv@quotient+1,f,c
  9146  002A40                     i2l2592:
  9147  002A40  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  9148  002A44  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  9149  002A48  0012               	return	
  9150  002A4A                     __end_of___awdiv:
  9151                           	opt stack 0
  9152                           pclatu	equ	0xFFB
  9153                           pclath	equ	0xFFA
  9154                           tblptru	equ	0xFF8
  9155                           tblptrh	equ	0xFF7
  9156                           tblptrl	equ	0xFF6
  9157                           tablat	equ	0xFF5
  9158                           prodh	equ	0xFF4
  9159                           prodl	equ	0xFF3
  9160                           intcon	equ	0xFF2
  9161                           indf0	equ	0xFEF
  9162                           postinc0	equ	0xFEE
  9163                           fsr0h	equ	0xFEA
  9164                           fsr0l	equ	0xFE9
  9165                           wreg	equ	0xFE8
  9166                           fsr1h	equ	0xFE2
  9167                           fsr1l	equ	0xFE1
  9168                           indf2	equ	0xFDF
  9169                           postinc2	equ	0xFDE
  9170                           postdec2	equ	0xFDD
  9171                           fsr2h	equ	0xFDA
  9172                           fsr2l	equ	0xFD9
  9173                           status	equ	0xFD8
  9174                           
  9175 ;; *************** function __tdiv_to_l_ *****************
  9176 ;; Defined at:
  9177 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftdivl.c"
  9178 ;; Parameters:    Size  Location     Type
  9179 ;;  f1              3    0[COMRAM] float 
  9180 ;;  f2              3    3[COMRAM] float 
  9181 ;; Auto vars:     Size  Location     Type
  9182 ;;  quot            4    9[COMRAM] unsigned long 
  9183 ;;  exp1            1   14[COMRAM] unsigned char 
  9184 ;;  cntr            1   13[COMRAM] unsigned char 
  9185 ;; Return value:  Size  Location     Type
  9186 ;;                  4    0[COMRAM] unsigned long 
  9187 ;; Registers used:
  9188 ;;		wreg, status,2, status,0
  9189 ;; Tracked objects:
  9190 ;;		On entry : 0/0
  9191 ;;		On exit  : 0/0
  9192 ;;		Unchanged: 0/0
  9193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9194 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9195 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9196 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9197 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9198 ;;Total ram usage:       15 bytes
  9199 ;; Hardware stack levels used:    1
  9200 ;; This function calls:
  9201 ;;		Nothing
  9202 ;; This function is called by:
  9203 ;;		_sprintf
  9204 ;; This function uses a non-reentrant model
  9205 ;;
  9206                           
  9207                           	psect	text37
  9208  0020AA                     __ptext37:
  9209                           	opt stack 0
  9210  0020AA                     __tdiv_to_l_:
  9211                           	opt stack 25
  9212                           
  9213                           ;incstack = 0
  9214  0020AA  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9215  0020AE  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  9216  0020B0  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  9217  0020B2  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  9218  0020B4  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  9219  0020B6  E301               	bnc	u231_41
  9220  0020B8  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  9221  0020BA                     u231_41:
  9222  0020BA  5007               	movf	??__tdiv_to_l_,w,c
  9223  0020BC  6E0F               	movwf	__tdiv_to_l_@exp1,c
  9224  0020BE  500F               	movf	__tdiv_to_l_@exp1,w,c
  9225  0020C0  A4D8               	btfss	status,2,c
  9226  0020C2  D009               	goto	i2l2698
  9227  0020C4  0E00               	movlw	0
  9228  0020C6  6E01               	movwf	?__tdiv_to_l_,c
  9229  0020C8  0E00               	movlw	0
  9230  0020CA  6E02               	movwf	?__tdiv_to_l_+1,c
  9231  0020CC  0E00               	movlw	0
  9232  0020CE  6E03               	movwf	?__tdiv_to_l_+2,c
  9233  0020D0  0E00               	movlw	0
  9234  0020D2  6E04               	movwf	?__tdiv_to_l_+3,c
  9235  0020D4  0012               	return	
  9236  0020D6                     i2l2698:
  9237  0020D6  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9238  0020DA  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  9239  0020DC  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  9240  0020DE  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  9241  0020E0  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  9242  0020E2  E301               	bnc	u233_41
  9243  0020E4  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  9244  0020E6                     u233_41:
  9245  0020E6  5007               	movf	??__tdiv_to_l_,w,c
  9246  0020E8  6E0E               	movwf	__tdiv_to_l_@cntr,c
  9247  0020EA  500E               	movf	__tdiv_to_l_@cntr,w,c
  9248  0020EC  A4D8               	btfss	status,2,c
  9249  0020EE  D009               	goto	i2l2704
  9250  0020F0  0E00               	movlw	0
  9251  0020F2  6E01               	movwf	?__tdiv_to_l_,c
  9252  0020F4  0E00               	movlw	0
  9253  0020F6  6E02               	movwf	?__tdiv_to_l_+1,c
  9254  0020F8  0E00               	movlw	0
  9255  0020FA  6E03               	movwf	?__tdiv_to_l_+2,c
  9256  0020FC  0E00               	movlw	0
  9257  0020FE  6E04               	movwf	?__tdiv_to_l_+3,c
  9258  002100  0012               	return	
  9259  002102                     i2l2704:
  9260  002102  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  9261  002104  0EFF               	movlw	255
  9262  002106  1601               	andwf	__tdiv_to_l_@f1,f,c
  9263  002108  0EFF               	movlw	255
  9264  00210A  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  9265  00210C  0E00               	movlw	0
  9266  00210E  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  9267  002110  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  9268  002112  0EFF               	movlw	255
  9269  002114  1604               	andwf	__tdiv_to_l_@f2,f,c
  9270  002116  0EFF               	movlw	255
  9271  002118  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  9272  00211A  0E00               	movlw	0
  9273  00211C  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  9274  00211E  0E00               	movlw	0
  9275  002120  6E0A               	movwf	__tdiv_to_l_@quot,c
  9276  002122  0E00               	movlw	0
  9277  002124  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  9278  002126  0E00               	movlw	0
  9279  002128  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  9280  00212A  0E00               	movlw	0
  9281  00212C  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  9282  00212E  0E7F               	movlw	127
  9283  002130  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  9284  002132  500E               	movf	__tdiv_to_l_@cntr,w,c
  9285  002134  0F98               	addlw	152
  9286  002136  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  9287  002138  0E18               	movlw	24
  9288  00213A  6E0E               	movwf	__tdiv_to_l_@cntr,c
  9289  00213C                     i2l628:
  9290  00213C  90D8               	bcf	status,0,c
  9291  00213E  360A               	rlcf	__tdiv_to_l_@quot,f,c
  9292  002140  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  9293  002142  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  9294  002144  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  9295  002146  5004               	movf	__tdiv_to_l_@f2,w,c
  9296  002148  5C01               	subwf	__tdiv_to_l_@f1,w,c
  9297  00214A  5005               	movf	__tdiv_to_l_@f2+1,w,c
  9298  00214C  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  9299  00214E  5006               	movf	__tdiv_to_l_@f2+2,w,c
  9300  002150  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  9301  002152  A0D8               	btfss	status,0,c
  9302  002154  D007               	goto	i2l629
  9303  002156  5004               	movf	__tdiv_to_l_@f2,w,c
  9304  002158  5E01               	subwf	__tdiv_to_l_@f1,f,c
  9305  00215A  5005               	movf	__tdiv_to_l_@f2+1,w,c
  9306  00215C  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  9307  00215E  5006               	movf	__tdiv_to_l_@f2+2,w,c
  9308  002160  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  9309  002162  800A               	bsf	__tdiv_to_l_@quot,0,c
  9310  002164                     i2l629:
  9311  002164  90D8               	bcf	status,0,c
  9312  002166  3601               	rlcf	__tdiv_to_l_@f1,f,c
  9313  002168  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  9314  00216A  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  9315  00216C  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  9316  00216E  D7E6               	goto	i2l628
  9317  002170  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  9318  002172  D016               	goto	i2l2738
  9319  002174  500F               	movf	__tdiv_to_l_@exp1,w,c
  9320  002176  0A80               	xorlw	128
  9321  002178  0F97               	addlw	151
  9322  00217A  B0D8               	btfsc	status,0,c
  9323  00217C  D009               	goto	i2l2734
  9324  00217E  0E00               	movlw	0
  9325  002180  6E01               	movwf	?__tdiv_to_l_,c
  9326  002182  0E00               	movlw	0
  9327  002184  6E02               	movwf	?__tdiv_to_l_+1,c
  9328  002186  0E00               	movlw	0
  9329  002188  6E03               	movwf	?__tdiv_to_l_+2,c
  9330  00218A  0E00               	movlw	0
  9331  00218C  6E04               	movwf	?__tdiv_to_l_+3,c
  9332  00218E  0012               	return	
  9333  002190                     i2l2734:
  9334  002190  90D8               	bcf	status,0,c
  9335  002192  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  9336  002194  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  9337  002196  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  9338  002198  320A               	rrcf	__tdiv_to_l_@quot,f,c
  9339  00219A  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  9340  00219C  D7F9               	goto	i2l2734
  9341  00219E  D015               	goto	i2l635
  9342  0021A0                     i2l2738:
  9343  0021A0  0E17               	movlw	23
  9344  0021A2  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  9345  0021A4  D00F               	goto	i2l2746
  9346  0021A6  0E00               	movlw	0
  9347  0021A8  6E01               	movwf	?__tdiv_to_l_,c
  9348  0021AA  0E00               	movlw	0
  9349  0021AC  6E02               	movwf	?__tdiv_to_l_+1,c
  9350  0021AE  0E00               	movlw	0
  9351  0021B0  6E03               	movwf	?__tdiv_to_l_+2,c
  9352  0021B2  0E00               	movlw	0
  9353  0021B4  6E04               	movwf	?__tdiv_to_l_+3,c
  9354  0021B6  0012               	return	
  9355  0021B8                     i2l2744:
  9356  0021B8  90D8               	bcf	status,0,c
  9357  0021BA  360A               	rlcf	__tdiv_to_l_@quot,f,c
  9358  0021BC  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  9359  0021BE  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  9360  0021C0  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  9361  0021C2  060F               	decf	__tdiv_to_l_@exp1,f,c
  9362  0021C4                     i2l2746:
  9363  0021C4  500F               	movf	__tdiv_to_l_@exp1,w,c
  9364  0021C6  A4D8               	btfss	status,2,c
  9365  0021C8  D7F7               	goto	i2l2744
  9366  0021CA                     i2l635:
  9367  0021CA  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  9368  0021CE  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  9369  0021D2  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  9370  0021D6  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  9371  0021DA  0012               	return		;funcret
  9372  0021DC                     __end_of__tdiv_to_l_:
  9373                           	opt stack 0
  9374                           pclatu	equ	0xFFB
  9375                           pclath	equ	0xFFA
  9376                           tblptru	equ	0xFF8
  9377                           tblptrh	equ	0xFF7
  9378                           tblptrl	equ	0xFF6
  9379                           tablat	equ	0xFF5
  9380                           prodh	equ	0xFF4
  9381                           prodl	equ	0xFF3
  9382                           intcon	equ	0xFF2
  9383                           indf0	equ	0xFEF
  9384                           postinc0	equ	0xFEE
  9385                           fsr0h	equ	0xFEA
  9386                           fsr0l	equ	0xFE9
  9387                           wreg	equ	0xFE8
  9388                           fsr1h	equ	0xFE2
  9389                           fsr1l	equ	0xFE1
  9390                           indf2	equ	0xFDF
  9391                           postinc2	equ	0xFDE
  9392                           postdec2	equ	0xFDD
  9393                           fsr2h	equ	0xFDA
  9394                           fsr2l	equ	0xFD9
  9395                           status	equ	0xFD8
  9396                           
  9397 ;; *************** function __div_to_l_ *****************
  9398 ;; Defined at:
  9399 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fldivl.c"
  9400 ;; Parameters:    Size  Location     Type
  9401 ;;  f1              3    0[COMRAM] unsigned long 
  9402 ;;  f2              3    3[COMRAM] unsigned long 
  9403 ;; Auto vars:     Size  Location     Type
  9404 ;;  quot            4    6[COMRAM] unsigned long 
  9405 ;;  exp1            1   11[COMRAM] unsigned char 
  9406 ;;  cntr            1   10[COMRAM] unsigned char 
  9407 ;; Return value:  Size  Location     Type
  9408 ;;                  4    0[COMRAM] unsigned long 
  9409 ;; Registers used:
  9410 ;;		wreg, status,2, status,0
  9411 ;; Tracked objects:
  9412 ;;		On entry : 0/0
  9413 ;;		On exit  : 0/0
  9414 ;;		Unchanged: 0/0
  9415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9416 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9417 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9419 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9420 ;;Total ram usage:       12 bytes
  9421 ;; Hardware stack levels used:    1
  9422 ;; This function calls:
  9423 ;;		Nothing
  9424 ;; This function is called by:
  9425 ;;		_sprintf
  9426 ;; This function uses a non-reentrant model
  9427 ;;
  9428                           
  9429                           	psect	text38
  9430  0021DC                     __ptext38:
  9431                           	opt stack 0
  9432  0021DC                     __div_to_l_:
  9433                           	opt stack 25
  9434                           
  9435                           ;incstack = 0
  9436  0021DC  3403               	rlcf	__div_to_l_@f1+2,w,c
  9437  0021DE  3404               	rlcf	__div_to_l_@f1+3,w,c
  9438  0021E0  6E0C               	movwf	__div_to_l_@exp1,c
  9439  0021E2  500C               	movf	__div_to_l_@exp1,w,c
  9440  0021E4  A4D8               	btfss	status,2,c
  9441  0021E6  D009               	goto	i2l2754
  9442  0021E8  0E00               	movlw	0
  9443  0021EA  6E01               	movwf	?__div_to_l_,c
  9444  0021EC  0E00               	movlw	0
  9445  0021EE  6E02               	movwf	?__div_to_l_+1,c
  9446  0021F0  0E00               	movlw	0
  9447  0021F2  6E03               	movwf	?__div_to_l_+2,c
  9448  0021F4  0E00               	movlw	0
  9449  0021F6  6E04               	movwf	?__div_to_l_+3,c
  9450  0021F8  0012               	return	
  9451  0021FA                     i2l2754:
  9452  0021FA  3406               	rlcf	__div_to_l_@f2+2,w,c
  9453  0021FC  3407               	rlcf	__div_to_l_@f2+3,w,c
  9454  0021FE  6E0B               	movwf	__div_to_l_@cntr,c
  9455  002200  500B               	movf	__div_to_l_@cntr,w,c
  9456  002202  A4D8               	btfss	status,2,c
  9457  002204  D009               	goto	i2l2760
  9458  002206  0E00               	movlw	0
  9459  002208  6E01               	movwf	?__div_to_l_,c
  9460  00220A  0E00               	movlw	0
  9461  00220C  6E02               	movwf	?__div_to_l_+1,c
  9462  00220E  0E00               	movlw	0
  9463  002210  6E03               	movwf	?__div_to_l_+2,c
  9464  002212  0E00               	movlw	0
  9465  002214  6E04               	movwf	?__div_to_l_+3,c
  9466  002216  0012               	return	
  9467  002218                     i2l2760:
  9468  002218  8E03               	bsf	__div_to_l_@f1+2,7,c
  9469  00221A  0EFF               	movlw	255
  9470  00221C  1601               	andwf	__div_to_l_@f1,f,c
  9471  00221E  0EFF               	movlw	255
  9472  002220  1602               	andwf	__div_to_l_@f1+1,f,c
  9473  002222  0EFF               	movlw	255
  9474  002224  1603               	andwf	__div_to_l_@f1+2,f,c
  9475  002226  0E00               	movlw	0
  9476  002228  1604               	andwf	__div_to_l_@f1+3,f,c
  9477  00222A  8E06               	bsf	__div_to_l_@f2+2,7,c
  9478  00222C  0EFF               	movlw	255
  9479  00222E  1604               	andwf	__div_to_l_@f2,f,c
  9480  002230  0EFF               	movlw	255
  9481  002232  1605               	andwf	__div_to_l_@f2+1,f,c
  9482  002234  0EFF               	movlw	255
  9483  002236  1606               	andwf	__div_to_l_@f2+2,f,c
  9484  002238  0E00               	movlw	0
  9485  00223A  1607               	andwf	__div_to_l_@f2+3,f,c
  9486  00223C  0E00               	movlw	0
  9487  00223E  6E07               	movwf	__div_to_l_@quot,c
  9488  002240  0E00               	movlw	0
  9489  002242  6E08               	movwf	__div_to_l_@quot+1,c
  9490  002244  0E00               	movlw	0
  9491  002246  6E09               	movwf	__div_to_l_@quot+2,c
  9492  002248  0E00               	movlw	0
  9493  00224A  6E0A               	movwf	__div_to_l_@quot+3,c
  9494  00224C  0E7F               	movlw	127
  9495  00224E  5E0C               	subwf	__div_to_l_@exp1,f,c
  9496  002250  500B               	movf	__div_to_l_@cntr,w,c
  9497  002252  0FA0               	addlw	160
  9498  002254  5E0C               	subwf	__div_to_l_@exp1,f,c
  9499  002256  0E20               	movlw	32
  9500  002258  6E0B               	movwf	__div_to_l_@cntr,c
  9501  00225A                     i2l2774:
  9502  00225A  90D8               	bcf	status,0,c
  9503  00225C  3607               	rlcf	__div_to_l_@quot,f,c
  9504  00225E  3608               	rlcf	__div_to_l_@quot+1,f,c
  9505  002260  3609               	rlcf	__div_to_l_@quot+2,f,c
  9506  002262  360A               	rlcf	__div_to_l_@quot+3,f,c
  9507  002264  5004               	movf	__div_to_l_@f2,w,c
  9508  002266  5C01               	subwf	__div_to_l_@f1,w,c
  9509  002268  5005               	movf	__div_to_l_@f2+1,w,c
  9510  00226A  5802               	subwfb	__div_to_l_@f1+1,w,c
  9511  00226C  5006               	movf	__div_to_l_@f2+2,w,c
  9512  00226E  5803               	subwfb	__div_to_l_@f1+2,w,c
  9513  002270  5007               	movf	__div_to_l_@f2+3,w,c
  9514  002272  5804               	subwfb	__div_to_l_@f1+3,w,c
  9515  002274  A0D8               	btfss	status,0,c
  9516  002276  D009               	goto	i2l2782
  9517  002278  5004               	movf	__div_to_l_@f2,w,c
  9518  00227A  5E01               	subwf	__div_to_l_@f1,f,c
  9519  00227C  5005               	movf	__div_to_l_@f2+1,w,c
  9520  00227E  5A02               	subwfb	__div_to_l_@f1+1,f,c
  9521  002280  5006               	movf	__div_to_l_@f2+2,w,c
  9522  002282  5A03               	subwfb	__div_to_l_@f1+2,f,c
  9523  002284  5007               	movf	__div_to_l_@f2+3,w,c
  9524  002286  5A04               	subwfb	__div_to_l_@f1+3,f,c
  9525  002288  8007               	bsf	__div_to_l_@quot,0,c
  9526  00228A                     i2l2782:
  9527  00228A  90D8               	bcf	status,0,c
  9528  00228C  3601               	rlcf	__div_to_l_@f1,f,c
  9529  00228E  3602               	rlcf	__div_to_l_@f1+1,f,c
  9530  002290  3603               	rlcf	__div_to_l_@f1+2,f,c
  9531  002292  3604               	rlcf	__div_to_l_@f1+3,f,c
  9532  002294  2E0B               	decfsz	__div_to_l_@cntr,f,c
  9533  002296  D7E1               	goto	i2l2774
  9534  002298  AE0C               	btfss	__div_to_l_@exp1,7,c
  9535  00229A  D016               	goto	i2l2798
  9536  00229C  500C               	movf	__div_to_l_@exp1,w,c
  9537  00229E  0A80               	xorlw	128
  9538  0022A0  0F9F               	addlw	159
  9539  0022A2  B0D8               	btfsc	status,0,c
  9540  0022A4  D009               	goto	i2l2794
  9541  0022A6  0E00               	movlw	0
  9542  0022A8  6E01               	movwf	?__div_to_l_,c
  9543  0022AA  0E00               	movlw	0
  9544  0022AC  6E02               	movwf	?__div_to_l_+1,c
  9545  0022AE  0E00               	movlw	0
  9546  0022B0  6E03               	movwf	?__div_to_l_+2,c
  9547  0022B2  0E00               	movlw	0
  9548  0022B4  6E04               	movwf	?__div_to_l_+3,c
  9549  0022B6  0012               	return	
  9550  0022B8                     i2l2794:
  9551  0022B8  90D8               	bcf	status,0,c
  9552  0022BA  320A               	rrcf	__div_to_l_@quot+3,f,c
  9553  0022BC  3209               	rrcf	__div_to_l_@quot+2,f,c
  9554  0022BE  3208               	rrcf	__div_to_l_@quot+1,f,c
  9555  0022C0  3207               	rrcf	__div_to_l_@quot,f,c
  9556  0022C2  3E0C               	incfsz	__div_to_l_@exp1,f,c
  9557  0022C4  D7F9               	goto	i2l2794
  9558  0022C6  D015               	goto	i2l531
  9559  0022C8                     i2l2798:
  9560  0022C8  0E1F               	movlw	31
  9561  0022CA  640C               	cpfsgt	__div_to_l_@exp1,c
  9562  0022CC  D00F               	goto	i2l2806
  9563  0022CE  0E00               	movlw	0
  9564  0022D0  6E01               	movwf	?__div_to_l_,c
  9565  0022D2  0E00               	movlw	0
  9566  0022D4  6E02               	movwf	?__div_to_l_+1,c
  9567  0022D6  0E00               	movlw	0
  9568  0022D8  6E03               	movwf	?__div_to_l_+2,c
  9569  0022DA  0E00               	movlw	0
  9570  0022DC  6E04               	movwf	?__div_to_l_+3,c
  9571  0022DE  0012               	return	
  9572  0022E0                     i2l2804:
  9573  0022E0  90D8               	bcf	status,0,c
  9574  0022E2  3607               	rlcf	__div_to_l_@quot,f,c
  9575  0022E4  3608               	rlcf	__div_to_l_@quot+1,f,c
  9576  0022E6  3609               	rlcf	__div_to_l_@quot+2,f,c
  9577  0022E8  360A               	rlcf	__div_to_l_@quot+3,f,c
  9578  0022EA  060C               	decf	__div_to_l_@exp1,f,c
  9579  0022EC                     i2l2806:
  9580  0022EC  500C               	movf	__div_to_l_@exp1,w,c
  9581  0022EE  A4D8               	btfss	status,2,c
  9582  0022F0  D7F7               	goto	i2l2804
  9583  0022F2                     i2l531:
  9584  0022F2  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  9585  0022F6  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  9586  0022FA  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  9587  0022FE  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  9588  002302  0012               	return		;funcret
  9589  002304                     __end_of__div_to_l_:
  9590                           	opt stack 0
  9591                           pclatu	equ	0xFFB
  9592                           pclath	equ	0xFFA
  9593                           tblptru	equ	0xFF8
  9594                           tblptrh	equ	0xFF7
  9595                           tblptrl	equ	0xFF6
  9596                           tablat	equ	0xFF5
  9597                           prodh	equ	0xFF4
  9598                           prodl	equ	0xFF3
  9599                           intcon	equ	0xFF2
  9600                           indf0	equ	0xFEF
  9601                           postinc0	equ	0xFEE
  9602                           fsr0h	equ	0xFEA
  9603                           fsr0l	equ	0xFE9
  9604                           wreg	equ	0xFE8
  9605                           fsr1h	equ	0xFE2
  9606                           fsr1l	equ	0xFE1
  9607                           indf2	equ	0xFDF
  9608                           postinc2	equ	0xFDE
  9609                           postdec2	equ	0xFDD
  9610                           fsr2h	equ	0xFDA
  9611                           fsr2l	equ	0xFD9
  9612                           status	equ	0xFD8
  9613                           
  9614 ;; *************** function ___lltoft *****************
  9615 ;; Defined at:
  9616 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lltoft.c"
  9617 ;; Parameters:    Size  Location     Type
  9618 ;;  c               4    8[COMRAM] unsigned long 
  9619 ;; Auto vars:     Size  Location     Type
  9620 ;;  exp             1   16[COMRAM] unsigned char 
  9621 ;; Return value:  Size  Location     Type
  9622 ;;                  3    8[COMRAM] float 
  9623 ;; Registers used:
  9624 ;;		wreg, status,2, status,0, cstack
  9625 ;; Tracked objects:
  9626 ;;		On entry : 0/0
  9627 ;;		On exit  : 0/0
  9628 ;;		Unchanged: 0/0
  9629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9630 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9632 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9633 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9634 ;;Total ram usage:        9 bytes
  9635 ;; Hardware stack levels used:    1
  9636 ;; Hardware stack levels required when called:    1
  9637 ;; This function calls:
  9638 ;;		___ftpack
  9639 ;; This function is called by:
  9640 ;;		_sprintf
  9641 ;; This function uses a non-reentrant model
  9642 ;;
  9643                           
  9644                           	psect	text39
  9645  002BFE                     __ptext39:
  9646                           	opt stack 0
  9647  002BFE                     ___lltoft:
  9648                           	opt stack 24
  9649                           
  9650                           ;incstack = 0
  9651  002BFE  0E8E               	movlw	142
  9652  002C00  6E11               	movwf	___lltoft@exp,c
  9653  002C02  D006               	goto	i2l2926
  9654  002C04                     i2l2924:
  9655  002C04  90D8               	bcf	status,0,c
  9656  002C06  320C               	rrcf	___lltoft@c+3,f,c
  9657  002C08  320B               	rrcf	___lltoft@c+2,f,c
  9658  002C0A  320A               	rrcf	___lltoft@c+1,f,c
  9659  002C0C  3209               	rrcf	___lltoft@c,f,c
  9660  002C0E  2A11               	incf	___lltoft@exp,f,c
  9661  002C10                     i2l2926:
  9662  002C10  0E00               	movlw	0
  9663  002C12  1409               	andwf	___lltoft@c,w,c
  9664  002C14  6E0D               	movwf	??___lltoft& (0+255),c
  9665  002C16  0E00               	movlw	0
  9666  002C18  140A               	andwf	___lltoft@c+1,w,c
  9667  002C1A  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  9668  002C1C  0E00               	movlw	0
  9669  002C1E  140B               	andwf	___lltoft@c+2,w,c
  9670  002C20  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  9671  002C22  0EFF               	movlw	255
  9672  002C24  140C               	andwf	___lltoft@c+3,w,c
  9673  002C26  6E10               	movwf	(??___lltoft+3)& (0+255),c
  9674  002C28  500D               	movf	??___lltoft,w,c
  9675  002C2A  100E               	iorwf	??___lltoft+1,w,c
  9676  002C2C  100F               	iorwf	??___lltoft+2,w,c
  9677  002C2E  1010               	iorwf	??___lltoft+3,w,c
  9678  002C30  A4D8               	btfss	status,2,c
  9679  002C32  D7E8               	goto	i2l2924
  9680  002C34  C009  F001         	movff	___lltoft@c,___ftpack@arg
  9681  002C38  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  9682  002C3C  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  9683  002C40  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  9684  002C44  0E00               	movlw	0
  9685  002C46  6E05               	movwf	___ftpack@sign,c
  9686  002C48  ECBA  F013         	call	___ftpack	;wreg free
  9687  002C4C  C001  F009         	movff	?___ftpack,?___lltoft
  9688  002C50  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  9689  002C54  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  9690  002C58  0012               	return	
  9691  002C5A                     __end_of___lltoft:
  9692                           	opt stack 0
  9693                           pclatu	equ	0xFFB
  9694                           pclath	equ	0xFFA
  9695                           tblptru	equ	0xFF8
  9696                           tblptrh	equ	0xFF7
  9697                           tblptrl	equ	0xFF6
  9698                           tablat	equ	0xFF5
  9699                           prodh	equ	0xFF4
  9700                           prodl	equ	0xFF3
  9701                           intcon	equ	0xFF2
  9702                           indf0	equ	0xFEF
  9703                           postinc0	equ	0xFEE
  9704                           fsr0h	equ	0xFEA
  9705                           fsr0l	equ	0xFE9
  9706                           wreg	equ	0xFE8
  9707                           fsr1h	equ	0xFE2
  9708                           fsr1l	equ	0xFE1
  9709                           indf2	equ	0xFDF
  9710                           postinc2	equ	0xFDE
  9711                           postdec2	equ	0xFDD
  9712                           fsr2h	equ	0xFDA
  9713                           fsr2l	equ	0xFD9
  9714                           status	equ	0xFD8
  9715                           
  9716 ;; *************** function ___llmod *****************
  9717 ;; Defined at:
  9718 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\llmod.c"
  9719 ;; Parameters:    Size  Location     Type
  9720 ;;  dividend        4   13[COMRAM] unsigned long 
  9721 ;;  divisor         4   17[COMRAM] unsigned long 
  9722 ;; Auto vars:     Size  Location     Type
  9723 ;;  counter         1   21[COMRAM] unsigned char 
  9724 ;; Return value:  Size  Location     Type
  9725 ;;                  4   13[COMRAM] unsigned long 
  9726 ;; Registers used:
  9727 ;;		wreg, status,2, status,0
  9728 ;; Tracked objects:
  9729 ;;		On entry : 0/0
  9730 ;;		On exit  : 0/0
  9731 ;;		Unchanged: 0/0
  9732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9733 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9736 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9737 ;;Total ram usage:        9 bytes
  9738 ;; Hardware stack levels used:    1
  9739 ;; This function calls:
  9740 ;;		Nothing
  9741 ;; This function is called by:
  9742 ;;		_sprintf
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746                           	psect	text40
  9747  002B3C                     __ptext40:
  9748                           	opt stack 0
  9749  002B3C                     ___llmod:
  9750                           	opt stack 25
  9751                           
  9752                           ;incstack = 0
  9753  002B3C  5012               	movf	___llmod@divisor,w,c
  9754  002B3E  1013               	iorwf	___llmod@divisor+1,w,c
  9755  002B40  1014               	iorwf	___llmod@divisor+2,w,c
  9756  002B42  1015               	iorwf	___llmod@divisor+3,w,c
  9757  002B44  B4D8               	btfsc	status,2,c
  9758  002B46  D024               	goto	i2l720
  9759  002B48  0E01               	movlw	1
  9760  002B4A  6E16               	movwf	___llmod@counter,c
  9761  002B4C  D006               	goto	i2l2912
  9762  002B4E                     i2l2910:
  9763  002B4E  90D8               	bcf	status,0,c
  9764  002B50  3612               	rlcf	___llmod@divisor,f,c
  9765  002B52  3613               	rlcf	___llmod@divisor+1,f,c
  9766  002B54  3614               	rlcf	___llmod@divisor+2,f,c
  9767  002B56  3615               	rlcf	___llmod@divisor+3,f,c
  9768  002B58  2A16               	incf	___llmod@counter,f,c
  9769  002B5A                     i2l2912:
  9770  002B5A  AE15               	btfss	___llmod@divisor+3,7,c
  9771  002B5C  D7F8               	goto	i2l2910
  9772  002B5E                     i2l2914:
  9773  002B5E  5012               	movf	___llmod@divisor,w,c
  9774  002B60  5C0E               	subwf	___llmod@dividend,w,c
  9775  002B62  5013               	movf	___llmod@divisor+1,w,c
  9776  002B64  580F               	subwfb	___llmod@dividend+1,w,c
  9777  002B66  5014               	movf	___llmod@divisor+2,w,c
  9778  002B68  5810               	subwfb	___llmod@dividend+2,w,c
  9779  002B6A  5015               	movf	___llmod@divisor+3,w,c
  9780  002B6C  5811               	subwfb	___llmod@dividend+3,w,c
  9781  002B6E  A0D8               	btfss	status,0,c
  9782  002B70  D008               	goto	i2l2918
  9783  002B72  5012               	movf	___llmod@divisor,w,c
  9784  002B74  5E0E               	subwf	___llmod@dividend,f,c
  9785  002B76  5013               	movf	___llmod@divisor+1,w,c
  9786  002B78  5A0F               	subwfb	___llmod@dividend+1,f,c
  9787  002B7A  5014               	movf	___llmod@divisor+2,w,c
  9788  002B7C  5A10               	subwfb	___llmod@dividend+2,f,c
  9789  002B7E  5015               	movf	___llmod@divisor+3,w,c
  9790  002B80  5A11               	subwfb	___llmod@dividend+3,f,c
  9791  002B82                     i2l2918:
  9792  002B82  90D8               	bcf	status,0,c
  9793  002B84  3215               	rrcf	___llmod@divisor+3,f,c
  9794  002B86  3214               	rrcf	___llmod@divisor+2,f,c
  9795  002B88  3213               	rrcf	___llmod@divisor+1,f,c
  9796  002B8A  3212               	rrcf	___llmod@divisor,f,c
  9797  002B8C  2E16               	decfsz	___llmod@counter,f,c
  9798  002B8E  D7E7               	goto	i2l2914
  9799  002B90                     i2l720:
  9800  002B90  C00E  F00E         	movff	___llmod@dividend,?___llmod
  9801  002B94  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  9802  002B98  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  9803  002B9C  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  9804  002BA0  0012               	return		;funcret
  9805  002BA2                     __end_of___llmod:
  9806                           	opt stack 0
  9807                           pclatu	equ	0xFFB
  9808                           pclath	equ	0xFFA
  9809                           tblptru	equ	0xFF8
  9810                           tblptrh	equ	0xFF7
  9811                           tblptrl	equ	0xFF6
  9812                           tablat	equ	0xFF5
  9813                           prodh	equ	0xFF4
  9814                           prodl	equ	0xFF3
  9815                           intcon	equ	0xFF2
  9816                           indf0	equ	0xFEF
  9817                           postinc0	equ	0xFEE
  9818                           fsr0h	equ	0xFEA
  9819                           fsr0l	equ	0xFE9
  9820                           wreg	equ	0xFE8
  9821                           fsr1h	equ	0xFE2
  9822                           fsr1l	equ	0xFE1
  9823                           indf2	equ	0xFDF
  9824                           postinc2	equ	0xFDE
  9825                           postdec2	equ	0xFDD
  9826                           fsr2h	equ	0xFDA
  9827                           fsr2l	equ	0xFD9
  9828                           status	equ	0xFD8
  9829                           
  9830 ;; *************** function ___lldiv *****************
  9831 ;; Defined at:
  9832 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lldiv.c"
  9833 ;; Parameters:    Size  Location     Type
  9834 ;;  dividend        4    0[COMRAM] unsigned long 
  9835 ;;  divisor         4    4[COMRAM] unsigned long 
  9836 ;; Auto vars:     Size  Location     Type
  9837 ;;  quotient        4    8[COMRAM] unsigned long 
  9838 ;;  counter         1   12[COMRAM] unsigned char 
  9839 ;; Return value:  Size  Location     Type
  9840 ;;                  4    0[COMRAM] unsigned long 
  9841 ;; Registers used:
  9842 ;;		wreg, status,2, status,0
  9843 ;; Tracked objects:
  9844 ;;		On entry : 0/0
  9845 ;;		On exit  : 0/0
  9846 ;;		Unchanged: 0/0
  9847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9848 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9849 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9851 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9852 ;;Total ram usage:       13 bytes
  9853 ;; Hardware stack levels used:    1
  9854 ;; This function calls:
  9855 ;;		Nothing
  9856 ;; This function is called by:
  9857 ;;		_sprintf
  9858 ;; This function uses a non-reentrant model
  9859 ;;
  9860                           
  9861                           	psect	text41
  9862  002A4A                     __ptext41:
  9863                           	opt stack 0
  9864  002A4A                     ___lldiv:
  9865                           	opt stack 25
  9866                           
  9867                           ;incstack = 0
  9868  002A4A  0E00               	movlw	0
  9869  002A4C  6E09               	movwf	___lldiv@quotient,c
  9870  002A4E  0E00               	movlw	0
  9871  002A50  6E0A               	movwf	___lldiv@quotient+1,c
  9872  002A52  0E00               	movlw	0
  9873  002A54  6E0B               	movwf	___lldiv@quotient+2,c
  9874  002A56  0E00               	movlw	0
  9875  002A58  6E0C               	movwf	___lldiv@quotient+3,c
  9876  002A5A  5005               	movf	___lldiv@divisor,w,c
  9877  002A5C  1006               	iorwf	___lldiv@divisor+1,w,c
  9878  002A5E  1007               	iorwf	___lldiv@divisor+2,w,c
  9879  002A60  1008               	iorwf	___lldiv@divisor+3,w,c
  9880  002A62  B4D8               	btfsc	status,2,c
  9881  002A64  D02A               	goto	i2l710
  9882  002A66  0E01               	movlw	1
  9883  002A68  6E0D               	movwf	___lldiv@counter,c
  9884  002A6A  D006               	goto	i2l2892
  9885  002A6C                     i2l2890:
  9886  002A6C  90D8               	bcf	status,0,c
  9887  002A6E  3605               	rlcf	___lldiv@divisor,f,c
  9888  002A70  3606               	rlcf	___lldiv@divisor+1,f,c
  9889  002A72  3607               	rlcf	___lldiv@divisor+2,f,c
  9890  002A74  3608               	rlcf	___lldiv@divisor+3,f,c
  9891  002A76  2A0D               	incf	___lldiv@counter,f,c
  9892  002A78                     i2l2892:
  9893  002A78  AE08               	btfss	___lldiv@divisor+3,7,c
  9894  002A7A  D7F8               	goto	i2l2890
  9895  002A7C                     i2l2894:
  9896  002A7C  90D8               	bcf	status,0,c
  9897  002A7E  3609               	rlcf	___lldiv@quotient,f,c
  9898  002A80  360A               	rlcf	___lldiv@quotient+1,f,c
  9899  002A82  360B               	rlcf	___lldiv@quotient+2,f,c
  9900  002A84  360C               	rlcf	___lldiv@quotient+3,f,c
  9901  002A86  5005               	movf	___lldiv@divisor,w,c
  9902  002A88  5C01               	subwf	___lldiv@dividend,w,c
  9903  002A8A  5006               	movf	___lldiv@divisor+1,w,c
  9904  002A8C  5802               	subwfb	___lldiv@dividend+1,w,c
  9905  002A8E  5007               	movf	___lldiv@divisor+2,w,c
  9906  002A90  5803               	subwfb	___lldiv@dividend+2,w,c
  9907  002A92  5008               	movf	___lldiv@divisor+3,w,c
  9908  002A94  5804               	subwfb	___lldiv@dividend+3,w,c
  9909  002A96  A0D8               	btfss	status,0,c
  9910  002A98  D009               	goto	i2l2902
  9911  002A9A  5005               	movf	___lldiv@divisor,w,c
  9912  002A9C  5E01               	subwf	___lldiv@dividend,f,c
  9913  002A9E  5006               	movf	___lldiv@divisor+1,w,c
  9914  002AA0  5A02               	subwfb	___lldiv@dividend+1,f,c
  9915  002AA2  5007               	movf	___lldiv@divisor+2,w,c
  9916  002AA4  5A03               	subwfb	___lldiv@dividend+2,f,c
  9917  002AA6  5008               	movf	___lldiv@divisor+3,w,c
  9918  002AA8  5A04               	subwfb	___lldiv@dividend+3,f,c
  9919  002AAA  8009               	bsf	___lldiv@quotient,0,c
  9920  002AAC                     i2l2902:
  9921  002AAC  90D8               	bcf	status,0,c
  9922  002AAE  3208               	rrcf	___lldiv@divisor+3,f,c
  9923  002AB0  3207               	rrcf	___lldiv@divisor+2,f,c
  9924  002AB2  3206               	rrcf	___lldiv@divisor+1,f,c
  9925  002AB4  3205               	rrcf	___lldiv@divisor,f,c
  9926  002AB6  2E0D               	decfsz	___lldiv@counter,f,c
  9927  002AB8  D7E1               	goto	i2l2894
  9928  002ABA                     i2l710:
  9929  002ABA  C009  F001         	movff	___lldiv@quotient,?___lldiv
  9930  002ABE  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  9931  002AC2  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  9932  002AC6  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  9933  002ACA  0012               	return		;funcret
  9934  002ACC                     __end_of___lldiv:
  9935                           	opt stack 0
  9936                           pclatu	equ	0xFFB
  9937                           pclath	equ	0xFFA
  9938                           tblptru	equ	0xFF8
  9939                           tblptrh	equ	0xFF7
  9940                           tblptrl	equ	0xFF6
  9941                           tablat	equ	0xFF5
  9942                           prodh	equ	0xFF4
  9943                           prodl	equ	0xFF3
  9944                           intcon	equ	0xFF2
  9945                           indf0	equ	0xFEF
  9946                           postinc0	equ	0xFEE
  9947                           fsr0h	equ	0xFEA
  9948                           fsr0l	equ	0xFE9
  9949                           wreg	equ	0xFE8
  9950                           fsr1h	equ	0xFE2
  9951                           fsr1l	equ	0xFE1
  9952                           indf2	equ	0xFDF
  9953                           postinc2	equ	0xFDE
  9954                           postdec2	equ	0xFDD
  9955                           fsr2h	equ	0xFDA
  9956                           fsr2l	equ	0xFD9
  9957                           status	equ	0xFD8
  9958                           
  9959 ;; *************** function ___fttol *****************
  9960 ;; Defined at:
  9961 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
  9962 ;; Parameters:    Size  Location     Type
  9963 ;;  f1              3   35[COMRAM] float 
  9964 ;; Auto vars:     Size  Location     Type
  9965 ;;  lval            4   45[COMRAM] unsigned long 
  9966 ;;  exp1            1   49[COMRAM] unsigned char 
  9967 ;;  sign1           1   44[COMRAM] unsigned char 
  9968 ;; Return value:  Size  Location     Type
  9969 ;;                  4   35[COMRAM] long 
  9970 ;; Registers used:
  9971 ;;		wreg, status,2, status,0
  9972 ;; Tracked objects:
  9973 ;;		On entry : 0/0
  9974 ;;		On exit  : 0/0
  9975 ;;		Unchanged: 0/0
  9976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9977 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9978 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9979 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9980 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9981 ;;Total ram usage:       15 bytes
  9982 ;; Hardware stack levels used:    1
  9983 ;; This function calls:
  9984 ;;		Nothing
  9985 ;; This function is called by:
  9986 ;;		_sprintf
  9987 ;; This function uses a non-reentrant model
  9988 ;;
  9989                           
  9990                           	psect	text42
  9991  0023F8                     __ptext42:
  9992                           	opt stack 0
  9993  0023F8                     ___fttol:
  9994                           	opt stack 25
  9995                           
  9996                           ;incstack = 0
  9997  0023F8  C026  F028         	movff	___fttol@f1+2,??___fttol
  9998  0023FC  6A29               	clrf	(??___fttol+1)& (0+255),c
  9999  0023FE  6A2A               	clrf	(??___fttol+2)& (0+255),c
 10000  002400  3425               	rlcf	___fttol@f1+1,w,c
 10001  002402  3628               	rlcf	??___fttol& (0+255),f,c
 10002  002404  E301               	bnc	u252_41
 10003  002406  8029               	bsf	(??___fttol+1)& (0+255),0,c
 10004  002408                     u252_41:
 10005  002408  5028               	movf	??___fttol,w,c
 10006  00240A  6E32               	movwf	___fttol@exp1,c
 10007  00240C  5032               	movf	___fttol@exp1,w,c
 10008  00240E  A4D8               	btfss	status,2,c
 10009  002410  D009               	goto	i2l2844
 10010  002412  0E00               	movlw	0
 10011  002414  6E24               	movwf	?___fttol,c
 10012  002416  0E00               	movlw	0
 10013  002418  6E25               	movwf	?___fttol+1,c
 10014  00241A  0E00               	movlw	0
 10015  00241C  6E26               	movwf	?___fttol+2,c
 10016  00241E  0E00               	movlw	0
 10017  002420  6E27               	movwf	?___fttol+3,c
 10018  002422  0012               	return	
 10019  002424                     i2l2844:
 10020  002424  0E17               	movlw	23
 10021  002426  6E28               	movwf	??___fttol& (0+255),c
 10022  002428  C024  F029         	movff	___fttol@f1,??___fttol+1
 10023  00242C  C025  F02A         	movff	___fttol@f1+1,??___fttol+2
 10024  002430  C026  F02B         	movff	___fttol@f1+2,??___fttol+3
 10025  002434  2828               	incf	??___fttol,w,c
 10026  002436  6E2C               	movwf	(??___fttol+4)& (0+255),c
 10027  002438  D004               	goto	i2u254_40
 10028  00243A                     i2u254_45:
 10029  00243A  90D8               	bcf	status,0,c
 10030  00243C  322B               	rrcf	??___fttol+3,f,c
 10031  00243E  322A               	rrcf	??___fttol+2,f,c
 10032  002440  3229               	rrcf	??___fttol+1,f,c
 10033  002442                     i2u254_40:
 10034  002442  2E2C               	decfsz	(??___fttol+4)& (0+255),f,c
 10035  002444  D7FA               	goto	i2u254_45
 10036  002446  5029               	movf	??___fttol+1,w,c
 10037  002448  6E2D               	movwf	___fttol@sign1,c
 10038  00244A  8E25               	bsf	___fttol@f1+1,7,c
 10039  00244C  0EFF               	movlw	255
 10040  00244E  1624               	andwf	___fttol@f1,f,c
 10041  002450  0EFF               	movlw	255
 10042  002452  1625               	andwf	___fttol@f1+1,f,c
 10043  002454  0E00               	movlw	0
 10044  002456  1626               	andwf	___fttol@f1+2,f,c
 10045  002458  5024               	movf	___fttol@f1,w,c
 10046  00245A  6E2E               	movwf	___fttol@lval,c
 10047  00245C  5025               	movf	___fttol@f1+1,w,c
 10048  00245E  6E2F               	movwf	___fttol@lval+1,c
 10049  002460  5026               	movf	___fttol@f1+2,w,c
 10050  002462  6E30               	movwf	___fttol@lval+2,c
 10051  002464  6A31               	clrf	___fttol@lval+3,c
 10052  002466  0E8E               	movlw	142
 10053  002468  5E32               	subwf	___fttol@exp1,f,c
 10054  00246A  AE32               	btfss	___fttol@exp1,7,c
 10055  00246C  D016               	goto	i2l2866
 10056  00246E  5032               	movf	___fttol@exp1,w,c
 10057  002470  0A80               	xorlw	128
 10058  002472  0F8F               	addlw	143
 10059  002474  B0D8               	btfsc	status,0,c
 10060  002476  D009               	goto	i2l2862
 10061  002478  0E00               	movlw	0
 10062  00247A  6E24               	movwf	?___fttol,c
 10063  00247C  0E00               	movlw	0
 10064  00247E  6E25               	movwf	?___fttol+1,c
 10065  002480  0E00               	movlw	0
 10066  002482  6E26               	movwf	?___fttol+2,c
 10067  002484  0E00               	movlw	0
 10068  002486  6E27               	movwf	?___fttol+3,c
 10069  002488  0012               	return	
 10070  00248A                     i2l2862:
 10071  00248A  90D8               	bcf	status,0,c
 10072  00248C  3231               	rrcf	___fttol@lval+3,f,c
 10073  00248E  3230               	rrcf	___fttol@lval+2,f,c
 10074  002490  322F               	rrcf	___fttol@lval+1,f,c
 10075  002492  322E               	rrcf	___fttol@lval,f,c
 10076  002494  3E32               	incfsz	___fttol@exp1,f,c
 10077  002496  D7F9               	goto	i2l2862
 10078  002498  D015               	goto	i2l2876
 10079  00249A                     i2l2866:
 10080  00249A  0E17               	movlw	23
 10081  00249C  6432               	cpfsgt	___fttol@exp1,c
 10082  00249E  D00F               	goto	i2l2874
 10083  0024A0  0E00               	movlw	0
 10084  0024A2  6E24               	movwf	?___fttol,c
 10085  0024A4  0E00               	movlw	0
 10086  0024A6  6E25               	movwf	?___fttol+1,c
 10087  0024A8  0E00               	movlw	0
 10088  0024AA  6E26               	movwf	?___fttol+2,c
 10089  0024AC  0E00               	movlw	0
 10090  0024AE  6E27               	movwf	?___fttol+3,c
 10091  0024B0  0012               	return	
 10092  0024B2                     i2l2872:
 10093  0024B2  90D8               	bcf	status,0,c
 10094  0024B4  362E               	rlcf	___fttol@lval,f,c
 10095  0024B6  362F               	rlcf	___fttol@lval+1,f,c
 10096  0024B8  3630               	rlcf	___fttol@lval+2,f,c
 10097  0024BA  3631               	rlcf	___fttol@lval+3,f,c
 10098  0024BC  0632               	decf	___fttol@exp1,f,c
 10099  0024BE                     i2l2874:
 10100  0024BE  5032               	movf	___fttol@exp1,w,c
 10101  0024C0  A4D8               	btfss	status,2,c
 10102  0024C2  D7F7               	goto	i2l2872
 10103  0024C4                     i2l2876:
 10104  0024C4  502D               	movf	___fttol@sign1,w,c
 10105  0024C6  B4D8               	btfsc	status,2,c
 10106  0024C8  D008               	goto	i2l2880
 10107  0024CA  1E31               	comf	___fttol@lval+3,f,c
 10108  0024CC  1E30               	comf	___fttol@lval+2,f,c
 10109  0024CE  1E2F               	comf	___fttol@lval+1,f,c
 10110  0024D0  6C2E               	negf	___fttol@lval,c
 10111  0024D2  0E00               	movlw	0
 10112  0024D4  222F               	addwfc	___fttol@lval+1,f,c
 10113  0024D6  2230               	addwfc	___fttol@lval+2,f,c
 10114  0024D8  2231               	addwfc	___fttol@lval+3,f,c
 10115  0024DA                     i2l2880:
 10116  0024DA  C02E  F024         	movff	___fttol@lval,?___fttol
 10117  0024DE  C02F  F025         	movff	___fttol@lval+1,?___fttol+1
 10118  0024E2  C030  F026         	movff	___fttol@lval+2,?___fttol+2
 10119  0024E6  C031  F027         	movff	___fttol@lval+3,?___fttol+3
 10120  0024EA  0012               	return	
 10121  0024EC                     __end_of___fttol:
 10122                           	opt stack 0
 10123                           pclatu	equ	0xFFB
 10124                           pclath	equ	0xFFA
 10125                           tblptru	equ	0xFF8
 10126                           tblptrh	equ	0xFF7
 10127                           tblptrl	equ	0xFF6
 10128                           tablat	equ	0xFF5
 10129                           prodh	equ	0xFF4
 10130                           prodl	equ	0xFF3
 10131                           intcon	equ	0xFF2
 10132                           indf0	equ	0xFEF
 10133                           postinc0	equ	0xFEE
 10134                           fsr0h	equ	0xFEA
 10135                           fsr0l	equ	0xFE9
 10136                           wreg	equ	0xFE8
 10137                           fsr1h	equ	0xFE2
 10138                           fsr1l	equ	0xFE1
 10139                           indf2	equ	0xFDF
 10140                           postinc2	equ	0xFDE
 10141                           postdec2	equ	0xFDD
 10142                           fsr2h	equ	0xFDA
 10143                           fsr2l	equ	0xFD9
 10144                           status	equ	0xFD8
 10145                           
 10146 ;; *************** function ___ftsub *****************
 10147 ;; Defined at:
 10148 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftsub.c"
 10149 ;; Parameters:    Size  Location     Type
 10150 ;;  f1              3   65[COMRAM] float 
 10151 ;;  f2              3   68[COMRAM] float 
 10152 ;; Auto vars:     Size  Location     Type
 10153 ;;		None
 10154 ;; Return value:  Size  Location     Type
 10155 ;;                  3   65[COMRAM] float 
 10156 ;; Registers used:
 10157 ;;		wreg, status,2, status,0, cstack
 10158 ;; Tracked objects:
 10159 ;;		On entry : 0/0
 10160 ;;		On exit  : 0/0
 10161 ;;		Unchanged: 0/0
 10162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10163 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10166 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10167 ;;Total ram usage:        6 bytes
 10168 ;; Hardware stack levels used:    1
 10169 ;; Hardware stack levels required when called:    2
 10170 ;; This function calls:
 10171 ;;		___ftadd
 10172 ;; This function is called by:
 10173 ;;		_sprintf
 10174 ;; This function uses a non-reentrant model
 10175 ;;
 10176                           
 10177                           	psect	text43
 10178  002CA6                     __ptext43:
 10179                           	opt stack 0
 10180  002CA6                     ___ftsub:
 10181                           	opt stack 23
 10182                           
 10183                           ;incstack = 0
 10184  002CA6  5045               	movf	___ftsub@f2,w,c
 10185  002CA8  1046               	iorwf	___ftsub@f2+1,w,c
 10186  002CAA  1047               	iorwf	___ftsub@f2+2,w,c
 10187  002CAC  B4D8               	btfsc	status,2,c
 10188  002CAE  D006               	goto	i2l2812
 10189  002CB0  0E00               	movlw	0
 10190  002CB2  1A45               	xorwf	___ftsub@f2,f,c
 10191  002CB4  0E00               	movlw	0
 10192  002CB6  1A46               	xorwf	___ftsub@f2+1,f,c
 10193  002CB8  0E80               	movlw	128
 10194  002CBA  1A47               	xorwf	___ftsub@f2+2,f,c
 10195  002CBC                     i2l2812:
 10196  002CBC  C042  F036         	movff	___ftsub@f1,___ftadd@f1
 10197  002CC0  C043  F037         	movff	___ftsub@f1+1,___ftadd@f1+1
 10198  002CC4  C044  F038         	movff	___ftsub@f1+2,___ftadd@f1+2
 10199  002CC8  C045  F039         	movff	___ftsub@f2,___ftadd@f2
 10200  002CCC  C046  F03A         	movff	___ftsub@f2+1,___ftadd@f2+1
 10201  002CD0  C047  F03B         	movff	___ftsub@f2+2,___ftadd@f2+2
 10202  002CD4  EC7F  F00F         	call	___ftadd	;wreg free
 10203  002CD8  C036  F042         	movff	?___ftadd,?___ftsub
 10204  002CDC  C037  F043         	movff	?___ftadd+1,?___ftsub+1
 10205  002CE0  C038  F044         	movff	?___ftadd+2,?___ftsub+2
 10206  002CE4  0012               	return	
 10207  002CE6                     __end_of___ftsub:
 10208                           	opt stack 0
 10209                           pclatu	equ	0xFFB
 10210                           pclath	equ	0xFFA
 10211                           tblptru	equ	0xFF8
 10212                           tblptrh	equ	0xFF7
 10213                           tblptrl	equ	0xFF6
 10214                           tablat	equ	0xFF5
 10215                           prodh	equ	0xFF4
 10216                           prodl	equ	0xFF3
 10217                           intcon	equ	0xFF2
 10218                           indf0	equ	0xFEF
 10219                           postinc0	equ	0xFEE
 10220                           fsr0h	equ	0xFEA
 10221                           fsr0l	equ	0xFE9
 10222                           wreg	equ	0xFE8
 10223                           fsr1h	equ	0xFE2
 10224                           fsr1l	equ	0xFE1
 10225                           indf2	equ	0xFDF
 10226                           postinc2	equ	0xFDE
 10227                           postdec2	equ	0xFDD
 10228                           fsr2h	equ	0xFDA
 10229                           fsr2l	equ	0xFD9
 10230                           status	equ	0xFD8
 10231                           
 10232 ;; *************** function ___ftadd *****************
 10233 ;; Defined at:
 10234 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftadd.c"
 10235 ;; Parameters:    Size  Location     Type
 10236 ;;  f1              3   53[COMRAM] float 
 10237 ;;  f2              3   56[COMRAM] float 
 10238 ;; Auto vars:     Size  Location     Type
 10239 ;;  exp1            1   64[COMRAM] unsigned char 
 10240 ;;  exp2            1   63[COMRAM] unsigned char 
 10241 ;;  sign            1   62[COMRAM] unsigned char 
 10242 ;; Return value:  Size  Location     Type
 10243 ;;                  3   53[COMRAM] float 
 10244 ;; Registers used:
 10245 ;;		wreg, status,2, status,0, cstack
 10246 ;; Tracked objects:
 10247 ;;		On entry : 0/0
 10248 ;;		On exit  : 0/0
 10249 ;;		Unchanged: 0/0
 10250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10251 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10252 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10253 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10254 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10255 ;;Total ram usage:       12 bytes
 10256 ;; Hardware stack levels used:    1
 10257 ;; Hardware stack levels required when called:    1
 10258 ;; This function calls:
 10259 ;;		___ftpack
 10260 ;; This function is called by:
 10261 ;;		_tratamento
 10262 ;;		_sprintf
 10263 ;;		___ftsub
 10264 ;; This function uses a non-reentrant model
 10265 ;;
 10266                           
 10267                           	psect	text44
 10268  001EFE                     __ptext44:
 10269                           	opt stack 0
 10270  001EFE                     ___ftadd:
 10271                           	opt stack 23
 10272                           
 10273                           ;incstack = 0
 10274  001EFE  C038  F03C         	movff	___ftadd@f1+2,??___ftadd
 10275  001F02  6A3D               	clrf	(??___ftadd+1)& (0+255),c
 10276  001F04  6A3E               	clrf	(??___ftadd+2)& (0+255),c
 10277  001F06  3437               	rlcf	___ftadd@f1+1,w,c
 10278  001F08  363C               	rlcf	??___ftadd& (0+255),f,c
 10279  001F0A  E301               	bnc	u185_41
 10280  001F0C  803D               	bsf	(??___ftadd+1)& (0+255),0,c
 10281  001F0E                     u185_41:
 10282  001F0E  503C               	movf	??___ftadd,w,c
 10283  001F10  6E41               	movwf	___ftadd@exp1,c
 10284  001F12  C03B  F03C         	movff	___ftadd@f2+2,??___ftadd
 10285  001F16  6A3D               	clrf	(??___ftadd+1)& (0+255),c
 10286  001F18  6A3E               	clrf	(??___ftadd+2)& (0+255),c
 10287  001F1A  343A               	rlcf	___ftadd@f2+1,w,c
 10288  001F1C  363C               	rlcf	??___ftadd& (0+255),f,c
 10289  001F1E  E301               	bnc	u186_41
 10290  001F20  803D               	bsf	(??___ftadd+1)& (0+255),0,c
 10291  001F22                     u186_41:
 10292  001F22  503C               	movf	??___ftadd,w,c
 10293  001F24  6E40               	movwf	___ftadd@exp2,c
 10294  001F26  5041               	movf	___ftadd@exp1,w,c
 10295  001F28  B4D8               	btfsc	status,2,c
 10296  001F2A  D00B               	goto	i2l586
 10297  001F2C  5040               	movf	___ftadd@exp2,w,c
 10298  001F2E  5C41               	subwf	___ftadd@exp1,w,c
 10299  001F30  B0D8               	btfsc	status,0,c
 10300  001F32  D00E               	goto	i2l2442
 10301  001F34  5041               	movf	___ftadd@exp1,w,c
 10302  001F36  0800               	sublw	0
 10303  001F38  2440               	addwf	___ftadd@exp2,w,c
 10304  001F3A  6E3C               	movwf	??___ftadd& (0+255),c
 10305  001F3C  0E18               	movlw	24
 10306  001F3E  643C               	cpfsgt	??___ftadd,c
 10307  001F40  D007               	goto	i2l2442
 10308  001F42                     i2l586:
 10309  001F42  C039  F036         	movff	___ftadd@f2,?___ftadd
 10310  001F46  C03A  F037         	movff	___ftadd@f2+1,?___ftadd+1
 10311  001F4A  C03B  F038         	movff	___ftadd@f2+2,?___ftadd+2
 10312  001F4E  0012               	return	
 10313  001F50                     i2l2442:
 10314  001F50  5040               	movf	___ftadd@exp2,w,c
 10315  001F52  B4D8               	btfsc	status,2,c
 10316  001F54  D00B               	goto	i2l590
 10317  001F56  5041               	movf	___ftadd@exp1,w,c
 10318  001F58  5C40               	subwf	___ftadd@exp2,w,c
 10319  001F5A  B0D8               	btfsc	status,0,c
 10320  001F5C  D00E               	goto	i2l2448
 10321  001F5E  5040               	movf	___ftadd@exp2,w,c
 10322  001F60  0800               	sublw	0
 10323  001F62  2441               	addwf	___ftadd@exp1,w,c
 10324  001F64  6E3C               	movwf	??___ftadd& (0+255),c
 10325  001F66  0E18               	movlw	24
 10326  001F68  643C               	cpfsgt	??___ftadd,c
 10327  001F6A  D007               	goto	i2l2448
 10328  001F6C                     i2l590:
 10329  001F6C  C036  F036         	movff	___ftadd@f1,?___ftadd
 10330  001F70  C037  F037         	movff	___ftadd@f1+1,?___ftadd+1
 10331  001F74  C038  F038         	movff	___ftadd@f1+2,?___ftadd+2
 10332  001F78  0012               	return	
 10333  001F7A                     i2l2448:
 10334  001F7A  0E06               	movlw	6
 10335  001F7C  6E3F               	movwf	___ftadd@sign,c
 10336  001F7E  BE38               	btfsc	___ftadd@f1+2,7,c
 10337  001F80  8E3F               	bsf	___ftadd@sign,7,c
 10338  001F82  BE3B               	btfsc	___ftadd@f2+2,7,c
 10339  001F84  8C3F               	bsf	___ftadd@sign,6,c
 10340  001F86  8E37               	bsf	___ftadd@f1+1,7,c
 10341  001F88  0EFF               	movlw	255
 10342  001F8A  1636               	andwf	___ftadd@f1,f,c
 10343  001F8C  0EFF               	movlw	255
 10344  001F8E  1637               	andwf	___ftadd@f1+1,f,c
 10345  001F90  0E00               	movlw	0
 10346  001F92  1638               	andwf	___ftadd@f1+2,f,c
 10347  001F94  8E3A               	bsf	___ftadd@f2+1,7,c
 10348  001F96  0EFF               	movlw	255
 10349  001F98  1639               	andwf	___ftadd@f2,f,c
 10350  001F9A  0EFF               	movlw	255
 10351  001F9C  163A               	andwf	___ftadd@f2+1,f,c
 10352  001F9E  0E00               	movlw	0
 10353  001FA0  163B               	andwf	___ftadd@f2+2,f,c
 10354  001FA2  5040               	movf	___ftadd@exp2,w,c
 10355  001FA4  5C41               	subwf	___ftadd@exp1,w,c
 10356  001FA6  B0D8               	btfsc	status,0,c
 10357  001FA8  D01B               	goto	i2l2474
 10358  001FAA                     i2l2464:
 10359  001FAA  90D8               	bcf	status,0,c
 10360  001FAC  3639               	rlcf	___ftadd@f2,f,c
 10361  001FAE  363A               	rlcf	___ftadd@f2+1,f,c
 10362  001FB0  363B               	rlcf	___ftadd@f2+2,f,c
 10363  001FB2  0640               	decf	___ftadd@exp2,f,c
 10364  001FB4  5041               	movf	___ftadd@exp1,w,c
 10365  001FB6  1840               	xorwf	___ftadd@exp2,w,c
 10366  001FB8  B4D8               	btfsc	status,2,c
 10367  001FBA  D00D               	goto	i2l2472
 10368  001FBC  063F               	decf	___ftadd@sign,f,c
 10369  001FBE  C03F  F03C         	movff	___ftadd@sign,??___ftadd
 10370  001FC2  0E07               	movlw	7
 10371  001FC4  163C               	andwf	??___ftadd,f,c
 10372  001FC6  B4D8               	btfsc	status,2,c
 10373  001FC8  D006               	goto	i2l2472
 10374  001FCA  D7EF               	goto	i2l2464
 10375  001FCC                     i2l2470:
 10376  001FCC  90D8               	bcf	status,0,c
 10377  001FCE  3238               	rrcf	___ftadd@f1+2,f,c
 10378  001FD0  3237               	rrcf	___ftadd@f1+1,f,c
 10379  001FD2  3236               	rrcf	___ftadd@f1,f,c
 10380  001FD4  2A41               	incf	___ftadd@exp1,f,c
 10381  001FD6                     i2l2472:
 10382  001FD6  5040               	movf	___ftadd@exp2,w,c
 10383  001FD8  1841               	xorwf	___ftadd@exp1,w,c
 10384  001FDA  B4D8               	btfsc	status,2,c
 10385  001FDC  D01F               	goto	i2l601
 10386  001FDE  D7F6               	goto	i2l2470
 10387  001FE0                     i2l2474:
 10388  001FE0  5041               	movf	___ftadd@exp1,w,c
 10389  001FE2  5C40               	subwf	___ftadd@exp2,w,c
 10390  001FE4  B0D8               	btfsc	status,0,c
 10391  001FE6  D01A               	goto	i2l601
 10392  001FE8                     i2l2476:
 10393  001FE8  90D8               	bcf	status,0,c
 10394  001FEA  3636               	rlcf	___ftadd@f1,f,c
 10395  001FEC  3637               	rlcf	___ftadd@f1+1,f,c
 10396  001FEE  3638               	rlcf	___ftadd@f1+2,f,c
 10397  001FF0  0641               	decf	___ftadd@exp1,f,c
 10398  001FF2  5041               	movf	___ftadd@exp1,w,c
 10399  001FF4  1840               	xorwf	___ftadd@exp2,w,c
 10400  001FF6  B4D8               	btfsc	status,2,c
 10401  001FF8  D00D               	goto	i2l2484
 10402  001FFA  063F               	decf	___ftadd@sign,f,c
 10403  001FFC  C03F  F03C         	movff	___ftadd@sign,??___ftadd
 10404  002000  0E07               	movlw	7
 10405  002002  163C               	andwf	??___ftadd,f,c
 10406  002004  B4D8               	btfsc	status,2,c
 10407  002006  D006               	goto	i2l2484
 10408  002008  D7EF               	goto	i2l2476
 10409  00200A                     i2l2482:
 10410  00200A  90D8               	bcf	status,0,c
 10411  00200C  323B               	rrcf	___ftadd@f2+2,f,c
 10412  00200E  323A               	rrcf	___ftadd@f2+1,f,c
 10413  002010  3239               	rrcf	___ftadd@f2,f,c
 10414  002012  2A40               	incf	___ftadd@exp2,f,c
 10415  002014                     i2l2484:
 10416  002014  5040               	movf	___ftadd@exp2,w,c
 10417  002016  1841               	xorwf	___ftadd@exp1,w,c
 10418  002018  A4D8               	btfss	status,2,c
 10419  00201A  D7F7               	goto	i2l2482
 10420  00201C                     i2l601:
 10421  00201C  AE3F               	btfss	___ftadd@sign,7,c
 10422  00201E  D00C               	goto	i2l610
 10423  002020  0EFF               	movlw	255
 10424  002022  1A36               	xorwf	___ftadd@f1,f,c
 10425  002024  0EFF               	movlw	255
 10426  002026  1A37               	xorwf	___ftadd@f1+1,f,c
 10427  002028  0EFF               	movlw	255
 10428  00202A  1A38               	xorwf	___ftadd@f1+2,f,c
 10429  00202C  0E01               	movlw	1
 10430  00202E  2636               	addwf	___ftadd@f1,f,c
 10431  002030  0E00               	movlw	0
 10432  002032  2237               	addwfc	___ftadd@f1+1,f,c
 10433  002034  0E00               	movlw	0
 10434  002036  2238               	addwfc	___ftadd@f1+2,f,c
 10435  002038                     i2l610:
 10436  002038  AC3F               	btfss	___ftadd@sign,6,c
 10437  00203A  D00C               	goto	i2l2490
 10438  00203C  0EFF               	movlw	255
 10439  00203E  1A39               	xorwf	___ftadd@f2,f,c
 10440  002040  0EFF               	movlw	255
 10441  002042  1A3A               	xorwf	___ftadd@f2+1,f,c
 10442  002044  0EFF               	movlw	255
 10443  002046  1A3B               	xorwf	___ftadd@f2+2,f,c
 10444  002048  0E01               	movlw	1
 10445  00204A  2639               	addwf	___ftadd@f2,f,c
 10446  00204C  0E00               	movlw	0
 10447  00204E  223A               	addwfc	___ftadd@f2+1,f,c
 10448  002050  0E00               	movlw	0
 10449  002052  223B               	addwfc	___ftadd@f2+2,f,c
 10450  002054                     i2l2490:
 10451  002054  0E00               	movlw	0
 10452  002056  6E3F               	movwf	___ftadd@sign,c
 10453  002058  5036               	movf	___ftadd@f1,w,c
 10454  00205A  2639               	addwf	___ftadd@f2,f,c
 10455  00205C  5037               	movf	___ftadd@f1+1,w,c
 10456  00205E  223A               	addwfc	___ftadd@f2+1,f,c
 10457  002060  5038               	movf	___ftadd@f1+2,w,c
 10458  002062  223B               	addwfc	___ftadd@f2+2,f,c
 10459  002064  AE3B               	btfss	___ftadd@f2+2,7,c
 10460  002066  D00E               	goto	i2l2500
 10461  002068  0EFF               	movlw	255
 10462  00206A  1A39               	xorwf	___ftadd@f2,f,c
 10463  00206C  0EFF               	movlw	255
 10464  00206E  1A3A               	xorwf	___ftadd@f2+1,f,c
 10465  002070  0EFF               	movlw	255
 10466  002072  1A3B               	xorwf	___ftadd@f2+2,f,c
 10467  002074  0E01               	movlw	1
 10468  002076  2639               	addwf	___ftadd@f2,f,c
 10469  002078  0E00               	movlw	0
 10470  00207A  223A               	addwfc	___ftadd@f2+1,f,c
 10471  00207C  0E00               	movlw	0
 10472  00207E  223B               	addwfc	___ftadd@f2+2,f,c
 10473  002080  0E01               	movlw	1
 10474  002082  6E3F               	movwf	___ftadd@sign,c
 10475  002084                     i2l2500:
 10476  002084  C039  F001         	movff	___ftadd@f2,___ftpack@arg
 10477  002088  C03A  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
 10478  00208C  C03B  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
 10479  002090  C041  F004         	movff	___ftadd@exp1,___ftpack@exp
 10480  002094  C03F  F005         	movff	___ftadd@sign,___ftpack@sign
 10481  002098  ECBA  F013         	call	___ftpack	;wreg free
 10482  00209C  C001  F036         	movff	?___ftpack,?___ftadd
 10483  0020A0  C002  F037         	movff	?___ftpack+1,?___ftadd+1
 10484  0020A4  C003  F038         	movff	?___ftpack+2,?___ftadd+2
 10485  0020A8  0012               	return	
 10486  0020AA                     __end_of___ftadd:
 10487                           	opt stack 0
 10488                           pclatu	equ	0xFFB
 10489                           pclath	equ	0xFFA
 10490                           tblptru	equ	0xFF8
 10491                           tblptrh	equ	0xFF7
 10492                           tblptrl	equ	0xFF6
 10493                           tablat	equ	0xFF5
 10494                           prodh	equ	0xFF4
 10495                           prodl	equ	0xFF3
 10496                           intcon	equ	0xFF2
 10497                           indf0	equ	0xFEF
 10498                           postinc0	equ	0xFEE
 10499                           fsr0h	equ	0xFEA
 10500                           fsr0l	equ	0xFE9
 10501                           wreg	equ	0xFE8
 10502                           fsr1h	equ	0xFE2
 10503                           fsr1l	equ	0xFE1
 10504                           indf2	equ	0xFDF
 10505                           postinc2	equ	0xFDE
 10506                           postdec2	equ	0xFDD
 10507                           fsr2h	equ	0xFDA
 10508                           fsr2l	equ	0xFD9
 10509                           status	equ	0xFD8
 10510                           
 10511 ;; *************** function ___ftneg *****************
 10512 ;; Defined at:
 10513 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftneg.c"
 10514 ;; Parameters:    Size  Location     Type
 10515 ;;  f1              3   50[COMRAM] float 
 10516 ;; Auto vars:     Size  Location     Type
 10517 ;;		None
 10518 ;; Return value:  Size  Location     Type
 10519 ;;                  3   50[COMRAM] float 
 10520 ;; Registers used:
 10521 ;;		wreg, status,2, status,0
 10522 ;; Tracked objects:
 10523 ;;		On entry : 0/0
 10524 ;;		On exit  : 0/0
 10525 ;;		Unchanged: 0/0
 10526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10527 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10530 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10531 ;;Total ram usage:        3 bytes
 10532 ;; Hardware stack levels used:    1
 10533 ;; This function calls:
 10534 ;;		Nothing
 10535 ;; This function is called by:
 10536 ;;		_tratamento
 10537 ;;		_sprintf
 10538 ;; This function uses a non-reentrant model
 10539 ;;
 10540                           
 10541                           	psect	text45
 10542  002E78                     __ptext45:
 10543                           	opt stack 0
 10544  002E78                     ___ftneg:
 10545                           	opt stack 25
 10546                           
 10547                           ;incstack = 0
 10548  002E78  5033               	movf	___ftneg@f1,w,c
 10549  002E7A  1034               	iorwf	___ftneg@f1+1,w,c
 10550  002E7C  1035               	iorwf	___ftneg@f1+2,w,c
 10551  002E7E  B4D8               	btfsc	status,2,c
 10552  002E80  D006               	goto	i2l660
 10553  002E82  0E00               	movlw	0
 10554  002E84  1A33               	xorwf	___ftneg@f1,f,c
 10555  002E86  0E00               	movlw	0
 10556  002E88  1A34               	xorwf	___ftneg@f1+1,f,c
 10557  002E8A  0E80               	movlw	128
 10558  002E8C  1A35               	xorwf	___ftneg@f1+2,f,c
 10559  002E8E                     i2l660:
 10560  002E8E  C033  F033         	movff	___ftneg@f1,?___ftneg
 10561  002E92  C034  F034         	movff	___ftneg@f1+1,?___ftneg+1
 10562  002E96  C035  F035         	movff	___ftneg@f1+2,?___ftneg+2
 10563  002E9A  0012               	return		;funcret
 10564  002E9C                     __end_of___ftneg:
 10565                           	opt stack 0
 10566                           pclatu	equ	0xFFB
 10567                           pclath	equ	0xFFA
 10568                           tblptru	equ	0xFF8
 10569                           tblptrh	equ	0xFF7
 10570                           tblptrl	equ	0xFF6
 10571                           tablat	equ	0xFF5
 10572                           prodh	equ	0xFF4
 10573                           prodl	equ	0xFF3
 10574                           intcon	equ	0xFF2
 10575                           indf0	equ	0xFEF
 10576                           postinc0	equ	0xFEE
 10577                           fsr0h	equ	0xFEA
 10578                           fsr0l	equ	0xFE9
 10579                           wreg	equ	0xFE8
 10580                           fsr1h	equ	0xFE2
 10581                           fsr1l	equ	0xFE1
 10582                           indf2	equ	0xFDF
 10583                           postinc2	equ	0xFDE
 10584                           postdec2	equ	0xFDD
 10585                           fsr2h	equ	0xFDA
 10586                           fsr2l	equ	0xFD9
 10587                           status	equ	0xFD8
 10588                           
 10589 ;; *************** function ___ftge *****************
 10590 ;; Defined at:
 10591 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftge.c"
 10592 ;; Parameters:    Size  Location     Type
 10593 ;;  ff1             3   20[COMRAM] float 
 10594 ;;  ff2             3   23[COMRAM] float 
 10595 ;; Auto vars:     Size  Location     Type
 10596 ;;		None
 10597 ;; Return value:  Size  Location     Type
 10598 ;;		None               void
 10599 ;; Registers used:
 10600 ;;		wreg, status,2, status,0
 10601 ;; Tracked objects:
 10602 ;;		On entry : 0/0
 10603 ;;		On exit  : 0/0
 10604 ;;		Unchanged: 0/0
 10605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10606 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10608 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10609 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10610 ;;Total ram usage:        9 bytes
 10611 ;; Hardware stack levels used:    1
 10612 ;; This function calls:
 10613 ;;		Nothing
 10614 ;; This function is called by:
 10615 ;;		_indexDoMenorValor
 10616 ;;		_tratamento
 10617 ;;		_sprintf
 10618 ;; This function uses a non-reentrant model
 10619 ;;
 10620                           
 10621                           	psect	text46
 10622  0028B2                     __ptext46:
 10623                           	opt stack 0
 10624  0028B2                     ___ftge:
 10625                           	opt stack 26
 10626                           
 10627                           ;incstack = 0
 10628  0028B2  AE17               	btfss	___ftge@ff1+2,7,c
 10629  0028B4  D016               	goto	i2l2820
 10630  0028B6  C015  F01B         	movff	___ftge@ff1,??___ftge
 10631  0028BA  C016  F01C         	movff	___ftge@ff1+1,??___ftge+1
 10632  0028BE  C017  F01D         	movff	___ftge@ff1+2,??___ftge+2
 10633  0028C2  1E1B               	comf	??___ftge,f,c
 10634  0028C4  1E1C               	comf	??___ftge+1,f,c
 10635  0028C6  1E1D               	comf	??___ftge+2,f,c
 10636  0028C8  2A1B               	incf	??___ftge,f,c
 10637  0028CA  0E00               	movlw	0
 10638  0028CC  221C               	addwfc	??___ftge+1,f,c
 10639  0028CE  221D               	addwfc	??___ftge+2,f,c
 10640  0028D0  0E00               	movlw	0
 10641  0028D2  241B               	addwf	??___ftge,w,c
 10642  0028D4  6E15               	movwf	___ftge@ff1,c
 10643  0028D6  0E00               	movlw	0
 10644  0028D8  201C               	addwfc	??___ftge+1,w,c
 10645  0028DA  6E16               	movwf	___ftge@ff1+1,c
 10646  0028DC  0E80               	movlw	128
 10647  0028DE  201D               	addwfc	??___ftge+2,w,c
 10648  0028E0  6E17               	movwf	___ftge@ff1+2,c
 10649  0028E2                     i2l2820:
 10650  0028E2  AE1A               	btfss	___ftge@ff2+2,7,c
 10651  0028E4  D016               	goto	i2l2824
 10652  0028E6  C018  F01B         	movff	___ftge@ff2,??___ftge
 10653  0028EA  C019  F01C         	movff	___ftge@ff2+1,??___ftge+1
 10654  0028EE  C01A  F01D         	movff	___ftge@ff2+2,??___ftge+2
 10655  0028F2  1E1B               	comf	??___ftge,f,c
 10656  0028F4  1E1C               	comf	??___ftge+1,f,c
 10657  0028F6  1E1D               	comf	??___ftge+2,f,c
 10658  0028F8  2A1B               	incf	??___ftge,f,c
 10659  0028FA  0E00               	movlw	0
 10660  0028FC  221C               	addwfc	??___ftge+1,f,c
 10661  0028FE  221D               	addwfc	??___ftge+2,f,c
 10662  002900  0E00               	movlw	0
 10663  002902  241B               	addwf	??___ftge,w,c
 10664  002904  6E18               	movwf	___ftge@ff2,c
 10665  002906  0E00               	movlw	0
 10666  002908  201C               	addwfc	??___ftge+1,w,c
 10667  00290A  6E19               	movwf	___ftge@ff2+1,c
 10668  00290C  0E80               	movlw	128
 10669  00290E  201D               	addwfc	??___ftge+2,w,c
 10670  002910  6E1A               	movwf	___ftge@ff2+2,c
 10671  002912                     i2l2824:
 10672  002912  0E00               	movlw	0
 10673  002914  1A15               	xorwf	___ftge@ff1,f,c
 10674  002916  0E00               	movlw	0
 10675  002918  1A16               	xorwf	___ftge@ff1+1,f,c
 10676  00291A  0E80               	movlw	128
 10677  00291C  1A17               	xorwf	___ftge@ff1+2,f,c
 10678  00291E  0E00               	movlw	0
 10679  002920  1A18               	xorwf	___ftge@ff2,f,c
 10680  002922  0E00               	movlw	0
 10681  002924  1A19               	xorwf	___ftge@ff2+1,f,c
 10682  002926  0E80               	movlw	128
 10683  002928  1A1A               	xorwf	___ftge@ff2+2,f,c
 10684  00292A  5018               	movf	___ftge@ff2,w,c
 10685  00292C  5C15               	subwf	___ftge@ff1,w,c
 10686  00292E  5019               	movf	___ftge@ff2+1,w,c
 10687  002930  5816               	subwfb	___ftge@ff1+1,w,c
 10688  002932  501A               	movf	___ftge@ff2+2,w,c
 10689  002934  5817               	subwfb	___ftge@ff1+2,w,c
 10690  002936  B0D8               	btfsc	status,0,c
 10691  002938  D002               	goto	i2l2830
 10692  00293A  90D8               	bcf	status,0,c
 10693  00293C  0012               	return	
 10694  00293E                     i2l2830:
 10695  00293E  80D8               	bsf	status,0,c
 10696  002940  0012               	return	
 10697  002942                     __end_of___ftge:
 10698                           	opt stack 0
 10699                           pclatu	equ	0xFFB
 10700                           pclath	equ	0xFFA
 10701                           tblptru	equ	0xFF8
 10702                           tblptrh	equ	0xFF7
 10703                           tblptrl	equ	0xFF6
 10704                           tablat	equ	0xFF5
 10705                           prodh	equ	0xFF4
 10706                           prodl	equ	0xFF3
 10707                           intcon	equ	0xFF2
 10708                           indf0	equ	0xFEF
 10709                           postinc0	equ	0xFEE
 10710                           fsr0h	equ	0xFEA
 10711                           fsr0l	equ	0xFE9
 10712                           wreg	equ	0xFE8
 10713                           fsr1h	equ	0xFE2
 10714                           fsr1l	equ	0xFE1
 10715                           indf2	equ	0xFDF
 10716                           postinc2	equ	0xFDE
 10717                           postdec2	equ	0xFDD
 10718                           fsr2h	equ	0xFDA
 10719                           fsr2l	equ	0xFD9
 10720                           status	equ	0xFD8
 10721                           
 10722 ;; *************** function ___ftdiv *****************
 10723 ;; Defined at:
 10724 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftdiv.c"
 10725 ;; Parameters:    Size  Location     Type
 10726 ;;  f1              3   35[COMRAM] float 
 10727 ;;  f2              3   38[COMRAM] float 
 10728 ;; Auto vars:     Size  Location     Type
 10729 ;;  f3              3   45[COMRAM] float 
 10730 ;;  sign            1   49[COMRAM] unsigned char 
 10731 ;;  exp             1   48[COMRAM] unsigned char 
 10732 ;;  cntr            1   44[COMRAM] unsigned char 
 10733 ;; Return value:  Size  Location     Type
 10734 ;;                  3   35[COMRAM] float 
 10735 ;; Registers used:
 10736 ;;		wreg, status,2, status,0, cstack
 10737 ;; Tracked objects:
 10738 ;;		On entry : 0/0
 10739 ;;		On exit  : 0/0
 10740 ;;		Unchanged: 0/0
 10741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10742 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10743 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10744 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10745 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10746 ;;Total ram usage:       15 bytes
 10747 ;; Hardware stack levels used:    1
 10748 ;; Hardware stack levels required when called:    1
 10749 ;; This function calls:
 10750 ;;		___ftpack
 10751 ;; This function is called by:
 10752 ;;		_tratamento
 10753 ;; This function uses a non-reentrant model
 10754 ;;
 10755                           
 10756                           	psect	text47
 10757  0025DC                     __ptext47:
 10758                           	opt stack 0
 10759  0025DC                     ___ftdiv:
 10760                           	opt stack 26
 10761                           
 10762                           ;incstack = 0
 10763  0025DC  C026  F02A         	movff	___ftdiv@f1+2,??___ftdiv
 10764  0025E0  6A2B               	clrf	(??___ftdiv+1)& (0+255),c
 10765  0025E2  6A2C               	clrf	(??___ftdiv+2)& (0+255),c
 10766  0025E4  3425               	rlcf	___ftdiv@f1+1,w,c
 10767  0025E6  362A               	rlcf	??___ftdiv& (0+255),f,c
 10768  0025E8  E301               	bnc	u314_41
 10769  0025EA  802B               	bsf	(??___ftdiv+1)& (0+255),0,c
 10770  0025EC                     u314_41:
 10771  0025EC  502A               	movf	??___ftdiv,w,c
 10772  0025EE  6E31               	movwf	___ftdiv@exp,c
 10773  0025F0  5031               	movf	___ftdiv@exp,w,c
 10774  0025F2  A4D8               	btfss	status,2,c
 10775  0025F4  D007               	goto	i2l3314
 10776  0025F6  0E00               	movlw	0
 10777  0025F8  6E24               	movwf	?___ftdiv,c
 10778  0025FA  0E00               	movlw	0
 10779  0025FC  6E25               	movwf	?___ftdiv+1,c
 10780  0025FE  0E00               	movlw	0
 10781  002600  6E26               	movwf	?___ftdiv+2,c
 10782  002602  0012               	return	
 10783  002604                     i2l3314:
 10784  002604  C029  F02A         	movff	___ftdiv@f2+2,??___ftdiv
 10785  002608  6A2B               	clrf	(??___ftdiv+1)& (0+255),c
 10786  00260A  6A2C               	clrf	(??___ftdiv+2)& (0+255),c
 10787  00260C  3428               	rlcf	___ftdiv@f2+1,w,c
 10788  00260E  362A               	rlcf	??___ftdiv& (0+255),f,c
 10789  002610  E301               	bnc	u316_41
 10790  002612  802B               	bsf	(??___ftdiv+1)& (0+255),0,c
 10791  002614                     u316_41:
 10792  002614  502A               	movf	??___ftdiv,w,c
 10793  002616  6E32               	movwf	___ftdiv@sign,c
 10794  002618  5032               	movf	___ftdiv@sign,w,c
 10795  00261A  A4D8               	btfss	status,2,c
 10796  00261C  D007               	goto	i2l3320
 10797  00261E  0E00               	movlw	0
 10798  002620  6E24               	movwf	?___ftdiv,c
 10799  002622  0E00               	movlw	0
 10800  002624  6E25               	movwf	?___ftdiv+1,c
 10801  002626  0E00               	movlw	0
 10802  002628  6E26               	movwf	?___ftdiv+2,c
 10803  00262A  0012               	return	
 10804  00262C                     i2l3320:
 10805  00262C  0E00               	movlw	0
 10806  00262E  6E2E               	movwf	___ftdiv@f3,c
 10807  002630  0E00               	movlw	0
 10808  002632  6E2F               	movwf	___ftdiv@f3+1,c
 10809  002634  0E00               	movlw	0
 10810  002636  6E30               	movwf	___ftdiv@f3+2,c
 10811  002638  5032               	movf	___ftdiv@sign,w,c
 10812  00263A  0F89               	addlw	137
 10813  00263C  5E31               	subwf	___ftdiv@exp,f,c
 10814  00263E  C026  F032         	movff	___ftdiv@f1+2,___ftdiv@sign
 10815  002642  5029               	movf	___ftdiv@f2+2,w,c
 10816  002644  1A32               	xorwf	___ftdiv@sign,f,c
 10817  002646  0E80               	movlw	128
 10818  002648  1632               	andwf	___ftdiv@sign,f,c
 10819  00264A  8E25               	bsf	___ftdiv@f1+1,7,c
 10820  00264C  0EFF               	movlw	255
 10821  00264E  1624               	andwf	___ftdiv@f1,f,c
 10822  002650  0EFF               	movlw	255
 10823  002652  1625               	andwf	___ftdiv@f1+1,f,c
 10824  002654  0E00               	movlw	0
 10825  002656  1626               	andwf	___ftdiv@f1+2,f,c
 10826  002658  8E28               	bsf	___ftdiv@f2+1,7,c
 10827  00265A  0EFF               	movlw	255
 10828  00265C  1627               	andwf	___ftdiv@f2,f,c
 10829  00265E  0EFF               	movlw	255
 10830  002660  1628               	andwf	___ftdiv@f2+1,f,c
 10831  002662  0E00               	movlw	0
 10832  002664  1629               	andwf	___ftdiv@f2+2,f,c
 10833  002666  0E18               	movlw	24
 10834  002668  6E2D               	movwf	___ftdiv@cntr,c
 10835  00266A                     i2l3340:
 10836  00266A  90D8               	bcf	status,0,c
 10837  00266C  362E               	rlcf	___ftdiv@f3,f,c
 10838  00266E  362F               	rlcf	___ftdiv@f3+1,f,c
 10839  002670  3630               	rlcf	___ftdiv@f3+2,f,c
 10840  002672  5027               	movf	___ftdiv@f2,w,c
 10841  002674  5C24               	subwf	___ftdiv@f1,w,c
 10842  002676  5028               	movf	___ftdiv@f2+1,w,c
 10843  002678  5825               	subwfb	___ftdiv@f1+1,w,c
 10844  00267A  5029               	movf	___ftdiv@f2+2,w,c
 10845  00267C  5826               	subwfb	___ftdiv@f1+2,w,c
 10846  00267E  A0D8               	btfss	status,0,c
 10847  002680  D007               	goto	i2l621
 10848  002682  5027               	movf	___ftdiv@f2,w,c
 10849  002684  5E24               	subwf	___ftdiv@f1,f,c
 10850  002686  5028               	movf	___ftdiv@f2+1,w,c
 10851  002688  5A25               	subwfb	___ftdiv@f1+1,f,c
 10852  00268A  5029               	movf	___ftdiv@f2+2,w,c
 10853  00268C  5A26               	subwfb	___ftdiv@f1+2,f,c
 10854  00268E  802E               	bsf	___ftdiv@f3,0,c
 10855  002690                     i2l621:
 10856  002690  90D8               	bcf	status,0,c
 10857  002692  3624               	rlcf	___ftdiv@f1,f,c
 10858  002694  3625               	rlcf	___ftdiv@f1+1,f,c
 10859  002696  3626               	rlcf	___ftdiv@f1+2,f,c
 10860  002698  2E2D               	decfsz	___ftdiv@cntr,f,c
 10861  00269A  D7E7               	goto	i2l3340
 10862  00269C  C02E  F001         	movff	___ftdiv@f3,___ftpack@arg
 10863  0026A0  C02F  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
 10864  0026A4  C030  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
 10865  0026A8  C031  F004         	movff	___ftdiv@exp,___ftpack@exp
 10866  0026AC  C032  F005         	movff	___ftdiv@sign,___ftpack@sign
 10867  0026B0  ECBA  F013         	call	___ftpack	;wreg free
 10868  0026B4  C001  F024         	movff	?___ftpack,?___ftdiv
 10869  0026B8  C002  F025         	movff	?___ftpack+1,?___ftdiv+1
 10870  0026BC  C003  F026         	movff	?___ftpack+2,?___ftdiv+2
 10871  0026C0  0012               	return	
 10872  0026C2                     __end_of___ftdiv:
 10873                           	opt stack 0
 10874                           pclatu	equ	0xFFB
 10875                           pclath	equ	0xFFA
 10876                           tblptru	equ	0xFF8
 10877                           tblptrh	equ	0xFF7
 10878                           tblptrl	equ	0xFF6
 10879                           tablat	equ	0xFF5
 10880                           prodh	equ	0xFF4
 10881                           prodl	equ	0xFF3
 10882                           intcon	equ	0xFF2
 10883                           indf0	equ	0xFEF
 10884                           postinc0	equ	0xFEE
 10885                           fsr0h	equ	0xFEA
 10886                           fsr0l	equ	0xFE9
 10887                           wreg	equ	0xFE8
 10888                           fsr1h	equ	0xFE2
 10889                           fsr1l	equ	0xFE1
 10890                           indf2	equ	0xFDF
 10891                           postinc2	equ	0xFDE
 10892                           postdec2	equ	0xFDD
 10893                           fsr2h	equ	0xFDA
 10894                           fsr2l	equ	0xFD9
 10895                           status	equ	0xFD8
 10896                           
 10897 ;; *************** function ___awtoft *****************
 10898 ;; Defined at:
 10899 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awtoft.c"
 10900 ;; Parameters:    Size  Location     Type
 10901 ;;  c               2    8[COMRAM] int 
 10902 ;; Auto vars:     Size  Location     Type
 10903 ;;  sign            1   11[COMRAM] unsigned char 
 10904 ;; Return value:  Size  Location     Type
 10905 ;;                  3    8[COMRAM] float 
 10906 ;; Registers used:
 10907 ;;		wreg, status,2, status,0, cstack
 10908 ;; Tracked objects:
 10909 ;;		On entry : 0/0
 10910 ;;		On exit  : 0/0
 10911 ;;		Unchanged: 0/0
 10912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10913 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10916 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10917 ;;Total ram usage:        4 bytes
 10918 ;; Hardware stack levels used:    1
 10919 ;; Hardware stack levels required when called:    1
 10920 ;; This function calls:
 10921 ;;		___ftpack
 10922 ;; This function is called by:
 10923 ;;		_tratamento
 10924 ;; This function uses a non-reentrant model
 10925 ;;
 10926                           
 10927                           	psect	text48
 10928  002D96                     __ptext48:
 10929                           	opt stack 0
 10930  002D96                     ___awtoft:
 10931                           	opt stack 26
 10932                           
 10933                           ;incstack = 0
 10934  002D96  0E00               	movlw	0
 10935  002D98  6E0C               	movwf	___awtoft@sign,c
 10936  002D9A  AE0A               	btfss	___awtoft@c+1,7,c
 10937  002D9C  D006               	goto	i2l3362
 10938  002D9E  6C09               	negf	___awtoft@c,c
 10939  002DA0  1E0A               	comf	___awtoft@c+1,f,c
 10940  002DA2  B0D8               	btfsc	status,0,c
 10941  002DA4  2A0A               	incf	___awtoft@c+1,f,c
 10942  002DA6  0E01               	movlw	1
 10943  002DA8  6E0C               	movwf	___awtoft@sign,c
 10944  002DAA                     i2l3362:
 10945  002DAA  C009  F001         	movff	___awtoft@c,___ftpack@arg
 10946  002DAE  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
 10947  002DB2  6A03               	clrf	___ftpack@arg+2,c
 10948  002DB4  0E8E               	movlw	142
 10949  002DB6  6E04               	movwf	___ftpack@exp,c
 10950  002DB8  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
 10951  002DBC  ECBA  F013         	call	___ftpack	;wreg free
 10952  002DC0  C001  F009         	movff	?___ftpack,?___awtoft
 10953  002DC4  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
 10954  002DC8  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
 10955  002DCC  0012               	return	
 10956  002DCE                     __end_of___awtoft:
 10957                           	opt stack 0
 10958                           pclatu	equ	0xFFB
 10959                           pclath	equ	0xFFA
 10960                           tblptru	equ	0xFF8
 10961                           tblptrh	equ	0xFF7
 10962                           tblptrl	equ	0xFF6
 10963                           tablat	equ	0xFF5
 10964                           prodh	equ	0xFF4
 10965                           prodl	equ	0xFF3
 10966                           intcon	equ	0xFF2
 10967                           indf0	equ	0xFEF
 10968                           postinc0	equ	0xFEE
 10969                           fsr0h	equ	0xFEA
 10970                           fsr0l	equ	0xFE9
 10971                           wreg	equ	0xFE8
 10972                           fsr1h	equ	0xFE2
 10973                           fsr1l	equ	0xFE1
 10974                           indf2	equ	0xFDF
 10975                           postinc2	equ	0xFDE
 10976                           postdec2	equ	0xFDD
 10977                           fsr2h	equ	0xFDA
 10978                           fsr2l	equ	0xFD9
 10979                           status	equ	0xFD8
 10980                           
 10981 ;; *************** function ___ftpack *****************
 10982 ;; Defined at:
 10983 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
 10984 ;; Parameters:    Size  Location     Type
 10985 ;;  arg             3    0[COMRAM] unsigned um
 10986 ;;  exp             1    3[COMRAM] unsigned char 
 10987 ;;  sign            1    4[COMRAM] unsigned char 
 10988 ;; Auto vars:     Size  Location     Type
 10989 ;;		None
 10990 ;; Return value:  Size  Location     Type
 10991 ;;                  3    0[COMRAM] float 
 10992 ;; Registers used:
 10993 ;;		wreg, status,2, status,0
 10994 ;; Tracked objects:
 10995 ;;		On entry : 0/0
 10996 ;;		On exit  : 0/0
 10997 ;;		Unchanged: 0/0
 10998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10999 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11001 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11002 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11003 ;;Total ram usage:        8 bytes
 11004 ;; Hardware stack levels used:    1
 11005 ;; This function calls:
 11006 ;;		Nothing
 11007 ;; This function is called by:
 11008 ;;		___awtoft
 11009 ;;		___ftadd
 11010 ;;		___ftdiv
 11011 ;;		___ftmul
 11012 ;;		___lltoft
 11013 ;; This function uses a non-reentrant model
 11014 ;;
 11015                           
 11016                           	psect	text49
 11017  002774                     __ptext49:
 11018                           	opt stack 0
 11019  002774                     ___ftpack:
 11020                           	opt stack 23
 11021                           
 11022                           ;incstack = 0
 11023  002774  5004               	movf	___ftpack@exp,w,c
 11024  002776  B4D8               	btfsc	status,2,c
 11025  002778  D005               	goto	i2l2396
 11026  00277A  5001               	movf	___ftpack@arg,w,c
 11027  00277C  1002               	iorwf	___ftpack@arg+1,w,c
 11028  00277E  1003               	iorwf	___ftpack@arg+2,w,c
 11029  002780  A4D8               	btfss	status,2,c
 11030  002782  D00C               	goto	i2l2402
 11031  002784                     i2l2396:
 11032  002784  0E00               	movlw	0
 11033  002786  6E01               	movwf	?___ftpack,c
 11034  002788  0E00               	movlw	0
 11035  00278A  6E02               	movwf	?___ftpack+1,c
 11036  00278C  0E00               	movlw	0
 11037  00278E  6E03               	movwf	?___ftpack+2,c
 11038  002790  0012               	return	
 11039  002792                     i2l2400:
 11040  002792  2A04               	incf	___ftpack@exp,f,c
 11041  002794  90D8               	bcf	status,0,c
 11042  002796  3203               	rrcf	___ftpack@arg+2,f,c
 11043  002798  3202               	rrcf	___ftpack@arg+1,f,c
 11044  00279A  3201               	rrcf	___ftpack@arg,f,c
 11045  00279C                     i2l2402:
 11046  00279C  0E00               	movlw	0
 11047  00279E  1401               	andwf	___ftpack@arg,w,c
 11048  0027A0  6E06               	movwf	??___ftpack& (0+255),c
 11049  0027A2  0E00               	movlw	0
 11050  0027A4  1402               	andwf	___ftpack@arg+1,w,c
 11051  0027A6  6E07               	movwf	(??___ftpack+1)& (0+255),c
 11052  0027A8  0EFE               	movlw	254
 11053  0027AA  1403               	andwf	___ftpack@arg+2,w,c
 11054  0027AC  6E08               	movwf	(??___ftpack+2)& (0+255),c
 11055  0027AE  5006               	movf	??___ftpack,w,c
 11056  0027B0  1007               	iorwf	??___ftpack+1,w,c
 11057  0027B2  1008               	iorwf	??___ftpack+2,w,c
 11058  0027B4  B4D8               	btfsc	status,2,c
 11059  0027B6  D00C               	goto	i2l2408
 11060  0027B8  D7EC               	goto	i2l2400
 11061  0027BA                     i2l2404:
 11062  0027BA  2A04               	incf	___ftpack@exp,f,c
 11063  0027BC  0E01               	movlw	1
 11064  0027BE  2601               	addwf	___ftpack@arg,f,c
 11065  0027C0  0E00               	movlw	0
 11066  0027C2  2202               	addwfc	___ftpack@arg+1,f,c
 11067  0027C4  0E00               	movlw	0
 11068  0027C6  2203               	addwfc	___ftpack@arg+2,f,c
 11069  0027C8  90D8               	bcf	status,0,c
 11070  0027CA  3203               	rrcf	___ftpack@arg+2,f,c
 11071  0027CC  3202               	rrcf	___ftpack@arg+1,f,c
 11072  0027CE  3201               	rrcf	___ftpack@arg,f,c
 11073  0027D0                     i2l2408:
 11074  0027D0  0E00               	movlw	0
 11075  0027D2  1401               	andwf	___ftpack@arg,w,c
 11076  0027D4  6E06               	movwf	??___ftpack& (0+255),c
 11077  0027D6  0E00               	movlw	0
 11078  0027D8  1402               	andwf	___ftpack@arg+1,w,c
 11079  0027DA  6E07               	movwf	(??___ftpack+1)& (0+255),c
 11080  0027DC  0EFF               	movlw	255
 11081  0027DE  1403               	andwf	___ftpack@arg+2,w,c
 11082  0027E0  6E08               	movwf	(??___ftpack+2)& (0+255),c
 11083  0027E2  5006               	movf	??___ftpack,w,c
 11084  0027E4  1007               	iorwf	??___ftpack+1,w,c
 11085  0027E6  1008               	iorwf	??___ftpack+2,w,c
 11086  0027E8  B4D8               	btfsc	status,2,c
 11087  0027EA  D006               	goto	i2l2412
 11088  0027EC  D7E6               	goto	i2l2404
 11089  0027EE                     i2l2410:
 11090  0027EE  0604               	decf	___ftpack@exp,f,c
 11091  0027F0  90D8               	bcf	status,0,c
 11092  0027F2  3601               	rlcf	___ftpack@arg,f,c
 11093  0027F4  3602               	rlcf	___ftpack@arg+1,f,c
 11094  0027F6  3603               	rlcf	___ftpack@arg+2,f,c
 11095  0027F8                     i2l2412:
 11096  0027F8  BE02               	btfsc	___ftpack@arg+1,7,c
 11097  0027FA  D003               	goto	i2l563
 11098  0027FC  0E02               	movlw	2
 11099  0027FE  6004               	cpfslt	___ftpack@exp,c
 11100  002800  D7F6               	goto	i2l2410
 11101  002802                     i2l563:
 11102  002802  A004               	btfss	___ftpack@exp,0,c
 11103  002804  9E02               	bcf	___ftpack@arg+1,7,c
 11104  002806  90D8               	bcf	status,0,c
 11105  002808  3204               	rrcf	___ftpack@exp,f,c
 11106  00280A  5004               	movf	___ftpack@exp,w,c
 11107  00280C  1203               	iorwf	___ftpack@arg+2,f,c
 11108  00280E  5005               	movf	___ftpack@sign,w,c
 11109  002810  A4D8               	btfss	status,2,c
 11110  002812  8E03               	bsf	___ftpack@arg+2,7,c
 11111  002814  C001  F001         	movff	___ftpack@arg,?___ftpack
 11112  002818  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
 11113  00281C  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
 11114  002820  0012               	return	
 11115  002822                     __end_of___ftpack:
 11116                           	opt stack 0
 11117                           pclatu	equ	0xFFB
 11118                           pclath	equ	0xFFA
 11119                           tblptru	equ	0xFF8
 11120                           tblptrh	equ	0xFF7
 11121                           tblptrl	equ	0xFF6
 11122                           tablat	equ	0xFF5
 11123                           prodh	equ	0xFF4
 11124                           prodl	equ	0xFF3
 11125                           intcon	equ	0xFF2
 11126                           indf0	equ	0xFEF
 11127                           postinc0	equ	0xFEE
 11128                           fsr0h	equ	0xFEA
 11129                           fsr0l	equ	0xFE9
 11130                           wreg	equ	0xFE8
 11131                           fsr1h	equ	0xFE2
 11132                           fsr1l	equ	0xFE1
 11133                           indf2	equ	0xFDF
 11134                           postinc2	equ	0xFDE
 11135                           postdec2	equ	0xFDD
 11136                           fsr2h	equ	0xFDA
 11137                           fsr2l	equ	0xFD9
 11138                           status	equ	0xFD8
 11139                           pclatu	equ	0xFFB
 11140                           pclath	equ	0xFFA
 11141                           tblptru	equ	0xFF8
 11142                           tblptrh	equ	0xFF7
 11143                           tblptrl	equ	0xFF6
 11144                           tablat	equ	0xFF5
 11145                           prodh	equ	0xFF4
 11146                           prodl	equ	0xFF3
 11147                           intcon	equ	0xFF2
 11148                           indf0	equ	0xFEF
 11149                           postinc0	equ	0xFEE
 11150                           fsr0h	equ	0xFEA
 11151                           fsr0l	equ	0xFE9
 11152                           wreg	equ	0xFE8
 11153                           fsr1h	equ	0xFE2
 11154                           fsr1l	equ	0xFE1
 11155                           indf2	equ	0xFDF
 11156                           postinc2	equ	0xFDE
 11157                           postdec2	equ	0xFDD
 11158                           fsr2h	equ	0xFDA
 11159                           fsr2l	equ	0xFD9
 11160                           status	equ	0xFD8
 11161                           
 11162                           	psect	rparam
 11163  0000                     pclatu	equ	0xFFB
 11164                           pclath	equ	0xFFA
 11165                           tblptru	equ	0xFF8
 11166                           tblptrh	equ	0xFF7
 11167                           tblptrl	equ	0xFF6
 11168                           tablat	equ	0xFF5
 11169                           prodh	equ	0xFF4
 11170                           prodl	equ	0xFF3
 11171                           intcon	equ	0xFF2
 11172                           indf0	equ	0xFEF
 11173                           postinc0	equ	0xFEE
 11174                           fsr0h	equ	0xFEA
 11175                           fsr0l	equ	0xFE9
 11176                           wreg	equ	0xFE8
 11177                           fsr1h	equ	0xFE2
 11178                           fsr1l	equ	0xFE1
 11179                           indf2	equ	0xFDF
 11180                           postinc2	equ	0xFDE
 11181                           postdec2	equ	0xFDD
 11182                           fsr2h	equ	0xFDA
 11183                           fsr2l	equ	0xFD9
 11184                           status	equ	0xFD8
 11185                           
 11186                           	psect	temp
 11187  00007D                     btemp:
 11188                           	opt stack 0
 11189  00007D                     	ds	1
 11190  0000                     int$flags	set	btemp
 11191                           pclatu	equ	0xFFB
 11192                           pclath	equ	0xFFA
 11193                           tblptru	equ	0xFF8
 11194                           tblptrh	equ	0xFF7
 11195                           tblptrl	equ	0xFF6
 11196                           tablat	equ	0xFF5
 11197                           prodh	equ	0xFF4
 11198                           prodl	equ	0xFF3
 11199                           intcon	equ	0xFF2
 11200                           indf0	equ	0xFEF
 11201                           postinc0	equ	0xFEE
 11202                           fsr0h	equ	0xFEA
 11203                           fsr0l	equ	0xFE9
 11204                           wreg	equ	0xFE8
 11205                           fsr1h	equ	0xFE2
 11206                           fsr1l	equ	0xFE1
 11207                           indf2	equ	0xFDF
 11208                           postinc2	equ	0xFDE
 11209                           postdec2	equ	0xFDD
 11210                           fsr2h	equ	0xFDA
 11211                           fsr2l	equ	0xFD9
 11212                           status	equ	0xFD8


Data Sizes:
    Strings     1058
    Constant    118
    Data        0
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    124     124
    BANK0           128     55      93
    BANK1           256     16      16
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 10
		 -> converterFloatParaString@string(COMRAM[10]), converterIntParaString@string(COMRAM[7]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    indexDoMenorValor@dados	PTR float  size(2) Largest target is 15
		 -> tensaoNaBateria(BANK0[15]), 

    escreverStringUart@string	PTR unsigned char  size(2) Largest target is 3967
		 -> STR_58(CODE[55]), STR_57(CODE[29]), STR_56(CODE[29]), STR_55(CODE[55]), 
		 -> STR_54(CODE[29]), STR_53(CODE[28]), STR_52(CODE[43]), STR_51(CODE[42]), 
		 -> STR_50(CODE[4]), STR_49(CODE[17]), STR_48(CODE[41]), STR_47(CODE[40]), 
		 -> STR_46(CODE[4]), STR_45(CODE[23]), STR_44(CODE[3]), STR_43(CODE[16]), 
		 -> STR_42(CODE[3]), STR_41(CODE[11]), STR_40(CODE[6]), STR_39(CODE[9]), 
		 -> STR_38(CODE[4]), STR_37(CODE[68]), STR_36(CODE[43]), STR_35(CODE[38]), 
		 -> STR_34(CODE[40]), STR_33(CODE[39]), STR_32(CODE[4]), STR_31(CODE[17]), 
		 -> STR_30(CODE[38]), STR_29(CODE[37]), STR_28(CODE[4]), STR_27(CODE[16]), 
		 -> STR_26(CODE[3]), STR_25(CODE[11]), STR_24(CODE[6]), STR_23(CODE[9]), 
		 -> STR_22(CODE[4]), STR_21(CODE[68]), STR_20(CODE[41]), STR_19(CODE[26]), 
		 -> STR_18(CODE[36]), STR_17(CODE[25]), STR_16(CODE[3]), STR_15(CODE[18]), 
		 -> STR_14(CODE[3]), STR_13(CODE[16]), STR_12(CODE[3]), STR_11(CODE[11]), 
		 -> STR_10(CODE[6]), STR_9(CODE[9]), STR_8(CODE[4]), RAM(DATA[3967]), 
		 -> STR_7(CODE[68]), STR_6(CODE[32]), STR_5(CODE[31]), STR_4(CODE[52]), 
		 -> STR_3(CODE[53]), 

    tamanhoDaString@string	PTR unsigned char  size(2) Largest target is 3967
		 -> STR_58(CODE[55]), STR_57(CODE[29]), STR_56(CODE[29]), STR_55(CODE[55]), 
		 -> STR_54(CODE[29]), STR_53(CODE[28]), STR_52(CODE[43]), STR_51(CODE[42]), 
		 -> STR_50(CODE[4]), STR_49(CODE[17]), STR_48(CODE[41]), STR_47(CODE[40]), 
		 -> STR_46(CODE[4]), STR_45(CODE[23]), STR_44(CODE[3]), STR_43(CODE[16]), 
		 -> STR_42(CODE[3]), STR_41(CODE[11]), STR_40(CODE[6]), STR_39(CODE[9]), 
		 -> STR_38(CODE[4]), STR_37(CODE[68]), STR_36(CODE[43]), STR_35(CODE[38]), 
		 -> STR_34(CODE[40]), STR_33(CODE[39]), STR_32(CODE[4]), STR_31(CODE[17]), 
		 -> STR_30(CODE[38]), STR_29(CODE[37]), STR_28(CODE[4]), STR_27(CODE[16]), 
		 -> STR_26(CODE[3]), STR_25(CODE[11]), STR_24(CODE[6]), STR_23(CODE[9]), 
		 -> STR_22(CODE[4]), STR_21(CODE[68]), STR_20(CODE[41]), STR_19(CODE[26]), 
		 -> STR_18(CODE[36]), STR_17(CODE[25]), STR_16(CODE[3]), STR_15(CODE[18]), 
		 -> STR_14(CODE[3]), STR_13(CODE[16]), STR_12(CODE[3]), STR_11(CODE[11]), 
		 -> STR_10(CODE[6]), STR_9(CODE[9]), STR_8(CODE[4]), RAM(DATA[3967]), 
		 -> STR_7(CODE[68]), STR_6(CODE[32]), STR_5(CODE[31]), STR_4(CODE[52]), 
		 -> STR_3(CODE[53]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _tratamento in COMRAM

    _tratamento->i2_escreverStringUart
    i2_escreverStringUart->_converterFloatParaString
    _indexDoMenorValor->___ftge
    _converterIntParaString->_sprintf
    _converterFloatParaString->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___ftneg
    ___ftneg->___ftdiv
    ___ftge->___wmul
    ___ftdiv->___ftmul
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _tratamento in BANK0

    _tratamento->i2_escreverStringUart

Critical Paths under _main in BANK1

    _main->_escreverStringUart
    _escreverStringUart->_tamanhoDaString
    _configureGpios->_desabilitarCarregamentoDaBateria
    _configureGpios->_desabilitarDescarregamentoDaBateria

Critical Paths under _tratamento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tratamento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tratamento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tratamento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tratamento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _tratamento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _tratamento in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _tratamento in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _tratamento in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _tratamento in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _tratamento in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _tratamento in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _tratamento in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _tratamento in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _tratamento in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4487
                                             14 BANK1      2     2      0
                       _configureAdc
                     _configureGpios
                _configureInterrupts
                    _configureTimer0
                      _configureUart
                  _desabilitarTimer0
                 _escreverStringUart
                    _habilitarTimer0
                    _sinalizacaoBeep
 ---------------------------------------------------------------------------------
 (1) _sinalizacaoBeep                                      1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _habilitarTimer0                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escreverStringUart                                   8     6      2    4487
                                              6 BANK1      8     6      2
                   _escreverCharUart
                    _tamanhoDaString
 ---------------------------------------------------------------------------------
 (2) _tamanhoDaString                                      6     4      2     189
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (2) _escreverCharUart                                     1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _desabilitarTimer0                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureUart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureTimer0                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureGpios                                       0     0      0       0
   _desabilitarCarregamentoDaBateria
_desabilitarDescarregamentoDaBateria
 ---------------------------------------------------------------------------------
 (2) _desabilitarDescarregamentoDaBateria                  1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _desabilitarCarregamentoDaBateria                     1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configureAdc                                         1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _tratamento                                         102   102      0  169883
                                              4 BANK0     51    51      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                             ___wmul
           _converterFloatParaString
             _converterIntParaString
     _habilitarCarregamentoDaBateria
  _habilitarDescarregamentoDaBateria
                  _indexDoMenorValor
                          _lerAdcAn0
                          _lerAdcAn1
                _sinalizacaoAprovada
                   _sinalizacaoFalha
 i2_desabilitarCarregamentoDaBateria
i2_desabilitarDescarregamentoDaBater
                i2_desabilitarTimer0
               i2_escreverStringUart
 ---------------------------------------------------------------------------------
 (4) i2_escreverStringUart                                 8     6      2    1998
                                            120 COMRAM     4     2      2
                                              0 BANK0      4     4      0
           _converterFloatParaString (ARG)
             _converterIntParaString (ARG)
                 i2_escreverCharUart
                  i2_tamanhoDaString
 ---------------------------------------------------------------------------------
 (5) i2_tamanhoDaString                                    6     4      2      94
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) i2_escreverCharUart                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) i2_desabilitarTimer0                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) i2_desabilitarDescarregamentoDaBateria                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) i2_desabilitarCarregamentoDaBateria                   1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _sinalizacaoFalha                                     2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _sinalizacaoAprovada                                  2     2      0      47
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _lerAdcAn1                                            6     4      2      24
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _lerAdcAn0                                            6     4      2      24
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _indexDoMenorValor                                   12     8      4    6166
                                             29 COMRAM    12     8      4
                             ___ftge
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _habilitarDescarregamentoDaBateria                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _habilitarCarregamentoDaBateria                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _converterIntParaString                               9     7      2   64780
                                            107 COMRAM     9     7      2
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _converterFloatParaString                            13    10      3   65540
                                            107 COMRAM    13    10      3
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             44    37      7   64466
                                             71 COMRAM    36    29      7
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
 ---------------------------------------------------------------------------------
 (6) _scale                                               10     7      3   13447
                                             35 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _fround                                              13    10      3   13249
                                             35 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3477
                                             14 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftmul                                             15     9      6    5997
                                             20 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
                          _lerAdcAn0 (ARG)
                          _lerAdcAn1 (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4    1664
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    1820
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) __tdiv_to_l_                                         15     9      6     455
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (6) __div_to_l_                                          12     6      6     598
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (6) ___lltoft                                             9     5      4    2650
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     767
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     618
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             15    11      4     480
                                             35 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftsub                                              6     0      6    8224
                                             65 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftadd                                             12     6      6    7879
                                             53 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             _fround (ARG)
                          _lerAdcAn1 (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     349
                                             50 COMRAM     3     0      3
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                          _lerAdcAn1 (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6    2264
                                             20 COMRAM     9     3      6
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    5191
                                             35 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                          _lerAdcAn0 (ARG)
                          _lerAdcAn1 (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    3052
                                              8 COMRAM     4     1      3
                           ___ftpack
                          _lerAdcAn0 (ARG)
                          _lerAdcAn1 (ARG)
 ---------------------------------------------------------------------------------
 (8) ___ftpack                                             8     3      5    2505
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configureAdc
   _configureGpios
     _desabilitarCarregamentoDaBateria
     _desabilitarDescarregamentoDaBateria
   _configureInterrupts
   _configureTimer0
   _configureUart
   _desabilitarTimer0
   _escreverStringUart
     _escreverCharUart
     _tamanhoDaString
   _habilitarTimer0
   _sinalizacaoBeep

 _tratamento (ROOT)
   ___awtoft
     ___ftpack
     _lerAdcAn0 (ARG)
     _lerAdcAn1 (ARG)
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
       _lerAdcAn0 (ARG)
       _lerAdcAn1 (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _lerAdcAn0 (ARG)
       _lerAdcAn1 (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _lerAdcAn0 (ARG)
       _lerAdcAn1 (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
       _lerAdcAn1 (ARG)
     ___ftpack (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _lerAdcAn1 (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
       _lerAdcAn0 (ARG)
       _lerAdcAn1 (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _lerAdcAn0 (ARG)
       _lerAdcAn1 (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
     _lerAdcAn0 (ARG)
     _lerAdcAn1 (ARG)
   ___ftge
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
       _lerAdcAn0 (ARG)
       _lerAdcAn1 (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     _lerAdcAn0 (ARG)
     _lerAdcAn1 (ARG)
   ___ftneg
     ___awtoft (ARG)
       ___ftpack
       _lerAdcAn0 (ARG)
       _lerAdcAn1 (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _lerAdcAn0 (ARG)
       _lerAdcAn1 (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _lerAdcAn0 (ARG)
       _lerAdcAn1 (ARG)
     _lerAdcAn1 (ARG)
   ___wmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
   _converterFloatParaString
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           _lerAdcAn1 (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _lerAdcAn1 (ARG)
       ___ftge
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         _lerAdcAn1 (ARG)
       ___ftsub
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _lerAdcAn0 (ARG)
                   _lerAdcAn1 (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _lerAdcAn1 (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _converterIntParaString
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           _lerAdcAn1 (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _lerAdcAn1 (ARG)
       ___ftge
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         _lerAdcAn1 (ARG)
       ___ftsub
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _lerAdcAn0 (ARG)
                   _lerAdcAn1 (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _lerAdcAn1 (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _habilitarCarregamentoDaBateria
   _habilitarDescarregamentoDaBateria
   _indexDoMenorValor
     ___ftge
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   _lerAdcAn0
   _lerAdcAn1
   _sinalizacaoAprovada
   _sinalizacaoFalha
   i2_desabilitarCarregamentoDaBateria
   i2_desabilitarDescarregamentoDaBateria
   i2_desabilitarTimer0
   i2_escreverStringUart
     _converterFloatParaString (ARG)
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _lerAdcAn0 (ARG)
                   _lerAdcAn1 (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _lerAdcAn1 (ARG)
         ___ftge
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           _lerAdcAn1 (ARG)
         ___ftsub
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _lerAdcAn0 (ARG)
                   _lerAdcAn1 (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _lerAdcAn0 (ARG)
                   _lerAdcAn1 (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                     _lerAdcAn0 (ARG)
                     _lerAdcAn1 (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   _lerAdcAn0 (ARG)
                   _lerAdcAn1 (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _lerAdcAn0 (ARG)
                   _lerAdcAn1 (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _lerAdcAn0 (ARG)
                   _lerAdcAn1 (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _lerAdcAn1 (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _converterIntParaString (ARG)
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _lerAdcAn0 (ARG)
                   _lerAdcAn1 (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _lerAdcAn1 (ARG)
         ___ftge
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           _lerAdcAn1 (ARG)
         ___ftsub
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _lerAdcAn0 (ARG)
                   _lerAdcAn1 (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _lerAdcAn0 (ARG)
                   _lerAdcAn1 (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                     _lerAdcAn0 (ARG)
                     _lerAdcAn1 (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   _lerAdcAn0 (ARG)
                   _lerAdcAn1 (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _lerAdcAn0 (ARG)
                   _lerAdcAn1 (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _lerAdcAn0 (ARG)
                   _lerAdcAn1 (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _lerAdcAn1 (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     i2_escreverCharUart (ARG)
     i2_tamanhoDaString (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     10      10       7        6.3%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     37      5D       5       72.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7C      7C       1       98.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E9      34        0.0%
DATA                 0      0      E9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Feb 22 10:08:59 2018

                                   ?_configureAdc 0001                                                l81 2F8C  
                                    ___awdiv@sign 000C                                    ?_configureUart 0001  
                                _escreverCharUart 2F84                               ___wmul@multiplicand 0011  
                                     __CFG_BORV$3 000000                               ??_desabilitarTimer0 0100  
                                    __CFG_CP0$OFF 000000                                      __CFG_CP1$OFF 000000  
                                    __CFG_CP2$OFF 000000                                      __CFG_CP3$OFF 000000  
                                    ___ftadd@exp1 0041                                      ___ftadd@exp2 0040  
                                    ___ftadd@sign 003F                                               l160 272E  
                                    __CFG_CPB$OFF 000000                                   ?_configureGpios 0001  
                                    __CFG_CPD$OFF 000000                                      ___awmod@sign 0006  
                                             prod 000FF3                                               wreg 000FE8  
                                    __CFG_LVP$OFF 000000                                      ___ftdiv@cntr 002D  
                                    ___ftdiv@sign 0032                                      __CFG_WDT$OFF 000000  
                                            l3810 2890                                              l3806 284C  
                                            l3770 2BB4                                              l3854 2716  
                                            l3768 2BAE                                              STR_1 FFF9  
                                            STR_2 FFFC                                              STR_3 FC9C  
                                            STR_4 FC68                                              STR_5 FECF  
                                            STR_6 FEAF                                              STR_7 FC21  
                                            STR_8 FFE7                                              STR_9 FFDC  
                                            u3530 2BEE                        i2escreverCharUart@caracter 0001  
                                            u3550 2886                                              u3607 26D0  
                                            u3537 2BE4                                              u3617 2722  
                                            u3627 2EFE                                              u3637 2F2C  
                                            u3557 287C                                              u3647 2F40  
                                            u3657 2DF8                                              i2l63 2CFA  
                                            i2l57 2D36                                              i2l81 2F98  
                    __size_of_sinalizacaoAprovada 0038                                   _tempoEmSegundos 00CC  
                                    __CFG_PWRT$ON 000000                                  ?_configureTimer0 0001  
                       __end_of_desabilitarTimer0 2FC8                      converterIntParaString@string 006E  
                                            _main 26C2                                      ___ftpack@arg 0001  
                                    ___ftpack@exp 0004                                              fsr0h 000FEA  
                                            fsr1h 000FE2                                              indf0 000FEF  
                                            fsr2h 000FDA                                              fsr0l 000FE9  
                                            indf2 000FDF                                              fsr1l 000FE1  
                                            fsr2l 000FD9                                              btemp 007D  
                                            prodh 000FF4                                              prodl 000FF3  
                                            start 000E                                     __CFG_IESO$OFF 000000  
                                    _sprintf$1519 0055                                     __CFG_MCLRE$ON 000000  
                                    ___ftmul@cntr 0022                                    ??_configureAdc 0100  
                                    ___param_bank 000000                                      ___ftmul@sign 0023  
                      __end_ofi2_escreverCharUart 2F9E                                      ___fttol@exp1 0032  
                                    ___fttol@lval 002E                                             ?_main 0001  
                                 __end_of___awdiv 2A4A                                   __end_of___ftadd 20AA  
                                           STR_10 FFE5                                             STR_11 FFD1  
                                           STR_12 FFF3                                             STR_20 FD51  
                                           STR_21 FC21                                             STR_13 FFC1  
                                           STR_22 FFE7                                             STR_14 FFF6  
                                           STR_30 FE1A                                             STR_23 FFDC  
                                           STR_31 FFA0                                             STR_15 FF8E  
                                           STR_40 FFE5                                             STR_24 FFE5  
                                           STR_16 FFF3                                             STR_32 FFEB  
                                           STR_41 FFD1                                             STR_25 FFD1  
                                           STR_17 FF5E                                             STR_33 FDF3  
                                           STR_50 FFEB                                             STR_42 FFF3  
                                           STR_26 FFF3                                             STR_18 FE8B  
                                           STR_34 FDCB                                             STR_43 FFB1  
                                           STR_27 FFB1                                             STR_19 FF44  
                                           STR_35 FE40                                             STR_51 FD27  
                                           STR_44 FFF6                                             STR_28 FFEF  
                                           STR_52 FCFC                                             STR_36 FCD1  
                                 __end_of___awmod 2B3C                                             STR_45 FF77  
                                           STR_53 FF28                                             STR_29 FE66  
                                           STR_37 FBDD                                             STR_46 FFEF  
                                           STR_38 FFE7                                             STR_54 FF0B  
                                           STR_39 FFDC                                             STR_47 FDA3  
                                           STR_55 FC65                                             STR_56 FEEE  
                                           STR_48 FD7A                                             STR_57 FF0B  
                                           STR_49 FFA0                                             STR_58 FC65  
                                 __end_of___ftdiv 26C2                                   __end_of___ftneg 2E9C  
                                 __end_of___lldiv 2ACC                                   __end_of___ftmul 23F8  
                                 ___awdiv@divisor 0009                                   __end_of___llmod 2BA2  
                                 __end_of___ftsub 2CE6                                   __end_of___fttol 24EC  
                                           i2l201 10BE                                             i2l131 2FA6  
                                           i2l126 2FB2                                             i2l208 2D6E  
                                           i2l601 201C                                             i2l610 2038  
                                           i2l531 22F2                                             i2l621 2690  
                                           i2l710 2ABA                                             i2l720 2B90  
                                           i2l288 1562                                             i2l563 2802  
                                           i2l635 21CA                                             i2l660 2E8E  
                                           i2l628 213C                                             i2l629 2164  
                                           i2l590 1F6C                                             i2l586 1F42  
                                 ___awdiv@counter 000B                                             _TMR0H 000FD7  
                                           _TMR0L 000FD6                                             _SPBRG 000FAF  
                                           _PORTB 000F81                                             _TRISB 000F93  
                                           _TXREG 000FAD                                     __CFG_WRT0$OFF 000000  
                                   __CFG_WRT1$OFF 000000                                     __CFG_WRT2$OFF 000000  
                                   __CFG_WRT3$OFF 000000                                      ___lltoft@exp 0011  
                                  __CFG_EBTR0$OFF 000000                                    __CFG_FCMEN$OFF 000000  
                                  __CFG_EBTR1$OFF 000000                                    __CFG_EBTR2$OFF 000000  
                                  __CFG_EBTR3$OFF 000000                                     __CFG_WRTB$OFF 000000  
                                   __CFG_WRTC$OFF 000000                                     __CFG_WRTD$OFF 000000  
                                  __CFG_EBTRB$OFF 000000                                     ___awtoft@sign 000C  
                                 __end_of_dpowers FB8F                       __end_ofi2_desabilitarTimer0 2FCC  
                      __size_ofi2_tamanhoDaString 004C                                             _scale 185C  
                                   ___ftpack@sign 0005                  __end_of_converterFloatParaString 2E78  
                                           pclath 000FFA                                             tablat 000FF5  
                         ?_converterIntParaString 006C                                             status 000FD8  
                                 __end_of_sprintf 185C                                    __CFG_PBADEN$ON 000000  
                                 __initialization 2F0C                                      __end_of_main 2774  
                                 ??_configureUart 0100                  i2escreverStringUart@tamanhoDaStr 0080  
                  escreverStringUart@tamanhoDaStr 010A                       __end_of_configureInterrupts 2FC0  
                                          ??_main 010E                                     ___fttol@sign1 002D  
                                   __activetblptr 000003                              __size_of__tdiv_to_l_ 0132  
                                ___llmod@dividend 000E                                            ?_scale 0024  
                                          _ADRESH 000FC4                                            _ADRESL 000FC3  
                                ___awdiv@dividend 0007                                  __end_of___awtoft 2DCE  
                                __end_of___ftpack 2822                    __end_of_converterIntParaString 2EBC  
                                __end_of___lltoft 2C5A                                            i2l3004 1344  
                                          i2l3022 1420                                            i2l2400 2792  
                                          i2l3120 1768                                            i2l3040 1482  
                                          i2l3024 1424                                            i2l3008 1368  
                                          i2l2410 27EE                                            i2l2402 279C  
                                          i2l3106 1726                                            i2l3042 1488  
                                          i2l3050 151E                                            i2l3018 13BC  
                                          i2l2412 27F8                                            i2l2404 27BA  
                                          i2l2500 2084                                            i2l3108 172A  
                                          i2l3060 154C                                            i2l3052 1528  
                                          i2l3036 1462                                            i2l2510 232C  
                                          i2l3134 1824                                            i2l3126 178C  
                                          i2l2408 27D0                                            i2l3320 262C  
                                          i2l3128 1798                                            i2l3072 1588  
                                          i2l3064 1566                                            i2l3136 1834  
                                          i2l3160 2C64                                            i2l3314 2604  
                                          i2l2442 1F50                                            i2l2530 2386  
                                          i2l3058 153E                                            i2l3138 184E  
                                          i2l3162 2C68                                            i2l3340 266A  
                                          i2l2620 2B1A                                            i2l2612 2AFA  
                                          i2l2604 2AE0                                            i2l2540 23AE  
                                          i2l2516 2354                                            i2l3076 15D8  
                                          i2l2470 1FCC                                            i2l2614 2B02  
                                          i2l2534 2396                                            i2l3094 16E2  
                                          i2l3086 16C2                                            i2l2472 1FD6  
                                          i2l2464 1FAA                                            i2l2448 1F7A  
                                          i2l2704 2102                                            i2l2560 29DA  
                                          i2l2616 2B06                                            i2l2624 2B24  
                                          i2l2608 2AEC                                            i2l2544 23BE  
                                          i2l3088 16CC                                            i2l3096 16EC  
                                          i2l3512 04E4                       tratamento@correnteMedia_802 00A8  
                                          i2l3362 2DAA                                            i2l2490 2054  
                                          i2l2482 200A                                            i2l2474 1FE0  
                                          i2l2650 1EB8                                            i2l2642 1DEC  
                                          i2l3274 25BA                                            i2l2396 2784  
                                          i2l2820 28E2                                            i2l2484 2014  
                                          i2l2476 1FE8                                            i2l2812 2CBC  
                                          i2l2804 22E0                                            i2l2572 2A00  
                                          i2l2628 2B32                                            i2l3268 2546  
                                          i2l3276 25BE                                            i2l3292 2D66  
                                          i2l3372 296C                                            i2l3620 0A54  
                                          i2l3612 0A30                                            u206_41 2314  
                                          i2l2830 293E                                            i2l2902 2AAC  
                                          i2l2910 2B4E                                            i2l2806 22EC  
                                          i2l2734 2190                                            i2l2574 2A08  
                                          i2l2566 29EA                                            i2l2670 1A52  
                                          i2l3534 0556                                            i2l3518 050E  
                                          i2l2824 2912                                            i2l2912 2B5A  
                                          i2l2760 2218                                            i2l2744 21B8  
                                          i2l2592 2A40                                            i2l2584 2A28  
                                          i2l2576 2A0C                                            i2l2664 19A2  
                                          i2l3376 29A8                                            i2l3720 0FDC  
                                          i2l3608 0A1E                                            i2l3624 0A62  
                                          i2l2914 2B5E                                            i2l2754 21FA  
                                          i2l2746 21C4                                            i2l2738 21A0  
                                          i2l2682 1BBA                                            i2l2674 1A7C  
                                          i2l2844 2424                                            i2l2924 2C04  
                                          i2l2588 2A32                                            i2l3724 0FEE  
                                          u231_41 20BA                                            i2l2862 248A  
                                          i2l2918 2B82                                            i2l2926 2C10  
                                          i2l2782 228A                                            i2l2774 225A  
                                          i2l2950 115A                                            i2l2942 111E  
                                          i2l3726 0FF4                                            i2l3582 08C2  
                                          i2l2880 24DA                                            i2l2872 24B2  
                                          i2l2688 1C6A                                            i2l2944 1128  
                                          i2l2936 1104                       tratamento@correnteMedia_779 00A5  
                                          i2l2874 24BE                                            i2l2866 249A  
                                          i2l2890 2A6C                                            i2l2794 22B8  
                                          i2l2698 20D6                                            i2l3586 08D4  
                                          i2l2876 24C4                                            i2l2892 2A78  
                                          i2l2980 123A                                            i2l2964 11AA  
                                          i2l2948 112C                                            i2l3748 1086  
                                          u208_41 233C                                            i2l2894 2A7C  
                                          i2l2798 22C8                                            i2l3694 0E80  
                                          i2l3758 10B4                                            i2l2992 12C2  
                                          i2l2994 12D2                                            i2l2996 1300  
                                          i2l2988 129E                                            u233_41 20E6  
                                          i2l2998 1310                                            u314_41 25EC  
                                          u316_41 2614                                            u252_41 2408  
                                          u185_41 1F0E                                            u186_41 1F22  
                      __size_of_desabilitarTimer0 0004                          __size_of_habilitarTimer0 0004  
                                 _tensaoNaBateria 00CE                                    __CFG_XINST$OFF 000000  
                                __end_of__powers_ FBB6                                            ___ftge 28B2  
                                 _sinalizacaoBeep 2EF4                                            ___wmul 2E2E  
                                       ??___awdiv 000B                                         ??___ftadd 003C  
                                       ??___awmod 0005                                         ??___ftdiv 002A  
                                       ??___ftneg 0036                                         ??___lldiv 0009  
                                       ??___ftmul 001B                                         ??___llmod 0016  
                                       ??___ftsub 0048                                         ??___fttol 0028  
                       __size_of_sinalizacaoFalha 001C                     __size_ofi2_escreverStringUart 0084  
                                          _fround 1C94                                            clear_0 2F12  
                                ___awdiv@quotient 000D                                   ___awmod@divisor 0003  
                                 ___awmod@counter 0005                             ___ftmul@f3_as_product 001F  
                              _resultadoDosTestes 00C6                                      __mediumconst FB66  
                                          tblptrh 000FF7                                            tblptrl 000FF6  
                                          tblptru 000FF8                              __end_of_configureAdc 2E04  
                                 _tamanhoDaString 2BA2                                   _tratamento$1511 00AB  
                                 _tratamento$1512 00AE                                         ??_sprintf 004F  
                                 _tratamento$1513 00B1                                   _tratamento$1514 00B4  
                                 _tratamento$1515 0094                          __end_of_escreverCharUart 2F92  
                                      __accesstop 0080                           __end_of__initialization 2F18  
                                      ___ftadd@f1 0036                                        ___ftadd@f2 0039  
                                      ___ftge@ff1 0015                                        ___ftge@ff2 0018  
                                   ___rparam_used 000001                                        ___ftdiv@f1 0024  
                                      ___ftdiv@f2 0027                                        ___ftdiv@f3 002E  
                                      ___ftneg@f1 0033                                        ___awtoft@c 0009  
                                      ___ftmul@f1 0015                                        ___ftmul@f2 0018  
                                      ___ftsub@f1 0042                                        ___ftsub@f2 0045  
                                      ___fttol@f1 0024                                    __pcstackCOMRAM 0001  
                                      ___lltoft@c 0009                                  ??_configureGpios 0101  
                     indexDoMenorValor@menorValor 0023                                     __end_of_scale 1C94  
                              _escreverStringUart 2822                               _sinalizacaoAprovada 2D5E  
               __size_of_converterFloatParaString 0024                         ?_converterFloatParaString 006C  
                                      __div_to_l_ 21DC                                   __CFG_OSC$INTIO7 000000  
                             ?_escreverStringUart 0106                                __size_of_lerAdcAn0 003C  
                              __size_of_lerAdcAn1 003C                                   __div_to_l_@exp1 000C  
                                 __div_to_l_@cntr 000B                                           ??_scale 0027  
                                 __div_to_l_@quot 0007                                        __pbssBANK0 00B7  
                            ?_sinalizacaoAprovada 0001                          escreverCharUart@caracter 0100  
                         __end_of_sinalizacaoBeep 2F0C                                     __div_to_l_@f1 0001  
                                   __div_to_l_@f2 0004  indexDoMenorValor@quantidadeDeValoresParaAnalisar 0020  
                            ??_escreverStringUart 0108                                           ?___ftge 0015  
                                         ?___wmul 000F                                 ??_habilitarTimer0 0100  
                                         ?_fround 0024                                         ?___awtoft 0009  
                                       ?___ftpack 0001                                         ?___lltoft 0009  
                         __end_of_tamanhoDaString 2BFE                                i2_escreverCharUart 2F92  
                           ??_sinalizacaoAprovada 0001                           tratamento@correnteMedia 009A  
                             ?i2_escreverCharUart 0001                                 __end_of__npowers_ FBDD  
                                         __Hparam 0000                                        _scale$1518 0027  
                                         __Lparam 0000                                 __end_of_lerAdcAn0 2D5E  
                               __end_of_lerAdcAn1 2D22                          __size_of_configureTimer0 001C  
                                 __size_of___ftge 0090                                           ___awdiv 29C6  
                                         ___ftadd 1EFE                                           ___awmod 2ACC  
                                         ___ftdiv 25DC                                           ___ftneg 2E78  
                                         ___lldiv 2A4A                                   __size_of___wmul 0026  
                                _sinalizacaoFalha 2ED8                                           ___ftmul 2304  
                                         ___llmod 2B3C                                           ___ftsub 2CA6  
                                         ___fttol 23F8                              ??i2_escreverCharUart 0001  
                                 __CFG_STVREN$OFF 000000                                           __pcinit 2F0C  
                                      ??___awtoft 000C                                        ??___ftpack 0006  
                                 __size_of_fround 026A                                           __ramtop 1000  
                                      ??___lltoft 000D                                           __ptext0 26C2  
                                         __ptext1 2EF4                                           __ptext2 2FC0  
                                         __ptext3 2822                                           __ptext4 2BA2  
                                         __ptext5 2F84                                           __ptext6 2FC4  
                                         __ptext7 2E04                                           __ptext8 2EBC  
                                         __ptext9 2FB6                                         _T0CONbits 000FD5  
                           __size_of_configureAdc 0036                                       ?__div_to_l_ 0001  
                                         _dpowers FB67                                  ___awmod@dividend 0001  
       __end_of_habilitarDescarregamentoDaBateria 2FAA        __size_of_habilitarDescarregamentoDaBateria 000C  
   __end_ofi2_desabilitarDescarregamentoDaBateria 2F5E    __size_ofi2_desabilitarDescarregamentoDaBateria 0014  
     __end_of_desabilitarDescarregamentoDaBateria 2F36      __size_of_desabilitarDescarregamentoDaBateria 0014  
         ??i2_desabilitarDescarregamentoDaBateria 0001            ?i2_desabilitarDescarregamentoDaBateria 0001  
             ??_habilitarDescarregamentoDaBateria 0001                ?_habilitarDescarregamentoDaBateria 0001  
            ?_desabilitarDescarregamentoDaBateria 0001             ??_desabilitarDescarregamentoDaBateria 0100  
           i2_desabilitarDescarregamentoDaBateria 2F4A                 _habilitarDescarregamentoDaBateria 2F9E  
             _desabilitarDescarregamentoDaBateria 2F22                                   _statusDaBateria 00CB  
                                         _sprintf 10FA                                    __pintcode_body 0012  
                            end_of_initialization 2F18                                           int_func 0012  
                                ?_sinalizacaoBeep 0001                      __size_ofi2_desabilitarTimer0 0004  
                                 ___lldiv@divisor 0005                                   ___lldiv@counter 000D  
                              lerAdcAn0@valorLido 0005                                         _RCSTAbits 000FAB  
                                         postdec2 000FDD                                           postinc0 000FEE  
                                         postinc2 000FDE                                      _configureAdc 2DCE  
                ??_habilitarCarregamentoDaBateria 0001                   ?_habilitarCarregamentoDaBateria 0001  
                                  __tdiv_to_l_@f1 0001                                    __tdiv_to_l_@f2 0004  
                           __end_of_configureUart 2E2E                                     ??__tdiv_to_l_ 0007  
                              lerAdcAn1@valorLido 0005                                         _PORTBbits 000F81  
                                ?_tamanhoDaString 0100                                         _TRISCbits 000F94  
                    __size_of_configureInterrupts 000A                    converterFloatParaString@string 006F  
                                      _tratamento 0008                      __end_ofi2_escreverStringUart 29C6  
                               ?_escreverCharUart 0001                            indexDoMenorValor@dados 001E  
                                     ___ftdiv@exp 0031                            indexDoMenorValor@index 0026  
                                       _TXSTAbits 000FAC                                ??_escreverCharUart 0100  
                             __size_of__div_to_l_ 0128                                       ___ftmul@exp 001E  
                                  __end_of___ftge 2942                                    __end_of___wmul 2E54  
                                     _BAUDCONbits 000FB8                                    __end_of_fround 1EFE  
                               ??_configureTimer0 0100                               start_initialization 2F0C  
                             __end_of__tdiv_to_l_ 21DC                     sinalizacaoAprovada@repeticoes 0002  
                                 _habilitarTimer0 2FC0                                   ___llmod@divisor 0012  
                                 ___llmod@counter 0016                                          ??___ftge 001B  
                                        ??___wmul 0013                                  __CFG_LPT1OSC$OFF 000000  
                                        ??_fround 0027                                     sprintf@tmpval 0064  
                                      fround@prec 002D                                 __size_of___awtoft 0038  
                               __size_of___ftpack 00AE                                 __size_of___lltoft 005C  
                        ??_converterIntParaString 006E                                 _correnteNaBateria 00B7  
                                   __pcstackBANK0 0080                                     __pcstackBANK1 0100  
                                     ?_tratamento 0001                          __end_of_sinalizacaoFalha 2EF4  
                    i2escreverStringUart@contador 0082                                       sprintf@flag 005A  
                                     sprintf@fval 0068                                       sprintf@prec 005C  
                     __size_of_escreverStringUart 0090                                 __CFG_CCP2MX$PORTC 000000  
                                       __pintcode 0008                          _converterFloatParaString 2E54  
                                   __pmediumconst FB66                                          ?___awdiv 0007  
                                        ?___ftadd 0036                                          ?___awmod 0001  
                                        ?___ftdiv 0024                                          ?___ftneg 0033  
                                        ?___lldiv 0001                                          ?___ftmul 0015  
                                        ?___llmod 000E                                          ?___ftsub 0042  
                                       __npowers_ FBB6                                          ?___fttol 0024  
                            i2_escreverStringUart 2942                                         _lerAdcAn0 2D22  
                                       _lerAdcAn1 2CE6                                       __tdiv_to_l_ 20AA  
                                    ??__div_to_l_ 0007                               i2_desabilitarTimer0 2FC8  
                     __end_of_sinalizacaoAprovada 2D96                           __size_of_configureGpios 0012  
                         __end_of_habilitarTimer0 2FC4                                          ?_sprintf 0048  
                                  __size_of_scale 0438                        escreverStringUart@contador 010C  
                                  ___wmul@product 0013                              ?i2_desabilitarTimer0 0001  
                                        _PIE1bits 000F9D                        i2escreverStringUart@string 0079  
                                        i2u302_40 2C96                                          i2u302_47 2C8C  
                                        i2u320_40 299E                                          i2u320_47 2994  
                                        i2u254_40 2442                                          i2u254_45 243A  
                                        i2u272_40 11E2                                          i2u272_45 11D8  
                                        _PIR1bits 000F9E                                __end_of__div_to_l_ 2304  
                                        i2u370_47 2D76                                          i2u371_47 2D88  
                                        i2u366_47 006C                                          i2u367_47 2F52  
                                        i2u288_40 155C                               _configureInterrupts 2FB6  
                                        i2u368_47 2F66                                          i2u369_47 2EE4  
  converterFloatParaString@valorParaSerConvertido 006C      converterIntParaString@valorParaSerConvertido 006C  
                                __CFG_WDTPS$32768 000000                             ?i2_escreverStringUart 0079  
                             __size_of_tratamento 10F2                                        ?_lerAdcAn0 0001  
                                      ?_lerAdcAn1 0001                       __size_ofi2_escreverCharUart 000C  
                                      _ADCON0bits 000FC2                                        _ADCON1bits 000FC1  
                                      _ADCON2bits 000FC0                                 ___wmul@multiplier 000F  
                       indexDoMenorValor@contador 0028                              ?_configureInterrupts 0001  
                 __size_of_converterIntParaString 0020            __end_of_habilitarCarregamentoDaBateria 2FB6  
         __size_of_habilitarCarregamentoDaBateria 000C                    _habilitarCarregamentoDaBateria 2FAA  
                           tratamento@tensaoMedia 0097                                 _indexDoMenorValor 24EC  
                           ??i2_desabilitarTimer0 0001                             tamanhoDaString@lenght 0104  
                              ?_indexDoMenorValor 001E                                          __Hrparam 0000  
                                 _configureTimer0 2EBC                                          __Lrparam 0000  
                           tamanhoDaString@string 0100                                __CFG_BOREN$SBORDIS 000000  
                        __size_of_sinalizacaoBeep 0018                               ??_indexDoMenorValor 0022  
                                __size_of___awdiv 0084                                  __size_of___ftadd 01AC  
                                __size_of___awmod 0070                                  __size_of___ftdiv 00E6  
                                __size_of___ftneg 0024                                  __size_of___lldiv 0082  
                                __size_of___ftmul 00F4                                  __size_of___llmod 0066  
                                __size_of___ftsub 0040                                  __size_of___fttol 00F4  
                       __size_of_escreverCharUart 000E                                          ___awtoft 2D96  
                                        ___ftpack 2774                                       _fround$1516 002A  
                                     _fround$1517 0027                                          ___lltoft 2BFE  
                                      sprintf@exp 0062                                        sprintf@val 005E  
                           ??_configureInterrupts 0100                                          __ptext10 2F72  
                                        __ptext11 2F22                                          __ptext20 2F5E  
                                        __ptext12 2F36                                          __ptext21 2ED8  
                                        __ptext13 2DCE                                          __ptext30 10FA  
                                        __ptext22 2D5E                                          __ptext31 185C  
                                        __ptext23 2CE6                                          __ptext15 2942  
                                        __ptext40 2B3C                                          __ptext32 1C94  
                                        __ptext24 2D22                                          __ptext16 2C5A  
                                        __ptext41 2A4A                                          __ptext33 2E2E  
                                        __ptext25 24EC                                          __ptext17 2F92  
                                        __ptext42 23F8                                          __ptext34 2304  
                                        __ptext26 2F9E                                          __ptext18 2FC8  
                                        __ptext43 2CA6                                          __ptext35 2ACC  
                                        __ptext27 2FAA                                          __ptext19 2F4A  
                                        __ptext44 1EFE                                          __ptext36 29C6  
                                        __ptext28 2E9C                                          __ptext45 2E78  
                                        __ptext37 20AA                                          __ptext29 2E54  
                                        __ptext46 28B2                                          __ptext38 21DC  
                                        __ptext47 25DC                                          __ptext39 2BFE  
                                        __ptext48 2D96                                          __ptext49 2774  
                                ?_habilitarTimer0 0001                                          __powers_ FB8F  
      __end_ofi2_desabilitarCarregamentoDaBateria 2F72       __size_ofi2_desabilitarCarregamentoDaBateria 0014  
        __end_of_desabilitarCarregamentoDaBateria 2F4A         __size_of_desabilitarCarregamentoDaBateria 0014  
            ??i2_desabilitarCarregamentoDaBateria 0001               ?i2_desabilitarCarregamentoDaBateria 0001  
               ?_desabilitarCarregamentoDaBateria 0001                ??_desabilitarCarregamentoDaBateria 0100  
              i2_desabilitarCarregamentoDaBateria 2F5E                  _desabilitarCarregamentoDaBateria 2F36  
                       __end_of_indexDoMenorValor 25DC                                          _contador 00CD  
                        __size_of_tamanhoDaString 005C                                  __size_of_sprintf 0762  
                          __size_of_configureUart 002A                                     __size_of_main 00B2  
                          _converterIntParaString 2E9C                            ??i2_escreverStringUart 007B  
                                        int$flags 007D                                       ??_lerAdcAn0 0003  
                                     ??_lerAdcAn1 0003                                        _INTCONbits 000FF2  
                                  _configureGpios 2F72                                          scale@scl 002A  
                                    ??_tratamento 0084                                          intlevel2 0000  
                       tratamento@tensaoMedia_774 00A2                         tratamento@tensaoMedia_793 009D  
                               ?_sinalizacaoFalha 0001                                         sprintf@ap 0058  
                                __tdiv_to_l_@exp1 000F                                         sprintf@sp 0048  
                                __tdiv_to_l_@cntr 000E                                 i2_tamanhoDaString 2C5A  
                         __end_of_configureTimer0 2ED8                                  __tdiv_to_l_@quot 000A  
                      ??_converterFloatParaString 006F                                  ___lldiv@dividend 0001  
                              ??_sinalizacaoFalha 0001                                ?i2_tamanhoDaString 0001  
                             ??i2_tamanhoDaString 0003                                __end_of_tratamento 10FA  
                                   _configureUart 2E04                                      ?__tdiv_to_l_ 0001  
                          __end_of_configureGpios 2F84                                          sprintf@c 006B  
                                        sprintf@f 004A                                 ??_sinalizacaoBeep 0100  
                                ___lldiv@quotient 0009                         __end_ofi2_tamanhoDaString 2CA6  
                     tratamento@indexTensaoMinima 00A0                        __size_of_indexDoMenorValor 00F0  
                         i2tamanhoDaString@lenght 0005                        __end_of_escreverStringUart 28B2  
                               _desabilitarTimer0 2FC4                           i2tamanhoDaString@string 0001  
                               ??_tamanhoDaString 0102                          escreverStringUart@string 0106  
                              ?_desabilitarTimer0 0001  
