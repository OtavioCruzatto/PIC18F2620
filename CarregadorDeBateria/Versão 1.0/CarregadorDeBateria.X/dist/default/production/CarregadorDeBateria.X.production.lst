

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Jan 22 16:52:03 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F2620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    66  0000                     
    67                           ; Version 1.42
    68                           ; Generated 13/04/2017 GMT
    69                           ; 
    70                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F2620 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     
   102                           	psect	mediumconst
   103  00FB8E                     __pmediumconst:
   104                           	opt stack 0
   105  00FB8E  00                 	db	0
   106  00FB8F                     _dpowers:
   107                           	opt stack 0
   108  00FB8F  0001               	dw	1
   109  00FB91  0000               	dw	0
   110  00FB93  000A               	dw	10
   111  00FB95  0000               	dw	0
   112  00FB97  0064               	dw	100
   113  00FB99  0000               	dw	0
   114  00FB9B  03E8               	dw	1000
   115  00FB9D  0000               	dw	0
   116  00FB9F  2710               	dw	10000
   117  00FBA1  0000               	dw	0
   118  00FBA3  86A0               	dw	34464
   119  00FBA5  0001               	dw	1
   120  00FBA7  4240               	dw	16960
   121  00FBA9  000F               	dw	15
   122  00FBAB  9680               	dw	38528
   123  00FBAD  0098               	dw	152
   124  00FBAF  E100               	dw	57600
   125  00FBB1  05F5               	dw	1525
   126  00FBB3  CA00               	dw	51712
   127  00FBB5  3B9A               	dw	15258
   128  00FBB7                     __end_of_dpowers:
   129                           	opt stack 0
   130  00FBB7                     __powers_:
   131                           	opt stack 0
   132  00FBB7  00                 	db	0
   133  00FBB8  80                 	db	128
   134  00FBB9  3F                 	db	63
   135  00FBBA  00                 	db	0
   136  00FBBB  20                 	db	32
   137  00FBBC  41                 	db	65
   138  00FBBD  00                 	db	0
   139  00FBBE  C8                 	db	200
   140  00FBBF  42                 	db	66
   141  00FBC0  00                 	db	0
   142  00FBC1  7A                 	db	122
   143  00FBC2  44                 	db	68
   144  00FBC3  40                 	db	64
   145  00FBC4  1C                 	db	28
   146  00FBC5  46                 	db	70
   147  00FBC6  50                 	db	80
   148  00FBC7  C3                 	db	195
   149  00FBC8  47                 	db	71
   150  00FBC9  24                 	db	36
   151  00FBCA  74                 	db	116
   152  00FBCB  49                 	db	73
   153  00FBCC  97                 	db	151
   154  00FBCD  18                 	db	24
   155  00FBCE  4B                 	db	75
   156  00FBCF  BC                 	db	188
   157  00FBD0  BE                 	db	190
   158  00FBD1  4C                 	db	76
   159  00FBD2  6B                 	db	107
   160  00FBD3  6E                 	db	110
   161  00FBD4  4E                 	db	78
   162  00FBD5  03                 	db	3
   163  00FBD6  15                 	db	21
   164  00FBD7  50                 	db	80
   165  00FBD8  79                 	db	121
   166  00FBD9  AD                 	db	173
   167  00FBDA  60                 	db	96
   168  00FBDB  F3                 	db	243
   169  00FBDC  49                 	db	73
   170  00FBDD  71                 	db	113
   171  00FBDE                     __end_of__powers_:
   172                           	opt stack 0
   173  00FBDE                     __npowers_:
   174                           	opt stack 0
   175  00FBDE  00                 	db	0
   176  00FBDF  80                 	db	128
   177  00FBE0  3F                 	db	63
   178  00FBE1  CD                 	db	205
   179  00FBE2  CC                 	db	204
   180  00FBE3  3D                 	db	61
   181  00FBE4  D7                 	db	215
   182  00FBE5  23                 	db	35
   183  00FBE6  3C                 	db	60
   184  00FBE7  12                 	db	18
   185  00FBE8  83                 	db	131
   186  00FBE9  3A                 	db	58
   187  00FBEA  B7                 	db	183
   188  00FBEB  D1                 	db	209
   189  00FBEC  38                 	db	56
   190  00FBED  C6                 	db	198
   191  00FBEE  27                 	db	39
   192  00FBEF  37                 	db	55
   193  00FBF0  38                 	db	56
   194  00FBF1  86                 	db	134
   195  00FBF2  35                 	db	53
   196  00FBF3  C0                 	db	192
   197  00FBF4  D6                 	db	214
   198  00FBF5  33                 	db	51
   199  00FBF6  CC                 	db	204
   200  00FBF7  2B                 	db	43
   201  00FBF8  32                 	db	50
   202  00FBF9  70                 	db	112
   203  00FBFA  89                 	db	137
   204  00FBFB  30                 	db	48
   205  00FBFC  E7                 	db	231
   206  00FBFD  DB                 	db	219
   207  00FBFE  2E                 	db	46
   208  00FBFF  E5                 	db	229
   209  00FC00  3C                 	db	60
   210  00FC01  1E                 	db	30
   211  00FC02  42                 	db	66
   212  00FC03  A2                 	db	162
   213  00FC04  0D                 	db	13
   214  00FC05                     __end_of__npowers_:
   215                           	opt stack 0
   216  0000                     _PORTB	set	3969
   217  0000                     _TRISB	set	3987
   218  0000                     _PORTBbits	set	3969
   219  0000                     _TMR0H	set	4055
   220  0000                     _TMR0L	set	4054
   221  0000                     _T0CONbits	set	4053
   222  0000                     _TXREG	set	4013
   223  0000                     _PIE1bits	set	3997
   224  0000                     _INTCONbits	set	4082
   225  0000                     _SPBRG	set	4015
   226  0000                     _BAUDCONbits	set	4024
   227  0000                     _RCSTAbits	set	4011
   228  0000                     _TXSTAbits	set	4012
   229  0000                     _TRISCbits	set	3988
   230  0000                     _ADCON2bits	set	4032
   231  0000                     _ADCON1bits	set	4033
   232  0000                     _ADRESL	set	4035
   233  0000                     _ADRESH	set	4036
   234  0000                     _PIR1bits	set	3998
   235  0000                     _ADCON0bits	set	4034
   236  00FC05                     STR_6:
   237  00FC05  0A                 	db	10
   238  00FC06  43                 	db	67	;'C'
   239  00FC07  61                 	db	97	;'a'
   240  00FC08  72                 	db	114	;'r'
   241  00FC09  72                 	db	114	;'r'
   242  00FC0A  65                 	db	101	;'e'
   243  00FC0B  67                 	db	103	;'g'
   244  00FC0C  61                 	db	97	;'a'
   245  00FC0D  6D                 	db	109	;'m'
   246  00FC0E  65                 	db	101	;'e'
   247  00FC0F  6E                 	db	110	;'n'
   248  00FC10  74                 	db	116	;'t'
   249  00FC11  6F                 	db	111	;'o'
   250  00FC12  3A                 	db	58	;':'
   251  00FC13  20                 	db	32
   252  00FC14  44                 	db	68	;'D'
   253  00FC15  65                 	db	101	;'e'
   254  00FC16  73                 	db	115	;'s'
   255  00FC17  61                 	db	97	;'a'
   256  00FC18  62                 	db	98	;'b'
   257  00FC19  69                 	db	105	;'i'
   258  00FC1A  6C                 	db	108	;'l'
   259  00FC1B  69                 	db	105	;'i'
   260  00FC1C  74                 	db	116	;'t'
   261  00FC1D  61                 	db	97	;'a'
   262  00FC1E  64                 	db	100	;'d'
   263  00FC1F  6F                 	db	111	;'o'
   264  00FC20  20                 	db	32
   265  00FC21  7C                 	db	124
   266  00FC22  20                 	db	32
   267  00FC23  44                 	db	68	;'D'
   268  00FC24  65                 	db	101	;'e'
   269  00FC25  73                 	db	115	;'s'
   270  00FC26  63                 	db	99	;'c'
   271  00FC27  61                 	db	97	;'a'
   272  00FC28  72                 	db	114	;'r'
   273  00FC29  72                 	db	114	;'r'
   274  00FC2A  65                 	db	101	;'e'
   275  00FC2B  67                 	db	103	;'g'
   276  00FC2C  61                 	db	97	;'a'
   277  00FC2D  6D                 	db	109	;'m'
   278  00FC2E  65                 	db	101	;'e'
   279  00FC2F  6E                 	db	110	;'n'
   280  00FC30  74                 	db	116	;'t'
   281  00FC31  6F                 	db	111	;'o'
   282  00FC32  3A                 	db	58	;':'
   283  00FC33  20                 	db	32
   284  00FC34  44                 	db	68	;'D'
   285  00FC35  65                 	db	101	;'e'
   286  00FC36  73                 	db	115	;'s'
   287  00FC37  61                 	db	97	;'a'
   288  00FC38  62                 	db	98	;'b'
   289  00FC39  69                 	db	105	;'i'
   290  00FC3A  6C                 	db	108	;'l'
   291  00FC3B  69                 	db	105	;'i'
   292  00FC3C  74                 	db	116	;'t'
   293  00FC3D  61                 	db	97	;'a'
   294  00FC3E  64                 	db	100	;'d'
   295  00FC3F  6F                 	db	111	;'o'
   296  00FC40  20                 	db	32
   297  00FC41  7C                 	db	124
   298  00FC42  20                 	db	32
   299  00FC43  54                 	db	84	;'T'
   300  00FC44  65                 	db	101	;'e'
   301  00FC45  73                 	db	115	;'s'
   302  00FC46  74                 	db	116	;'t'
   303  00FC47  65                 	db	101	;'e'
   304  00FC48  3A                 	db	58	;':'
   305  00FC49  20                 	db	32
   306  00FC4A  00                 	db	0
   307  00FC4B                     STR_32:
   308  00FC4B  0A                 	db	10
   309  00FC4C  43                 	db	67	;'C'
   310  00FC4D  61                 	db	97	;'a'
   311  00FC4E  72                 	db	114	;'r'
   312  00FC4F  72                 	db	114	;'r'
   313  00FC50  65                 	db	101	;'e'
   314  00FC51  67                 	db	103	;'g'
   315  00FC52  61                 	db	97	;'a'
   316  00FC53  6D                 	db	109	;'m'
   317  00FC54  65                 	db	101	;'e'
   318  00FC55  6E                 	db	110	;'n'
   319  00FC56  74                 	db	116	;'t'
   320  00FC57  6F                 	db	111	;'o'
   321  00FC58  3A                 	db	58	;':'
   322  00FC59  20                 	db	32
   323  00FC5A  44                 	db	68	;'D'
   324  00FC5B  65                 	db	101	;'e'
   325  00FC5C  73                 	db	115	;'s'
   326  00FC5D  61                 	db	97	;'a'
   327  00FC5E  62                 	db	98	;'b'
   328  00FC5F  69                 	db	105	;'i'
   329  00FC60  6C                 	db	108	;'l'
   330  00FC61  69                 	db	105	;'i'
   331  00FC62  74                 	db	116	;'t'
   332  00FC63  61                 	db	97	;'a'
   333  00FC64  64                 	db	100	;'d'
   334  00FC65  6F                 	db	111	;'o'
   335  00FC66  20                 	db	32
   336  00FC67  7C                 	db	124
   337  00FC68  20                 	db	32
   338  00FC69  44                 	db	68	;'D'
   339  00FC6A  65                 	db	101	;'e'
   340  00FC6B  73                 	db	115	;'s'
   341  00FC6C  63                 	db	99	;'c'
   342  00FC6D  61                 	db	97	;'a'
   343  00FC6E  72                 	db	114	;'r'
   344  00FC6F  72                 	db	114	;'r'
   345  00FC70  65                 	db	101	;'e'
   346  00FC71  67                 	db	103	;'g'
   347  00FC72  61                 	db	97	;'a'
   348  00FC73  6D                 	db	109	;'m'
   349  00FC74  65                 	db	101	;'e'
   350  00FC75  6E                 	db	110	;'n'
   351  00FC76  74                 	db	116	;'t'
   352  00FC77  6F                 	db	111	;'o'
   353  00FC78  3A                 	db	58	;':'
   354  00FC79  20                 	db	32
   355  00FC7A  48                 	db	72	;'H'
   356  00FC7B  61                 	db	97	;'a'
   357  00FC7C  62                 	db	98	;'b'
   358  00FC7D  69                 	db	105	;'i'
   359  00FC7E  6C                 	db	108	;'l'
   360  00FC7F  69                 	db	105	;'i'
   361  00FC80  74                 	db	116	;'t'
   362  00FC81  61                 	db	97	;'a'
   363  00FC82  64                 	db	100	;'d'
   364  00FC83  6F                 	db	111	;'o'
   365  00FC84  20                 	db	32
   366  00FC85  7C                 	db	124
   367  00FC86  20                 	db	32
   368  00FC87  54                 	db	84	;'T'
   369  00FC88  65                 	db	101	;'e'
   370  00FC89  73                 	db	115	;'s'
   371  00FC8A  74                 	db	116	;'t'
   372  00FC8B  65                 	db	101	;'e'
   373  00FC8C  3A                 	db	58	;':'
   374  00FC8D  20                 	db	32
   375  00FC8E  00                 	db	0
   376  00FC8F                     STR_16:
   377  00FC8F  0A                 	db	10
   378  00FC90  43                 	db	67	;'C'
   379  00FC91  61                 	db	97	;'a'
   380  00FC92  72                 	db	114	;'r'
   381  00FC93  72                 	db	114	;'r'
   382  00FC94  65                 	db	101	;'e'
   383  00FC95  67                 	db	103	;'g'
   384  00FC96  61                 	db	97	;'a'
   385  00FC97  6D                 	db	109	;'m'
   386  00FC98  65                 	db	101	;'e'
   387  00FC99  6E                 	db	110	;'n'
   388  00FC9A  74                 	db	116	;'t'
   389  00FC9B  6F                 	db	111	;'o'
   390  00FC9C  3A                 	db	58	;':'
   391  00FC9D  20                 	db	32
   392  00FC9E  48                 	db	72	;'H'
   393  00FC9F  61                 	db	97	;'a'
   394  00FCA0  62                 	db	98	;'b'
   395  00FCA1  69                 	db	105	;'i'
   396  00FCA2  6C                 	db	108	;'l'
   397  00FCA3  69                 	db	105	;'i'
   398  00FCA4  74                 	db	116	;'t'
   399  00FCA5  61                 	db	97	;'a'
   400  00FCA6  64                 	db	100	;'d'
   401  00FCA7  6F                 	db	111	;'o'
   402  00FCA8  20                 	db	32
   403  00FCA9  7C                 	db	124
   404  00FCAA  20                 	db	32
   405  00FCAB  44                 	db	68	;'D'
   406  00FCAC  65                 	db	101	;'e'
   407  00FCAD  73                 	db	115	;'s'
   408  00FCAE  63                 	db	99	;'c'
   409  00FCAF  61                 	db	97	;'a'
   410  00FCB0  72                 	db	114	;'r'
   411  00FCB1  72                 	db	114	;'r'
   412  00FCB2  65                 	db	101	;'e'
   413  00FCB3  67                 	db	103	;'g'
   414  00FCB4  61                 	db	97	;'a'
   415  00FCB5  6D                 	db	109	;'m'
   416  00FCB6  65                 	db	101	;'e'
   417  00FCB7  6E                 	db	110	;'n'
   418  00FCB8  74                 	db	116	;'t'
   419  00FCB9  6F                 	db	111	;'o'
   420  00FCBA  3A                 	db	58	;':'
   421  00FCBB  20                 	db	32
   422  00FCBC  44                 	db	68	;'D'
   423  00FCBD  65                 	db	101	;'e'
   424  00FCBE  73                 	db	115	;'s'
   425  00FCBF  61                 	db	97	;'a'
   426  00FCC0  62                 	db	98	;'b'
   427  00FCC1  69                 	db	105	;'i'
   428  00FCC2  6C                 	db	108	;'l'
   429  00FCC3  69                 	db	105	;'i'
   430  00FCC4  74                 	db	116	;'t'
   431  00FCC5  61                 	db	97	;'a'
   432  00FCC6  64                 	db	100	;'d'
   433  00FCC7  6F                 	db	111	;'o'
   434  00FCC8  20                 	db	32
   435  00FCC9  7C                 	db	124
   436  00FCCA  20                 	db	32
   437  00FCCB  54                 	db	84	;'T'
   438  00FCCC  65                 	db	101	;'e'
   439  00FCCD  73                 	db	115	;'s'
   440  00FCCE  74                 	db	116	;'t'
   441  00FCCF  65                 	db	101	;'e'
   442  00FCD0  3A                 	db	58	;':'
   443  00FCD1  20                 	db	32
   444  00FCD2  00                 	db	0
   445  00FCD3                     STR_50:
   446  00FCD3  0A                 	db	10
   447  00FCD4  0A                 	db	10
   448  00FCD5  0A                 	db	10
   449  00FCD6  0A                 	db	10
   450  00FCD7  2A                 	db	42
   451  00FCD8  2A                 	db	42
   452  00FCD9  2A                 	db	42
   453  00FCDA  20                 	db	32
   454  00FCDB  50                 	db	80	;'P'
   455  00FCDC  72                 	db	114	;'r'
   456  00FCDD  65                 	db	101	;'e'
   457  00FCDE  73                 	db	115	;'s'
   458  00FCDF  73                 	db	115	;'s'
   459  00FCE0  69                 	db	105	;'i'
   460  00FCE1  6F                 	db	111	;'o'
   461  00FCE2  6E                 	db	110	;'n'
   462  00FCE3  65                 	db	101	;'e'
   463  00FCE4  20                 	db	32
   464  00FCE5  6F                 	db	111	;'o'
   465  00FCE6  20                 	db	32
   466  00FCE7  62                 	db	98	;'b'
   467  00FCE8  6F                 	db	111	;'o'
   468  00FCE9  74                 	db	116	;'t'
   469  00FCEA  61                 	db	97	;'a'
   470  00FCEB  6F                 	db	111	;'o'
   471  00FCEC  20                 	db	32
   472  00FCED  70                 	db	112	;'p'
   473  00FCEE  61                 	db	97	;'a'
   474  00FCEF  72                 	db	114	;'r'
   475  00FCF0  61                 	db	97	;'a'
   476  00FCF1  20                 	db	32
   477  00FCF2  69                 	db	105	;'i'
   478  00FCF3  6E                 	db	110	;'n'
   479  00FCF4  69                 	db	105	;'i'
   480  00FCF5  63                 	db	99	;'c'
   481  00FCF6  69                 	db	105	;'i'
   482  00FCF7  61                 	db	97	;'a'
   483  00FCF8  72                 	db	114	;'r'
   484  00FCF9  20                 	db	32
   485  00FCFA  6F                 	db	111	;'o'
   486  00FCFB  73                 	db	115	;'s'
   487  00FCFC  20                 	db	32
   488  00FCFD  74                 	db	116	;'t'
   489  00FCFE  65                 	db	101	;'e'
   490  00FCFF  73                 	db	115	;'s'
   491  00FD00  74                 	db	116	;'t'
   492  00FD01  65                 	db	101	;'e'
   493  00FD02  73                 	db	115	;'s'
   494  00FD03  21                 	db	33
   495  00FD04  20                 	db	32
   496  00FD05  2A                 	db	42
   497  00FD06  2A                 	db	42
   498  00FD07  2A                 	db	42
   499  00FD08  0A                 	db	10
   500  00FD09  00                 	db	0
   501  00FD0A                     STR_3:
   502  00FD0A  0A                 	db	10
   503  00FD0B  0A                 	db	10
   504  00FD0C  0A                 	db	10
   505  00FD0D  0A                 	db	10
   506  00FD0E  2A                 	db	42
   507  00FD0F  2A                 	db	42
   508  00FD10  2A                 	db	42
   509  00FD11  20                 	db	32
   510  00FD12  4A                 	db	74	;'J'
   511  00FD13  69                 	db	105	;'i'
   512  00FD14  67                 	db	103	;'g'
   513  00FD15  61                 	db	97	;'a'
   514  00FD16  20                 	db	32
   515  00FD17  64                 	db	100	;'d'
   516  00FD18  65                 	db	101	;'e'
   517  00FD19  20                 	db	32
   518  00FD1A  74                 	db	116	;'t'
   519  00FD1B  65                 	db	101	;'e'
   520  00FD1C  73                 	db	115	;'s'
   521  00FD1D  74                 	db	116	;'t'
   522  00FD1E  65                 	db	101	;'e'
   523  00FD1F  73                 	db	115	;'s'
   524  00FD20  20                 	db	32
   525  00FD21  64                 	db	100	;'d'
   526  00FD22  61                 	db	97	;'a'
   527  00FD23  20                 	db	32
   528  00FD24  62                 	db	98	;'b'
   529  00FD25  61                 	db	97	;'a'
   530  00FD26  74                 	db	116	;'t'
   531  00FD27  65                 	db	101	;'e'
   532  00FD28  72                 	db	114	;'r'
   533  00FD29  69                 	db	105	;'i'
   534  00FD2A  61                 	db	97	;'a'
   535  00FD2B  20                 	db	32
   536  00FD2C  45                 	db	69	;'E'
   537  00FD2D  56                 	db	86	;'V'
   538  00FD2E  4F                 	db	79	;'O'
   539  00FD2F  2E                 	db	46
   540  00FD30  2E                 	db	46
   541  00FD31  2E                 	db	46
   542  00FD32  20                 	db	32
   543  00FD33  2A                 	db	42
   544  00FD34  2A                 	db	42
   545  00FD35  2A                 	db	42
   546  00FD36  0A                 	db	10
   547  00FD37  00                 	db	0
   548  00FD38                     STR_47:
   549  00FD38  54                 	db	84	;'T'
   550  00FD39  65                 	db	101	;'e'
   551  00FD3A  73                 	db	115	;'s'
   552  00FD3B  74                 	db	116	;'t'
   553  00FD3C  65                 	db	101	;'e'
   554  00FD3D  20                 	db	32
   555  00FD3E  64                 	db	100	;'d'
   556  00FD3F  65                 	db	101	;'e'
   557  00FD40  20                 	db	32
   558  00FD41  43                 	db	67	;'C'
   559  00FD42  6F                 	db	111	;'o'
   560  00FD43  72                 	db	114	;'r'
   561  00FD44  72                 	db	114	;'r'
   562  00FD45  65                 	db	101	;'e'
   563  00FD46  6E                 	db	110	;'n'
   564  00FD47  74                 	db	116	;'t'
   565  00FD48  65                 	db	101	;'e'
   566  00FD49  20                 	db	32
   567  00FD4A  6E                 	db	110	;'n'
   568  00FD4B  6F                 	db	111	;'o'
   569  00FD4C  20                 	db	32
   570  00FD4D  44                 	db	68	;'D'
   571  00FD4E  65                 	db	101	;'e'
   572  00FD4F  73                 	db	115	;'s'
   573  00FD50  63                 	db	99	;'c'
   574  00FD51  61                 	db	97	;'a'
   575  00FD52  72                 	db	114	;'r'
   576  00FD53  72                 	db	114	;'r'
   577  00FD54  65                 	db	101	;'e'
   578  00FD55  67                 	db	103	;'g'
   579  00FD56  61                 	db	97	;'a'
   580  00FD57  6D                 	db	109	;'m'
   581  00FD58  65                 	db	101	;'e'
   582  00FD59  6E                 	db	110	;'n'
   583  00FD5A  74                 	db	116	;'t'
   584  00FD5B  6F                 	db	111	;'o'
   585  00FD5C  3A                 	db	58	;':'
   586  00FD5D  20                 	db	32
   587  00FD5E  4E                 	db	78	;'N'
   588  00FD5F  4F                 	db	79	;'O'
   589  00FD60  4B                 	db	75	;'K'
   590  00FD61  0A                 	db	10
   591  00FD62  00                 	db	0
   592  00FD63                     STR_46:
   593  00FD63  54                 	db	84	;'T'
   594  00FD64  65                 	db	101	;'e'
   595  00FD65  73                 	db	115	;'s'
   596  00FD66  74                 	db	116	;'t'
   597  00FD67  65                 	db	101	;'e'
   598  00FD68  20                 	db	32
   599  00FD69  64                 	db	100	;'d'
   600  00FD6A  65                 	db	101	;'e'
   601  00FD6B  20                 	db	32
   602  00FD6C  43                 	db	67	;'C'
   603  00FD6D  6F                 	db	111	;'o'
   604  00FD6E  72                 	db	114	;'r'
   605  00FD6F  72                 	db	114	;'r'
   606  00FD70  65                 	db	101	;'e'
   607  00FD71  6E                 	db	110	;'n'
   608  00FD72  74                 	db	116	;'t'
   609  00FD73  65                 	db	101	;'e'
   610  00FD74  20                 	db	32
   611  00FD75  6E                 	db	110	;'n'
   612  00FD76  6F                 	db	111	;'o'
   613  00FD77  20                 	db	32
   614  00FD78  44                 	db	68	;'D'
   615  00FD79  65                 	db	101	;'e'
   616  00FD7A  73                 	db	115	;'s'
   617  00FD7B  63                 	db	99	;'c'
   618  00FD7C  61                 	db	97	;'a'
   619  00FD7D  72                 	db	114	;'r'
   620  00FD7E  72                 	db	114	;'r'
   621  00FD7F  65                 	db	101	;'e'
   622  00FD80  67                 	db	103	;'g'
   623  00FD81  61                 	db	97	;'a'
   624  00FD82  6D                 	db	109	;'m'
   625  00FD83  65                 	db	101	;'e'
   626  00FD84  6E                 	db	110	;'n'
   627  00FD85  74                 	db	116	;'t'
   628  00FD86  6F                 	db	111	;'o'
   629  00FD87  3A                 	db	58	;':'
   630  00FD88  20                 	db	32
   631  00FD89  4F                 	db	79	;'O'
   632  00FD8A  4B                 	db	75	;'K'
   633  00FD8B  0A                 	db	10
   634  00FD8C  00                 	db	0
   635  00FD8D                     STR_43:
   636  00FD8D  54                 	db	84	;'T'
   637  00FD8E  65                 	db	101	;'e'
   638  00FD8F  73                 	db	115	;'s'
   639  00FD90  74                 	db	116	;'t'
   640  00FD91  65                 	db	101	;'e'
   641  00FD92  20                 	db	32
   642  00FD93  64                 	db	100	;'d'
   643  00FD94  65                 	db	101	;'e'
   644  00FD95  20                 	db	32
   645  00FD96  54                 	db	84	;'T'
   646  00FD97  65                 	db	101	;'e'
   647  00FD98  6E                 	db	110	;'n'
   648  00FD99  73                 	db	115	;'s'
   649  00FD9A  61                 	db	97	;'a'
   650  00FD9B  6F                 	db	111	;'o'
   651  00FD9C  20                 	db	32
   652  00FD9D  6E                 	db	110	;'n'
   653  00FD9E  6F                 	db	111	;'o'
   654  00FD9F  20                 	db	32
   655  00FDA0  44                 	db	68	;'D'
   656  00FDA1  65                 	db	101	;'e'
   657  00FDA2  73                 	db	115	;'s'
   658  00FDA3  63                 	db	99	;'c'
   659  00FDA4  61                 	db	97	;'a'
   660  00FDA5  72                 	db	114	;'r'
   661  00FDA6  72                 	db	114	;'r'
   662  00FDA7  65                 	db	101	;'e'
   663  00FDA8  67                 	db	103	;'g'
   664  00FDA9  61                 	db	97	;'a'
   665  00FDAA  6D                 	db	109	;'m'
   666  00FDAB  65                 	db	101	;'e'
   667  00FDAC  6E                 	db	110	;'n'
   668  00FDAD  74                 	db	116	;'t'
   669  00FDAE  6F                 	db	111	;'o'
   670  00FDAF  3A                 	db	58	;':'
   671  00FDB0  20                 	db	32
   672  00FDB1  4E                 	db	78	;'N'
   673  00FDB2  4F                 	db	79	;'O'
   674  00FDB3  4B                 	db	75	;'K'
   675  00FDB4  0A                 	db	10
   676  00FDB5  00                 	db	0
   677  00FDB6                     STR_42:
   678  00FDB6  54                 	db	84	;'T'
   679  00FDB7  65                 	db	101	;'e'
   680  00FDB8  73                 	db	115	;'s'
   681  00FDB9  74                 	db	116	;'t'
   682  00FDBA  65                 	db	101	;'e'
   683  00FDBB  20                 	db	32
   684  00FDBC  64                 	db	100	;'d'
   685  00FDBD  65                 	db	101	;'e'
   686  00FDBE  20                 	db	32
   687  00FDBF  54                 	db	84	;'T'
   688  00FDC0  65                 	db	101	;'e'
   689  00FDC1  6E                 	db	110	;'n'
   690  00FDC2  73                 	db	115	;'s'
   691  00FDC3  61                 	db	97	;'a'
   692  00FDC4  6F                 	db	111	;'o'
   693  00FDC5  20                 	db	32
   694  00FDC6  6E                 	db	110	;'n'
   695  00FDC7  6F                 	db	111	;'o'
   696  00FDC8  20                 	db	32
   697  00FDC9  44                 	db	68	;'D'
   698  00FDCA  65                 	db	101	;'e'
   699  00FDCB  73                 	db	115	;'s'
   700  00FDCC  63                 	db	99	;'c'
   701  00FDCD  61                 	db	97	;'a'
   702  00FDCE  72                 	db	114	;'r'
   703  00FDCF  72                 	db	114	;'r'
   704  00FDD0  65                 	db	101	;'e'
   705  00FDD1  67                 	db	103	;'g'
   706  00FDD2  61                 	db	97	;'a'
   707  00FDD3  6D                 	db	109	;'m'
   708  00FDD4  65                 	db	101	;'e'
   709  00FDD5  6E                 	db	110	;'n'
   710  00FDD6  74                 	db	116	;'t'
   711  00FDD7  6F                 	db	111	;'o'
   712  00FDD8  3A                 	db	58	;':'
   713  00FDD9  20                 	db	32
   714  00FDDA  4F                 	db	79	;'O'
   715  00FDDB  4B                 	db	75	;'K'
   716  00FDDC  0A                 	db	10
   717  00FDDD  00                 	db	0
   718  00FDDE                     STR_29:
   719  00FDDE  54                 	db	84	;'T'
   720  00FDDF  65                 	db	101	;'e'
   721  00FDE0  73                 	db	115	;'s'
   722  00FDE1  74                 	db	116	;'t'
   723  00FDE2  65                 	db	101	;'e'
   724  00FDE3  20                 	db	32
   725  00FDE4  64                 	db	100	;'d'
   726  00FDE5  65                 	db	101	;'e'
   727  00FDE6  20                 	db	32
   728  00FDE7  43                 	db	67	;'C'
   729  00FDE8  6F                 	db	111	;'o'
   730  00FDE9  72                 	db	114	;'r'
   731  00FDEA  72                 	db	114	;'r'
   732  00FDEB  65                 	db	101	;'e'
   733  00FDEC  6E                 	db	110	;'n'
   734  00FDED  74                 	db	116	;'t'
   735  00FDEE  65                 	db	101	;'e'
   736  00FDEF  20                 	db	32
   737  00FDF0  6E                 	db	110	;'n'
   738  00FDF1  6F                 	db	111	;'o'
   739  00FDF2  20                 	db	32
   740  00FDF3  43                 	db	67	;'C'
   741  00FDF4  61                 	db	97	;'a'
   742  00FDF5  72                 	db	114	;'r'
   743  00FDF6  72                 	db	114	;'r'
   744  00FDF7  65                 	db	101	;'e'
   745  00FDF8  67                 	db	103	;'g'
   746  00FDF9  61                 	db	97	;'a'
   747  00FDFA  6D                 	db	109	;'m'
   748  00FDFB  65                 	db	101	;'e'
   749  00FDFC  6E                 	db	110	;'n'
   750  00FDFD  74                 	db	116	;'t'
   751  00FDFE  6F                 	db	111	;'o'
   752  00FDFF  3A                 	db	58	;':'
   753  00FE00  20                 	db	32
   754  00FE01  4E                 	db	78	;'N'
   755  00FE02  4F                 	db	79	;'O'
   756  00FE03  4B                 	db	75	;'K'
   757  00FE04  0A                 	db	10
   758  00FE05  00                 	db	0
   759  00FE06                     STR_28:
   760  00FE06  54                 	db	84	;'T'
   761  00FE07  65                 	db	101	;'e'
   762  00FE08  73                 	db	115	;'s'
   763  00FE09  74                 	db	116	;'t'
   764  00FE0A  65                 	db	101	;'e'
   765  00FE0B  20                 	db	32
   766  00FE0C  64                 	db	100	;'d'
   767  00FE0D  65                 	db	101	;'e'
   768  00FE0E  20                 	db	32
   769  00FE0F  43                 	db	67	;'C'
   770  00FE10  6F                 	db	111	;'o'
   771  00FE11  72                 	db	114	;'r'
   772  00FE12  72                 	db	114	;'r'
   773  00FE13  65                 	db	101	;'e'
   774  00FE14  6E                 	db	110	;'n'
   775  00FE15  74                 	db	116	;'t'
   776  00FE16  65                 	db	101	;'e'
   777  00FE17  20                 	db	32
   778  00FE18  6E                 	db	110	;'n'
   779  00FE19  6F                 	db	111	;'o'
   780  00FE1A  20                 	db	32
   781  00FE1B  43                 	db	67	;'C'
   782  00FE1C  61                 	db	97	;'a'
   783  00FE1D  72                 	db	114	;'r'
   784  00FE1E  72                 	db	114	;'r'
   785  00FE1F  65                 	db	101	;'e'
   786  00FE20  67                 	db	103	;'g'
   787  00FE21  61                 	db	97	;'a'
   788  00FE22  6D                 	db	109	;'m'
   789  00FE23  65                 	db	101	;'e'
   790  00FE24  6E                 	db	110	;'n'
   791  00FE25  74                 	db	116	;'t'
   792  00FE26  6F                 	db	111	;'o'
   793  00FE27  3A                 	db	58	;':'
   794  00FE28  20                 	db	32
   795  00FE29  4F                 	db	79	;'O'
   796  00FE2A  4B                 	db	75	;'K'
   797  00FE2B  0A                 	db	10
   798  00FE2C  00                 	db	0
   799  00FE2D                     STR_25:
   800  00FE2D  54                 	db	84	;'T'
   801  00FE2E  65                 	db	101	;'e'
   802  00FE2F  73                 	db	115	;'s'
   803  00FE30  74                 	db	116	;'t'
   804  00FE31  65                 	db	101	;'e'
   805  00FE32  20                 	db	32
   806  00FE33  64                 	db	100	;'d'
   807  00FE34  65                 	db	101	;'e'
   808  00FE35  20                 	db	32
   809  00FE36  54                 	db	84	;'T'
   810  00FE37  65                 	db	101	;'e'
   811  00FE38  6E                 	db	110	;'n'
   812  00FE39  73                 	db	115	;'s'
   813  00FE3A  61                 	db	97	;'a'
   814  00FE3B  6F                 	db	111	;'o'
   815  00FE3C  20                 	db	32
   816  00FE3D  6E                 	db	110	;'n'
   817  00FE3E  6F                 	db	111	;'o'
   818  00FE3F  20                 	db	32
   819  00FE40  43                 	db	67	;'C'
   820  00FE41  61                 	db	97	;'a'
   821  00FE42  72                 	db	114	;'r'
   822  00FE43  72                 	db	114	;'r'
   823  00FE44  65                 	db	101	;'e'
   824  00FE45  67                 	db	103	;'g'
   825  00FE46  61                 	db	97	;'a'
   826  00FE47  6D                 	db	109	;'m'
   827  00FE48  65                 	db	101	;'e'
   828  00FE49  6E                 	db	110	;'n'
   829  00FE4A  74                 	db	116	;'t'
   830  00FE4B  6F                 	db	111	;'o'
   831  00FE4C  3A                 	db	58	;':'
   832  00FE4D  20                 	db	32
   833  00FE4E  4E                 	db	78	;'N'
   834  00FE4F  4F                 	db	79	;'O'
   835  00FE50  4B                 	db	75	;'K'
   836  00FE51  0A                 	db	10
   837  00FE52  00                 	db	0
   838  00FE53                     STR_24:
   839  00FE53  54                 	db	84	;'T'
   840  00FE54  65                 	db	101	;'e'
   841  00FE55  73                 	db	115	;'s'
   842  00FE56  74                 	db	116	;'t'
   843  00FE57  65                 	db	101	;'e'
   844  00FE58  20                 	db	32
   845  00FE59  64                 	db	100	;'d'
   846  00FE5A  65                 	db	101	;'e'
   847  00FE5B  20                 	db	32
   848  00FE5C  54                 	db	84	;'T'
   849  00FE5D  65                 	db	101	;'e'
   850  00FE5E  6E                 	db	110	;'n'
   851  00FE5F  73                 	db	115	;'s'
   852  00FE60  61                 	db	97	;'a'
   853  00FE61  6F                 	db	111	;'o'
   854  00FE62  20                 	db	32
   855  00FE63  6E                 	db	110	;'n'
   856  00FE64  6F                 	db	111	;'o'
   857  00FE65  20                 	db	32
   858  00FE66  43                 	db	67	;'C'
   859  00FE67  61                 	db	97	;'a'
   860  00FE68  72                 	db	114	;'r'
   861  00FE69  72                 	db	114	;'r'
   862  00FE6A  65                 	db	101	;'e'
   863  00FE6B  67                 	db	103	;'g'
   864  00FE6C  61                 	db	97	;'a'
   865  00FE6D  6D                 	db	109	;'m'
   866  00FE6E  65                 	db	101	;'e'
   867  00FE6F  6E                 	db	110	;'n'
   868  00FE70  74                 	db	116	;'t'
   869  00FE71  6F                 	db	111	;'o'
   870  00FE72  3A                 	db	58	;':'
   871  00FE73  20                 	db	32
   872  00FE74  4F                 	db	79	;'O'
   873  00FE75  4B                 	db	75	;'K'
   874  00FE76  0A                 	db	10
   875  00FE77  00                 	db	0
   876  00FE78                     STR_31:
   877  00FE78  0A                 	db	10
   878  00FE79  44                 	db	68	;'D'
   879  00FE7A  65                 	db	101	;'e'
   880  00FE7B  73                 	db	115	;'s'
   881  00FE7C  63                 	db	99	;'c'
   882  00FE7D  61                 	db	97	;'a'
   883  00FE7E  72                 	db	114	;'r'
   884  00FE7F  72                 	db	114	;'r'
   885  00FE80  65                 	db	101	;'e'
   886  00FE81  67                 	db	103	;'g'
   887  00FE82  61                 	db	97	;'a'
   888  00FE83  6D                 	db	109	;'m'
   889  00FE84  65                 	db	101	;'e'
   890  00FE85  6E                 	db	110	;'n'
   891  00FE86  74                 	db	116	;'t'
   892  00FE87  6F                 	db	111	;'o'
   893  00FE88  20                 	db	32
   894  00FE89  6E                 	db	110	;'n'
   895  00FE8A  61                 	db	97	;'a'
   896  00FE8B  6F                 	db	111	;'o'
   897  00FE8C  20                 	db	32
   898  00FE8D  48                 	db	72	;'H'
   899  00FE8E  61                 	db	97	;'a'
   900  00FE8F  62                 	db	98	;'b'
   901  00FE90  69                 	db	105	;'i'
   902  00FE91  6C                 	db	108	;'l'
   903  00FE92  69                 	db	105	;'i'
   904  00FE93  74                 	db	116	;'t'
   905  00FE94  61                 	db	97	;'a'
   906  00FE95  64                 	db	100	;'d'
   907  00FE96  6F                 	db	111	;'o'
   908  00FE97  21                 	db	33
   909  00FE98  0A                 	db	10
   910  00FE99  00                 	db	0
   911  00FE9A                     STR_15:
   912  00FE9A  0A                 	db	10
   913  00FE9B  43                 	db	67	;'C'
   914  00FE9C  61                 	db	97	;'a'
   915  00FE9D  72                 	db	114	;'r'
   916  00FE9E  72                 	db	114	;'r'
   917  00FE9F  65                 	db	101	;'e'
   918  00FEA0  67                 	db	103	;'g'
   919  00FEA1  61                 	db	97	;'a'
   920  00FEA2  6D                 	db	109	;'m'
   921  00FEA3  65                 	db	101	;'e'
   922  00FEA4  6E                 	db	110	;'n'
   923  00FEA5  74                 	db	116	;'t'
   924  00FEA6  6F                 	db	111	;'o'
   925  00FEA7  20                 	db	32
   926  00FEA8  6E                 	db	110	;'n'
   927  00FEA9  61                 	db	97	;'a'
   928  00FEAA  6F                 	db	111	;'o'
   929  00FEAB  20                 	db	32
   930  00FEAC  48                 	db	72	;'H'
   931  00FEAD  61                 	db	97	;'a'
   932  00FEAE  62                 	db	98	;'b'
   933  00FEAF  69                 	db	105	;'i'
   934  00FEB0  6C                 	db	108	;'l'
   935  00FEB1  69                 	db	105	;'i'
   936  00FEB2  74                 	db	116	;'t'
   937  00FEB3  61                 	db	97	;'a'
   938  00FEB4  64                 	db	100	;'d'
   939  00FEB5  6F                 	db	111	;'o'
   940  00FEB6  21                 	db	33
   941  00FEB7  0A                 	db	10
   942  00FEB8  00                 	db	0
   943  00FEB9                     STR_30:
   944  00FEB9  0A                 	db	10
   945  00FEBA  44                 	db	68	;'D'
   946  00FEBB  65                 	db	101	;'e'
   947  00FEBC  73                 	db	115	;'s'
   948  00FEBD  63                 	db	99	;'c'
   949  00FEBE  61                 	db	97	;'a'
   950  00FEBF  72                 	db	114	;'r'
   951  00FEC0  72                 	db	114	;'r'
   952  00FEC1  65                 	db	101	;'e'
   953  00FEC2  67                 	db	103	;'g'
   954  00FEC3  61                 	db	97	;'a'
   955  00FEC4  6D                 	db	109	;'m'
   956  00FEC5  65                 	db	101	;'e'
   957  00FEC6  6E                 	db	110	;'n'
   958  00FEC7  74                 	db	116	;'t'
   959  00FEC8  6F                 	db	111	;'o'
   960  00FEC9  20                 	db	32
   961  00FECA  48                 	db	72	;'H'
   962  00FECB  61                 	db	97	;'a'
   963  00FECC  62                 	db	98	;'b'
   964  00FECD  69                 	db	105	;'i'
   965  00FECE  6C                 	db	108	;'l'
   966  00FECF  69                 	db	105	;'i'
   967  00FED0  74                 	db	116	;'t'
   968  00FED1  61                 	db	97	;'a'
   969  00FED2  64                 	db	100	;'d'
   970  00FED3  6F                 	db	111	;'o'
   971  00FED4  21                 	db	33
   972  00FED5  0A                 	db	10
   973  00FED6  00                 	db	0
   974  00FED7                     STR_5:
   975  00FED7  0A                 	db	10
   976  00FED8  2A                 	db	42
   977  00FED9  2A                 	db	42
   978  00FEDA  2A                 	db	42
   979  00FEDB  20                 	db	32
   980  00FEDC  49                 	db	73	;'I'
   981  00FEDD  6E                 	db	110	;'n'
   982  00FEDE  69                 	db	105	;'i'
   983  00FEDF  63                 	db	99	;'c'
   984  00FEE0  69                 	db	105	;'i'
   985  00FEE1  61                 	db	97	;'a'
   986  00FEE2  6E                 	db	110	;'n'
   987  00FEE3  64                 	db	100	;'d'
   988  00FEE4  6F                 	db	111	;'o'
   989  00FEE5  20                 	db	32
   990  00FEE6  74                 	db	116	;'t'
   991  00FEE7  65                 	db	101	;'e'
   992  00FEE8  73                 	db	115	;'s'
   993  00FEE9  74                 	db	116	;'t'
   994  00FEEA  65                 	db	101	;'e'
   995  00FEEB  73                 	db	115	;'s'
   996  00FEEC  2E                 	db	46
   997  00FEED  2E                 	db	46
   998  00FEEE  2E                 	db	46
   999  00FEEF  20                 	db	32
  1000  00FEF0  2A                 	db	42
  1001  00FEF1  2A                 	db	42
  1002  00FEF2  2A                 	db	42
  1003  00FEF3  0A                 	db	10
  1004  00FEF4  00                 	db	0
  1005  00FEF5                     STR_51:
  1006  00FEF5  0A                 	db	10
  1007  00FEF6  2A                 	db	42
  1008  00FEF7  2A                 	db	42
  1009  00FEF8  2A                 	db	42
  1010  00FEF9  20                 	db	32
  1011  00FEFA  42                 	db	66	;'B'
  1012  00FEFB  41                 	db	65	;'A'
  1013  00FEFC  54                 	db	84	;'T'
  1014  00FEFD  45                 	db	69	;'E'
  1015  00FEFE  52                 	db	82	;'R'
  1016  00FEFF  49                 	db	73	;'I'
  1017  00FF00  41                 	db	65	;'A'
  1018  00FF01  20                 	db	32
  1019  00FF02  52                 	db	82	;'R'
  1020  00FF03  45                 	db	69	;'E'
  1021  00FF04  50                 	db	80	;'P'
  1022  00FF05  52                 	db	82	;'R'
  1023  00FF06  4F                 	db	79	;'O'
  1024  00FF07  56                 	db	86	;'V'
  1025  00FF08  41                 	db	65	;'A'
  1026  00FF09  44                 	db	68	;'D'
  1027  00FF0A  41                 	db	65	;'A'
  1028  00FF0B  21                 	db	33
  1029  00FF0C  20                 	db	32
  1030  00FF0D  2A                 	db	42
  1031  00FF0E  2A                 	db	42
  1032  00FF0F  2A                 	db	42
  1033  00FF10  0A                 	db	10
  1034  00FF11  00                 	db	0
  1035  00FF12                     STR_49:
  1036  00FF12  0A                 	db	10
  1037  00FF13  2A                 	db	42
  1038  00FF14  2A                 	db	42
  1039  00FF15  2A                 	db	42
  1040  00FF16  20                 	db	32
  1041  00FF17  54                 	db	84	;'T'
  1042  00FF18  65                 	db	101	;'e'
  1043  00FF19  73                 	db	115	;'s'
  1044  00FF1A  74                 	db	116	;'t'
  1045  00FF1B  65                 	db	101	;'e'
  1046  00FF1C  73                 	db	115	;'s'
  1047  00FF1D  20                 	db	32
  1048  00FF1E  66                 	db	102	;'f'
  1049  00FF1F  69                 	db	105	;'i'
  1050  00FF20  6E                 	db	110	;'n'
  1051  00FF21  61                 	db	97	;'a'
  1052  00FF22  6C                 	db	108	;'l'
  1053  00FF23  69                 	db	105	;'i'
  1054  00FF24  7A                 	db	122	;'z'
  1055  00FF25  61                 	db	97	;'a'
  1056  00FF26  64                 	db	100	;'d'
  1057  00FF27  6F                 	db	111	;'o'
  1058  00FF28  73                 	db	115	;'s'
  1059  00FF29  20                 	db	32
  1060  00FF2A  2A                 	db	42
  1061  00FF2B  2A                 	db	42
  1062  00FF2C  2A                 	db	42
  1063  00FF2D  0A                 	db	10
  1064  00FF2E  00                 	db	0
  1065  00FF2F                     STR_48:
  1066  00FF2F  0A                 	db	10
  1067  00FF30  2A                 	db	42
  1068  00FF31  2A                 	db	42
  1069  00FF32  2A                 	db	42
  1070  00FF33  20                 	db	32
  1071  00FF34  42                 	db	66	;'B'
  1072  00FF35  41                 	db	65	;'A'
  1073  00FF36  54                 	db	84	;'T'
  1074  00FF37  45                 	db	69	;'E'
  1075  00FF38  52                 	db	82	;'R'
  1076  00FF39  49                 	db	73	;'I'
  1077  00FF3A  41                 	db	65	;'A'
  1078  00FF3B  20                 	db	32
  1079  00FF3C  41                 	db	65	;'A'
  1080  00FF3D  50                 	db	80	;'P'
  1081  00FF3E  52                 	db	82	;'R'
  1082  00FF3F  4F                 	db	79	;'O'
  1083  00FF40  56                 	db	86	;'V'
  1084  00FF41  41                 	db	65	;'A'
  1085  00FF42  44                 	db	68	;'D'
  1086  00FF43  41                 	db	65	;'A'
  1087  00FF44  21                 	db	33
  1088  00FF45  20                 	db	32
  1089  00FF46  2A                 	db	42
  1090  00FF47  2A                 	db	42
  1091  00FF48  2A                 	db	42
  1092  00FF49  0A                 	db	10
  1093  00FF4A  00                 	db	0
  1094  00FF4B                     STR_14:
  1095  00FF4B  0A                 	db	10
  1096  00FF4C  43                 	db	67	;'C'
  1097  00FF4D  61                 	db	97	;'a'
  1098  00FF4E  72                 	db	114	;'r'
  1099  00FF4F  72                 	db	114	;'r'
  1100  00FF50  65                 	db	101	;'e'
  1101  00FF51  67                 	db	103	;'g'
  1102  00FF52  61                 	db	97	;'a'
  1103  00FF53  6D                 	db	109	;'m'
  1104  00FF54  65                 	db	101	;'e'
  1105  00FF55  6E                 	db	110	;'n'
  1106  00FF56  74                 	db	116	;'t'
  1107  00FF57  6F                 	db	111	;'o'
  1108  00FF58  20                 	db	32
  1109  00FF59  48                 	db	72	;'H'
  1110  00FF5A  61                 	db	97	;'a'
  1111  00FF5B  62                 	db	98	;'b'
  1112  00FF5C  69                 	db	105	;'i'
  1113  00FF5D  6C                 	db	108	;'l'
  1114  00FF5E  69                 	db	105	;'i'
  1115  00FF5F  74                 	db	116	;'t'
  1116  00FF60  61                 	db	97	;'a'
  1117  00FF61  64                 	db	100	;'d'
  1118  00FF62  6F                 	db	111	;'o'
  1119  00FF63  21                 	db	33
  1120  00FF64  0A                 	db	10
  1121  00FF65  00                 	db	0
  1122  00FF66                     STR_12:
  1123  00FF66  54                 	db	84	;'T'
  1124  00FF67  65                 	db	101	;'e'
  1125  00FF68  73                 	db	115	;'s'
  1126  00FF69  74                 	db	116	;'t'
  1127  00FF6A  65                 	db	101	;'e'
  1128  00FF6B  20                 	db	32
  1129  00FF6C  64                 	db	100	;'d'
  1130  00FF6D  65                 	db	101	;'e'
  1131  00FF6E  20                 	db	32
  1132  00FF6F  50                 	db	80	;'P'
  1133  00FF70  6F                 	db	111	;'o'
  1134  00FF71  6C                 	db	108	;'l'
  1135  00FF72  61                 	db	97	;'a'
  1136  00FF73  72                 	db	114	;'r'
  1137  00FF74  69                 	db	105	;'i'
  1138  00FF75  64                 	db	100	;'d'
  1139  00FF76  61                 	db	97	;'a'
  1140  00FF77  64                 	db	100	;'d'
  1141  00FF78  65                 	db	101	;'e'
  1142  00FF79  3A                 	db	58	;':'
  1143  00FF7A  20                 	db	32
  1144  00FF7B  4E                 	db	78	;'N'
  1145  00FF7C  4F                 	db	79	;'O'
  1146  00FF7D  4B                 	db	75	;'K'
  1147  00FF7E  0A                 	db	10
  1148  00FF7F  00                 	db	0
  1149  00FF80                     STR_13:
  1150  00FF80  54                 	db	84	;'T'
  1151  00FF81  65                 	db	101	;'e'
  1152  00FF82  73                 	db	115	;'s'
  1153  00FF83  74                 	db	116	;'t'
  1154  00FF84  65                 	db	101	;'e'
  1155  00FF85  20                 	db	32
  1156  00FF86  64                 	db	100	;'d'
  1157  00FF87  65                 	db	101	;'e'
  1158  00FF88  20                 	db	32
  1159  00FF89  50                 	db	80	;'P'
  1160  00FF8A  6F                 	db	111	;'o'
  1161  00FF8B  6C                 	db	108	;'l'
  1162  00FF8C  61                 	db	97	;'a'
  1163  00FF8D  72                 	db	114	;'r'
  1164  00FF8E  69                 	db	105	;'i'
  1165  00FF8F  64                 	db	100	;'d'
  1166  00FF90  61                 	db	97	;'a'
  1167  00FF91  64                 	db	100	;'d'
  1168  00FF92  65                 	db	101	;'e'
  1169  00FF93  3A                 	db	58	;':'
  1170  00FF94  20                 	db	32
  1171  00FF95  4F                 	db	79	;'O'
  1172  00FF96  4B                 	db	75	;'K'
  1173  00FF97  0A                 	db	10
  1174  00FF98  00                 	db	0
  1175  00FF99                     STR_40:
  1176  00FF99  0A                 	db	10
  1177  00FF9A  4D                 	db	77	;'M'
  1178  00FF9B  65                 	db	101	;'e'
  1179  00FF9C  6E                 	db	110	;'n'
  1180  00FF9D  6F                 	db	111	;'o'
  1181  00FF9E  72                 	db	114	;'r'
  1182  00FF9F  20                 	db	32
  1183  00FFA0  74                 	db	116	;'t'
  1184  00FFA1  65                 	db	101	;'e'
  1185  00FFA2  6E                 	db	110	;'n'
  1186  00FFA3  73                 	db	115	;'s'
  1187  00FFA4  61                 	db	97	;'a'
  1188  00FFA5  6F                 	db	111	;'o'
  1189  00FFA6  20                 	db	32
  1190  00FFA7  6D                 	db	109	;'m'
  1191  00FFA8  65                 	db	101	;'e'
  1192  00FFA9  64                 	db	100	;'d'
  1193  00FFAA  69                 	db	105	;'i'
  1194  00FFAB  64                 	db	100	;'d'
  1195  00FFAC  61                 	db	97	;'a'
  1196  00FFAD  3A                 	db	58	;':'
  1197  00FFAE  20                 	db	32
  1198  00FFAF  00                 	db	0
  1199  00FFB0                     STR_26:
  1200  00FFB0  43                 	db	67	;'C'
  1201  00FFB1  6F                 	db	111	;'o'
  1202  00FFB2  72                 	db	114	;'r'
  1203  00FFB3  72                 	db	114	;'r'
  1204  00FFB4  65                 	db	101	;'e'
  1205  00FFB5  6E                 	db	110	;'n'
  1206  00FFB6  74                 	db	116	;'t'
  1207  00FFB7  65                 	db	101	;'e'
  1208  00FFB8  20                 	db	32
  1209  00FFB9  4D                 	db	77	;'M'
  1210  00FFBA  65                 	db	101	;'e'
  1211  00FFBB  64                 	db	100	;'d'
  1212  00FFBC  69                 	db	105	;'i'
  1213  00FFBD  61                 	db	97	;'a'
  1214  00FFBE  3A                 	db	58	;':'
  1215  00FFBF  20                 	db	32
  1216  00FFC0  00                 	db	0
  1217  00FFC1                     STR_10:
  1218  00FFC1  0A                 	db	10
  1219  00FFC2  54                 	db	84	;'T'
  1220  00FFC3  65                 	db	101	;'e'
  1221  00FFC4  6E                 	db	110	;'n'
  1222  00FFC5  73                 	db	115	;'s'
  1223  00FFC6  61                 	db	97	;'a'
  1224  00FFC7  6F                 	db	111	;'o'
  1225  00FFC8  20                 	db	32
  1226  00FFC9  4D                 	db	77	;'M'
  1227  00FFCA  65                 	db	101	;'e'
  1228  00FFCB  64                 	db	100	;'d'
  1229  00FFCC  69                 	db	105	;'i'
  1230  00FFCD  61                 	db	97	;'a'
  1231  00FFCE  3A                 	db	58	;':'
  1232  00FFCF  20                 	db	32
  1233  00FFD0  00                 	db	0
  1234  00FFD1                     STR_20:
  1235  00FFD1  43                 	db	67	;'C'
  1236  00FFD2  6F                 	db	111	;'o'
  1237  00FFD3  72                 	db	114	;'r'
  1238  00FFD4  72                 	db	114	;'r'
  1239  00FFD5  65                 	db	101	;'e'
  1240  00FFD6  6E                 	db	110	;'n'
  1241  00FFD7  74                 	db	116	;'t'
  1242  00FFD8  65                 	db	101	;'e'
  1243  00FFD9  3A                 	db	58	;':'
  1244  00FFDA  20                 	db	32
  1245  00FFDB  00                 	db	0
  1246  00FFDC                     STR_8:
  1247  00FFDC  54                 	db	84	;'T'
  1248  00FFDD  65                 	db	101	;'e'
  1249  00FFDE  6E                 	db	110	;'n'
  1250  00FFDF  73                 	db	115	;'s'
  1251  00FFE0  61                 	db	97	;'a'
  1252  00FFE1  6F                 	db	111	;'o'
  1253  00FFE2  3A                 	db	58	;':'
  1254  00FFE3  20                 	db	32
  1255  00FFE4  00                 	db	0
  1256  00FFE5                     STR_19:
  1257  00FFE5  20                 	db	32
  1258  00FFE6  56                 	db	86	;'V'
  1259  00FFE7  20                 	db	32
  1260  00FFE8  7C                 	db	124
  1261  00FFE9  20                 	db	32
  1262  00FFEA  00                 	db	0
  1263  00FFEB                     STR_27:
  1264  00FFEB  20                 	db	32
  1265  00FFEC  41                 	db	65	;'A'
  1266  00FFED  0A                 	db	10
  1267  00FFEE  00                 	db	0
  1268  00FFEF                     STR_11:
  1269  00FFEF  20                 	db	32
  1270  00FFF0  56                 	db	86	;'V'
  1271  00FFF1  0A                 	db	10
  1272  00FFF2  00                 	db	0
  1273  00FFF3                     STR_21:
  1274  00FFF3  20                 	db	32
  1275  00FFF4  41                 	db	65	;'A'
  1276  00FFF5  00                 	db	0
  1277  00FFF6                     STR_9:
  1278  00FFF6  20                 	db	32
  1279  00FFF7  56                 	db	86	;'V'
  1280  00FFF8  00                 	db	0
  1281  00FFF9                     STR_1:
  1282  00FFF9  25                 	db	37
  1283  00FFFA  64                 	db	100	;'d'
  1284  00FFFB  00                 	db	0
  1285  00FFFC                     STR_2:
  1286  00FFFC  25                 	db	37
  1287  00FFFD  66                 	db	102	;'f'
  1288  00FFFE  00                 	db	0
  1289  0000                     
  1290                           ; #config settings
  1291  00FFFF  00                 	db	0	; dummy byte at the end
  1292  0000                     
  1293                           	psect	cinit
  1294  002CF2                     __pcinit:
  1295                           	opt stack 0
  1296  002CF2                     start_initialization:
  1297                           	opt stack 0
  1298  002CF2                     __initialization:
  1299                           	opt stack 0
  1300                           
  1301                           ; Clear objects allocated to BANK0 (38 bytes)
  1302  002CF2  EE00  F0B0         	lfsr	0,__pbssBANK0
  1303  002CF6  0E26               	movlw	38
  1304  002CF8                     clear_0:
  1305  002CF8  6AEE               	clrf	postinc0,c
  1306  002CFA  06E8               	decf	wreg,f,c
  1307  002CFC  E1FD               	bnz	clear_0
  1308  002CFE                     end_of_initialization:
  1309                           	opt stack 0
  1310  002CFE                     __end_of__initialization:
  1311                           	opt stack 0
  1312  002CFE  9079               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1313  002D00  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1314  002D02  0100               	movlb	0
  1315  002D04  EF9E  F012         	goto	_main	;jump to C main() function
  1316                           postinc0	equ	0xFEE
  1317                           wreg	equ	0xFE8
  1318                           
  1319                           	psect	bssBANK0
  1320  0000B0                     __pbssBANK0:
  1321                           	opt stack 0
  1322  0000B0                     _correnteNaBateria:
  1323                           	opt stack 0
  1324  0000B0                     	ds	15
  1325  0000BF                     _resultadoDosTestes:
  1326                           	opt stack 0
  1327  0000BF                     	ds	5
  1328  0000C4                     _statusDaBateria:
  1329                           	opt stack 0
  1330  0000C4                     	ds	1
  1331  0000C5                     _tempoEmSegundos:
  1332                           	opt stack 0
  1333  0000C5                     	ds	1
  1334  0000C6                     _contador:
  1335                           	opt stack 0
  1336  0000C6                     	ds	1
  1337  0000C7                     _tensaoNaBateria:
  1338                           	opt stack 0
  1339  0000C7                     	ds	15
  1340                           postinc0	equ	0xFEE
  1341                           wreg	equ	0xFE8
  1342                           
  1343                           	psect	cstackBANK1
  1344  000100                     __pcstackBANK1:
  1345                           	opt stack 0
  1346  000100                     ??_configureAdc:
  1347  000100                     ??_desabilitarDescarregamentoDaBateria:
  1348  000100                     ??_desabilitarCarregamentoDaBateria:
  1349  000100                     ??_sinalizacaoBeep:
  1350  000100                     ?_tamanhoDaString:
  1351                           	opt stack 0
  1352  000100                     escreverCharUart@caracter:
  1353                           	opt stack 0
  1354  000100                     tamanhoDaString@string:
  1355                           	opt stack 0
  1356                           
  1357                           ; 2 bytes @ 0x0
  1358  000100                     	ds	1
  1359  000101                     
  1360                           ; 1 bytes @ 0x1
  1361  000101                     	ds	1
  1362  000102                     ??_tamanhoDaString:
  1363                           
  1364                           ; 1 bytes @ 0x2
  1365  000102                     	ds	2
  1366  000104                     tamanhoDaString@lenght:
  1367                           	opt stack 0
  1368                           
  1369                           ; 2 bytes @ 0x4
  1370  000104                     	ds	2
  1371  000106                     escreverStringUart@string:
  1372                           	opt stack 0
  1373                           
  1374                           ; 2 bytes @ 0x6
  1375  000106                     	ds	2
  1376  000108                     ??_escreverStringUart:
  1377                           
  1378                           ; 1 bytes @ 0x8
  1379  000108                     	ds	2
  1380  00010A                     escreverStringUart@tamanhoDaStr:
  1381                           	opt stack 0
  1382                           
  1383                           ; 2 bytes @ 0xA
  1384  00010A                     	ds	2
  1385  00010C                     escreverStringUart@contador:
  1386                           	opt stack 0
  1387                           
  1388                           ; 2 bytes @ 0xC
  1389  00010C                     	ds	2
  1390  00010E                     ??_main:
  1391                           
  1392                           ; 1 bytes @ 0xE
  1393  00010E                     	ds	2
  1394                           postinc0	equ	0xFEE
  1395                           wreg	equ	0xFE8
  1396                           
  1397                           	psect	cstackBANK0
  1398  000080                     __pcstackBANK0:
  1399                           	opt stack 0
  1400  000080                     ??_tratamento:
  1401                           
  1402                           ; 1 bytes @ 0x0
  1403  000080                     	ds	16
  1404  000090                     _tratamento$1468:
  1405                           	opt stack 0
  1406                           
  1407                           ; 3 bytes @ 0x10
  1408  000090                     	ds	3
  1409  000093                     tratamento@tensaoMedia:
  1410                           	opt stack 0
  1411                           
  1412                           ; 3 bytes @ 0x13
  1413  000093                     	ds	3
  1414  000096                     tratamento@tensaoMedia_781:
  1415                           	opt stack 0
  1416                           
  1417                           ; 3 bytes @ 0x16
  1418  000096                     	ds	3
  1419  000099                     tratamento@indexTensaoMinima:
  1420                           	opt stack 0
  1421                           
  1422                           ; 2 bytes @ 0x19
  1423  000099                     	ds	2
  1424  00009B                     _tratamento$1467:
  1425                           	opt stack 0
  1426                           
  1427                           ; 3 bytes @ 0x1B
  1428  00009B                     	ds	3
  1429  00009E                     tratamento@tensaoMedia_762:
  1430                           	opt stack 0
  1431                           
  1432                           ; 3 bytes @ 0x1E
  1433  00009E                     	ds	3
  1434  0000A1                     tratamento@correnteMedia:
  1435                           	opt stack 0
  1436                           
  1437                           ; 3 bytes @ 0x21
  1438  0000A1                     	ds	3
  1439  0000A4                     tratamento@correnteMedia_790:
  1440                           	opt stack 0
  1441                           
  1442                           ; 3 bytes @ 0x24
  1443  0000A4                     	ds	3
  1444  0000A7                     _tratamento$1464:
  1445                           	opt stack 0
  1446                           
  1447                           ; 3 bytes @ 0x27
  1448  0000A7                     	ds	3
  1449  0000AA                     _tratamento$1465:
  1450                           	opt stack 0
  1451                           
  1452                           ; 3 bytes @ 0x2A
  1453  0000AA                     	ds	3
  1454  0000AD                     _tratamento$1466:
  1455                           	opt stack 0
  1456                           
  1457                           ; 3 bytes @ 0x2D
  1458  0000AD                     	ds	3
  1459                           postinc0	equ	0xFEE
  1460                           wreg	equ	0xFE8
  1461                           
  1462                           	psect	cstackCOMRAM
  1463  000001                     __pcstackCOMRAM:
  1464                           	opt stack 0
  1465  000001                     ??_sinalizacaoAprovada:
  1466  000001                     ??_sinalizacaoFalha:
  1467  000001                     ??i2_desabilitarDescarregamentoDaBateria:
  1468  000001                     ??i2_desabilitarCarregamentoDaBateria:
  1469  000001                     ?_lerAdcAn0:
  1470                           	opt stack 0
  1471  000001                     ?_lerAdcAn1:
  1472                           	opt stack 0
  1473  000001                     ?_lerAdcAn2:
  1474                           	opt stack 0
  1475  000001                     ?___awmod:
  1476                           	opt stack 0
  1477  000001                     ?i2_tamanhoDaString:
  1478                           	opt stack 0
  1479  000001                     ?___ftpack:
  1480                           	opt stack 0
  1481  000001                     ?__tdiv_to_l_:
  1482                           	opt stack 0
  1483  000001                     ?__div_to_l_:
  1484                           	opt stack 0
  1485  000001                     ?___lldiv:
  1486                           	opt stack 0
  1487  000001                     i2escreverCharUart@caracter:
  1488                           	opt stack 0
  1489  000001                     ___awmod@dividend:
  1490                           	opt stack 0
  1491  000001                     i2tamanhoDaString@string:
  1492                           	opt stack 0
  1493  000001                     __div_to_l_@f1:
  1494                           	opt stack 0
  1495  000001                     ___ftpack@arg:
  1496                           	opt stack 0
  1497  000001                     __tdiv_to_l_@f1:
  1498                           	opt stack 0
  1499  000001                     ___lldiv@dividend:
  1500                           	opt stack 0
  1501                           
  1502                           ; 4 bytes @ 0x0
  1503  000001                     	ds	1
  1504  000002                     sinalizacaoAprovada@repeticoes:
  1505                           	opt stack 0
  1506                           
  1507                           ; 1 bytes @ 0x1
  1508  000002                     	ds	1
  1509  000003                     ??_lerAdcAn0:
  1510  000003                     ??_lerAdcAn1:
  1511  000003                     ??_lerAdcAn2:
  1512  000003                     ??i2_tamanhoDaString:
  1513  000003                     ___awmod@divisor:
  1514                           	opt stack 0
  1515                           
  1516                           ; 2 bytes @ 0x2
  1517  000003                     	ds	1
  1518  000004                     ___ftpack@exp:
  1519                           	opt stack 0
  1520  000004                     __div_to_l_@f2:
  1521                           	opt stack 0
  1522  000004                     __tdiv_to_l_@f2:
  1523                           	opt stack 0
  1524                           
  1525                           ; 3 bytes @ 0x3
  1526  000004                     	ds	1
  1527  000005                     ___awmod@counter:
  1528                           	opt stack 0
  1529  000005                     ___ftpack@sign:
  1530                           	opt stack 0
  1531  000005                     lerAdcAn0@valorLido:
  1532                           	opt stack 0
  1533  000005                     lerAdcAn1@valorLido:
  1534                           	opt stack 0
  1535  000005                     lerAdcAn2@valorLido:
  1536                           	opt stack 0
  1537  000005                     i2tamanhoDaString@lenght:
  1538                           	opt stack 0
  1539  000005                     ___lldiv@divisor:
  1540                           	opt stack 0
  1541                           
  1542                           ; 4 bytes @ 0x4
  1543  000005                     	ds	1
  1544  000006                     ??___ftpack:
  1545  000006                     ___awmod@sign:
  1546                           	opt stack 0
  1547                           
  1548                           ; 1 bytes @ 0x5
  1549  000006                     	ds	1
  1550  000007                     ??__tdiv_to_l_:
  1551  000007                     ?___awdiv:
  1552                           	opt stack 0
  1553  000007                     ___awdiv@dividend:
  1554                           	opt stack 0
  1555  000007                     __div_to_l_@quot:
  1556                           	opt stack 0
  1557                           
  1558                           ; 4 bytes @ 0x6
  1559  000007                     	ds	2
  1560  000009                     ?___awtoft:
  1561                           	opt stack 0
  1562  000009                     ?___lltoft:
  1563                           	opt stack 0
  1564  000009                     ___awdiv@divisor:
  1565                           	opt stack 0
  1566  000009                     ___awtoft@c:
  1567                           	opt stack 0
  1568  000009                     ___lldiv@quotient:
  1569                           	opt stack 0
  1570  000009                     ___lltoft@c:
  1571                           	opt stack 0
  1572                           
  1573                           ; 4 bytes @ 0x8
  1574  000009                     	ds	1
  1575  00000A                     __tdiv_to_l_@quot:
  1576                           	opt stack 0
  1577                           
  1578                           ; 4 bytes @ 0x9
  1579  00000A                     	ds	1
  1580  00000B                     ___awdiv@counter:
  1581                           	opt stack 0
  1582  00000B                     __div_to_l_@cntr:
  1583                           	opt stack 0
  1584                           
  1585                           ; 1 bytes @ 0xA
  1586  00000B                     	ds	1
  1587  00000C                     ___awdiv@sign:
  1588                           	opt stack 0
  1589  00000C                     ___awtoft@sign:
  1590                           	opt stack 0
  1591  00000C                     __div_to_l_@exp1:
  1592                           	opt stack 0
  1593                           
  1594                           ; 1 bytes @ 0xB
  1595  00000C                     	ds	1
  1596  00000D                     ??___lltoft:
  1597  00000D                     ___lldiv@counter:
  1598                           	opt stack 0
  1599  00000D                     ___awdiv@quotient:
  1600                           	opt stack 0
  1601                           
  1602                           ; 2 bytes @ 0xC
  1603  00000D                     	ds	1
  1604  00000E                     ?___llmod:
  1605                           	opt stack 0
  1606  00000E                     __tdiv_to_l_@cntr:
  1607                           	opt stack 0
  1608  00000E                     ___llmod@dividend:
  1609                           	opt stack 0
  1610                           
  1611                           ; 4 bytes @ 0xD
  1612  00000E                     	ds	1
  1613  00000F                     ?___wmul:
  1614                           	opt stack 0
  1615  00000F                     __tdiv_to_l_@exp1:
  1616                           	opt stack 0
  1617  00000F                     ___wmul@multiplier:
  1618                           	opt stack 0
  1619                           
  1620                           ; 2 bytes @ 0xE
  1621  00000F                     	ds	2
  1622  000011                     ___lltoft@exp:
  1623                           	opt stack 0
  1624  000011                     ___wmul@multiplicand:
  1625                           	opt stack 0
  1626                           
  1627                           ; 2 bytes @ 0x10
  1628  000011                     	ds	1
  1629  000012                     ___llmod@divisor:
  1630                           	opt stack 0
  1631                           
  1632                           ; 4 bytes @ 0x11
  1633  000012                     	ds	1
  1634  000013                     ___wmul@product:
  1635                           	opt stack 0
  1636                           
  1637                           ; 2 bytes @ 0x12
  1638  000013                     	ds	2
  1639  000015                     ?___ftmul:
  1640                           	opt stack 0
  1641  000015                     ___ftge@ff1:
  1642                           	opt stack 0
  1643  000015                     ___ftmul@f1:
  1644                           	opt stack 0
  1645                           
  1646                           ; 3 bytes @ 0x14
  1647  000015                     	ds	1
  1648  000016                     ___llmod@counter:
  1649                           	opt stack 0
  1650                           
  1651                           ; 1 bytes @ 0x15
  1652  000016                     	ds	2
  1653  000018                     ___ftge@ff2:
  1654                           	opt stack 0
  1655  000018                     ___ftmul@f2:
  1656                           	opt stack 0
  1657                           
  1658                           ; 3 bytes @ 0x17
  1659  000018                     	ds	3
  1660  00001B                     ??___ftmul:
  1661  00001B                     ??___ftge:
  1662                           
  1663                           ; 1 bytes @ 0x1A
  1664  00001B                     	ds	3
  1665  00001E                     ?_indexDoMenorValor:
  1666                           	opt stack 0
  1667  00001E                     ___ftmul@exp:
  1668                           	opt stack 0
  1669  00001E                     indexDoMenorValor@dados:
  1670                           	opt stack 0
  1671                           
  1672                           ; 2 bytes @ 0x1D
  1673  00001E                     	ds	1
  1674  00001F                     ___ftmul@f3_as_product:
  1675                           	opt stack 0
  1676                           
  1677                           ; 3 bytes @ 0x1E
  1678  00001F                     	ds	1
  1679  000020                     indexDoMenorValor@quantidadeDeValoresParaAnalisar:
  1680                           	opt stack 0
  1681                           
  1682                           ; 2 bytes @ 0x1F
  1683  000020                     	ds	2
  1684  000022                     ??_indexDoMenorValor:
  1685  000022                     ___ftmul@cntr:
  1686                           	opt stack 0
  1687                           
  1688                           ; 1 bytes @ 0x21
  1689  000022                     	ds	1
  1690  000023                     ___ftmul@sign:
  1691                           	opt stack 0
  1692  000023                     indexDoMenorValor@menorValor:
  1693                           	opt stack 0
  1694                           
  1695                           ; 3 bytes @ 0x22
  1696  000023                     	ds	1
  1697  000024                     ?_fround:
  1698                           	opt stack 0
  1699  000024                     ?_scale:
  1700                           	opt stack 0
  1701  000024                     ?___ftneg:
  1702                           	opt stack 0
  1703  000024                     ?___fttol:
  1704                           	opt stack 0
  1705  000024                     ___ftneg@f1:
  1706                           	opt stack 0
  1707  000024                     ___fttol@f1:
  1708                           	opt stack 0
  1709                           
  1710                           ; 3 bytes @ 0x23
  1711  000024                     	ds	2
  1712  000026                     indexDoMenorValor@index:
  1713                           	opt stack 0
  1714                           
  1715                           ; 2 bytes @ 0x25
  1716  000026                     	ds	1
  1717  000027                     _fround$1470:
  1718                           	opt stack 0
  1719  000027                     _scale$1471:
  1720                           	opt stack 0
  1721                           
  1722                           ; 3 bytes @ 0x26
  1723  000027                     	ds	1
  1724  000028                     ??___fttol:
  1725  000028                     indexDoMenorValor@contador:
  1726                           	opt stack 0
  1727                           
  1728                           ; 2 bytes @ 0x27
  1729  000028                     	ds	2
  1730  00002A                     scale@scl:
  1731                           	opt stack 0
  1732  00002A                     _fround$1469:
  1733                           	opt stack 0
  1734                           
  1735                           ; 3 bytes @ 0x29
  1736  00002A                     	ds	3
  1737  00002D                     fround@prec:
  1738                           	opt stack 0
  1739  00002D                     ___fttol@sign1:
  1740                           	opt stack 0
  1741                           
  1742                           ; 1 bytes @ 0x2C
  1743  00002D                     	ds	1
  1744  00002E                     ?___ftadd:
  1745                           	opt stack 0
  1746  00002E                     ___ftadd@f1:
  1747                           	opt stack 0
  1748  00002E                     ___fttol@lval:
  1749                           	opt stack 0
  1750                           
  1751                           ; 4 bytes @ 0x2D
  1752  00002E                     	ds	3
  1753  000031                     ___ftadd@f2:
  1754                           	opt stack 0
  1755                           
  1756                           ; 3 bytes @ 0x30
  1757  000031                     	ds	1
  1758  000032                     ___fttol@exp1:
  1759                           	opt stack 0
  1760                           
  1761                           ; 1 bytes @ 0x31
  1762  000032                     	ds	2
  1763  000034                     ??___ftadd:
  1764                           
  1765                           ; 1 bytes @ 0x33
  1766  000034                     	ds	3
  1767  000037                     ___ftadd@sign:
  1768                           	opt stack 0
  1769                           
  1770                           ; 1 bytes @ 0x36
  1771  000037                     	ds	1
  1772  000038                     ___ftadd@exp2:
  1773                           	opt stack 0
  1774                           
  1775                           ; 1 bytes @ 0x37
  1776  000038                     	ds	1
  1777  000039                     ___ftadd@exp1:
  1778                           	opt stack 0
  1779                           
  1780                           ; 1 bytes @ 0x38
  1781  000039                     	ds	1
  1782  00003A                     ?___ftdiv:
  1783                           	opt stack 0
  1784  00003A                     ?___ftsub:
  1785                           	opt stack 0
  1786  00003A                     ___ftdiv@f1:
  1787                           	opt stack 0
  1788  00003A                     ___ftsub@f1:
  1789                           	opt stack 0
  1790                           
  1791                           ; 3 bytes @ 0x39
  1792  00003A                     	ds	3
  1793  00003D                     ___ftdiv@f2:
  1794                           	opt stack 0
  1795  00003D                     ___ftsub@f2:
  1796                           	opt stack 0
  1797                           
  1798                           ; 3 bytes @ 0x3C
  1799  00003D                     	ds	3
  1800  000040                     ??___ftdiv:
  1801  000040                     ?_sprintf:
  1802                           	opt stack 0
  1803  000040                     sprintf@sp:
  1804                           	opt stack 0
  1805                           
  1806                           ; 2 bytes @ 0x3F
  1807  000040                     	ds	2
  1808  000042                     sprintf@f:
  1809                           	opt stack 0
  1810                           
  1811                           ; 2 bytes @ 0x41
  1812  000042                     	ds	1
  1813  000043                     ___ftdiv@cntr:
  1814                           	opt stack 0
  1815                           
  1816                           ; 1 bytes @ 0x42
  1817  000043                     	ds	1
  1818  000044                     ___ftdiv@f3:
  1819                           	opt stack 0
  1820                           
  1821                           ; 3 bytes @ 0x43
  1822  000044                     	ds	3
  1823  000047                     ??_sprintf:
  1824  000047                     ___ftdiv@exp:
  1825                           	opt stack 0
  1826                           
  1827                           ; 1 bytes @ 0x46
  1828  000047                     	ds	1
  1829  000048                     ___ftdiv@sign:
  1830                           	opt stack 0
  1831                           
  1832                           ; 1 bytes @ 0x47
  1833  000048                     	ds	5
  1834  00004D                     _sprintf$1472:
  1835                           	opt stack 0
  1836                           
  1837                           ; 3 bytes @ 0x4C
  1838  00004D                     	ds	3
  1839  000050                     sprintf@ap:
  1840                           	opt stack 0
  1841                           
  1842                           ; 2 bytes @ 0x4F
  1843  000050                     	ds	2
  1844  000052                     sprintf@flag:
  1845                           	opt stack 0
  1846                           
  1847                           ; 2 bytes @ 0x51
  1848  000052                     	ds	2
  1849  000054                     sprintf@prec:
  1850                           	opt stack 0
  1851                           
  1852                           ; 2 bytes @ 0x53
  1853  000054                     	ds	2
  1854  000056                     sprintf@val:
  1855                           	opt stack 0
  1856                           
  1857                           ; 4 bytes @ 0x55
  1858  000056                     	ds	4
  1859  00005A                     sprintf@exp:
  1860                           	opt stack 0
  1861                           
  1862                           ; 2 bytes @ 0x59
  1863  00005A                     	ds	2
  1864  00005C                     sprintf@tmpval:
  1865                           	opt stack 0
  1866                           
  1867                           ; 4 bytes @ 0x5B
  1868  00005C                     	ds	4
  1869  000060                     sprintf@fval:
  1870                           	opt stack 0
  1871                           
  1872                           ; 3 bytes @ 0x5F
  1873  000060                     	ds	3
  1874  000063                     sprintf@c:
  1875                           	opt stack 0
  1876                           
  1877                           ; 1 bytes @ 0x62
  1878  000063                     	ds	1
  1879  000064                     converterIntParaString@valorParaSerConvertido:
  1880                           	opt stack 0
  1881  000064                     converterFloatParaString@valorParaSerConvertido:
  1882                           	opt stack 0
  1883                           
  1884                           ; 3 bytes @ 0x63
  1885  000064                     	ds	2
  1886  000066                     converterIntParaString@string:
  1887                           	opt stack 0
  1888                           
  1889                           ; 7 bytes @ 0x65
  1890  000066                     	ds	1
  1891  000067                     converterFloatParaString@string:
  1892                           	opt stack 0
  1893                           
  1894                           ; 10 bytes @ 0x66
  1895  000067                     	ds	10
  1896  000071                     i2escreverStringUart@string:
  1897                           	opt stack 0
  1898                           
  1899                           ; 2 bytes @ 0x70
  1900  000071                     	ds	2
  1901  000073                     ??i2_escreverStringUart:
  1902                           
  1903                           ; 1 bytes @ 0x72
  1904  000073                     	ds	2
  1905  000075                     i2escreverStringUart@tamanhoDaStr:
  1906                           	opt stack 0
  1907                           
  1908                           ; 2 bytes @ 0x74
  1909  000075                     	ds	2
  1910  000077                     i2escreverStringUart@contador:
  1911                           	opt stack 0
  1912                           
  1913                           ; 2 bytes @ 0x76
  1914  000077                     	ds	2
  1915                           postinc0	equ	0xFEE
  1916                           wreg	equ	0xFE8
  1917                           
  1918 ;;
  1919 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1920 ;;
  1921 ;; *************** function _main *****************
  1922 ;; Defined at:
  1923 ;;		line 48 in file "aplicacao.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;		None
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;		None
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1941 ;;Total ram usage:        2 bytes
  1942 ;; Hardware stack levels required when called:    8
  1943 ;; This function calls:
  1944 ;;		_configureAdc
  1945 ;;		_configureGpios
  1946 ;;		_configureInterrupts
  1947 ;;		_configureTimer0
  1948 ;;		_configureUart
  1949 ;;		_desabilitarTimer0
  1950 ;;		_escreverStringUart
  1951 ;;		_habilitarTimer0
  1952 ;;		_sinalizacaoBeep
  1953 ;; This function is called by:
  1954 ;;		Startup code after reset
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text0
  1959  00253C                     __ptext0:
  1960                           	opt stack 0
  1961  00253C                     _main:
  1962                           	opt stack 23
  1963                           
  1964                           ;aplicacao.c: 50: _delay((unsigned long)((1000)*(1000000/4000.0)));
  1965                           
  1966                           ;incstack = 0
  1967  00253C  0E02               	movlw	2
  1968  00253E  0101               	movlb	1	; () banked
  1969  002540  6F0F               	movwf	(??_main+1)& (0+255),b
  1970  002542  0E45               	movlw	69
  1971  002544  0101               	movlb	1	; () banked
  1972  002546  6F0E               	movwf	??_main& (0+255),b
  1973  002548  0EA9               	movlw	169
  1974  00254A                     u3617:
  1975  00254A  2EE8               	decfsz	wreg,f,c
  1976  00254C  D7FE               	bra	u3617
  1977  00254E  2F0E               	decfsz	??_main& (0+255),f,b
  1978  002550  D7FC               	bra	u3617
  1979  002552  2F0F               	decfsz	(??_main+1)& (0+255),f,b
  1980  002554  D7FA               	bra	u3617
  1981  002556  D000               	nop2	
  1982                           
  1983                           ;aplicacao.c: 52: configureAdc();
  1984  002558  ECDA  F015         	call	_configureAdc	;wreg free
  1985                           
  1986                           ;aplicacao.c: 53: configureUart();
  1987  00255C  ECF5  F015         	call	_configureUart	;wreg free
  1988                           
  1989                           ;aplicacao.c: 54: configureGpios();
  1990  002560  ECAC  F016         	call	_configureGpios	;wreg free
  1991                           
  1992                           ;aplicacao.c: 55: configureTimer0();
  1993  002564  EC51  F016         	call	_configureTimer0	;wreg free
  1994                           
  1995                           ;aplicacao.c: 56: configureInterrupts();
  1996  002568  ECCE  F016         	call	_configureInterrupts	;wreg free
  1997                           
  1998                           ;aplicacao.c: 57: escreverStringUart("\n\n\n\n*** Jiga de testes da bateria EVO... ***\n
      +                          ");
  1999  00256C  0E0A               	movlw	low STR_3
  2000  00256E  0101               	movlb	1	; () banked
  2001  002570  6F06               	movwf	escreverStringUart@string& (0+255),b
  2002  002572  0EFD               	movlw	high STR_3
  2003  002574  0101               	movlb	1	; () banked
  2004  002576  6F07               	movwf	(escreverStringUart@string+1)& (0+255),b
  2005  002578  ECEF  F012         	call	_escreverStringUart	;wreg free
  2006                           
  2007                           ;aplicacao.c: 58: escreverStringUart("\n*** Pressione o botao para iniciar os testes! **
      +                          *\n");
  2008  00257C  0ED6               	movlw	low (STR_50+3)
  2009  00257E  0101               	movlb	1	; () banked
  2010  002580  6F06               	movwf	escreverStringUart@string& (0+255),b
  2011  002582  0EFC               	movlw	high (STR_50+3)
  2012  002584  0101               	movlb	1	; () banked
  2013  002586  6F07               	movwf	(escreverStringUart@string+1)& (0+255),b
  2014  002588  ECEF  F012         	call	_escreverStringUart	;wreg free
  2015                           
  2016                           ;aplicacao.c: 59: desabilitarTimer0();
  2017  00258C  ECD5  F016         	call	_desabilitarTimer0	;wreg free
  2018  002590                     l3816:
  2019                           
  2020                           ;aplicacao.c: 62: if(PORTBbits.RB2 == 0) {
  2021  002590  B481               	btfsc	3969,2,c	;volatile
  2022  002592  D7FE               	goto	l3816
  2023                           
  2024                           ;aplicacao.c: 63: _delay((unsigned long)((20)*(1000000/4000.0)));
  2025  002594  0E07               	movlw	7
  2026  002596  0101               	movlb	1	; () banked
  2027  002598  6F0E               	movwf	??_main& (0+255),b
  2028  00259A  0E7D               	movlw	125
  2029  00259C                     u3627:
  2030  00259C  2EE8               	decfsz	wreg,f,c
  2031  00259E  D7FE               	bra	u3627
  2032  0025A0  2F0E               	decfsz	??_main& (0+255),f,b
  2033  0025A2  D7FC               	bra	u3627
  2034                           
  2035                           ;aplicacao.c: 64: if(PORTBbits.RB2 == 0) {
  2036  0025A4  B481               	btfsc	3969,2,c	;volatile
  2037  0025A6  D7F4               	goto	l3816
  2038  0025A8                     l165:
  2039  0025A8  A481               	btfss	3969,2,c	;volatile
  2040  0025AA  D7FE               	goto	l165
  2041                           
  2042                           ;aplicacao.c: 66: sinalizacaoBeep();
  2043  0025AC  EC6D  F016         	call	_sinalizacaoBeep	;wreg free
  2044                           
  2045                           ;aplicacao.c: 67: PORTBbits.RB4 = 0;
  2046  0025B0  9881               	bcf	3969,4,c	;volatile
  2047                           
  2048                           ;aplicacao.c: 68: PORTBbits.RB6 = 0;
  2049  0025B2  9C81               	bcf	3969,6,c	;volatile
  2050                           
  2051                           ;aplicacao.c: 69: PORTBbits.RB5 = 1;
  2052  0025B4  8A81               	bsf	3969,5,c	;volatile
  2053                           
  2054                           ;aplicacao.c: 70: escreverStringUart("\n*** Iniciando testes... ***\n");
  2055  0025B6  0ED7               	movlw	low STR_5
  2056  0025B8  0101               	movlb	1	; () banked
  2057  0025BA  6F06               	movwf	escreverStringUart@string& (0+255),b
  2058  0025BC  0EFE               	movlw	high STR_5
  2059  0025BE  0101               	movlb	1	; () banked
  2060  0025C0  6F07               	movwf	(escreverStringUart@string+1)& (0+255),b
  2061  0025C2  ECEF  F012         	call	_escreverStringUart	;wreg free
  2062                           
  2063                           ;aplicacao.c: 71: statusDaBateria = 0;
  2064  0025C6  0E00               	movlw	0
  2065  0025C8  0100               	movlb	0	; () banked
  2066  0025CA  6FC4               	movwf	_statusDaBateria& (0+255),b
  2067                           
  2068                           ; BSR set to: 0
  2069                           ;aplicacao.c: 72: tempoEmSegundos = 0;
  2070  0025CC  0E00               	movlw	0
  2071  0025CE  0100               	movlb	0	; () banked
  2072  0025D0  6FC5               	movwf	_tempoEmSegundos& (0+255),b
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;aplicacao.c: 73: contador = 0;
  2076  0025D2  0E00               	movlw	0
  2077  0025D4  0100               	movlb	0	; () banked
  2078  0025D6  6FC6               	movwf	_contador& (0+255),b
  2079                           
  2080                           ; BSR set to: 0
  2081                           ;aplicacao.c: 74: habilitarTimer0();
  2082  0025D8  ECD3  F016         	call	_habilitarTimer0	;wreg free
  2083  0025DC  D7D9               	goto	l3816
  2084  0025DE                     __end_of_main:
  2085                           	opt stack 0
  2086                           postinc0	equ	0xFEE
  2087                           wreg	equ	0xFE8
  2088                           
  2089 ;; *************** function _sinalizacaoBeep *****************
  2090 ;; Defined at:
  2091 ;;		line 24 in file "buzzer.h"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;		None
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;		None
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      void 
  2098 ;; Registers used:
  2099 ;;		wreg
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;Total ram usage:        1 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; Hardware stack levels required when called:    6
  2112 ;; This function calls:
  2113 ;;		Nothing
  2114 ;; This function is called by:
  2115 ;;		_main
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text1
  2120  002CDA                     __ptext1:
  2121                           	opt stack 0
  2122  002CDA                     _sinalizacaoBeep:
  2123                           	opt stack 24
  2124                           
  2125                           ;buzzer.h: 25: PORTBbits.RB3 = 1;
  2126                           
  2127                           ;incstack = 0
  2128  002CDA  8681               	bsf	3969,3,c	;volatile
  2129                           
  2130                           ;buzzer.h: 26: _delay((unsigned long)((200)*(1000000/4000.0)));
  2131  002CDC  0E41               	movlw	65
  2132  002CDE  0101               	movlb	1	; () banked
  2133  002CE0  6F00               	movwf	??_sinalizacaoBeep& (0+255),b
  2134  002CE2  0EEE               	movlw	238
  2135  002CE4                     u3637:
  2136  002CE4  2EE8               	decfsz	wreg,f,c
  2137  002CE6  D7FE               	bra	u3637
  2138  002CE8  2F00               	decfsz	??_sinalizacaoBeep& (0+255),f,b
  2139  002CEA  D7FC               	bra	u3637
  2140  002CEC  F000               	nop	
  2141                           
  2142                           ;buzzer.h: 27: PORTBbits.RB3 = 0;
  2143  002CEE  9681               	bcf	3969,3,c	;volatile
  2144  002CF0  0012               	return		;funcret
  2145  002CF2                     __end_of_sinalizacaoBeep:
  2146                           	opt stack 0
  2147                           postinc0	equ	0xFEE
  2148                           wreg	equ	0xFE8
  2149                           
  2150 ;; *************** function _habilitarTimer0 *****************
  2151 ;; Defined at:
  2152 ;;		line 34 in file "timer0.h"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;		None
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;		None
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		None
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2170 ;;Total ram usage:        0 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    6
  2173 ;; This function calls:
  2174 ;;		Nothing
  2175 ;; This function is called by:
  2176 ;;		_main
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           	psect	text2
  2181  002DA6                     __ptext2:
  2182                           	opt stack 0
  2183  002DA6                     _habilitarTimer0:
  2184                           	opt stack 24
  2185                           
  2186                           ;timer0.h: 35: T0CONbits.TMR0ON = 1;
  2187                           
  2188                           ;incstack = 0
  2189  002DA6  8ED5               	bsf	4053,7,c	;volatile
  2190  002DA8  0012               	return		;funcret
  2191  002DAA                     __end_of_habilitarTimer0:
  2192                           	opt stack 0
  2193                           postinc0	equ	0xFEE
  2194                           wreg	equ	0xFE8
  2195                           
  2196 ;; *************** function _escreverStringUart *****************
  2197 ;; Defined at:
  2198 ;;		line 104 in file "uart.h"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;  string          2    6[BANK1 ] PTR unsigned char 
  2201 ;;		 -> STR_53(55), STR_52(29), STR_51(29), STR_50(55), 
  2202 ;;		 -> STR_49(29), STR_48(28), STR_47(43), STR_46(42), 
  2203 ;;		 -> STR_45(4), STR_44(17), STR_43(41), STR_42(40), 
  2204 ;;		 -> STR_41(4), STR_40(23), STR_39(3), STR_38(16), 
  2205 ;;		 -> STR_37(3), STR_36(11), STR_35(6), STR_34(9), 
  2206 ;;		 -> STR_33(4), STR_32(68), STR_31(34), STR_30(30), 
  2207 ;;		 -> STR_29(40), STR_28(39), STR_27(4), STR_26(17), 
  2208 ;;		 -> STR_25(38), STR_24(37), STR_23(4), STR_22(16), 
  2209 ;;		 -> STR_21(3), STR_20(11), STR_19(6), STR_18(9), 
  2210 ;;		 -> STR_17(4), STR_16(68), STR_15(31), STR_14(27), 
  2211 ;;		 -> STR_13(25), STR_12(26), STR_11(4), STR_10(16), 
  2212 ;;		 -> STR_9(3), STR_8(9), STR_7(4), RAM(3967), 
  2213 ;;		 -> STR_6(70), STR_5(30), STR_4(52), STR_3(46), 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  contador        2   12[BANK1 ] int 
  2216 ;;  tamanhoDaStr    2   10[BANK1 ] int 
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2226 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2227 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2228 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2229 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2230 ;;Total ram usage:        8 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:    7
  2233 ;; This function calls:
  2234 ;;		_escreverCharUart
  2235 ;;		_tamanhoDaString
  2236 ;; This function is called by:
  2237 ;;		_main
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           	psect	text3
  2242  0025DE                     __ptext3:
  2243                           	opt stack 0
  2244  0025DE                     _escreverStringUart:
  2245                           	opt stack 23
  2246                           
  2247                           ;uart.h: 105: int contador = 0;
  2248                           
  2249                           ;incstack = 0
  2250  0025DE  0E00               	movlw	0
  2251  0025E0  0101               	movlb	1	; () banked
  2252  0025E2  6F0D               	movwf	(escreverStringUart@contador+1)& (0+255),b
  2253  0025E4  0E00               	movlw	0
  2254  0025E6  6F0C               	movwf	escreverStringUart@contador& (0+255),b
  2255                           
  2256                           ; BSR set to: 1
  2257                           ;uart.h: 106: int tamanhoDaStr = tamanhoDaString(string);
  2258  0025E8  C106  F100         	movff	escreverStringUart@string,tamanhoDaString@string
  2259  0025EC  C107  F101         	movff	escreverStringUart@string+1,tamanhoDaString@string+1
  2260  0025F0  ECA6  F014         	call	_tamanhoDaString	;wreg free
  2261  0025F4  C100  F10A         	movff	?_tamanhoDaString,escreverStringUart@tamanhoDaStr
  2262  0025F8  C101  F10B         	movff	?_tamanhoDaString+1,escreverStringUart@tamanhoDaStr+1
  2263                           
  2264                           ;uart.h: 108: for(contador = 0; contador < tamanhoDaStr; contador++) {
  2265  0025FC  0E00               	movlw	0
  2266  0025FE  0101               	movlb	1	; () banked
  2267  002600  6F0D               	movwf	(escreverStringUart@contador+1)& (0+255),b
  2268  002602  0E00               	movlw	0
  2269  002604  6F0C               	movwf	escreverStringUart@contador& (0+255),b
  2270  002606  D022               	goto	l3772
  2271  002608                     l3768:
  2272                           
  2273                           ; BSR set to: 1
  2274                           ;uart.h: 109: escreverCharUart(string[contador]);
  2275  002608  0101               	movlb	1	; () banked
  2276  00260A  510C               	movf	escreverStringUart@contador& (0+255),w,b
  2277  00260C  0101               	movlb	1	; () banked
  2278  00260E  2506               	addwf	escreverStringUart@string& (0+255),w,b
  2279  002610  0101               	movlb	1	; () banked
  2280  002612  6F08               	movwf	??_escreverStringUart& (0+255),b
  2281  002614  0101               	movlb	1	; () banked
  2282  002616  510D               	movf	(escreverStringUart@contador+1)& (0+255),w,b
  2283  002618  0101               	movlb	1	; () banked
  2284  00261A  2107               	addwfc	(escreverStringUart@string+1)& (0+255),w,b
  2285  00261C  0101               	movlb	1	; () banked
  2286  00261E  6F09               	movwf	(??_escreverStringUart+1)& (0+255),b
  2287  002620  C108  FFF6         	movff	??_escreverStringUart,tblptrl
  2288  002624  C109  FFF7         	movff	??_escreverStringUart+1,tblptrh
  2289  002628  0E00               	movlw	low (__mediumconst shr (0+16))
  2290  00262A  6EF8               	movwf	tblptru,c
  2291  00262C  0E0F               	movlw	(high __ramtop+-1)
  2292  00262E  64F7               	cpfsgt	tblptrh,c
  2293  002630  D003               	bra	u3567
  2294  002632  0008               	tblrd		*
  2295  002634  50F5               	movf	tablat,w,c
  2296  002636  D005               	bra	u3560
  2297  002638                     u3567:
  2298  002638  CFF6 FFE9          	movff	tblptrl,fsr0l
  2299  00263C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2300  002640  50EF               	movf	indf0,w,c
  2301  002642                     u3560:
  2302  002642  ECB5  F016         	call	_escreverCharUart
  2303  002646  0101               	movlb	1	; () banked
  2304  002648  4B0C               	infsnz	escreverStringUart@contador& (0+255),f,b
  2305  00264A  2B0D               	incf	(escreverStringUart@contador+1)& (0+255),f,b
  2306  00264C                     l3772:
  2307                           
  2308                           ; BSR set to: 1
  2309  00264C  0101               	movlb	1	; () banked
  2310  00264E  510A               	movf	escreverStringUart@tamanhoDaStr& (0+255),w,b
  2311  002650  0101               	movlb	1	; () banked
  2312  002652  5D0C               	subwf	escreverStringUart@contador& (0+255),w,b
  2313  002654  0101               	movlb	1	; () banked
  2314  002656  510D               	movf	(escreverStringUart@contador+1)& (0+255),w,b
  2315  002658  0A80               	xorlw	128
  2316  00265A  0101               	movlb	1	; () banked
  2317  00265C  6F08               	movwf	??_escreverStringUart& (0+255),b
  2318  00265E  0101               	movlb	1	; () banked
  2319  002660  510B               	movf	(escreverStringUart@tamanhoDaStr+1)& (0+255),w,b
  2320  002662  0A80               	xorlw	128
  2321  002664  0101               	movlb	1	; () banked
  2322  002666  5908               	subwfb	??_escreverStringUart& (0+255),w,b
  2323  002668  B0D8               	btfsc	status,0,c
  2324  00266A  0012               	return	
  2325  00266C  D7CD               	goto	l3768
  2326  00266E                     __end_of_escreverStringUart:
  2327                           	opt stack 0
  2328                           tblptru	equ	0xFF8
  2329                           tblptrh	equ	0xFF7
  2330                           tblptrl	equ	0xFF6
  2331                           tablat	equ	0xFF5
  2332                           indf0	equ	0xFEF
  2333                           postinc0	equ	0xFEE
  2334                           fsr0h	equ	0xFEA
  2335                           fsr0l	equ	0xFE9
  2336                           wreg	equ	0xFE8
  2337                           status	equ	0xFD8
  2338                           
  2339 ;; *************** function _tamanhoDaString *****************
  2340 ;; Defined at:
  2341 ;;		line 92 in file "uart.h"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  string          2    0[BANK1 ] PTR unsigned char 
  2344 ;;		 -> STR_53(55), STR_52(29), STR_51(29), STR_50(55), 
  2345 ;;		 -> STR_49(29), STR_48(28), STR_47(43), STR_46(42), 
  2346 ;;		 -> STR_45(4), STR_44(17), STR_43(41), STR_42(40), 
  2347 ;;		 -> STR_41(4), STR_40(23), STR_39(3), STR_38(16), 
  2348 ;;		 -> STR_37(3), STR_36(11), STR_35(6), STR_34(9), 
  2349 ;;		 -> STR_33(4), STR_32(68), STR_31(34), STR_30(30), 
  2350 ;;		 -> STR_29(40), STR_28(39), STR_27(4), STR_26(17), 
  2351 ;;		 -> STR_25(38), STR_24(37), STR_23(4), STR_22(16), 
  2352 ;;		 -> STR_21(3), STR_20(11), STR_19(6), STR_18(9), 
  2353 ;;		 -> STR_17(4), STR_16(68), STR_15(31), STR_14(27), 
  2354 ;;		 -> STR_13(25), STR_12(26), STR_11(4), STR_10(16), 
  2355 ;;		 -> STR_9(3), STR_8(9), STR_7(4), RAM(3967), 
  2356 ;;		 -> STR_6(70), STR_5(30), STR_4(52), STR_3(46), 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  lenght          2    4[BANK1 ] int 
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  2    0[BANK1 ] int 
  2361 ;; Registers used:
  2362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2368 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2372 ;;Total ram usage:        6 bytes
  2373 ;; Hardware stack levels used:    1
  2374 ;; Hardware stack levels required when called:    6
  2375 ;; This function calls:
  2376 ;;		Nothing
  2377 ;; This function is called by:
  2378 ;;		_escreverStringUart
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text4
  2383  00294C                     __ptext4:
  2384                           	opt stack 0
  2385  00294C                     _tamanhoDaString:
  2386                           	opt stack 23
  2387                           
  2388                           ;uart.h: 93: int lenght = 0;
  2389                           
  2390                           ; BSR set to: 1
  2391                           ;incstack = 0
  2392  00294C  0E00               	movlw	0
  2393  00294E  0101               	movlb	1	; () banked
  2394  002950  6F05               	movwf	(tamanhoDaString@lenght+1)& (0+255),b
  2395  002952  0E00               	movlw	0
  2396  002954  6F04               	movwf	tamanhoDaString@lenght& (0+255),b
  2397                           
  2398                           ;uart.h: 94: while(string[lenght] != '\0') {
  2399  002956  D003               	goto	l3732
  2400  002958                     l3730:
  2401                           
  2402                           ;uart.h: 95: lenght++;
  2403  002958  0101               	movlb	1	; () banked
  2404  00295A  4B04               	infsnz	tamanhoDaString@lenght& (0+255),f,b
  2405  00295C  2B05               	incf	(tamanhoDaString@lenght+1)& (0+255),f,b
  2406  00295E                     l3732:
  2407                           
  2408                           ; BSR set to: 1
  2409  00295E  0101               	movlb	1	; () banked
  2410  002960  5104               	movf	tamanhoDaString@lenght& (0+255),w,b
  2411  002962  0101               	movlb	1	; () banked
  2412  002964  2500               	addwf	tamanhoDaString@string& (0+255),w,b
  2413  002966  0101               	movlb	1	; () banked
  2414  002968  6F02               	movwf	??_tamanhoDaString& (0+255),b
  2415  00296A  0101               	movlb	1	; () banked
  2416  00296C  5105               	movf	(tamanhoDaString@lenght+1)& (0+255),w,b
  2417  00296E  0101               	movlb	1	; () banked
  2418  002970  2101               	addwfc	(tamanhoDaString@string+1)& (0+255),w,b
  2419  002972  0101               	movlb	1	; () banked
  2420  002974  6F03               	movwf	(??_tamanhoDaString+1)& (0+255),b
  2421  002976  C102  FFF6         	movff	??_tamanhoDaString,tblptrl
  2422  00297A  C103  FFF7         	movff	??_tamanhoDaString+1,tblptrh
  2423  00297E  0E00               	movlw	low (__mediumconst shr (0+16))
  2424  002980  6EF8               	movwf	tblptru,c
  2425  002982  0E0F               	movlw	(high __ramtop+-1)
  2426  002984  64F7               	cpfsgt	tblptrh,c
  2427  002986  D003               	bra	u3547
  2428  002988  0008               	tblrd		*
  2429  00298A  50F5               	movf	tablat,w,c
  2430  00298C  D005               	bra	u3540
  2431  00298E                     u3547:
  2432  00298E  CFF6 FFE9          	movff	tblptrl,fsr0l
  2433  002992  CFF7 FFEA          	movff	tblptrh,fsr0h
  2434  002996  50EF               	movf	indf0,w,c
  2435  002998                     u3540:
  2436  002998  0900               	iorlw	0
  2437  00299A  A4D8               	btfss	status,2,c
  2438  00299C  D7DD               	goto	l3730
  2439                           
  2440                           ;uart.h: 96: }
  2441                           ;uart.h: 97: return lenght;
  2442  00299E  C104  F100         	movff	tamanhoDaString@lenght,?_tamanhoDaString
  2443  0029A2  C105  F101         	movff	tamanhoDaString@lenght+1,?_tamanhoDaString+1
  2444  0029A6  0012               	return		;funcret
  2445  0029A8                     __end_of_tamanhoDaString:
  2446                           	opt stack 0
  2447                           tblptru	equ	0xFF8
  2448                           tblptrh	equ	0xFF7
  2449                           tblptrl	equ	0xFF6
  2450                           tablat	equ	0xFF5
  2451                           indf0	equ	0xFEF
  2452                           postinc0	equ	0xFEE
  2453                           fsr0h	equ	0xFEA
  2454                           fsr0l	equ	0xFE9
  2455                           wreg	equ	0xFE8
  2456                           status	equ	0xFD8
  2457                           
  2458 ;; *************** function _escreverCharUart *****************
  2459 ;; Defined at:
  2460 ;;		line 50 in file "uart.h"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  caracter        1    wreg     unsigned char 
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;  caracter        1    0[BANK1 ] unsigned char 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;Total ram usage:        1 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; Hardware stack levels required when called:    6
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		_escreverStringUart
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text5
  2489  002D6A                     __ptext5:
  2490                           	opt stack 0
  2491  002D6A                     _escreverCharUart:
  2492                           	opt stack 23
  2493                           
  2494                           ;incstack = 0
  2495                           ;escreverCharUart@caracter stored from wreg
  2496  002D6A  0101               	movlb	1	; () banked
  2497  002D6C  6F00               	movwf	escreverCharUart@caracter& (0+255),b
  2498                           
  2499                           ;uart.h: 51: TXREG = caracter;
  2500  002D6E  C100  FFAD         	movff	escreverCharUart@caracter,4013	;volatile
  2501  002D72                     l75:
  2502  002D72  B2AC               	btfsc	4012,1,c	;volatile
  2503  002D74  0012               	return	
  2504  002D76  D7FD               	goto	l75
  2505  002D78                     __end_of_escreverCharUart:
  2506                           	opt stack 0
  2507                           tblptru	equ	0xFF8
  2508                           tblptrh	equ	0xFF7
  2509                           tblptrl	equ	0xFF6
  2510                           tablat	equ	0xFF5
  2511                           indf0	equ	0xFEF
  2512                           postinc0	equ	0xFEE
  2513                           fsr0h	equ	0xFEA
  2514                           fsr0l	equ	0xFE9
  2515                           wreg	equ	0xFE8
  2516                           status	equ	0xFD8
  2517                           
  2518 ;; *************** function _desabilitarTimer0 *****************
  2519 ;; Defined at:
  2520 ;;		line 38 in file "timer0.h"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;		None
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;		None
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  1    wreg      void 
  2527 ;; Registers used:
  2528 ;;		None
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;Total ram usage:        0 bytes
  2539 ;; Hardware stack levels used:    1
  2540 ;; Hardware stack levels required when called:    6
  2541 ;; This function calls:
  2542 ;;		Nothing
  2543 ;; This function is called by:
  2544 ;;		_main
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text6
  2549  002DAA                     __ptext6:
  2550                           	opt stack 0
  2551  002DAA                     _desabilitarTimer0:
  2552                           	opt stack 24
  2553                           
  2554                           ;timer0.h: 39: T0CONbits.TMR0ON = 0;
  2555                           
  2556                           ;incstack = 0
  2557  002DAA  9ED5               	bcf	4053,7,c	;volatile
  2558  002DAC  0012               	return		;funcret
  2559  002DAE                     __end_of_desabilitarTimer0:
  2560                           	opt stack 0
  2561                           tblptru	equ	0xFF8
  2562                           tblptrh	equ	0xFF7
  2563                           tblptrl	equ	0xFF6
  2564                           tablat	equ	0xFF5
  2565                           indf0	equ	0xFEF
  2566                           postinc0	equ	0xFEE
  2567                           fsr0h	equ	0xFEA
  2568                           fsr0l	equ	0xFE9
  2569                           wreg	equ	0xFE8
  2570                           status	equ	0xFD8
  2571                           
  2572 ;; *************** function _configureUart *****************
  2573 ;; Defined at:
  2574 ;;		line 15 in file "uart.h"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;		None
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;		None
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		wreg, status,2
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;Total ram usage:        0 bytes
  2593 ;; Hardware stack levels used:    1
  2594 ;; Hardware stack levels required when called:    6
  2595 ;; This function calls:
  2596 ;;		Nothing
  2597 ;; This function is called by:
  2598 ;;		_main
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text7
  2603  002BEA                     __ptext7:
  2604                           	opt stack 0
  2605  002BEA                     _configureUart:
  2606                           	opt stack 24
  2607                           
  2608                           ;uart.h: 20: TRISCbits.TRISC7 = 1;
  2609                           
  2610                           ;incstack = 0
  2611  002BEA  8E94               	bsf	3988,7,c	;volatile
  2612                           
  2613                           ;uart.h: 21: TRISCbits.TRISC6 = 1;
  2614  002BEC  8C94               	bsf	3988,6,c	;volatile
  2615                           
  2616                           ;uart.h: 23: TXSTAbits.CSRC = 0;
  2617  002BEE  9EAC               	bcf	4012,7,c	;volatile
  2618                           
  2619                           ;uart.h: 24: TXSTAbits.TX9 = 0;
  2620  002BF0  9CAC               	bcf	4012,6,c	;volatile
  2621                           
  2622                           ;uart.h: 25: TXSTAbits.TXEN = 1;
  2623  002BF2  8AAC               	bsf	4012,5,c	;volatile
  2624                           
  2625                           ;uart.h: 26: TXSTAbits.SYNC = 0;
  2626  002BF4  98AC               	bcf	4012,4,c	;volatile
  2627                           
  2628                           ;uart.h: 27: TXSTAbits.SENDB = 0;
  2629  002BF6  96AC               	bcf	4012,3,c	;volatile
  2630                           
  2631                           ;uart.h: 28: TXSTAbits.BRGH = 1;
  2632  002BF8  84AC               	bsf	4012,2,c	;volatile
  2633                           
  2634                           ;uart.h: 30: RCSTAbits.SPEN = 1;
  2635  002BFA  8EAB               	bsf	4011,7,c	;volatile
  2636                           
  2637                           ;uart.h: 31: RCSTAbits.RX9 = 0;
  2638  002BFC  9CAB               	bcf	4011,6,c	;volatile
  2639                           
  2640                           ;uart.h: 32: RCSTAbits.SREN = 0;
  2641  002BFE  9AAB               	bcf	4011,5,c	;volatile
  2642                           
  2643                           ;uart.h: 33: RCSTAbits.CREN = 1;
  2644  002C00  88AB               	bsf	4011,4,c	;volatile
  2645                           
  2646                           ;uart.h: 34: RCSTAbits.ADDEN = 0;
  2647  002C02  96AB               	bcf	4011,3,c	;volatile
  2648                           
  2649                           ;uart.h: 36: BAUDCONbits.BRG16 = 1;
  2650  002C04  86B8               	bsf	4024,3,c	;volatile
  2651                           
  2652                           ;uart.h: 38: SPBRG = 25;
  2653  002C06  0E19               	movlw	25
  2654  002C08  6EAF               	movwf	4015,c	;volatile
  2655                           
  2656                           ;uart.h: 40: INTCONbits.GIE = 1;
  2657  002C0A  8EF2               	bsf	intcon,7,c	;volatile
  2658                           
  2659                           ;uart.h: 41: INTCONbits.PEIE = 1;
  2660  002C0C  8CF2               	bsf	intcon,6,c	;volatile
  2661                           
  2662                           ;uart.h: 42: PIE1bits.RCIE = 1;
  2663  002C0E  8A9D               	bsf	3997,5,c	;volatile
  2664                           
  2665                           ;uart.h: 43: PIR1bits.RCIF = 0;
  2666  002C10  9A9E               	bcf	3998,5,c	;volatile
  2667  002C12  0012               	return		;funcret
  2668  002C14                     __end_of_configureUart:
  2669                           	opt stack 0
  2670                           tblptru	equ	0xFF8
  2671                           tblptrh	equ	0xFF7
  2672                           tblptrl	equ	0xFF6
  2673                           tablat	equ	0xFF5
  2674                           intcon	equ	0xFF2
  2675                           indf0	equ	0xFEF
  2676                           postinc0	equ	0xFEE
  2677                           fsr0h	equ	0xFEA
  2678                           fsr0l	equ	0xFE9
  2679                           wreg	equ	0xFE8
  2680                           status	equ	0xFD8
  2681                           
  2682 ;; *************** function _configureTimer0 *****************
  2683 ;; Defined at:
  2684 ;;		line 23 in file "timer0.h"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;		None
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;		None
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      void 
  2691 ;; Registers used:
  2692 ;;		wreg, status,2
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;Total ram usage:        0 bytes
  2703 ;; Hardware stack levels used:    1
  2704 ;; Hardware stack levels required when called:    6
  2705 ;; This function calls:
  2706 ;;		Nothing
  2707 ;; This function is called by:
  2708 ;;		_main
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text8
  2713  002CA2                     __ptext8:
  2714                           	opt stack 0
  2715  002CA2                     _configureTimer0:
  2716                           	opt stack 24
  2717                           
  2718                           ;timer0.h: 24: T0CONbits.T08BIT = 0;
  2719                           
  2720                           ;incstack = 0
  2721  002CA2  9CD5               	bcf	4053,6,c	;volatile
  2722                           
  2723                           ;timer0.h: 25: T0CONbits.T0CS = 0;
  2724  002CA4  9AD5               	bcf	4053,5,c	;volatile
  2725                           
  2726                           ;timer0.h: 26: T0CONbits.T0SE = 1;
  2727  002CA6  88D5               	bsf	4053,4,c	;volatile
  2728                           
  2729                           ;timer0.h: 27: T0CONbits.PSA = 0;
  2730  002CA8  96D5               	bcf	4053,3,c	;volatile
  2731                           
  2732                           ;timer0.h: 28: T0CONbits.T0PS = 0b001;
  2733  002CAA  50D5               	movf	4053,w,c	;volatile
  2734  002CAC  0BF8               	andlw	-8
  2735  002CAE  0901               	iorlw	1
  2736  002CB0  6ED5               	movwf	4053,c	;volatile
  2737                           
  2738                           ;timer0.h: 29: TMR0L = 0xDB;
  2739  002CB2  0EDB               	movlw	219
  2740  002CB4  6ED6               	movwf	4054,c	;volatile
  2741                           
  2742                           ;timer0.h: 30: TMR0H = 0x0B;
  2743  002CB6  0E0B               	movlw	11
  2744  002CB8  6ED7               	movwf	4055,c	;volatile
  2745                           
  2746                           ;timer0.h: 31: T0CONbits.TMR0ON = 0;
  2747  002CBA  9ED5               	bcf	4053,7,c	;volatile
  2748  002CBC  0012               	return		;funcret
  2749  002CBE                     __end_of_configureTimer0:
  2750                           	opt stack 0
  2751                           tblptru	equ	0xFF8
  2752                           tblptrh	equ	0xFF7
  2753                           tblptrl	equ	0xFF6
  2754                           tablat	equ	0xFF5
  2755                           intcon	equ	0xFF2
  2756                           indf0	equ	0xFEF
  2757                           postinc0	equ	0xFEE
  2758                           fsr0h	equ	0xFEA
  2759                           fsr0l	equ	0xFE9
  2760                           wreg	equ	0xFE8
  2761                           status	equ	0xFD8
  2762                           
  2763 ;; *************** function _configureInterrupts *****************
  2764 ;; Defined at:
  2765 ;;		line 6 in file "interrupts.h"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;		None
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;		None
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  1    wreg      void 
  2772 ;; Registers used:
  2773 ;;		None
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;Total ram usage:        0 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; Hardware stack levels required when called:    6
  2786 ;; This function calls:
  2787 ;;		Nothing
  2788 ;; This function is called by:
  2789 ;;		_main
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text9
  2794  002D9C                     __ptext9:
  2795                           	opt stack 0
  2796  002D9C                     _configureInterrupts:
  2797                           	opt stack 24
  2798                           
  2799                           ;interrupts.h: 7: INTCONbits.GIE = 1;
  2800                           
  2801                           ;incstack = 0
  2802  002D9C  8EF2               	bsf	intcon,7,c	;volatile
  2803                           
  2804                           ;interrupts.h: 8: INTCONbits.PEIE = 1;
  2805  002D9E  8CF2               	bsf	intcon,6,c	;volatile
  2806                           
  2807                           ;interrupts.h: 9: INTCONbits.TMR0IE = 1;
  2808  002DA0  8AF2               	bsf	intcon,5,c	;volatile
  2809                           
  2810                           ;interrupts.h: 10: INTCONbits.TMR0IF = 0;
  2811  002DA2  94F2               	bcf	intcon,2,c	;volatile
  2812  002DA4  0012               	return		;funcret
  2813  002DA6                     __end_of_configureInterrupts:
  2814                           	opt stack 0
  2815                           tblptru	equ	0xFF8
  2816                           tblptrh	equ	0xFF7
  2817                           tblptrl	equ	0xFF6
  2818                           tablat	equ	0xFF5
  2819                           intcon	equ	0xFF2
  2820                           indf0	equ	0xFEF
  2821                           postinc0	equ	0xFEE
  2822                           fsr0h	equ	0xFEA
  2823                           fsr0l	equ	0xFE9
  2824                           wreg	equ	0xFE8
  2825                           status	equ	0xFD8
  2826                           
  2827 ;; *************** function _configureGpios *****************
  2828 ;; Defined at:
  2829 ;;		line 81 in file "aplicacao.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		wreg, status,2, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2847 ;;Total ram usage:        0 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    7
  2850 ;; This function calls:
  2851 ;;		_desabilitarCarregamentoDaBateria
  2852 ;;		_desabilitarDescarregamentoDaBateria
  2853 ;; This function is called by:
  2854 ;;		_main
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text10
  2859  002D58                     __ptext10:
  2860                           	opt stack 0
  2861  002D58                     _configureGpios:
  2862                           	opt stack 23
  2863                           
  2864                           ;aplicacao.c: 82: TRISB = 0b00000100;
  2865                           
  2866                           ;incstack = 0
  2867  002D58  0E04               	movlw	4
  2868  002D5A  6E93               	movwf	3987,c	;volatile
  2869                           
  2870                           ;aplicacao.c: 83: PORTB = 0b00000000;
  2871  002D5C  0E00               	movlw	0
  2872  002D5E  6E81               	movwf	3969,c	;volatile
  2873                           
  2874                           ;aplicacao.c: 85: desabilitarCarregamentoDaBateria();
  2875  002D60  EC8E  F016         	call	_desabilitarCarregamentoDaBateria	;wreg free
  2876                           
  2877                           ;aplicacao.c: 86: desabilitarDescarregamentoDaBateria();
  2878  002D64  EC84  F016         	call	_desabilitarDescarregamentoDaBateria	;wreg free
  2879  002D68  0012               	return		;funcret
  2880  002D6A                     __end_of_configureGpios:
  2881                           	opt stack 0
  2882                           tblptru	equ	0xFF8
  2883                           tblptrh	equ	0xFF7
  2884                           tblptrl	equ	0xFF6
  2885                           tablat	equ	0xFF5
  2886                           intcon	equ	0xFF2
  2887                           indf0	equ	0xFEF
  2888                           postinc0	equ	0xFEE
  2889                           fsr0h	equ	0xFEA
  2890                           fsr0l	equ	0xFE9
  2891                           wreg	equ	0xFE8
  2892                           status	equ	0xFD8
  2893                           
  2894 ;; *************** function _desabilitarDescarregamentoDaBateria *****************
  2895 ;; Defined at:
  2896 ;;		line 10 in file "controleDaBateria.h"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;		None
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;		None
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  1    wreg      void 
  2903 ;; Registers used:
  2904 ;;		wreg
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;Total ram usage:        1 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; Hardware stack levels required when called:    6
  2917 ;; This function calls:
  2918 ;;		Nothing
  2919 ;; This function is called by:
  2920 ;;		_configureGpios
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text11
  2925  002D08                     __ptext11:
  2926                           	opt stack 0
  2927  002D08                     _desabilitarDescarregamentoDaBateria:
  2928                           	opt stack 23
  2929                           
  2930                           ;controleDaBateria.h: 11: PORTBbits.RB1 = 1;
  2931                           
  2932                           ;incstack = 0
  2933  002D08  8281               	bsf	3969,1,c	;volatile
  2934                           
  2935                           ;controleDaBateria.h: 12: _delay((unsigned long)((20)*(1000000/4000.0)));
  2936  002D0A  0E07               	movlw	7
  2937  002D0C  0101               	movlb	1	; () banked
  2938  002D0E  6F00               	movwf	??_desabilitarDescarregamentoDaBateria& (0+255),b
  2939  002D10  0E7D               	movlw	125
  2940  002D12                     u3647:
  2941  002D12  2EE8               	decfsz	wreg,f,c
  2942  002D14  D7FE               	bra	u3647
  2943  002D16  2F00               	decfsz	??_desabilitarDescarregamentoDaBateria& (0+255),f,b
  2944  002D18  D7FC               	bra	u3647
  2945  002D1A  0012               	return		;funcret
  2946  002D1C                     __end_of_desabilitarDescarregamentoDaBateria:
  2947                           	opt stack 0
  2948                           tblptru	equ	0xFF8
  2949                           tblptrh	equ	0xFF7
  2950                           tblptrl	equ	0xFF6
  2951                           tablat	equ	0xFF5
  2952                           intcon	equ	0xFF2
  2953                           indf0	equ	0xFEF
  2954                           postinc0	equ	0xFEE
  2955                           fsr0h	equ	0xFEA
  2956                           fsr0l	equ	0xFE9
  2957                           wreg	equ	0xFE8
  2958                           status	equ	0xFD8
  2959                           
  2960 ;; *************** function _desabilitarCarregamentoDaBateria *****************
  2961 ;; Defined at:
  2962 ;;		line 15 in file "controleDaBateria.h"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;		None
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;		None
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  1    wreg      void 
  2969 ;; Registers used:
  2970 ;;		wreg
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2978 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;Total ram usage:        1 bytes
  2981 ;; Hardware stack levels used:    1
  2982 ;; Hardware stack levels required when called:    6
  2983 ;; This function calls:
  2984 ;;		Nothing
  2985 ;; This function is called by:
  2986 ;;		_configureGpios
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           	psect	text12
  2991  002D1C                     __ptext12:
  2992                           	opt stack 0
  2993  002D1C                     _desabilitarCarregamentoDaBateria:
  2994                           	opt stack 23
  2995                           
  2996                           ;controleDaBateria.h: 16: PORTBbits.RB0 = 1;
  2997                           
  2998                           ;incstack = 0
  2999  002D1C  8081               	bsf	3969,0,c	;volatile
  3000                           
  3001                           ;controleDaBateria.h: 17: _delay((unsigned long)((20)*(1000000/4000.0)));
  3002  002D1E  0E07               	movlw	7
  3003  002D20  0101               	movlb	1	; () banked
  3004  002D22  6F00               	movwf	??_desabilitarCarregamentoDaBateria& (0+255),b
  3005  002D24  0E7D               	movlw	125
  3006  002D26                     u3657:
  3007  002D26  2EE8               	decfsz	wreg,f,c
  3008  002D28  D7FE               	bra	u3657
  3009  002D2A  2F00               	decfsz	??_desabilitarCarregamentoDaBateria& (0+255),f,b
  3010  002D2C  D7FC               	bra	u3657
  3011  002D2E  0012               	return		;funcret
  3012  002D30                     __end_of_desabilitarCarregamentoDaBateria:
  3013                           	opt stack 0
  3014                           tblptru	equ	0xFF8
  3015                           tblptrh	equ	0xFF7
  3016                           tblptrl	equ	0xFF6
  3017                           tablat	equ	0xFF5
  3018                           intcon	equ	0xFF2
  3019                           indf0	equ	0xFEF
  3020                           postinc0	equ	0xFEE
  3021                           fsr0h	equ	0xFEA
  3022                           fsr0l	equ	0xFE9
  3023                           wreg	equ	0xFE8
  3024                           status	equ	0xFD8
  3025                           
  3026 ;; *************** function _configureAdc *****************
  3027 ;; Defined at:
  3028 ;;		line 44 in file "adc.h"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;		None
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;		None
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      void 
  3035 ;; Registers used:
  3036 ;;		wreg, status,2
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3046 ;;Total ram usage:        1 bytes
  3047 ;; Hardware stack levels used:    1
  3048 ;; Hardware stack levels required when called:    6
  3049 ;; This function calls:
  3050 ;;		Nothing
  3051 ;; This function is called by:
  3052 ;;		_main
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	text13
  3057  002BB4                     __ptext13:
  3058                           	opt stack 0
  3059  002BB4                     _configureAdc:
  3060                           	opt stack 24
  3061                           
  3062                           ;adc.h: 45: ADCON0bits.GO_nDONE = 0;
  3063                           
  3064                           ;incstack = 0
  3065  002BB4  92C2               	bcf	4034,1,c	;volatile
  3066                           
  3067                           ;adc.h: 46: ADCON0bits.ADON = 0;
  3068  002BB6  90C2               	bcf	4034,0,c	;volatile
  3069                           
  3070                           ;adc.h: 47: ADCON1bits.VCFG1 = 0;
  3071  002BB8  9AC1               	bcf	4033,5,c	;volatile
  3072                           
  3073                           ;adc.h: 48: ADCON1bits.VCFG0 = 0;
  3074  002BBA  98C1               	bcf	4033,4,c	;volatile
  3075                           
  3076                           ;adc.h: 49: ADCON1bits.PCFG = 0b1100;
  3077  002BBC  50C1               	movf	4033,w,c	;volatile
  3078  002BBE  0BF0               	andlw	-16
  3079  002BC0  090C               	iorlw	12
  3080  002BC2  6EC1               	movwf	4033,c	;volatile
  3081                           
  3082                           ;adc.h: 50: ADCON2bits.ADFM = 1;
  3083  002BC4  8EC0               	bsf	4032,7,c	;volatile
  3084                           
  3085                           ;adc.h: 51: ADCON2bits.ACQT = 0b001;
  3086  002BC6  50C0               	movf	4032,w,c	;volatile
  3087  002BC8  0BC7               	andlw	-57
  3088  002BCA  0908               	iorlw	8
  3089  002BCC  6EC0               	movwf	4032,c	;volatile
  3090                           
  3091                           ;adc.h: 52: ADCON2bits.ADCS = 0b100;
  3092  002BCE  50C0               	movf	4032,w,c	;volatile
  3093  002BD0  0BF8               	andlw	-8
  3094  002BD2  0904               	iorlw	4
  3095  002BD4  6EC0               	movwf	4032,c	;volatile
  3096                           
  3097                           ;adc.h: 53: _delay((unsigned long)((10)*(1000000/4000.0)));
  3098  002BD6  0E04               	movlw	4
  3099  002BD8  0101               	movlb	1	; () banked
  3100  002BDA  6F00               	movwf	??_configureAdc& (0+255),b
  3101  002BDC  0E3D               	movlw	61
  3102  002BDE                     u3667:
  3103  002BDE  2EE8               	decfsz	wreg,f,c
  3104  002BE0  D7FE               	bra	u3667
  3105  002BE2  2F00               	decfsz	??_configureAdc& (0+255),f,b
  3106  002BE4  D7FC               	bra	u3667
  3107  002BE6  D000               	nop2	
  3108  002BE8  0012               	return		;funcret
  3109  002BEA                     __end_of_configureAdc:
  3110                           	opt stack 0
  3111                           tblptru	equ	0xFF8
  3112                           tblptrh	equ	0xFF7
  3113                           tblptrl	equ	0xFF6
  3114                           tablat	equ	0xFF5
  3115                           intcon	equ	0xFF2
  3116                           indf0	equ	0xFEF
  3117                           postinc0	equ	0xFEE
  3118                           fsr0h	equ	0xFEA
  3119                           fsr0l	equ	0xFE9
  3120                           wreg	equ	0xFE8
  3121                           status	equ	0xFD8
  3122                           
  3123 ;; *************** function _tratamento *****************
  3124 ;; Defined at:
  3125 ;;		line 89 in file "aplicacao.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;		None
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;  correnteMedi    3   33[BANK0 ] float 
  3130 ;;  tensaoMedia     3   30[BANK0 ] float 
  3131 ;;  correnteMedi    3   36[BANK0 ] float 
  3132 ;;  tensaoMedia     3   22[BANK0 ] float 
  3133 ;;  indexTensaoM    2   25[BANK0 ] int 
  3134 ;;  tensaoMedia     3   19[BANK0 ] float 
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      void 
  3137 ;; Registers used:
  3138 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3145 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3146 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3147 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3148 ;;Total ram usage:       48 bytes
  3149 ;; Hardware stack levels used:    1
  3150 ;; Hardware stack levels required when called:    5
  3151 ;; This function calls:
  3152 ;;		___awtoft
  3153 ;;		___ftadd
  3154 ;;		___ftdiv
  3155 ;;		___ftge
  3156 ;;		___ftmul
  3157 ;;		___ftneg
  3158 ;;		___wmul
  3159 ;;		_converterFloatParaString
  3160 ;;		_converterIntParaString
  3161 ;;		_habilitarCarregamentoDaBateria
  3162 ;;		_habilitarDescarregamentoDaBateria
  3163 ;;		_indexDoMenorValor
  3164 ;;		_lerAdcAn0
  3165 ;;		_lerAdcAn1
  3166 ;;		_lerAdcAn2
  3167 ;;		_sinalizacaoAprovada
  3168 ;;		_sinalizacaoFalha
  3169 ;;		i2_desabilitarCarregamentoDaBateria
  3170 ;;		i2_desabilitarDescarregamentoDaBateria
  3171 ;;		i2_desabilitarTimer0
  3172 ;;		i2_escreverStringUart
  3173 ;; This function is called by:
  3174 ;;		Interrupt level 2
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           	psect	intcode
  3179  000008                     __pintcode:
  3180                           	opt stack 0
  3181  000008                     _tratamento:
  3182                           	opt stack 23
  3183                           
  3184                           ;incstack = 0
  3185  000008  8279               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3186  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
  3187                           tblptru	equ	0xFF8
  3188                           tblptrh	equ	0xFF7
  3189                           tblptrl	equ	0xFF6
  3190                           tablat	equ	0xFF5
  3191                           intcon	equ	0xFF2
  3192                           indf0	equ	0xFEF
  3193                           postinc0	equ	0xFEE
  3194                           fsr0h	equ	0xFEA
  3195                           fsr0l	equ	0xFE9
  3196                           wreg	equ	0xFE8
  3197                           status	equ	0xFD8
  3198                           
  3199                           	psect	intcode_body
  3200  000012                     __pintcode_body:
  3201                           	opt stack 23
  3202  000012                     int_func:
  3203                           	opt stack 23
  3204  000012  0006               	pop		; remove dummy address from shadow register refresh
  3205  000014  CFFA F082          	movff	pclath,??_tratamento+2
  3206  000018  CFFB F083          	movff	pclatu,??_tratamento+3
  3207  00001C  CFE9 F084          	movff	fsr0l,??_tratamento+4
  3208  000020  CFEA F085          	movff	fsr0h,??_tratamento+5
  3209  000024  CFE1 F086          	movff	fsr1l,??_tratamento+6
  3210  000028  CFE2 F087          	movff	fsr1h,??_tratamento+7
  3211  00002C  CFD9 F088          	movff	fsr2l,??_tratamento+8
  3212  000030  CFDA F089          	movff	fsr2h,??_tratamento+9
  3213  000034  CFF3 F08A          	movff	prodl,??_tratamento+10
  3214  000038  CFF4 F08B          	movff	prodh,??_tratamento+11
  3215  00003C  CFF6 F08C          	movff	tblptrl,??_tratamento+12
  3216  000040  CFF7 F08D          	movff	tblptrh,??_tratamento+13
  3217  000044  CFF8 F08E          	movff	tblptru,??_tratamento+14
  3218  000048  CFF5 F08F          	movff	tablat,??_tratamento+15
  3219                           
  3220                           ;aplicacao.c: 91: if((INTCONbits.TMR0IE == 1) && (INTCONbits.TMR0IF == 1)) {
  3221  00004C  BAF2               	btfsc	intcon,5,c	;volatile
  3222  00004E  A4F2               	btfss	intcon,2,c	;volatile
  3223  000050  EF45  F007         	goto	i2l208
  3224                           
  3225                           ;aplicacao.c: 93: if(statusDaBateria == 0) {
  3226  000054  0100               	movlb	0	; () banked
  3227  000056  51C4               	movf	_statusDaBateria& (0+255),w,b
  3228  000058  A4D8               	btfss	status,2,c
  3229  00005A  D13E               	goto	i2l3480
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;aplicacao.c: 94: desabilitarDescarregamentoDaBateria();
  3233  00005C  EC98  F016         	call	i2_desabilitarDescarregamentoDaBateria	;wreg free
  3234                           
  3235                           ;aplicacao.c: 95: desabilitarCarregamentoDaBateria();
  3236  000060  ECA2  F016         	call	i2_desabilitarCarregamentoDaBateria	;wreg free
  3237                           
  3238                           ;aplicacao.c: 96: tempoEmSegundos++;
  3239  000064  0100               	movlb	0	; () banked
  3240  000066  2BC5               	incf	_tempoEmSegundos& (0+255),f,b
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;aplicacao.c: 98: tensaoNaBateria[contador] = ((5.0 * lerAdcAn2()) / 1023);
  3244  000068  0E00               	movlw	0
  3245  00006A  6E18               	movwf	___ftmul@f2,c
  3246  00006C  0EA0               	movlw	160
  3247  00006E  6E19               	movwf	___ftmul@f2+1,c
  3248  000070  0E40               	movlw	64
  3249  000072  6E1A               	movwf	___ftmul@f2+2,c
  3250  000074  EC48  F015         	call	_lerAdcAn2	;wreg free
  3251  000078  C001  F009         	movff	?_lerAdcAn2,___awtoft@c
  3252  00007C  C002  F00A         	movff	?_lerAdcAn2+1,___awtoft@c+1
  3253  000080  ECBE  F015         	call	___awtoft	;wreg free
  3254  000084  C009  F015         	movff	?___awtoft,___ftmul@f1
  3255  000088  C00A  F016         	movff	?___awtoft+1,___ftmul@f1+1
  3256  00008C  C00B  F017         	movff	?___awtoft+2,___ftmul@f1+2
  3257  000090  EC68  F010         	call	___ftmul	;wreg free
  3258  000094  C015  F03A         	movff	?___ftmul,___ftdiv@f1
  3259  000098  C016  F03B         	movff	?___ftmul+1,___ftdiv@f1+1
  3260  00009C  C017  F03C         	movff	?___ftmul+2,___ftdiv@f1+2
  3261  0000A0  0EC0               	movlw	192
  3262  0000A2  6E3D               	movwf	___ftdiv@f2,c
  3263  0000A4  0E7F               	movlw	127
  3264  0000A6  6E3E               	movwf	___ftdiv@f2+1,c
  3265  0000A8  0E44               	movlw	68
  3266  0000AA  6E3F               	movwf	___ftdiv@f2+2,c
  3267  0000AC  ECD4  F011         	call	___ftdiv	;wreg free
  3268  0000B0  0100               	movlb	0	; () banked
  3269  0000B2  51C6               	movf	_contador& (0+255),w,b
  3270  0000B4  0D03               	mullw	3
  3271  0000B6  0EC7               	movlw	low _tensaoNaBateria
  3272  0000B8  24F3               	addwf	prodl,w,c
  3273  0000BA  6ED9               	movwf	fsr2l,c
  3274  0000BC  0E00               	movlw	high _tensaoNaBateria
  3275  0000BE  20F4               	addwfc	prodh,w,c
  3276  0000C0  6EDA               	movwf	fsr2h,c
  3277  0000C2  C03A  FFDE         	movff	?___ftdiv,postinc2
  3278  0000C6  C03B  FFDE         	movff	?___ftdiv+1,postinc2
  3279  0000CA  C03C  FFDE         	movff	?___ftdiv+2,postinc2
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;aplicacao.c: 99: escreverStringUart("\nCarregamento: Desabilitado | Descarregamento: De
      +                          sabilitado | Teste: ");
  3283  0000CE  0E05               	movlw	low STR_6
  3284  0000D0  6E71               	movwf	i2escreverStringUart@string,c
  3285  0000D2  0EFC               	movlw	high STR_6
  3286  0000D4  6E72               	movwf	i2escreverStringUart@string+1,c
  3287  0000D6  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3288                           
  3289                           ;aplicacao.c: 100: escreverStringUart(converterIntParaString(contador + 1));
  3290  0000DA  0E01               	movlw	1
  3291  0000DC  0100               	movlb	0	; () banked
  3292  0000DE  25C6               	addwf	_contador& (0+255),w,b
  3293  0000E0  6E64               	movwf	converterIntParaString@valorParaSerConvertido,c
  3294  0000E2  6A65               	clrf	converterIntParaString@valorParaSerConvertido+1,c
  3295  0000E4  0E00               	movlw	0
  3296  0000E6  2265               	addwfc	converterIntParaString@valorParaSerConvertido+1,f,c
  3297  0000E8  EC41  F016         	call	_converterIntParaString	;wreg free
  3298  0000EC  0100               	movlb	0	; () banked
  3299  0000EE  6F80               	movwf	??_tratamento& (0+255),b
  3300  0000F0  6B81               	clrf	(??_tratamento+1)& (0+255),b
  3301  0000F2  C080  F071         	movff	??_tratamento,i2escreverStringUart@string
  3302  0000F6  C081  F072         	movff	??_tratamento+1,i2escreverStringUart@string+1
  3303  0000FA  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3304                           
  3305                           ;aplicacao.c: 101: escreverStringUart(" | ");
  3306  0000FE  0EE7               	movlw	low (STR_19+2)
  3307  000100  6E71               	movwf	i2escreverStringUart@string,c
  3308  000102  0EFF               	movlw	high (STR_19+2)
  3309  000104  6E72               	movwf	i2escreverStringUart@string+1,c
  3310  000106  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3311                           
  3312                           ;aplicacao.c: 102: escreverStringUart("Tensao: ");
  3313  00010A  0EDC               	movlw	low STR_8
  3314  00010C  6E71               	movwf	i2escreverStringUart@string,c
  3315  00010E  0EFF               	movlw	high STR_8
  3316  000110  6E72               	movwf	i2escreverStringUart@string+1,c
  3317  000112  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3318                           
  3319                           ;aplicacao.c: 103: escreverStringUart(converterFloatParaString(tensaoNaBateria[contador]
      +                          ));
  3320  000116  0100               	movlb	0	; () banked
  3321  000118  51C6               	movf	_contador& (0+255),w,b
  3322  00011A  0D03               	mullw	3
  3323  00011C  0EC7               	movlw	low _tensaoNaBateria
  3324  00011E  24F3               	addwf	prodl,w,c
  3325  000120  6ED9               	movwf	fsr2l,c
  3326  000122  0E00               	movlw	high _tensaoNaBateria
  3327  000124  20F4               	addwfc	prodh,w,c
  3328  000126  6EDA               	movwf	fsr2h,c
  3329  000128  CFDE F064          	movff	postinc2,converterFloatParaString@valorParaSerConvertido
  3330  00012C  CFDE F065          	movff	postinc2,converterFloatParaString@valorParaSerConvertido+1
  3331  000130  CFDD F066          	movff	postdec2,converterFloatParaString@valorParaSerConvertido+2
  3332  000134  EC1D  F016         	call	_converterFloatParaString	;wreg free
  3333  000138  0100               	movlb	0	; () banked
  3334  00013A  6F80               	movwf	??_tratamento& (0+255),b
  3335  00013C  6B81               	clrf	(??_tratamento+1)& (0+255),b
  3336  00013E  C080  F071         	movff	??_tratamento,i2escreverStringUart@string
  3337  000142  C081  F072         	movff	??_tratamento+1,i2escreverStringUart@string+1
  3338  000146  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3339                           
  3340                           ;aplicacao.c: 104: escreverStringUart(" V");
  3341  00014A  0EF6               	movlw	low STR_9
  3342  00014C  6E71               	movwf	i2escreverStringUart@string,c
  3343  00014E  0EFF               	movlw	high STR_9
  3344  000150  6E72               	movwf	i2escreverStringUart@string+1,c
  3345  000152  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3346                           
  3347                           ;aplicacao.c: 106: contador++;
  3348  000156  0100               	movlb	0	; () banked
  3349  000158  2BC6               	incf	_contador& (0+255),f,b
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;aplicacao.c: 108: if(tempoEmSegundos == 5) {
  3353  00015A  0E05               	movlw	5
  3354  00015C  0100               	movlb	0	; () banked
  3355  00015E  19C5               	xorwf	_tempoEmSegundos& (0+255),w,b
  3356  000160  A4D8               	btfss	status,2,c
  3357  000162  EF40  F007         	goto	i2l3720
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;aplicacao.c: 109: contador = 0;
  3361  000166  0E00               	movlw	0
  3362  000168  0100               	movlb	0	; () banked
  3363  00016A  6FC6               	movwf	_contador& (0+255),b
  3364                           
  3365                           ;aplicacao.c: 110: tempoEmSegundos = 0;
  3366  00016C  0E00               	movlw	0
  3367  00016E  0100               	movlb	0	; () banked
  3368  000170  6FC5               	movwf	_tempoEmSegundos& (0+255),b
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;aplicacao.c: 112: float tensaoMedia = (( tensaoNaBateria[0] + tensaoNaBateria[1] + tens
      +                          aoNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4] ) / 5);
  3372  000172  C0CD  F031         	movff	_tensaoNaBateria+6,___ftadd@f2
  3373  000176  C0CE  F032         	movff	_tensaoNaBateria+7,___ftadd@f2+1
  3374  00017A  C0CF  F033         	movff	_tensaoNaBateria+8,___ftadd@f2+2
  3375  00017E  C0CA  F02E         	movff	_tensaoNaBateria+3,___ftadd@f1
  3376  000182  C0CB  F02F         	movff	_tensaoNaBateria+4,___ftadd@f1+1
  3377  000186  C0CC  F030         	movff	_tensaoNaBateria+5,___ftadd@f1+2
  3378  00018A  EC65  F00E         	call	___ftadd	;wreg free
  3379  00018E  C02E  F0A7         	movff	?___ftadd,_tratamento$1464
  3380  000192  C02F  F0A8         	movff	?___ftadd+1,_tratamento$1464+1
  3381  000196  C030  F0A9         	movff	?___ftadd+2,_tratamento$1464+2
  3382                           
  3383                           ;aplicacao.c: 112: float tensaoMedia = (( tensaoNaBateria[0] + tensaoNaBateria[1] + tens
      +                          aoNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4] ) / 5);
  3384  00019A  C0D0  F031         	movff	_tensaoNaBateria+9,___ftadd@f2
  3385  00019E  C0D1  F032         	movff	_tensaoNaBateria+10,___ftadd@f2+1
  3386  0001A2  C0D2  F033         	movff	_tensaoNaBateria+11,___ftadd@f2+2
  3387  0001A6  C0A7  F02E         	movff	_tratamento$1464,___ftadd@f1
  3388  0001AA  C0A8  F02F         	movff	_tratamento$1464+1,___ftadd@f1+1
  3389  0001AE  C0A9  F030         	movff	_tratamento$1464+2,___ftadd@f1+2
  3390  0001B2  EC65  F00E         	call	___ftadd	;wreg free
  3391  0001B6  C02E  F0AA         	movff	?___ftadd,_tratamento$1465
  3392  0001BA  C02F  F0AB         	movff	?___ftadd+1,_tratamento$1465+1
  3393  0001BE  C030  F0AC         	movff	?___ftadd+2,_tratamento$1465+2
  3394                           
  3395                           ;aplicacao.c: 112: float tensaoMedia = (( tensaoNaBateria[0] + tensaoNaBateria[1] + tens
      +                          aoNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4] ) / 5);
  3396  0001C2  C0D3  F031         	movff	_tensaoNaBateria+12,___ftadd@f2
  3397  0001C6  C0D4  F032         	movff	_tensaoNaBateria+13,___ftadd@f2+1
  3398  0001CA  C0D5  F033         	movff	_tensaoNaBateria+14,___ftadd@f2+2
  3399  0001CE  C0AA  F02E         	movff	_tratamento$1465,___ftadd@f1
  3400  0001D2  C0AB  F02F         	movff	_tratamento$1465+1,___ftadd@f1+1
  3401  0001D6  C0AC  F030         	movff	_tratamento$1465+2,___ftadd@f1+2
  3402  0001DA  EC65  F00E         	call	___ftadd	;wreg free
  3403  0001DE  C02E  F0AD         	movff	?___ftadd,_tratamento$1466
  3404  0001E2  C02F  F0AE         	movff	?___ftadd+1,_tratamento$1466+1
  3405  0001E6  C030  F0AF         	movff	?___ftadd+2,_tratamento$1466+2
  3406                           
  3407                           ;aplicacao.c: 112: float tensaoMedia = (( tensaoNaBateria[0] + tensaoNaBateria[1] + tens
      +                          aoNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4] ) / 5);
  3408  0001EA  C0C7  F031         	movff	_tensaoNaBateria,___ftadd@f2
  3409  0001EE  C0C8  F032         	movff	_tensaoNaBateria+1,___ftadd@f2+1
  3410  0001F2  C0C9  F033         	movff	_tensaoNaBateria+2,___ftadd@f2+2
  3411  0001F6  C0AD  F02E         	movff	_tratamento$1466,___ftadd@f1
  3412  0001FA  C0AE  F02F         	movff	_tratamento$1466+1,___ftadd@f1+1
  3413  0001FE  C0AF  F030         	movff	_tratamento$1466+2,___ftadd@f1+2
  3414  000202  EC65  F00E         	call	___ftadd	;wreg free
  3415  000206  C02E  F03A         	movff	?___ftadd,___ftdiv@f1
  3416  00020A  C02F  F03B         	movff	?___ftadd+1,___ftdiv@f1+1
  3417  00020E  C030  F03C         	movff	?___ftadd+2,___ftdiv@f1+2
  3418  000212  0E00               	movlw	0
  3419  000214  6E3D               	movwf	___ftdiv@f2,c
  3420  000216  0EA0               	movlw	160
  3421  000218  6E3E               	movwf	___ftdiv@f2+1,c
  3422  00021A  0E40               	movlw	64
  3423  00021C  6E3F               	movwf	___ftdiv@f2+2,c
  3424  00021E  ECD4  F011         	call	___ftdiv	;wreg free
  3425  000222  C03A  F093         	movff	?___ftdiv,tratamento@tensaoMedia
  3426  000226  C03B  F094         	movff	?___ftdiv+1,tratamento@tensaoMedia+1
  3427  00022A  C03C  F095         	movff	?___ftdiv+2,tratamento@tensaoMedia+2
  3428                           
  3429                           ;aplicacao.c: 113: escreverStringUart("\nTensao Media: ");
  3430  00022E  0EC1               	movlw	low STR_10
  3431  000230  6E71               	movwf	i2escreverStringUart@string,c
  3432  000232  0EFF               	movlw	high STR_10
  3433  000234  6E72               	movwf	i2escreverStringUart@string+1,c
  3434  000236  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3435                           
  3436                           ;aplicacao.c: 114: escreverStringUart(converterFloatParaString(tensaoMedia));
  3437  00023A  C093  F064         	movff	tratamento@tensaoMedia,converterFloatParaString@valorParaSerConvertido
  3438  00023E  C094  F065         	movff	tratamento@tensaoMedia+1,converterFloatParaString@valorParaSerConvertido+1
  3439  000242  C095  F066         	movff	tratamento@tensaoMedia+2,converterFloatParaString@valorParaSerConvertido+2
  3440  000246  EC1D  F016         	call	_converterFloatParaString	;wreg free
  3441  00024A  0100               	movlb	0	; () banked
  3442  00024C  6F80               	movwf	??_tratamento& (0+255),b
  3443  00024E  6B81               	clrf	(??_tratamento+1)& (0+255),b
  3444  000250  C080  F071         	movff	??_tratamento,i2escreverStringUart@string
  3445  000254  C081  F072         	movff	??_tratamento+1,i2escreverStringUart@string+1
  3446  000258  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3447                           
  3448                           ;aplicacao.c: 115: escreverStringUart(" V\n");
  3449  00025C  0EEF               	movlw	low STR_11
  3450  00025E  6E71               	movwf	i2escreverStringUart@string,c
  3451  000260  0EFF               	movlw	high STR_11
  3452  000262  6E72               	movwf	i2escreverStringUart@string+1,c
  3453  000264  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3454                           
  3455                           ;aplicacao.c: 116: if(tensaoMedia >= 3) {
  3456  000268  C093  F015         	movff	tratamento@tensaoMedia,___ftge@ff1
  3457  00026C  C094  F016         	movff	tratamento@tensaoMedia+1,___ftge@ff1+1
  3458  000270  C095  F017         	movff	tratamento@tensaoMedia+2,___ftge@ff1+2
  3459  000274  0E00               	movlw	0
  3460  000276  6E18               	movwf	___ftge@ff2,c
  3461  000278  0E40               	movlw	64
  3462  00027A  6E19               	movwf	___ftge@ff2+1,c
  3463  00027C  0E40               	movlw	64
  3464  00027E  6E1A               	movwf	___ftge@ff2+2,c
  3465  000280  EC37  F013         	call	___ftge	;wreg free
  3466  000284  A0D8               	btfss	status,0,c
  3467  000286  D008               	goto	i2l3466
  3468                           
  3469                           ;aplicacao.c: 117: escreverStringUart("Teste de Polaridade: NOK\n");
  3470  000288  0E66               	movlw	low STR_12
  3471  00028A  6E71               	movwf	i2escreverStringUart@string,c
  3472  00028C  0EFF               	movlw	high STR_12
  3473  00028E  6E72               	movwf	i2escreverStringUart@string+1,c
  3474  000290  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3475                           
  3476                           ;aplicacao.c: 118: resultadoDosTestes[0] = 0;
  3477  000294  0E00               	movlw	0
  3478  000296  D007               	goto	L1
  3479  000298                     i2l3466:
  3480                           
  3481                           ;aplicacao.c: 120: else {
  3482                           ;aplicacao.c: 121: escreverStringUart("Teste de Polaridade: OK\n");
  3483  000298  0E80               	movlw	low STR_13
  3484  00029A  6E71               	movwf	i2escreverStringUart@string,c
  3485  00029C  0EFF               	movlw	high STR_13
  3486  00029E  6E72               	movwf	i2escreverStringUart@string+1,c
  3487  0002A0  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3488                           
  3489                           ;aplicacao.c: 122: resultadoDosTestes[0] = 1;
  3490  0002A4  0E01               	movlw	1
  3491  0002A6                     L1:
  3492  0002A6  0100               	movlb	0	; () banked
  3493  0002A8  6FBF               	movwf	_resultadoDosTestes& (0+255),b
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;aplicacao.c: 123: }
  3497                           ;aplicacao.c: 125: if(resultadoDosTestes[0] == 1) {
  3498                           
  3499                           ; BSR set to: 0
  3500  0002AA  0100               	movlb	0	; () banked
  3501  0002AC  05BF               	decf	_resultadoDosTestes& (0+255),w,b
  3502  0002AE  A4D8               	btfss	status,2,c
  3503  0002B0  D00B               	goto	i2l3476
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;aplicacao.c: 126: statusDaBateria = 1;
  3507  0002B2  0E01               	movlw	1
  3508  0002B4  0100               	movlb	0	; () banked
  3509  0002B6  6FC4               	movwf	_statusDaBateria& (0+255),b
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;aplicacao.c: 127: escreverStringUart("\nCarregamento Habilitado!\n");
  3513  0002B8  0E4B               	movlw	low STR_14
  3514  0002BA  6E71               	movwf	i2escreverStringUart@string,c
  3515  0002BC  0EFF               	movlw	high STR_14
  3516  0002BE  6E72               	movwf	i2escreverStringUart@string+1,c
  3517  0002C0  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3518                           
  3519                           ;aplicacao.c: 128: }
  3520  0002C4  EF40  F007         	goto	i2l3720
  3521  0002C8                     i2l3476:
  3522                           
  3523                           ;aplicacao.c: 129: else {
  3524                           ;aplicacao.c: 130: escreverStringUart("\nCarregamento nao Habilitado!\n");
  3525  0002C8  0E9A               	movlw	low STR_15
  3526  0002CA  6E71               	movwf	i2escreverStringUart@string,c
  3527  0002CC  0EFE               	movlw	high STR_15
  3528  0002CE  6E72               	movwf	i2escreverStringUart@string+1,c
  3529  0002D0  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3530  0002D4  EFDC  F006         	goto	i2l3686
  3531  0002D8                     i2l3480:
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;aplicacao.c: 136: else if(statusDaBateria == 1) {
  3535  0002D8  0100               	movlb	0	; () banked
  3536  0002DA  05C4               	decf	_statusDaBateria& (0+255),w,b
  3537  0002DC  A4D8               	btfss	status,2,c
  3538  0002DE  D2A6               	goto	i2l3586
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;aplicacao.c: 137: desabilitarDescarregamentoDaBateria();
  3542  0002E0  EC98  F016         	call	i2_desabilitarDescarregamentoDaBateria	;wreg free
  3543                           
  3544                           ;aplicacao.c: 138: habilitarCarregamentoDaBateria();
  3545  0002E4  ECC8  F016         	call	_habilitarCarregamentoDaBateria	;wreg free
  3546                           
  3547                           ;aplicacao.c: 139: tempoEmSegundos++;
  3548  0002E8  0100               	movlb	0	; () banked
  3549  0002EA  2BC5               	incf	_tempoEmSegundos& (0+255),f,b
  3550                           
  3551                           ;aplicacao.c: 141: if(tempoEmSegundos == 4 || tempoEmSegundos == 8 || tempoEmSegundos ==
      +                           12 || tempoEmSegundos == 16 || tempoEmSegundos == 20) {
  3552  0002EC  0E04               	movlw	4
  3553  0002EE  0100               	movlb	0	; () banked
  3554  0002F0  19C5               	xorwf	_tempoEmSegundos& (0+255),w,b
  3555  0002F2  B4D8               	btfsc	status,2,c
  3556  0002F4  D015               	goto	i2l3496
  3557                           
  3558                           ; BSR set to: 0
  3559  0002F6  0E08               	movlw	8
  3560  0002F8  0100               	movlb	0	; () banked
  3561  0002FA  19C5               	xorwf	_tempoEmSegundos& (0+255),w,b
  3562  0002FC  B4D8               	btfsc	status,2,c
  3563  0002FE  D010               	goto	i2l3496
  3564                           
  3565                           ; BSR set to: 0
  3566  000300  0E0C               	movlw	12
  3567  000302  0100               	movlb	0	; () banked
  3568  000304  19C5               	xorwf	_tempoEmSegundos& (0+255),w,b
  3569  000306  B4D8               	btfsc	status,2,c
  3570  000308  D00B               	goto	i2l3496
  3571                           
  3572                           ; BSR set to: 0
  3573  00030A  0E10               	movlw	16
  3574  00030C  0100               	movlb	0	; () banked
  3575  00030E  19C5               	xorwf	_tempoEmSegundos& (0+255),w,b
  3576  000310  B4D8               	btfsc	status,2,c
  3577  000312  D006               	goto	i2l3496
  3578                           
  3579                           ; BSR set to: 0
  3580  000314  0E14               	movlw	20
  3581  000316  0100               	movlb	0	; () banked
  3582  000318  19C5               	xorwf	_tempoEmSegundos& (0+255),w,b
  3583  00031A  A4D8               	btfss	status,2,c
  3584  00031C  EF40  F007         	goto	i2l3720
  3585  000320                     i2l3496:
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;aplicacao.c: 142: tensaoNaBateria[contador] = ((5.0 * lerAdcAn0()) / 1023);
  3589  000320  0E00               	movlw	0
  3590  000322  6E18               	movwf	___ftmul@f2,c
  3591  000324  0EA0               	movlw	160
  3592  000326  6E19               	movwf	___ftmul@f2+1,c
  3593  000328  0E40               	movlw	64
  3594  00032A  6E1A               	movwf	___ftmul@f2+2,c
  3595  00032C  EC84  F015         	call	_lerAdcAn0	;wreg free
  3596  000330  C001  F009         	movff	?_lerAdcAn0,___awtoft@c
  3597  000334  C002  F00A         	movff	?_lerAdcAn0+1,___awtoft@c+1
  3598  000338  ECBE  F015         	call	___awtoft	;wreg free
  3599  00033C  C009  F015         	movff	?___awtoft,___ftmul@f1
  3600  000340  C00A  F016         	movff	?___awtoft+1,___ftmul@f1+1
  3601  000344  C00B  F017         	movff	?___awtoft+2,___ftmul@f1+2
  3602  000348  EC68  F010         	call	___ftmul	;wreg free
  3603  00034C  C015  F03A         	movff	?___ftmul,___ftdiv@f1
  3604  000350  C016  F03B         	movff	?___ftmul+1,___ftdiv@f1+1
  3605  000354  C017  F03C         	movff	?___ftmul+2,___ftdiv@f1+2
  3606  000358  0EC0               	movlw	192
  3607  00035A  6E3D               	movwf	___ftdiv@f2,c
  3608  00035C  0E7F               	movlw	127
  3609  00035E  6E3E               	movwf	___ftdiv@f2+1,c
  3610  000360  0E44               	movlw	68
  3611  000362  6E3F               	movwf	___ftdiv@f2+2,c
  3612  000364  ECD4  F011         	call	___ftdiv	;wreg free
  3613  000368  0100               	movlb	0	; () banked
  3614  00036A  51C6               	movf	_contador& (0+255),w,b
  3615  00036C  0D03               	mullw	3
  3616  00036E  0EC7               	movlw	low _tensaoNaBateria
  3617  000370  24F3               	addwf	prodl,w,c
  3618  000372  6ED9               	movwf	fsr2l,c
  3619  000374  0E00               	movlw	high _tensaoNaBateria
  3620  000376  20F4               	addwfc	prodh,w,c
  3621  000378  6EDA               	movwf	fsr2h,c
  3622  00037A  C03A  FFDE         	movff	?___ftdiv,postinc2
  3623  00037E  C03B  FFDE         	movff	?___ftdiv+1,postinc2
  3624  000382  C03C  FFDE         	movff	?___ftdiv+2,postinc2
  3625                           
  3626                           ;aplicacao.c: 143: correnteNaBateria[contador] = ((((5.0 * lerAdcAn1()) / 1023) - tensao
      +                          NaBateria[contador]) / 0.47);
  3627  000386  0100               	movlb	0	; () banked
  3628  000388  51C6               	movf	_contador& (0+255),w,b
  3629  00038A  0D03               	mullw	3
  3630  00038C  0EC7               	movlw	low _tensaoNaBateria
  3631  00038E  24F3               	addwf	prodl,w,c
  3632  000390  6ED9               	movwf	fsr2l,c
  3633  000392  0E00               	movlw	high _tensaoNaBateria
  3634  000394  20F4               	addwfc	prodh,w,c
  3635  000396  6EDA               	movwf	fsr2h,c
  3636  000398  CFDE F024          	movff	postinc2,___ftneg@f1
  3637  00039C  CFDE F025          	movff	postinc2,___ftneg@f1+1
  3638  0003A0  CFDD F026          	movff	postdec2,___ftneg@f1+2
  3639  0003A4  EC2F  F016         	call	___ftneg	;wreg free
  3640  0003A8  C024  F031         	movff	?___ftneg,___ftadd@f2
  3641  0003AC  C025  F032         	movff	?___ftneg+1,___ftadd@f2+1
  3642  0003B0  C026  F033         	movff	?___ftneg+2,___ftadd@f2+2
  3643  0003B4  0EC0               	movlw	192
  3644  0003B6  6E3D               	movwf	___ftdiv@f2,c
  3645  0003B8  0E7F               	movlw	127
  3646  0003BA  6E3E               	movwf	___ftdiv@f2+1,c
  3647  0003BC  0E44               	movlw	68
  3648  0003BE  6E3F               	movwf	___ftdiv@f2+2,c
  3649  0003C0  0E00               	movlw	0
  3650  0003C2  6E18               	movwf	___ftmul@f2,c
  3651  0003C4  0EA0               	movlw	160
  3652  0003C6  6E19               	movwf	___ftmul@f2+1,c
  3653  0003C8  0E40               	movlw	64
  3654  0003CA  6E1A               	movwf	___ftmul@f2+2,c
  3655  0003CC  EC66  F015         	call	_lerAdcAn1	;wreg free
  3656  0003D0  C001  F009         	movff	?_lerAdcAn1,___awtoft@c
  3657  0003D4  C002  F00A         	movff	?_lerAdcAn1+1,___awtoft@c+1
  3658  0003D8  ECBE  F015         	call	___awtoft	;wreg free
  3659  0003DC  C009  F015         	movff	?___awtoft,___ftmul@f1
  3660  0003E0  C00A  F016         	movff	?___awtoft+1,___ftmul@f1+1
  3661  0003E4  C00B  F017         	movff	?___awtoft+2,___ftmul@f1+2
  3662  0003E8  EC68  F010         	call	___ftmul	;wreg free
  3663  0003EC  C015  F03A         	movff	?___ftmul,___ftdiv@f1
  3664  0003F0  C016  F03B         	movff	?___ftmul+1,___ftdiv@f1+1
  3665  0003F4  C017  F03C         	movff	?___ftmul+2,___ftdiv@f1+2
  3666  0003F8  ECD4  F011         	call	___ftdiv	;wreg free
  3667  0003FC  C03A  F02E         	movff	?___ftdiv,___ftadd@f1
  3668  000400  C03B  F02F         	movff	?___ftdiv+1,___ftadd@f1+1
  3669  000404  C03C  F030         	movff	?___ftdiv+2,___ftadd@f1+2
  3670  000408  EC65  F00E         	call	___ftadd	;wreg free
  3671  00040C  C02E  F09B         	movff	?___ftadd,_tratamento$1467
  3672  000410  C02F  F09C         	movff	?___ftadd+1,_tratamento$1467+1
  3673  000414  C030  F09D         	movff	?___ftadd+2,_tratamento$1467+2
  3674                           
  3675                           ;aplicacao.c: 143: correnteNaBateria[contador] = ((((5.0 * lerAdcAn1()) / 1023) - tensao
      +                          NaBateria[contador]) / 0.47);
  3676  000418  C09B  F03A         	movff	_tratamento$1467,___ftdiv@f1
  3677  00041C  C09C  F03B         	movff	_tratamento$1467+1,___ftdiv@f1+1
  3678  000420  C09D  F03C         	movff	_tratamento$1467+2,___ftdiv@f1+2
  3679  000424  0EA4               	movlw	164
  3680  000426  6E3D               	movwf	___ftdiv@f2,c
  3681  000428  0EF0               	movlw	240
  3682  00042A  6E3E               	movwf	___ftdiv@f2+1,c
  3683  00042C  0E3E               	movlw	62
  3684  00042E  6E3F               	movwf	___ftdiv@f2+2,c
  3685  000430  ECD4  F011         	call	___ftdiv	;wreg free
  3686  000434  0100               	movlb	0	; () banked
  3687  000436  51C6               	movf	_contador& (0+255),w,b
  3688  000438  0D03               	mullw	3
  3689  00043A  0EB0               	movlw	low _correnteNaBateria
  3690  00043C  24F3               	addwf	prodl,w,c
  3691  00043E  6ED9               	movwf	fsr2l,c
  3692  000440  0E00               	movlw	high _correnteNaBateria
  3693  000442  20F4               	addwfc	prodh,w,c
  3694  000444  6EDA               	movwf	fsr2h,c
  3695  000446  C03A  FFDE         	movff	?___ftdiv,postinc2
  3696  00044A  C03B  FFDE         	movff	?___ftdiv+1,postinc2
  3697  00044E  C03C  FFDE         	movff	?___ftdiv+2,postinc2
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;aplicacao.c: 145: escreverStringUart("\nCarregamento: Habilitado | Descarregamento: Des
      +                          abilitado | Teste: ");
  3701  000452  0E8F               	movlw	low STR_16
  3702  000454  6E71               	movwf	i2escreverStringUart@string,c
  3703  000456  0EFC               	movlw	high STR_16
  3704  000458  6E72               	movwf	i2escreverStringUart@string+1,c
  3705  00045A  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3706                           
  3707                           ;aplicacao.c: 146: escreverStringUart(converterIntParaString(contador + 1));
  3708  00045E  0E01               	movlw	1
  3709  000460  0100               	movlb	0	; () banked
  3710  000462  25C6               	addwf	_contador& (0+255),w,b
  3711  000464  6E64               	movwf	converterIntParaString@valorParaSerConvertido,c
  3712  000466  6A65               	clrf	converterIntParaString@valorParaSerConvertido+1,c
  3713  000468  0E00               	movlw	0
  3714  00046A  2265               	addwfc	converterIntParaString@valorParaSerConvertido+1,f,c
  3715  00046C  EC41  F016         	call	_converterIntParaString	;wreg free
  3716  000470  0100               	movlb	0	; () banked
  3717  000472  6F80               	movwf	??_tratamento& (0+255),b
  3718  000474  6B81               	clrf	(??_tratamento+1)& (0+255),b
  3719  000476  C080  F071         	movff	??_tratamento,i2escreverStringUart@string
  3720  00047A  C081  F072         	movff	??_tratamento+1,i2escreverStringUart@string+1
  3721  00047E  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3722                           
  3723                           ;aplicacao.c: 147: escreverStringUart(" | ");
  3724  000482  0EE7               	movlw	low (STR_19+2)
  3725  000484  6E71               	movwf	i2escreverStringUart@string,c
  3726  000486  0EFF               	movlw	high (STR_19+2)
  3727  000488  6E72               	movwf	i2escreverStringUart@string+1,c
  3728  00048A  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3729                           
  3730                           ;aplicacao.c: 148: escreverStringUart("Tensao: ");
  3731  00048E  0EDC               	movlw	low STR_8
  3732  000490  6E71               	movwf	i2escreverStringUart@string,c
  3733  000492  0EFF               	movlw	high STR_8
  3734  000494  6E72               	movwf	i2escreverStringUart@string+1,c
  3735  000496  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3736                           
  3737                           ;aplicacao.c: 149: escreverStringUart(converterFloatParaString(tensaoNaBateria[contador]
      +                          ));
  3738  00049A  0100               	movlb	0	; () banked
  3739  00049C  51C6               	movf	_contador& (0+255),w,b
  3740  00049E  0D03               	mullw	3
  3741  0004A0  0EC7               	movlw	low _tensaoNaBateria
  3742  0004A2  24F3               	addwf	prodl,w,c
  3743  0004A4  6ED9               	movwf	fsr2l,c
  3744  0004A6  0E00               	movlw	high _tensaoNaBateria
  3745  0004A8  20F4               	addwfc	prodh,w,c
  3746  0004AA  6EDA               	movwf	fsr2h,c
  3747  0004AC  CFDE F064          	movff	postinc2,converterFloatParaString@valorParaSerConvertido
  3748  0004B0  CFDE F065          	movff	postinc2,converterFloatParaString@valorParaSerConvertido+1
  3749  0004B4  CFDD F066          	movff	postdec2,converterFloatParaString@valorParaSerConvertido+2
  3750  0004B8  EC1D  F016         	call	_converterFloatParaString	;wreg free
  3751  0004BC  0100               	movlb	0	; () banked
  3752  0004BE  6F80               	movwf	??_tratamento& (0+255),b
  3753  0004C0  6B81               	clrf	(??_tratamento+1)& (0+255),b
  3754  0004C2  C080  F071         	movff	??_tratamento,i2escreverStringUart@string
  3755  0004C6  C081  F072         	movff	??_tratamento+1,i2escreverStringUart@string+1
  3756  0004CA  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3757                           
  3758                           ;aplicacao.c: 150: escreverStringUart(" V | ");
  3759  0004CE  0EE5               	movlw	low STR_19
  3760  0004D0  6E71               	movwf	i2escreverStringUart@string,c
  3761  0004D2  0EFF               	movlw	high STR_19
  3762  0004D4  6E72               	movwf	i2escreverStringUart@string+1,c
  3763  0004D6  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3764                           
  3765                           ;aplicacao.c: 151: escreverStringUart("Corrente: ");
  3766  0004DA  0ED1               	movlw	low STR_20
  3767  0004DC  6E71               	movwf	i2escreverStringUart@string,c
  3768  0004DE  0EFF               	movlw	high STR_20
  3769  0004E0  6E72               	movwf	i2escreverStringUart@string+1,c
  3770  0004E2  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3771                           
  3772                           ;aplicacao.c: 152: escreverStringUart(converterFloatParaString(correnteNaBateria[contado
      +                          r]));
  3773  0004E6  0100               	movlb	0	; () banked
  3774  0004E8  51C6               	movf	_contador& (0+255),w,b
  3775  0004EA  0D03               	mullw	3
  3776  0004EC  0EB0               	movlw	low _correnteNaBateria
  3777  0004EE  24F3               	addwf	prodl,w,c
  3778  0004F0  6ED9               	movwf	fsr2l,c
  3779  0004F2  0E00               	movlw	high _correnteNaBateria
  3780  0004F4  20F4               	addwfc	prodh,w,c
  3781  0004F6  6EDA               	movwf	fsr2h,c
  3782  0004F8  CFDE F064          	movff	postinc2,converterFloatParaString@valorParaSerConvertido
  3783  0004FC  CFDE F065          	movff	postinc2,converterFloatParaString@valorParaSerConvertido+1
  3784  000500  CFDD F066          	movff	postdec2,converterFloatParaString@valorParaSerConvertido+2
  3785  000504  EC1D  F016         	call	_converterFloatParaString	;wreg free
  3786  000508  0100               	movlb	0	; () banked
  3787  00050A  6F80               	movwf	??_tratamento& (0+255),b
  3788  00050C  6B81               	clrf	(??_tratamento+1)& (0+255),b
  3789  00050E  C080  F071         	movff	??_tratamento,i2escreverStringUart@string
  3790  000512  C081  F072         	movff	??_tratamento+1,i2escreverStringUart@string+1
  3791  000516  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3792                           
  3793                           ;aplicacao.c: 153: escreverStringUart(" A");
  3794  00051A  0EF3               	movlw	low STR_21
  3795  00051C  6E71               	movwf	i2escreverStringUart@string,c
  3796  00051E  0EFF               	movlw	high STR_21
  3797  000520  6E72               	movwf	i2escreverStringUart@string+1,c
  3798  000522  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3799                           
  3800                           ;aplicacao.c: 155: contador++;
  3801  000526  0100               	movlb	0	; () banked
  3802  000528  2BC6               	incf	_contador& (0+255),f,b
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;aplicacao.c: 157: if(tempoEmSegundos == 20) {
  3806  00052A  0E14               	movlw	20
  3807  00052C  0100               	movlb	0	; () banked
  3808  00052E  19C5               	xorwf	_tempoEmSegundos& (0+255),w,b
  3809  000530  A4D8               	btfss	status,2,c
  3810  000532  EF40  F007         	goto	i2l3720
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;aplicacao.c: 158: contador = 0;
  3814  000536  0E00               	movlw	0
  3815  000538  0100               	movlb	0	; () banked
  3816  00053A  6FC6               	movwf	_contador& (0+255),b
  3817                           
  3818                           ;aplicacao.c: 159: tempoEmSegundos = 0;
  3819  00053C  0E00               	movlw	0
  3820  00053E  0100               	movlb	0	; () banked
  3821  000540  6FC5               	movwf	_tempoEmSegundos& (0+255),b
  3822                           
  3823                           ; BSR set to: 0
  3824                           ;aplicacao.c: 161: float tensaoMedia = (( tensaoNaBateria[0] + tensaoNaBateria[1] + tens
      +                          aoNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4] ) / 5);
  3825  000542  C0CD  F031         	movff	_tensaoNaBateria+6,___ftadd@f2
  3826  000546  C0CE  F032         	movff	_tensaoNaBateria+7,___ftadd@f2+1
  3827  00054A  C0CF  F033         	movff	_tensaoNaBateria+8,___ftadd@f2+2
  3828  00054E  C0CA  F02E         	movff	_tensaoNaBateria+3,___ftadd@f1
  3829  000552  C0CB  F02F         	movff	_tensaoNaBateria+4,___ftadd@f1+1
  3830  000556  C0CC  F030         	movff	_tensaoNaBateria+5,___ftadd@f1+2
  3831  00055A  EC65  F00E         	call	___ftadd	;wreg free
  3832  00055E  C02E  F0A7         	movff	?___ftadd,_tratamento$1464
  3833  000562  C02F  F0A8         	movff	?___ftadd+1,_tratamento$1464+1
  3834  000566  C030  F0A9         	movff	?___ftadd+2,_tratamento$1464+2
  3835                           
  3836                           ;aplicacao.c: 161: float tensaoMedia = (( tensaoNaBateria[0] + tensaoNaBateria[1] + tens
      +                          aoNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4] ) / 5);
  3837  00056A  C0D0  F031         	movff	_tensaoNaBateria+9,___ftadd@f2
  3838  00056E  C0D1  F032         	movff	_tensaoNaBateria+10,___ftadd@f2+1
  3839  000572  C0D2  F033         	movff	_tensaoNaBateria+11,___ftadd@f2+2
  3840  000576  C0A7  F02E         	movff	_tratamento$1464,___ftadd@f1
  3841  00057A  C0A8  F02F         	movff	_tratamento$1464+1,___ftadd@f1+1
  3842  00057E  C0A9  F030         	movff	_tratamento$1464+2,___ftadd@f1+2
  3843  000582  EC65  F00E         	call	___ftadd	;wreg free
  3844  000586  C02E  F0AA         	movff	?___ftadd,_tratamento$1465
  3845  00058A  C02F  F0AB         	movff	?___ftadd+1,_tratamento$1465+1
  3846  00058E  C030  F0AC         	movff	?___ftadd+2,_tratamento$1465+2
  3847                           
  3848                           ;aplicacao.c: 161: float tensaoMedia = (( tensaoNaBateria[0] + tensaoNaBateria[1] + tens
      +                          aoNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4] ) / 5);
  3849  000592  C0D3  F031         	movff	_tensaoNaBateria+12,___ftadd@f2
  3850  000596  C0D4  F032         	movff	_tensaoNaBateria+13,___ftadd@f2+1
  3851  00059A  C0D5  F033         	movff	_tensaoNaBateria+14,___ftadd@f2+2
  3852  00059E  C0AA  F02E         	movff	_tratamento$1465,___ftadd@f1
  3853  0005A2  C0AB  F02F         	movff	_tratamento$1465+1,___ftadd@f1+1
  3854  0005A6  C0AC  F030         	movff	_tratamento$1465+2,___ftadd@f1+2
  3855  0005AA  EC65  F00E         	call	___ftadd	;wreg free
  3856  0005AE  C02E  F0AD         	movff	?___ftadd,_tratamento$1466
  3857  0005B2  C02F  F0AE         	movff	?___ftadd+1,_tratamento$1466+1
  3858  0005B6  C030  F0AF         	movff	?___ftadd+2,_tratamento$1466+2
  3859                           
  3860                           ;aplicacao.c: 161: float tensaoMedia = (( tensaoNaBateria[0] + tensaoNaBateria[1] + tens
      +                          aoNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4] ) / 5);
  3861  0005BA  C0C7  F031         	movff	_tensaoNaBateria,___ftadd@f2
  3862  0005BE  C0C8  F032         	movff	_tensaoNaBateria+1,___ftadd@f2+1
  3863  0005C2  C0C9  F033         	movff	_tensaoNaBateria+2,___ftadd@f2+2
  3864  0005C6  C0AD  F02E         	movff	_tratamento$1466,___ftadd@f1
  3865  0005CA  C0AE  F02F         	movff	_tratamento$1466+1,___ftadd@f1+1
  3866  0005CE  C0AF  F030         	movff	_tratamento$1466+2,___ftadd@f1+2
  3867  0005D2  EC65  F00E         	call	___ftadd	;wreg free
  3868  0005D6  C02E  F03A         	movff	?___ftadd,___ftdiv@f1
  3869  0005DA  C02F  F03B         	movff	?___ftadd+1,___ftdiv@f1+1
  3870  0005DE  C030  F03C         	movff	?___ftadd+2,___ftdiv@f1+2
  3871  0005E2  0E00               	movlw	0
  3872  0005E4  6E3D               	movwf	___ftdiv@f2,c
  3873  0005E6  0EA0               	movlw	160
  3874  0005E8  6E3E               	movwf	___ftdiv@f2+1,c
  3875  0005EA  0E40               	movlw	64
  3876  0005EC  6E3F               	movwf	___ftdiv@f2+2,c
  3877  0005EE  ECD4  F011         	call	___ftdiv	;wreg free
  3878  0005F2  C03A  F09E         	movff	?___ftdiv,tratamento@tensaoMedia_762
  3879  0005F6  C03B  F09F         	movff	?___ftdiv+1,tratamento@tensaoMedia_762+1
  3880  0005FA  C03C  F0A0         	movff	?___ftdiv+2,tratamento@tensaoMedia_762+2
  3881                           
  3882                           ;aplicacao.c: 163: escreverStringUart("\nTensao Media: ");
  3883  0005FE  0EC1               	movlw	low STR_10
  3884  000600  6E71               	movwf	i2escreverStringUart@string,c
  3885  000602  0EFF               	movlw	high STR_10
  3886  000604  6E72               	movwf	i2escreverStringUart@string+1,c
  3887  000606  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3888                           
  3889                           ;aplicacao.c: 164: escreverStringUart(converterFloatParaString(tensaoMedia));
  3890  00060A  C09E  F064         	movff	tratamento@tensaoMedia_762,converterFloatParaString@valorParaSerConvertido
  3891  00060E  C09F  F065         	movff	tratamento@tensaoMedia_762+1,converterFloatParaString@valorParaSerConvertido+1
  3892  000612  C0A0  F066         	movff	tratamento@tensaoMedia_762+2,converterFloatParaString@valorParaSerConvertido+2
  3893  000616  EC1D  F016         	call	_converterFloatParaString	;wreg free
  3894  00061A  0100               	movlb	0	; () banked
  3895  00061C  6F80               	movwf	??_tratamento& (0+255),b
  3896  00061E  6B81               	clrf	(??_tratamento+1)& (0+255),b
  3897  000620  C080  F071         	movff	??_tratamento,i2escreverStringUart@string
  3898  000624  C081  F072         	movff	??_tratamento+1,i2escreverStringUart@string+1
  3899  000628  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3900                           
  3901                           ;aplicacao.c: 165: escreverStringUart(" V\n");
  3902  00062C  0EEF               	movlw	low STR_11
  3903  00062E  6E71               	movwf	i2escreverStringUart@string,c
  3904  000630  0EFF               	movlw	high STR_11
  3905  000632  6E72               	movwf	i2escreverStringUart@string+1,c
  3906  000634  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3907                           
  3908                           ;aplicacao.c: 166: if( (tensaoMedia >= 3.5) && (tensaoMedia <= 4.3) ) {
  3909  000638  C09E  F015         	movff	tratamento@tensaoMedia_762,___ftge@ff1
  3910  00063C  C09F  F016         	movff	tratamento@tensaoMedia_762+1,___ftge@ff1+1
  3911  000640  C0A0  F017         	movff	tratamento@tensaoMedia_762+2,___ftge@ff1+2
  3912  000644  0E00               	movlw	0
  3913  000646  6E18               	movwf	___ftge@ff2,c
  3914  000648  0E60               	movlw	96
  3915  00064A  6E19               	movwf	___ftge@ff2+1,c
  3916  00064C  0E40               	movlw	64
  3917  00064E  6E1A               	movwf	___ftge@ff2+2,c
  3918  000650  EC37  F013         	call	___ftge	;wreg free
  3919  000654  A0D8               	btfss	status,0,c
  3920  000656  D01A               	goto	i2l3544
  3921  000658  0E9A               	movlw	154
  3922  00065A  6E15               	movwf	___ftge@ff1,c
  3923  00065C  0E89               	movlw	137
  3924  00065E  6E16               	movwf	___ftge@ff1+1,c
  3925  000660  0E40               	movlw	64
  3926  000662  6E17               	movwf	___ftge@ff1+2,c
  3927  000664  C09E  F018         	movff	tratamento@tensaoMedia_762,___ftge@ff2
  3928  000668  C09F  F019         	movff	tratamento@tensaoMedia_762+1,___ftge@ff2+1
  3929  00066C  C0A0  F01A         	movff	tratamento@tensaoMedia_762+2,___ftge@ff2+2
  3930  000670  EC37  F013         	call	___ftge	;wreg free
  3931  000674  A0D8               	btfss	status,0,c
  3932  000676  D00A               	goto	i2l3544
  3933                           
  3934                           ;aplicacao.c: 167: resultadoDosTestes[1] = 1;
  3935  000678  0E01               	movlw	1
  3936  00067A  0100               	movlb	0	; () banked
  3937  00067C  6FC0               	movwf	(_resultadoDosTestes+1)& (0+255),b
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;aplicacao.c: 168: escreverStringUart("Teste de Tensao no Carregamento: OK\n");
  3941  00067E  0E53               	movlw	low STR_24
  3942  000680  6E71               	movwf	i2escreverStringUart@string,c
  3943  000682  0EFE               	movlw	high STR_24
  3944  000684  6E72               	movwf	i2escreverStringUart@string+1,c
  3945  000686  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3946                           
  3947                           ;aplicacao.c: 169: }
  3948  00068A  D009               	goto	i2l3548
  3949  00068C                     i2l3544:
  3950                           
  3951                           ;aplicacao.c: 170: else {
  3952                           ;aplicacao.c: 171: resultadoDosTestes[1] = 0;
  3953  00068C  0E00               	movlw	0
  3954  00068E  0100               	movlb	0	; () banked
  3955  000690  6FC0               	movwf	(_resultadoDosTestes+1)& (0+255),b
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;aplicacao.c: 172: escreverStringUart("Teste de Tensao no Carregamento: NOK\n");
  3959  000692  0E2D               	movlw	low STR_25
  3960  000694  6E71               	movwf	i2escreverStringUart@string,c
  3961  000696  0EFE               	movlw	high STR_25
  3962  000698  6E72               	movwf	i2escreverStringUart@string+1,c
  3963  00069A  EC02  F014         	call	i2_escreverStringUart	;wreg free
  3964  00069E                     i2l3548:
  3965                           
  3966                           ;aplicacao.c: 173: }
  3967                           ;aplicacao.c: 175: float correnteMedia = (( correnteNaBateria[0] + correnteNaBateria[1] 
      +                          + correnteNaBateria[2] + correnteNaBateria[3] + correnteNaBateria[4] ) / 5);
  3968  00069E  C0B6  F031         	movff	_correnteNaBateria+6,___ftadd@f2
  3969  0006A2  C0B7  F032         	movff	_correnteNaBateria+7,___ftadd@f2+1
  3970  0006A6  C0B8  F033         	movff	_correnteNaBateria+8,___ftadd@f2+2
  3971  0006AA  C0B3  F02E         	movff	_correnteNaBateria+3,___ftadd@f1
  3972  0006AE  C0B4  F02F         	movff	_correnteNaBateria+4,___ftadd@f1+1
  3973  0006B2  C0B5  F030         	movff	_correnteNaBateria+5,___ftadd@f1+2
  3974  0006B6  EC65  F00E         	call	___ftadd	;wreg free
  3975  0006BA  C02E  F0A7         	movff	?___ftadd,_tratamento$1464
  3976  0006BE  C02F  F0A8         	movff	?___ftadd+1,_tratamento$1464+1
  3977  0006C2  C030  F0A9         	movff	?___ftadd+2,_tratamento$1464+2
  3978                           
  3979                           ;aplicacao.c: 173: }
  3980                           ;aplicacao.c: 175: float correnteMedia = (( correnteNaBateria[0] + correnteNaBateria[1] 
      +                          + correnteNaBateria[2] + correnteNaBateria[3] + correnteNaBateria[4] ) / 5);
  3981  0006C6  C0B9  F031         	movff	_correnteNaBateria+9,___ftadd@f2
  3982  0006CA  C0BA  F032         	movff	_correnteNaBateria+10,___ftadd@f2+1
  3983  0006CE  C0BB  F033         	movff	_correnteNaBateria+11,___ftadd@f2+2
  3984  0006D2  C0A7  F02E         	movff	_tratamento$1464,___ftadd@f1
  3985  0006D6  C0A8  F02F         	movff	_tratamento$1464+1,___ftadd@f1+1
  3986  0006DA  C0A9  F030         	movff	_tratamento$1464+2,___ftadd@f1+2
  3987  0006DE  EC65  F00E         	call	___ftadd	;wreg free
  3988  0006E2  C02E  F0AA         	movff	?___ftadd,_tratamento$1465
  3989  0006E6  C02F  F0AB         	movff	?___ftadd+1,_tratamento$1465+1
  3990  0006EA  C030  F0AC         	movff	?___ftadd+2,_tratamento$1465+2
  3991                           
  3992                           ;aplicacao.c: 173: }
  3993                           ;aplicacao.c: 175: float correnteMedia = (( correnteNaBateria[0] + correnteNaBateria[1] 
      +                          + correnteNaBateria[2] + correnteNaBateria[3] + correnteNaBateria[4] ) / 5);
  3994  0006EE  C0BC  F031         	movff	_correnteNaBateria+12,___ftadd@f2
  3995  0006F2  C0BD  F032         	movff	_correnteNaBateria+13,___ftadd@f2+1
  3996  0006F6  C0BE  F033         	movff	_correnteNaBateria+14,___ftadd@f2+2
  3997  0006FA  C0AA  F02E         	movff	_tratamento$1465,___ftadd@f1
  3998  0006FE  C0AB  F02F         	movff	_tratamento$1465+1,___ftadd@f1+1
  3999  000702  C0AC  F030         	movff	_tratamento$1465+2,___ftadd@f1+2
  4000  000706  EC65  F00E         	call	___ftadd	;wreg free
  4001  00070A  C02E  F0AD         	movff	?___ftadd,_tratamento$1466
  4002  00070E  C02F  F0AE         	movff	?___ftadd+1,_tratamento$1466+1
  4003  000712  C030  F0AF         	movff	?___ftadd+2,_tratamento$1466+2
  4004                           
  4005                           ;aplicacao.c: 173: }
  4006                           ;aplicacao.c: 175: float correnteMedia = (( correnteNaBateria[0] + correnteNaBateria[1] 
      +                          + correnteNaBateria[2] + correnteNaBateria[3] + correnteNaBateria[4] ) / 5);
  4007  000716  C0B0  F031         	movff	_correnteNaBateria,___ftadd@f2
  4008  00071A  C0B1  F032         	movff	_correnteNaBateria+1,___ftadd@f2+1
  4009  00071E  C0B2  F033         	movff	_correnteNaBateria+2,___ftadd@f2+2
  4010  000722  C0AD  F02E         	movff	_tratamento$1466,___ftadd@f1
  4011  000726  C0AE  F02F         	movff	_tratamento$1466+1,___ftadd@f1+1
  4012  00072A  C0AF  F030         	movff	_tratamento$1466+2,___ftadd@f1+2
  4013  00072E  EC65  F00E         	call	___ftadd	;wreg free
  4014  000732  C02E  F03A         	movff	?___ftadd,___ftdiv@f1
  4015  000736  C02F  F03B         	movff	?___ftadd+1,___ftdiv@f1+1
  4016  00073A  C030  F03C         	movff	?___ftadd+2,___ftdiv@f1+2
  4017  00073E  0E00               	movlw	0
  4018  000740  6E3D               	movwf	___ftdiv@f2,c
  4019  000742  0EA0               	movlw	160
  4020  000744  6E3E               	movwf	___ftdiv@f2+1,c
  4021  000746  0E40               	movlw	64
  4022  000748  6E3F               	movwf	___ftdiv@f2+2,c
  4023  00074A  ECD4  F011         	call	___ftdiv	;wreg free
  4024  00074E  C03A  F0A1         	movff	?___ftdiv,tratamento@correnteMedia
  4025  000752  C03B  F0A2         	movff	?___ftdiv+1,tratamento@correnteMedia+1
  4026  000756  C03C  F0A3         	movff	?___ftdiv+2,tratamento@correnteMedia+2
  4027                           
  4028                           ;aplicacao.c: 176: escreverStringUart("Corrente Media: ");
  4029  00075A  0EB0               	movlw	low STR_26
  4030  00075C  6E71               	movwf	i2escreverStringUart@string,c
  4031  00075E  0EFF               	movlw	high STR_26
  4032  000760  6E72               	movwf	i2escreverStringUart@string+1,c
  4033  000762  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4034                           
  4035                           ;aplicacao.c: 177: escreverStringUart(converterFloatParaString(correnteMedia));
  4036  000766  C0A1  F064         	movff	tratamento@correnteMedia,converterFloatParaString@valorParaSerConvertido
  4037  00076A  C0A2  F065         	movff	tratamento@correnteMedia+1,converterFloatParaString@valorParaSerConvertido+1
  4038  00076E  C0A3  F066         	movff	tratamento@correnteMedia+2,converterFloatParaString@valorParaSerConvertido+2
  4039  000772  EC1D  F016         	call	_converterFloatParaString	;wreg free
  4040  000776  0100               	movlb	0	; () banked
  4041  000778  6F80               	movwf	??_tratamento& (0+255),b
  4042  00077A  6B81               	clrf	(??_tratamento+1)& (0+255),b
  4043  00077C  C080  F071         	movff	??_tratamento,i2escreverStringUart@string
  4044  000780  C081  F072         	movff	??_tratamento+1,i2escreverStringUart@string+1
  4045  000784  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4046                           
  4047                           ;aplicacao.c: 178: escreverStringUart(" A\n");
  4048  000788  0EEB               	movlw	low STR_27
  4049  00078A  6E71               	movwf	i2escreverStringUart@string,c
  4050  00078C  0EFF               	movlw	high STR_27
  4051  00078E  6E72               	movwf	i2escreverStringUart@string+1,c
  4052  000790  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4053                           
  4054                           ;aplicacao.c: 179: if( (correnteMedia >= 0.260) && (correnteMedia <= 0.340) ) {
  4055  000794  C0A1  F015         	movff	tratamento@correnteMedia,___ftge@ff1
  4056  000798  C0A2  F016         	movff	tratamento@correnteMedia+1,___ftge@ff1+1
  4057  00079C  C0A3  F017         	movff	tratamento@correnteMedia+2,___ftge@ff1+2
  4058  0007A0  0E1F               	movlw	31
  4059  0007A2  6E18               	movwf	___ftge@ff2,c
  4060  0007A4  0E85               	movlw	133
  4061  0007A6  6E19               	movwf	___ftge@ff2+1,c
  4062  0007A8  0E3E               	movlw	62
  4063  0007AA  6E1A               	movwf	___ftge@ff2+2,c
  4064  0007AC  EC37  F013         	call	___ftge	;wreg free
  4065  0007B0  A0D8               	btfss	status,0,c
  4066  0007B2  D01A               	goto	i2l3570
  4067  0007B4  0E14               	movlw	20
  4068  0007B6  6E15               	movwf	___ftge@ff1,c
  4069  0007B8  0EAE               	movlw	174
  4070  0007BA  6E16               	movwf	___ftge@ff1+1,c
  4071  0007BC  0E3E               	movlw	62
  4072  0007BE  6E17               	movwf	___ftge@ff1+2,c
  4073  0007C0  C0A1  F018         	movff	tratamento@correnteMedia,___ftge@ff2
  4074  0007C4  C0A2  F019         	movff	tratamento@correnteMedia+1,___ftge@ff2+1
  4075  0007C8  C0A3  F01A         	movff	tratamento@correnteMedia+2,___ftge@ff2+2
  4076  0007CC  EC37  F013         	call	___ftge	;wreg free
  4077  0007D0  A0D8               	btfss	status,0,c
  4078  0007D2  D00A               	goto	i2l3570
  4079                           
  4080                           ;aplicacao.c: 180: resultadoDosTestes[2] = 1;
  4081  0007D4  0E01               	movlw	1
  4082  0007D6  0100               	movlb	0	; () banked
  4083  0007D8  6FC1               	movwf	(_resultadoDosTestes+2)& (0+255),b
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;aplicacao.c: 181: escreverStringUart("Teste de Corrente no Carregamento: OK\n");
  4087  0007DA  0E06               	movlw	low STR_28
  4088  0007DC  6E71               	movwf	i2escreverStringUart@string,c
  4089  0007DE  0EFE               	movlw	high STR_28
  4090  0007E0  6E72               	movwf	i2escreverStringUart@string+1,c
  4091  0007E2  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4092                           
  4093                           ;aplicacao.c: 182: }
  4094  0007E6  D009               	goto	i2l3574
  4095  0007E8                     i2l3570:
  4096                           
  4097                           ;aplicacao.c: 183: else {
  4098                           ;aplicacao.c: 184: resultadoDosTestes[2] = 0;
  4099  0007E8  0E00               	movlw	0
  4100  0007EA  0100               	movlb	0	; () banked
  4101  0007EC  6FC1               	movwf	(_resultadoDosTestes+2)& (0+255),b
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;aplicacao.c: 185: escreverStringUart("Teste de Corrente no Carregamento: NOK\n");
  4105  0007EE  0EDE               	movlw	low STR_29
  4106  0007F0  6E71               	movwf	i2escreverStringUart@string,c
  4107  0007F2  0EFD               	movlw	high STR_29
  4108  0007F4  6E72               	movwf	i2escreverStringUart@string+1,c
  4109  0007F6  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4110  0007FA                     i2l3574:
  4111                           
  4112                           ;aplicacao.c: 186: }
  4113                           ;aplicacao.c: 188: if((resultadoDosTestes[1] == 1) && resultadoDosTestes[2] == 1) {
  4114  0007FA  0100               	movlb	0	; () banked
  4115  0007FC  05C0               	decf	(_resultadoDosTestes+1)& (0+255),w,b
  4116  0007FE  A4D8               	btfss	status,2,c
  4117  000800  D00E               	goto	i2l3582
  4118                           
  4119                           ; BSR set to: 0
  4120  000802  0100               	movlb	0	; () banked
  4121  000804  05C1               	decf	(_resultadoDosTestes+2)& (0+255),w,b
  4122  000806  A4D8               	btfss	status,2,c
  4123  000808  D00A               	goto	i2l3582
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;aplicacao.c: 189: statusDaBateria = 2;
  4127  00080A  0E02               	movlw	2
  4128  00080C  0100               	movlb	0	; () banked
  4129  00080E  6FC4               	movwf	_statusDaBateria& (0+255),b
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;aplicacao.c: 190: escreverStringUart("\nDescarregamento Habilitado!\n");
  4133  000810  0EB9               	movlw	low STR_30
  4134  000812  6E71               	movwf	i2escreverStringUart@string,c
  4135  000814  0EFE               	movlw	high STR_30
  4136  000816  6E72               	movwf	i2escreverStringUart@string+1,c
  4137  000818  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4138                           
  4139                           ;aplicacao.c: 191: }
  4140  00081C  D331               	goto	i2l3720
  4141  00081E                     i2l3582:
  4142                           
  4143                           ;aplicacao.c: 192: else {
  4144                           ;aplicacao.c: 193: escreverStringUart("\nDescarregamento nao Habilitado!\n");
  4145  00081E  0E78               	movlw	low STR_31
  4146  000820  6E71               	movwf	i2escreverStringUart@string,c
  4147  000822  0EFE               	movlw	high STR_31
  4148  000824  6E72               	movwf	i2escreverStringUart@string+1,c
  4149  000826  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4150  00082A  D2C6               	goto	i2l3686
  4151  00082C                     i2l3586:
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;aplicacao.c: 201: else if(statusDaBateria == 2) {
  4155  00082C  0E02               	movlw	2
  4156  00082E  0100               	movlb	0	; () banked
  4157  000830  19C4               	xorwf	_statusDaBateria& (0+255),w,b
  4158  000832  A4D8               	btfss	status,2,c
  4159  000834  D2C5               	goto	i2l3688
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;aplicacao.c: 202: desabilitarCarregamentoDaBateria();
  4163  000836  ECA2  F016         	call	i2_desabilitarCarregamentoDaBateria	;wreg free
  4164                           
  4165                           ;aplicacao.c: 203: habilitarDescarregamentoDaBateria();
  4166  00083A  ECC2  F016         	call	_habilitarDescarregamentoDaBateria	;wreg free
  4167                           
  4168                           ;aplicacao.c: 204: tempoEmSegundos++;
  4169  00083E  0100               	movlb	0	; () banked
  4170  000840  2BC5               	incf	_tempoEmSegundos& (0+255),f,b
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;aplicacao.c: 206: tensaoNaBateria[contador] = ((5.0 * lerAdcAn0()) / 1023);
  4174  000842  0E00               	movlw	0
  4175  000844  6E18               	movwf	___ftmul@f2,c
  4176  000846  0EA0               	movlw	160
  4177  000848  6E19               	movwf	___ftmul@f2+1,c
  4178  00084A  0E40               	movlw	64
  4179  00084C  6E1A               	movwf	___ftmul@f2+2,c
  4180  00084E  EC84  F015         	call	_lerAdcAn0	;wreg free
  4181  000852  C001  F009         	movff	?_lerAdcAn0,___awtoft@c
  4182  000856  C002  F00A         	movff	?_lerAdcAn0+1,___awtoft@c+1
  4183  00085A  ECBE  F015         	call	___awtoft	;wreg free
  4184  00085E  C009  F015         	movff	?___awtoft,___ftmul@f1
  4185  000862  C00A  F016         	movff	?___awtoft+1,___ftmul@f1+1
  4186  000866  C00B  F017         	movff	?___awtoft+2,___ftmul@f1+2
  4187  00086A  EC68  F010         	call	___ftmul	;wreg free
  4188  00086E  C015  F03A         	movff	?___ftmul,___ftdiv@f1
  4189  000872  C016  F03B         	movff	?___ftmul+1,___ftdiv@f1+1
  4190  000876  C017  F03C         	movff	?___ftmul+2,___ftdiv@f1+2
  4191  00087A  0EC0               	movlw	192
  4192  00087C  6E3D               	movwf	___ftdiv@f2,c
  4193  00087E  0E7F               	movlw	127
  4194  000880  6E3E               	movwf	___ftdiv@f2+1,c
  4195  000882  0E44               	movlw	68
  4196  000884  6E3F               	movwf	___ftdiv@f2+2,c
  4197  000886  ECD4  F011         	call	___ftdiv	;wreg free
  4198  00088A  0100               	movlb	0	; () banked
  4199  00088C  51C6               	movf	_contador& (0+255),w,b
  4200  00088E  0D03               	mullw	3
  4201  000890  0EC7               	movlw	low _tensaoNaBateria
  4202  000892  24F3               	addwf	prodl,w,c
  4203  000894  6ED9               	movwf	fsr2l,c
  4204  000896  0E00               	movlw	high _tensaoNaBateria
  4205  000898  20F4               	addwfc	prodh,w,c
  4206  00089A  6EDA               	movwf	fsr2h,c
  4207  00089C  C03A  FFDE         	movff	?___ftdiv,postinc2
  4208  0008A0  C03B  FFDE         	movff	?___ftdiv+1,postinc2
  4209  0008A4  C03C  FFDE         	movff	?___ftdiv+2,postinc2
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;aplicacao.c: 207: correnteNaBateria[contador] = (((tensaoNaBateria[contador]) - ((5.0 *
      +                           lerAdcAn1()) / 1023)) / 0.47);
  4213  0008A8  0100               	movlb	0	; () banked
  4214  0008AA  51C6               	movf	_contador& (0+255),w,b
  4215  0008AC  0D03               	mullw	3
  4216  0008AE  0EC7               	movlw	low _tensaoNaBateria
  4217  0008B0  24F3               	addwf	prodl,w,c
  4218  0008B2  6ED9               	movwf	fsr2l,c
  4219  0008B4  0E00               	movlw	high _tensaoNaBateria
  4220  0008B6  20F4               	addwfc	prodh,w,c
  4221  0008B8  6EDA               	movwf	fsr2h,c
  4222  0008BA  CFDE F031          	movff	postinc2,___ftadd@f2
  4223  0008BE  CFDE F032          	movff	postinc2,___ftadd@f2+1
  4224  0008C2  CFDD F033          	movff	postdec2,___ftadd@f2+2
  4225  0008C6  0EC0               	movlw	192
  4226  0008C8  6E3D               	movwf	___ftdiv@f2,c
  4227  0008CA  0E7F               	movlw	127
  4228  0008CC  6E3E               	movwf	___ftdiv@f2+1,c
  4229  0008CE  0E44               	movlw	68
  4230  0008D0  6E3F               	movwf	___ftdiv@f2+2,c
  4231  0008D2  0E00               	movlw	0
  4232  0008D4  6E18               	movwf	___ftmul@f2,c
  4233  0008D6  0EA0               	movlw	160
  4234  0008D8  6E19               	movwf	___ftmul@f2+1,c
  4235  0008DA  0E40               	movlw	64
  4236  0008DC  6E1A               	movwf	___ftmul@f2+2,c
  4237  0008DE  EC66  F015         	call	_lerAdcAn1	;wreg free
  4238  0008E2  C001  F009         	movff	?_lerAdcAn1,___awtoft@c
  4239  0008E6  C002  F00A         	movff	?_lerAdcAn1+1,___awtoft@c+1
  4240  0008EA  ECBE  F015         	call	___awtoft	;wreg free
  4241  0008EE  C009  F015         	movff	?___awtoft,___ftmul@f1
  4242  0008F2  C00A  F016         	movff	?___awtoft+1,___ftmul@f1+1
  4243  0008F6  C00B  F017         	movff	?___awtoft+2,___ftmul@f1+2
  4244  0008FA  EC68  F010         	call	___ftmul	;wreg free
  4245  0008FE  C015  F03A         	movff	?___ftmul,___ftdiv@f1
  4246  000902  C016  F03B         	movff	?___ftmul+1,___ftdiv@f1+1
  4247  000906  C017  F03C         	movff	?___ftmul+2,___ftdiv@f1+2
  4248  00090A  ECD4  F011         	call	___ftdiv	;wreg free
  4249  00090E  C03A  F024         	movff	?___ftdiv,___ftneg@f1
  4250  000912  C03B  F025         	movff	?___ftdiv+1,___ftneg@f1+1
  4251  000916  C03C  F026         	movff	?___ftdiv+2,___ftneg@f1+2
  4252  00091A  EC2F  F016         	call	___ftneg	;wreg free
  4253  00091E  C024  F02E         	movff	?___ftneg,___ftadd@f1
  4254  000922  C025  F02F         	movff	?___ftneg+1,___ftadd@f1+1
  4255  000926  C026  F030         	movff	?___ftneg+2,___ftadd@f1+2
  4256  00092A  EC65  F00E         	call	___ftadd	;wreg free
  4257  00092E  C02E  F09B         	movff	?___ftadd,_tratamento$1467
  4258  000932  C02F  F09C         	movff	?___ftadd+1,_tratamento$1467+1
  4259  000936  C030  F09D         	movff	?___ftadd+2,_tratamento$1467+2
  4260                           
  4261                           ;aplicacao.c: 207: correnteNaBateria[contador] = (((tensaoNaBateria[contador]) - ((5.0 *
      +                           lerAdcAn1()) / 1023)) / 0.47);
  4262  00093A  C09B  F03A         	movff	_tratamento$1467,___ftdiv@f1
  4263  00093E  C09C  F03B         	movff	_tratamento$1467+1,___ftdiv@f1+1
  4264  000942  C09D  F03C         	movff	_tratamento$1467+2,___ftdiv@f1+2
  4265  000946  0EA4               	movlw	164
  4266  000948  6E3D               	movwf	___ftdiv@f2,c
  4267  00094A  0EF0               	movlw	240
  4268  00094C  6E3E               	movwf	___ftdiv@f2+1,c
  4269  00094E  0E3E               	movlw	62
  4270  000950  6E3F               	movwf	___ftdiv@f2+2,c
  4271  000952  ECD4  F011         	call	___ftdiv	;wreg free
  4272  000956  0100               	movlb	0	; () banked
  4273  000958  51C6               	movf	_contador& (0+255),w,b
  4274  00095A  0D03               	mullw	3
  4275  00095C  0EB0               	movlw	low _correnteNaBateria
  4276  00095E  24F3               	addwf	prodl,w,c
  4277  000960  6ED9               	movwf	fsr2l,c
  4278  000962  0E00               	movlw	high _correnteNaBateria
  4279  000964  20F4               	addwfc	prodh,w,c
  4280  000966  6EDA               	movwf	fsr2h,c
  4281  000968  C03A  FFDE         	movff	?___ftdiv,postinc2
  4282  00096C  C03B  FFDE         	movff	?___ftdiv+1,postinc2
  4283  000970  C03C  FFDE         	movff	?___ftdiv+2,postinc2
  4284                           
  4285                           ; BSR set to: 0
  4286                           ;aplicacao.c: 209: escreverStringUart("\nCarregamento: Desabilitado | Descarregamento: H
      +                          abilitado | Teste: ");
  4287  000974  0E4B               	movlw	low STR_32
  4288  000976  6E71               	movwf	i2escreverStringUart@string,c
  4289  000978  0EFC               	movlw	high STR_32
  4290  00097A  6E72               	movwf	i2escreverStringUart@string+1,c
  4291  00097C  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4292                           
  4293                           ;aplicacao.c: 210: escreverStringUart(converterIntParaString(contador + 1));
  4294  000980  0E01               	movlw	1
  4295  000982  0100               	movlb	0	; () banked
  4296  000984  25C6               	addwf	_contador& (0+255),w,b
  4297  000986  6E64               	movwf	converterIntParaString@valorParaSerConvertido,c
  4298  000988  6A65               	clrf	converterIntParaString@valorParaSerConvertido+1,c
  4299  00098A  0E00               	movlw	0
  4300  00098C  2265               	addwfc	converterIntParaString@valorParaSerConvertido+1,f,c
  4301  00098E  EC41  F016         	call	_converterIntParaString	;wreg free
  4302  000992  0100               	movlb	0	; () banked
  4303  000994  6F80               	movwf	??_tratamento& (0+255),b
  4304  000996  6B81               	clrf	(??_tratamento+1)& (0+255),b
  4305  000998  C080  F071         	movff	??_tratamento,i2escreverStringUart@string
  4306  00099C  C081  F072         	movff	??_tratamento+1,i2escreverStringUart@string+1
  4307  0009A0  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4308                           
  4309                           ;aplicacao.c: 211: escreverStringUart(" | ");
  4310  0009A4  0EE7               	movlw	low (STR_19+2)
  4311  0009A6  6E71               	movwf	i2escreverStringUart@string,c
  4312  0009A8  0EFF               	movlw	high (STR_19+2)
  4313  0009AA  6E72               	movwf	i2escreverStringUart@string+1,c
  4314  0009AC  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4315                           
  4316                           ;aplicacao.c: 212: escreverStringUart("Tensao: ");
  4317  0009B0  0EDC               	movlw	low STR_8
  4318  0009B2  6E71               	movwf	i2escreverStringUart@string,c
  4319  0009B4  0EFF               	movlw	high STR_8
  4320  0009B6  6E72               	movwf	i2escreverStringUart@string+1,c
  4321  0009B8  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4322                           
  4323                           ;aplicacao.c: 213: escreverStringUart(converterFloatParaString(tensaoNaBateria[contador]
      +                          ));
  4324  0009BC  0100               	movlb	0	; () banked
  4325  0009BE  51C6               	movf	_contador& (0+255),w,b
  4326  0009C0  0D03               	mullw	3
  4327  0009C2  0EC7               	movlw	low _tensaoNaBateria
  4328  0009C4  24F3               	addwf	prodl,w,c
  4329  0009C6  6ED9               	movwf	fsr2l,c
  4330  0009C8  0E00               	movlw	high _tensaoNaBateria
  4331  0009CA  20F4               	addwfc	prodh,w,c
  4332  0009CC  6EDA               	movwf	fsr2h,c
  4333  0009CE  CFDE F064          	movff	postinc2,converterFloatParaString@valorParaSerConvertido
  4334  0009D2  CFDE F065          	movff	postinc2,converterFloatParaString@valorParaSerConvertido+1
  4335  0009D6  CFDD F066          	movff	postdec2,converterFloatParaString@valorParaSerConvertido+2
  4336  0009DA  EC1D  F016         	call	_converterFloatParaString	;wreg free
  4337  0009DE  0100               	movlb	0	; () banked
  4338  0009E0  6F80               	movwf	??_tratamento& (0+255),b
  4339  0009E2  6B81               	clrf	(??_tratamento+1)& (0+255),b
  4340  0009E4  C080  F071         	movff	??_tratamento,i2escreverStringUart@string
  4341  0009E8  C081  F072         	movff	??_tratamento+1,i2escreverStringUart@string+1
  4342  0009EC  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4343                           
  4344                           ;aplicacao.c: 214: escreverStringUart(" V | ");
  4345  0009F0  0EE5               	movlw	low STR_19
  4346  0009F2  6E71               	movwf	i2escreverStringUart@string,c
  4347  0009F4  0EFF               	movlw	high STR_19
  4348  0009F6  6E72               	movwf	i2escreverStringUart@string+1,c
  4349  0009F8  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4350                           
  4351                           ;aplicacao.c: 215: escreverStringUart("Corrente: ");
  4352  0009FC  0ED1               	movlw	low STR_20
  4353  0009FE  6E71               	movwf	i2escreverStringUart@string,c
  4354  000A00  0EFF               	movlw	high STR_20
  4355  000A02  6E72               	movwf	i2escreverStringUart@string+1,c
  4356  000A04  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4357                           
  4358                           ;aplicacao.c: 216: escreverStringUart(converterFloatParaString(correnteNaBateria[contado
      +                          r]));
  4359  000A08  0100               	movlb	0	; () banked
  4360  000A0A  51C6               	movf	_contador& (0+255),w,b
  4361  000A0C  0D03               	mullw	3
  4362  000A0E  0EB0               	movlw	low _correnteNaBateria
  4363  000A10  24F3               	addwf	prodl,w,c
  4364  000A12  6ED9               	movwf	fsr2l,c
  4365  000A14  0E00               	movlw	high _correnteNaBateria
  4366  000A16  20F4               	addwfc	prodh,w,c
  4367  000A18  6EDA               	movwf	fsr2h,c
  4368  000A1A  CFDE F064          	movff	postinc2,converterFloatParaString@valorParaSerConvertido
  4369  000A1E  CFDE F065          	movff	postinc2,converterFloatParaString@valorParaSerConvertido+1
  4370  000A22  CFDD F066          	movff	postdec2,converterFloatParaString@valorParaSerConvertido+2
  4371  000A26  EC1D  F016         	call	_converterFloatParaString	;wreg free
  4372  000A2A  0100               	movlb	0	; () banked
  4373  000A2C  6F80               	movwf	??_tratamento& (0+255),b
  4374  000A2E  6B81               	clrf	(??_tratamento+1)& (0+255),b
  4375  000A30  C080  F071         	movff	??_tratamento,i2escreverStringUart@string
  4376  000A34  C081  F072         	movff	??_tratamento+1,i2escreverStringUart@string+1
  4377  000A38  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4378                           
  4379                           ;aplicacao.c: 217: escreverStringUart(" A");
  4380  000A3C  0EF3               	movlw	low STR_21
  4381  000A3E  6E71               	movwf	i2escreverStringUart@string,c
  4382  000A40  0EFF               	movlw	high STR_21
  4383  000A42  6E72               	movwf	i2escreverStringUart@string+1,c
  4384  000A44  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4385                           
  4386                           ;aplicacao.c: 219: contador++;
  4387  000A48  0100               	movlb	0	; () banked
  4388  000A4A  2BC6               	incf	_contador& (0+255),f,b
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;aplicacao.c: 221: if(tempoEmSegundos == 5) {
  4392  000A4C  0E05               	movlw	5
  4393  000A4E  0100               	movlb	0	; () banked
  4394  000A50  19C5               	xorwf	_tempoEmSegundos& (0+255),w,b
  4395  000A52  A4D8               	btfss	status,2,c
  4396  000A54  D215               	goto	i2l3720
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;aplicacao.c: 222: contador = 0;
  4400  000A56  0E00               	movlw	0
  4401  000A58  0100               	movlb	0	; () banked
  4402  000A5A  6FC6               	movwf	_contador& (0+255),b
  4403                           
  4404                           ;aplicacao.c: 223: tempoEmSegundos = 0;
  4405  000A5C  0E00               	movlw	0
  4406  000A5E  0100               	movlb	0	; () banked
  4407  000A60  6FC5               	movwf	_tempoEmSegundos& (0+255),b
  4408                           
  4409                           ; BSR set to: 0
  4410                           ;aplicacao.c: 225: float tensaoMedia = (( tensaoNaBateria[0] + tensaoNaBateria[1] + tens
      +                          aoNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4] ) / 5);
  4411  000A62  C0CD  F031         	movff	_tensaoNaBateria+6,___ftadd@f2
  4412  000A66  C0CE  F032         	movff	_tensaoNaBateria+7,___ftadd@f2+1
  4413  000A6A  C0CF  F033         	movff	_tensaoNaBateria+8,___ftadd@f2+2
  4414  000A6E  C0CA  F02E         	movff	_tensaoNaBateria+3,___ftadd@f1
  4415  000A72  C0CB  F02F         	movff	_tensaoNaBateria+4,___ftadd@f1+1
  4416  000A76  C0CC  F030         	movff	_tensaoNaBateria+5,___ftadd@f1+2
  4417  000A7A  EC65  F00E         	call	___ftadd	;wreg free
  4418  000A7E  C02E  F0A7         	movff	?___ftadd,_tratamento$1464
  4419  000A82  C02F  F0A8         	movff	?___ftadd+1,_tratamento$1464+1
  4420  000A86  C030  F0A9         	movff	?___ftadd+2,_tratamento$1464+2
  4421                           
  4422                           ;aplicacao.c: 225: float tensaoMedia = (( tensaoNaBateria[0] + tensaoNaBateria[1] + tens
      +                          aoNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4] ) / 5);
  4423  000A8A  C0D0  F031         	movff	_tensaoNaBateria+9,___ftadd@f2
  4424  000A8E  C0D1  F032         	movff	_tensaoNaBateria+10,___ftadd@f2+1
  4425  000A92  C0D2  F033         	movff	_tensaoNaBateria+11,___ftadd@f2+2
  4426  000A96  C0A7  F02E         	movff	_tratamento$1464,___ftadd@f1
  4427  000A9A  C0A8  F02F         	movff	_tratamento$1464+1,___ftadd@f1+1
  4428  000A9E  C0A9  F030         	movff	_tratamento$1464+2,___ftadd@f1+2
  4429  000AA2  EC65  F00E         	call	___ftadd	;wreg free
  4430  000AA6  C02E  F0AA         	movff	?___ftadd,_tratamento$1465
  4431  000AAA  C02F  F0AB         	movff	?___ftadd+1,_tratamento$1465+1
  4432  000AAE  C030  F0AC         	movff	?___ftadd+2,_tratamento$1465+2
  4433                           
  4434                           ;aplicacao.c: 225: float tensaoMedia = (( tensaoNaBateria[0] + tensaoNaBateria[1] + tens
      +                          aoNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4] ) / 5);
  4435  000AB2  C0D3  F031         	movff	_tensaoNaBateria+12,___ftadd@f2
  4436  000AB6  C0D4  F032         	movff	_tensaoNaBateria+13,___ftadd@f2+1
  4437  000ABA  C0D5  F033         	movff	_tensaoNaBateria+14,___ftadd@f2+2
  4438  000ABE  C0AA  F02E         	movff	_tratamento$1465,___ftadd@f1
  4439  000AC2  C0AB  F02F         	movff	_tratamento$1465+1,___ftadd@f1+1
  4440  000AC6  C0AC  F030         	movff	_tratamento$1465+2,___ftadd@f1+2
  4441  000ACA  EC65  F00E         	call	___ftadd	;wreg free
  4442  000ACE  C02E  F0AD         	movff	?___ftadd,_tratamento$1466
  4443  000AD2  C02F  F0AE         	movff	?___ftadd+1,_tratamento$1466+1
  4444  000AD6  C030  F0AF         	movff	?___ftadd+2,_tratamento$1466+2
  4445                           
  4446                           ;aplicacao.c: 225: float tensaoMedia = (( tensaoNaBateria[0] + tensaoNaBateria[1] + tens
      +                          aoNaBateria[2] + tensaoNaBateria[3] + tensaoNaBateria[4] ) / 5);
  4447  000ADA  C0C7  F031         	movff	_tensaoNaBateria,___ftadd@f2
  4448  000ADE  C0C8  F032         	movff	_tensaoNaBateria+1,___ftadd@f2+1
  4449  000AE2  C0C9  F033         	movff	_tensaoNaBateria+2,___ftadd@f2+2
  4450  000AE6  C0AD  F02E         	movff	_tratamento$1466,___ftadd@f1
  4451  000AEA  C0AE  F02F         	movff	_tratamento$1466+1,___ftadd@f1+1
  4452  000AEE  C0AF  F030         	movff	_tratamento$1466+2,___ftadd@f1+2
  4453  000AF2  EC65  F00E         	call	___ftadd	;wreg free
  4454  000AF6  C02E  F03A         	movff	?___ftadd,___ftdiv@f1
  4455  000AFA  C02F  F03B         	movff	?___ftadd+1,___ftdiv@f1+1
  4456  000AFE  C030  F03C         	movff	?___ftadd+2,___ftdiv@f1+2
  4457  000B02  0E00               	movlw	0
  4458  000B04  6E3D               	movwf	___ftdiv@f2,c
  4459  000B06  0EA0               	movlw	160
  4460  000B08  6E3E               	movwf	___ftdiv@f2+1,c
  4461  000B0A  0E40               	movlw	64
  4462  000B0C  6E3F               	movwf	___ftdiv@f2+2,c
  4463  000B0E  ECD4  F011         	call	___ftdiv	;wreg free
  4464  000B12  C03A  F096         	movff	?___ftdiv,tratamento@tensaoMedia_781
  4465  000B16  C03B  F097         	movff	?___ftdiv+1,tratamento@tensaoMedia_781+1
  4466  000B1A  C03C  F098         	movff	?___ftdiv+2,tratamento@tensaoMedia_781+2
  4467                           
  4468                           ;aplicacao.c: 226: int indexTensaoMinima = indexDoMenorValor(tensaoNaBateria,5);
  4469  000B1E  0EC7               	movlw	low _tensaoNaBateria
  4470  000B20  6E1E               	movwf	indexDoMenorValor@dados,c
  4471  000B22  0E00               	movlw	high _tensaoNaBateria
  4472  000B24  6E1F               	movwf	indexDoMenorValor@dados+1,c
  4473  000B26  0E00               	movlw	0
  4474  000B28  6E21               	movwf	indexDoMenorValor@quantidadeDeValoresParaAnalisar+1,c
  4475  000B2A  0E05               	movlw	5
  4476  000B2C  6E20               	movwf	indexDoMenorValor@quantidadeDeValoresParaAnalisar,c
  4477  000B2E  EC5C  F011         	call	_indexDoMenorValor	;wreg free
  4478  000B32  C01E  F099         	movff	?_indexDoMenorValor,tratamento@indexTensaoMinima
  4479  000B36  C01F  F09A         	movff	?_indexDoMenorValor+1,tratamento@indexTensaoMinima+1
  4480                           
  4481                           ;aplicacao.c: 228: escreverStringUart("\nTensao Media: ");
  4482  000B3A  0EC1               	movlw	low STR_10
  4483  000B3C  6E71               	movwf	i2escreverStringUart@string,c
  4484  000B3E  0EFF               	movlw	high STR_10
  4485  000B40  6E72               	movwf	i2escreverStringUart@string+1,c
  4486  000B42  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4487                           
  4488                           ;aplicacao.c: 229: escreverStringUart(converterFloatParaString(tensaoMedia));
  4489  000B46  C096  F064         	movff	tratamento@tensaoMedia_781,converterFloatParaString@valorParaSerConvertido
  4490  000B4A  C097  F065         	movff	tratamento@tensaoMedia_781+1,converterFloatParaString@valorParaSerConvertido+1
  4491  000B4E  C098  F066         	movff	tratamento@tensaoMedia_781+2,converterFloatParaString@valorParaSerConvertido+2
  4492  000B52  EC1D  F016         	call	_converterFloatParaString	;wreg free
  4493  000B56  0100               	movlb	0	; () banked
  4494  000B58  6F80               	movwf	??_tratamento& (0+255),b
  4495  000B5A  6B81               	clrf	(??_tratamento+1)& (0+255),b
  4496  000B5C  C080  F071         	movff	??_tratamento,i2escreverStringUart@string
  4497  000B60  C081  F072         	movff	??_tratamento+1,i2escreverStringUart@string+1
  4498  000B64  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4499                           
  4500                           ;aplicacao.c: 230: escreverStringUart(" V");
  4501  000B68  0EF6               	movlw	low STR_9
  4502  000B6A  6E71               	movwf	i2escreverStringUart@string,c
  4503  000B6C  0EFF               	movlw	high STR_9
  4504  000B6E  6E72               	movwf	i2escreverStringUart@string+1,c
  4505  000B70  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4506                           
  4507                           ;aplicacao.c: 231: escreverStringUart("\nMenor tensao medida: ");
  4508  000B74  0E99               	movlw	low STR_40
  4509  000B76  6E71               	movwf	i2escreverStringUart@string,c
  4510  000B78  0EFF               	movlw	high STR_40
  4511  000B7A  6E72               	movwf	i2escreverStringUart@string+1,c
  4512  000B7C  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4513                           
  4514                           ;aplicacao.c: 232: escreverStringUart(converterFloatParaString(tensaoNaBateria[indexTens
      +                          aoMinima]));
  4515  000B80  C099  F00F         	movff	tratamento@indexTensaoMinima,___wmul@multiplier
  4516  000B84  C09A  F010         	movff	tratamento@indexTensaoMinima+1,___wmul@multiplier+1
  4517  000B88  0E00               	movlw	0
  4518  000B8A  6E12               	movwf	___wmul@multiplicand+1,c
  4519  000B8C  0E03               	movlw	3
  4520  000B8E  6E11               	movwf	___wmul@multiplicand,c
  4521  000B90  EC0A  F016         	call	___wmul	;wreg free
  4522  000B94  0EC7               	movlw	low _tensaoNaBateria
  4523  000B96  240F               	addwf	?___wmul,w,c
  4524  000B98  6ED9               	movwf	fsr2l,c
  4525  000B9A  0E00               	movlw	high _tensaoNaBateria
  4526  000B9C  2010               	addwfc	?___wmul+1,w,c
  4527  000B9E  6EDA               	movwf	fsr2h,c
  4528  000BA0  CFDE F090          	movff	postinc2,_tratamento$1468
  4529  000BA4  CFDE F091          	movff	postinc2,_tratamento$1468+1
  4530  000BA8  CFDD F092          	movff	postdec2,_tratamento$1468+2
  4531                           
  4532                           ;aplicacao.c: 232: escreverStringUart(converterFloatParaString(tensaoNaBateria[indexTens
      +                          aoMinima]));
  4533  000BAC  C090  F064         	movff	_tratamento$1468,converterFloatParaString@valorParaSerConvertido
  4534  000BB0  C091  F065         	movff	_tratamento$1468+1,converterFloatParaString@valorParaSerConvertido+1
  4535  000BB4  C092  F066         	movff	_tratamento$1468+2,converterFloatParaString@valorParaSerConvertido+2
  4536  000BB8  EC1D  F016         	call	_converterFloatParaString	;wreg free
  4537  000BBC  0100               	movlb	0	; () banked
  4538  000BBE  6F80               	movwf	??_tratamento& (0+255),b
  4539  000BC0  6B81               	clrf	(??_tratamento+1)& (0+255),b
  4540  000BC2  C080  F071         	movff	??_tratamento,i2escreverStringUart@string
  4541  000BC6  C081  F072         	movff	??_tratamento+1,i2escreverStringUart@string+1
  4542  000BCA  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4543                           
  4544                           ;aplicacao.c: 233: escreverStringUart(" V\n");
  4545  000BCE  0EEF               	movlw	low STR_11
  4546  000BD0  6E71               	movwf	i2escreverStringUart@string,c
  4547  000BD2  0EFF               	movlw	high STR_11
  4548  000BD4  6E72               	movwf	i2escreverStringUart@string+1,c
  4549  000BD6  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4550                           
  4551                           ;aplicacao.c: 234: if((tensaoMedia >= 3.3) && (tensaoNaBateria[indexTensaoMinima] >= 3.0
      +                          )) {
  4552  000BDA  C096  F015         	movff	tratamento@tensaoMedia_781,___ftge@ff1
  4553  000BDE  C097  F016         	movff	tratamento@tensaoMedia_781+1,___ftge@ff1+1
  4554  000BE2  C098  F017         	movff	tratamento@tensaoMedia_781+2,___ftge@ff1+2
  4555  000BE6  0E33               	movlw	51
  4556  000BE8  6E18               	movwf	___ftge@ff2,c
  4557  000BEA  0E53               	movlw	83
  4558  000BEC  6E19               	movwf	___ftge@ff2+1,c
  4559  000BEE  0E40               	movlw	64
  4560  000BF0  6E1A               	movwf	___ftge@ff2+2,c
  4561  000BF2  EC37  F013         	call	___ftge	;wreg free
  4562  000BF6  A0D8               	btfss	status,0,c
  4563  000BF8  D028               	goto	i2l3656
  4564  000BFA  C099  F00F         	movff	tratamento@indexTensaoMinima,___wmul@multiplier
  4565  000BFE  C09A  F010         	movff	tratamento@indexTensaoMinima+1,___wmul@multiplier+1
  4566  000C02  0E00               	movlw	0
  4567  000C04  6E12               	movwf	___wmul@multiplicand+1,c
  4568  000C06  0E03               	movlw	3
  4569  000C08  6E11               	movwf	___wmul@multiplicand,c
  4570  000C0A  EC0A  F016         	call	___wmul	;wreg free
  4571  000C0E  0EC7               	movlw	low _tensaoNaBateria
  4572  000C10  240F               	addwf	?___wmul,w,c
  4573  000C12  6ED9               	movwf	fsr2l,c
  4574  000C14  0E00               	movlw	high _tensaoNaBateria
  4575  000C16  2010               	addwfc	?___wmul+1,w,c
  4576  000C18  6EDA               	movwf	fsr2h,c
  4577  000C1A  CFDE F015          	movff	postinc2,___ftge@ff1
  4578  000C1E  CFDE F016          	movff	postinc2,___ftge@ff1+1
  4579  000C22  CFDD F017          	movff	postdec2,___ftge@ff1+2
  4580  000C26  0E00               	movlw	0
  4581  000C28  6E18               	movwf	___ftge@ff2,c
  4582  000C2A  0E40               	movlw	64
  4583  000C2C  6E19               	movwf	___ftge@ff2+1,c
  4584  000C2E  0E40               	movlw	64
  4585  000C30  6E1A               	movwf	___ftge@ff2+2,c
  4586  000C32  EC37  F013         	call	___ftge	;wreg free
  4587  000C36  A0D8               	btfss	status,0,c
  4588  000C38  D008               	goto	i2l3656
  4589                           
  4590                           ;aplicacao.c: 235: escreverStringUart("Teste de Tensao no Descarregamento: OK\n");
  4591  000C3A  0EB6               	movlw	low STR_42
  4592  000C3C  6E71               	movwf	i2escreverStringUart@string,c
  4593  000C3E  0EFD               	movlw	high STR_42
  4594  000C40  6E72               	movwf	i2escreverStringUart@string+1,c
  4595  000C42  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4596                           
  4597                           ;aplicacao.c: 236: resultadoDosTestes[3] = 1;
  4598  000C46  0E01               	movlw	1
  4599  000C48  D007               	goto	L2
  4600  000C4A                     i2l3656:
  4601                           
  4602                           ;aplicacao.c: 238: else {
  4603                           ;aplicacao.c: 239: escreverStringUart("Teste de Tensao no Descarregamento: NOK\n");
  4604  000C4A  0E8D               	movlw	low STR_43
  4605  000C4C  6E71               	movwf	i2escreverStringUart@string,c
  4606  000C4E  0EFD               	movlw	high STR_43
  4607  000C50  6E72               	movwf	i2escreverStringUart@string+1,c
  4608  000C52  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4609                           
  4610                           ;aplicacao.c: 240: resultadoDosTestes[3] = 0;
  4611  000C56  0E00               	movlw	0
  4612  000C58                     L2:
  4613  000C58  0100               	movlb	0	; () banked
  4614  000C5A  6FC2               	movwf	(_resultadoDosTestes+3)& (0+255),b
  4615                           
  4616                           ; BSR set to: 0
  4617                           ;aplicacao.c: 241: }
  4618                           ;aplicacao.c: 243: float correnteMedia = (( correnteNaBateria[0] + correnteNaBateria[1] 
      +                          + correnteNaBateria[2] + correnteNaBateria[3] + correnteNaBateria[4] ) / 5);
  4619                           
  4620                           ; BSR set to: 0
  4621  000C5C  C0B6  F031         	movff	_correnteNaBateria+6,___ftadd@f2
  4622  000C60  C0B7  F032         	movff	_correnteNaBateria+7,___ftadd@f2+1
  4623  000C64  C0B8  F033         	movff	_correnteNaBateria+8,___ftadd@f2+2
  4624  000C68  C0B3  F02E         	movff	_correnteNaBateria+3,___ftadd@f1
  4625  000C6C  C0B4  F02F         	movff	_correnteNaBateria+4,___ftadd@f1+1
  4626  000C70  C0B5  F030         	movff	_correnteNaBateria+5,___ftadd@f1+2
  4627  000C74  EC65  F00E         	call	___ftadd	;wreg free
  4628  000C78  C02E  F0A7         	movff	?___ftadd,_tratamento$1464
  4629  000C7C  C02F  F0A8         	movff	?___ftadd+1,_tratamento$1464+1
  4630  000C80  C030  F0A9         	movff	?___ftadd+2,_tratamento$1464+2
  4631                           
  4632                           ;aplicacao.c: 241: }
  4633                           ;aplicacao.c: 243: float correnteMedia = (( correnteNaBateria[0] + correnteNaBateria[1] 
      +                          + correnteNaBateria[2] + correnteNaBateria[3] + correnteNaBateria[4] ) / 5);
  4634  000C84  C0B9  F031         	movff	_correnteNaBateria+9,___ftadd@f2
  4635  000C88  C0BA  F032         	movff	_correnteNaBateria+10,___ftadd@f2+1
  4636  000C8C  C0BB  F033         	movff	_correnteNaBateria+11,___ftadd@f2+2
  4637  000C90  C0A7  F02E         	movff	_tratamento$1464,___ftadd@f1
  4638  000C94  C0A8  F02F         	movff	_tratamento$1464+1,___ftadd@f1+1
  4639  000C98  C0A9  F030         	movff	_tratamento$1464+2,___ftadd@f1+2
  4640  000C9C  EC65  F00E         	call	___ftadd	;wreg free
  4641  000CA0  C02E  F0AA         	movff	?___ftadd,_tratamento$1465
  4642  000CA4  C02F  F0AB         	movff	?___ftadd+1,_tratamento$1465+1
  4643  000CA8  C030  F0AC         	movff	?___ftadd+2,_tratamento$1465+2
  4644                           
  4645                           ;aplicacao.c: 241: }
  4646                           ;aplicacao.c: 243: float correnteMedia = (( correnteNaBateria[0] + correnteNaBateria[1] 
      +                          + correnteNaBateria[2] + correnteNaBateria[3] + correnteNaBateria[4] ) / 5);
  4647  000CAC  C0BC  F031         	movff	_correnteNaBateria+12,___ftadd@f2
  4648  000CB0  C0BD  F032         	movff	_correnteNaBateria+13,___ftadd@f2+1
  4649  000CB4  C0BE  F033         	movff	_correnteNaBateria+14,___ftadd@f2+2
  4650  000CB8  C0AA  F02E         	movff	_tratamento$1465,___ftadd@f1
  4651  000CBC  C0AB  F02F         	movff	_tratamento$1465+1,___ftadd@f1+1
  4652  000CC0  C0AC  F030         	movff	_tratamento$1465+2,___ftadd@f1+2
  4653  000CC4  EC65  F00E         	call	___ftadd	;wreg free
  4654  000CC8  C02E  F0AD         	movff	?___ftadd,_tratamento$1466
  4655  000CCC  C02F  F0AE         	movff	?___ftadd+1,_tratamento$1466+1
  4656  000CD0  C030  F0AF         	movff	?___ftadd+2,_tratamento$1466+2
  4657                           
  4658                           ;aplicacao.c: 241: }
  4659                           ;aplicacao.c: 243: float correnteMedia = (( correnteNaBateria[0] + correnteNaBateria[1] 
      +                          + correnteNaBateria[2] + correnteNaBateria[3] + correnteNaBateria[4] ) / 5);
  4660  000CD4  C0B0  F031         	movff	_correnteNaBateria,___ftadd@f2
  4661  000CD8  C0B1  F032         	movff	_correnteNaBateria+1,___ftadd@f2+1
  4662  000CDC  C0B2  F033         	movff	_correnteNaBateria+2,___ftadd@f2+2
  4663  000CE0  C0AD  F02E         	movff	_tratamento$1466,___ftadd@f1
  4664  000CE4  C0AE  F02F         	movff	_tratamento$1466+1,___ftadd@f1+1
  4665  000CE8  C0AF  F030         	movff	_tratamento$1466+2,___ftadd@f1+2
  4666  000CEC  EC65  F00E         	call	___ftadd	;wreg free
  4667  000CF0  C02E  F03A         	movff	?___ftadd,___ftdiv@f1
  4668  000CF4  C02F  F03B         	movff	?___ftadd+1,___ftdiv@f1+1
  4669  000CF8  C030  F03C         	movff	?___ftadd+2,___ftdiv@f1+2
  4670  000CFC  0E00               	movlw	0
  4671  000CFE  6E3D               	movwf	___ftdiv@f2,c
  4672  000D00  0EA0               	movlw	160
  4673  000D02  6E3E               	movwf	___ftdiv@f2+1,c
  4674  000D04  0E40               	movlw	64
  4675  000D06  6E3F               	movwf	___ftdiv@f2+2,c
  4676  000D08  ECD4  F011         	call	___ftdiv	;wreg free
  4677  000D0C  C03A  F0A4         	movff	?___ftdiv,tratamento@correnteMedia_790
  4678  000D10  C03B  F0A5         	movff	?___ftdiv+1,tratamento@correnteMedia_790+1
  4679  000D14  C03C  F0A6         	movff	?___ftdiv+2,tratamento@correnteMedia_790+2
  4680                           
  4681                           ;aplicacao.c: 244: escreverStringUart("Corrente Media: ");
  4682  000D18  0EB0               	movlw	low STR_26
  4683  000D1A  6E71               	movwf	i2escreverStringUart@string,c
  4684  000D1C  0EFF               	movlw	high STR_26
  4685  000D1E  6E72               	movwf	i2escreverStringUart@string+1,c
  4686  000D20  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4687                           
  4688                           ;aplicacao.c: 245: escreverStringUart(converterFloatParaString(correnteMedia));
  4689  000D24  C0A4  F064         	movff	tratamento@correnteMedia_790,converterFloatParaString@valorParaSerConvertido
  4690  000D28  C0A5  F065         	movff	tratamento@correnteMedia_790+1,converterFloatParaString@valorParaSerConvertido+1
  4691  000D2C  C0A6  F066         	movff	tratamento@correnteMedia_790+2,converterFloatParaString@valorParaSerConvertido+2
  4692  000D30  EC1D  F016         	call	_converterFloatParaString	;wreg free
  4693  000D34  0100               	movlb	0	; () banked
  4694  000D36  6F80               	movwf	??_tratamento& (0+255),b
  4695  000D38  6B81               	clrf	(??_tratamento+1)& (0+255),b
  4696  000D3A  C080  F071         	movff	??_tratamento,i2escreverStringUart@string
  4697  000D3E  C081  F072         	movff	??_tratamento+1,i2escreverStringUart@string+1
  4698  000D42  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4699                           
  4700                           ;aplicacao.c: 246: escreverStringUart(" A\n");
  4701  000D46  0EEB               	movlw	low STR_27
  4702  000D48  6E71               	movwf	i2escreverStringUart@string,c
  4703  000D4A  0EFF               	movlw	high STR_27
  4704  000D4C  6E72               	movwf	i2escreverStringUart@string+1,c
  4705  000D4E  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4706                           
  4707                           ;aplicacao.c: 247: if( (correnteMedia >= 0.050) && (correnteMedia <= 0.150) ) {
  4708  000D52  C0A4  F015         	movff	tratamento@correnteMedia_790,___ftge@ff1
  4709  000D56  C0A5  F016         	movff	tratamento@correnteMedia_790+1,___ftge@ff1+1
  4710  000D5A  C0A6  F017         	movff	tratamento@correnteMedia_790+2,___ftge@ff1+2
  4711  000D5E  0ECD               	movlw	205
  4712  000D60  6E18               	movwf	___ftge@ff2,c
  4713  000D62  0E4C               	movlw	76
  4714  000D64  6E19               	movwf	___ftge@ff2+1,c
  4715  000D66  0E3D               	movlw	61
  4716  000D68  6E1A               	movwf	___ftge@ff2+2,c
  4717  000D6A  EC37  F013         	call	___ftge	;wreg free
  4718  000D6E  A0D8               	btfss	status,0,c
  4719  000D70  D01A               	goto	i2l3682
  4720  000D72  0E9A               	movlw	154
  4721  000D74  6E15               	movwf	___ftge@ff1,c
  4722  000D76  0E19               	movlw	25
  4723  000D78  6E16               	movwf	___ftge@ff1+1,c
  4724  000D7A  0E3E               	movlw	62
  4725  000D7C  6E17               	movwf	___ftge@ff1+2,c
  4726  000D7E  C0A4  F018         	movff	tratamento@correnteMedia_790,___ftge@ff2
  4727  000D82  C0A5  F019         	movff	tratamento@correnteMedia_790+1,___ftge@ff2+1
  4728  000D86  C0A6  F01A         	movff	tratamento@correnteMedia_790+2,___ftge@ff2+2
  4729  000D8A  EC37  F013         	call	___ftge	;wreg free
  4730  000D8E  A0D8               	btfss	status,0,c
  4731  000D90  D00A               	goto	i2l3682
  4732                           
  4733                           ;aplicacao.c: 248: resultadoDosTestes[4] = 1;
  4734  000D92  0E01               	movlw	1
  4735  000D94  0100               	movlb	0	; () banked
  4736  000D96  6FC3               	movwf	(_resultadoDosTestes+4)& (0+255),b
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;aplicacao.c: 249: escreverStringUart("Teste de Corrente no Descarregamento: OK\n");
  4740  000D98  0E63               	movlw	low STR_46
  4741  000D9A  6E71               	movwf	i2escreverStringUart@string,c
  4742  000D9C  0EFD               	movlw	high STR_46
  4743  000D9E  6E72               	movwf	i2escreverStringUart@string+1,c
  4744  000DA0  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4745                           
  4746                           ;aplicacao.c: 250: }
  4747  000DA4  D009               	goto	i2l3686
  4748  000DA6                     i2l3682:
  4749                           
  4750                           ;aplicacao.c: 251: else {
  4751                           ;aplicacao.c: 252: resultadoDosTestes[4] = 0;
  4752  000DA6  0E00               	movlw	0
  4753  000DA8  0100               	movlb	0	; () banked
  4754  000DAA  6FC3               	movwf	(_resultadoDosTestes+4)& (0+255),b
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;aplicacao.c: 253: escreverStringUart("Teste de Corrente no Descarregamento: NOK\n");
  4758  000DAC  0E38               	movlw	low STR_47
  4759  000DAE  6E71               	movwf	i2escreverStringUart@string,c
  4760  000DB0  0EFD               	movlw	high STR_47
  4761  000DB2  6E72               	movwf	i2escreverStringUart@string+1,c
  4762  000DB4  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4763  000DB8                     i2l3686:
  4764                           
  4765                           ;aplicacao.c: 254: }
  4766                           ;aplicacao.c: 256: statusDaBateria = 3;
  4767  000DB8  0E03               	movlw	3
  4768  000DBA  0100               	movlb	0	; () banked
  4769  000DBC  6FC4               	movwf	_statusDaBateria& (0+255),b
  4770                           
  4771                           ; BSR set to: 0
  4772                           ;aplicacao.c: 257: }
  4773                           ;aplicacao.c: 258: }
  4774  000DBE  D060               	goto	i2l3720
  4775  000DC0                     i2l3688:
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;aplicacao.c: 259: else if(statusDaBateria == 3) {
  4779  000DC0  0E03               	movlw	3
  4780  000DC2  0100               	movlb	0	; () banked
  4781  000DC4  19C4               	xorwf	_statusDaBateria& (0+255),w,b
  4782  000DC6  A4D8               	btfss	status,2,c
  4783  000DC8  D05B               	goto	i2l3720
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;aplicacao.c: 260: desabilitarTimer0();
  4787  000DCA  ECD7  F016         	call	i2_desabilitarTimer0	;wreg free
  4788                           
  4789                           ;aplicacao.c: 261: desabilitarCarregamentoDaBateria();
  4790  000DCE  ECA2  F016         	call	i2_desabilitarCarregamentoDaBateria	;wreg free
  4791                           
  4792                           ;aplicacao.c: 262: desabilitarDescarregamentoDaBateria();
  4793  000DD2  EC98  F016         	call	i2_desabilitarDescarregamentoDaBateria	;wreg free
  4794                           
  4795                           ;aplicacao.c: 263: statusDaBateria = 0;
  4796  000DD6  0E00               	movlw	0
  4797  000DD8  0100               	movlb	0	; () banked
  4798  000DDA  6FC4               	movwf	_statusDaBateria& (0+255),b
  4799                           
  4800                           ; BSR set to: 0
  4801                           ;aplicacao.c: 264: if((resultadoDosTestes[0] + resultadoDosTestes[1] + resultadoDosTeste
      +                          s[2] + resultadoDosTestes[3] + resultadoDosTestes[4]) == 5) {
  4802  000DDC  0100               	movlb	0	; () banked
  4803  000DDE  51C0               	movf	(_resultadoDosTestes+1)& (0+255),w,b
  4804  000DE0  C0BF  F080         	movff	_resultadoDosTestes,??_tratamento
  4805  000DE4  0100               	movlb	0	; () banked
  4806  000DE6  6B81               	clrf	(??_tratamento+1)& (0+255),b
  4807  000DE8  0100               	movlb	0	; () banked
  4808  000DEA  2780               	addwf	??_tratamento& (0+255),f,b
  4809  000DEC  0E00               	movlw	0
  4810  000DEE  2381               	addwfc	(??_tratamento+1)& (0+255),f,b
  4811  000DF0  0100               	movlb	0	; () banked
  4812  000DF2  51C1               	movf	(_resultadoDosTestes+2)& (0+255),w,b
  4813  000DF4  0100               	movlb	0	; () banked
  4814  000DF6  2780               	addwf	??_tratamento& (0+255),f,b
  4815  000DF8  0E00               	movlw	0
  4816  000DFA  2381               	addwfc	(??_tratamento+1)& (0+255),f,b
  4817  000DFC  0100               	movlb	0	; () banked
  4818  000DFE  51C2               	movf	(_resultadoDosTestes+3)& (0+255),w,b
  4819  000E00  0100               	movlb	0	; () banked
  4820  000E02  2780               	addwf	??_tratamento& (0+255),f,b
  4821  000E04  0E00               	movlw	0
  4822  000E06  2381               	addwfc	(??_tratamento+1)& (0+255),f,b
  4823  000E08  0100               	movlb	0	; () banked
  4824  000E0A  51C3               	movf	(_resultadoDosTestes+4)& (0+255),w,b
  4825  000E0C  0100               	movlb	0	; () banked
  4826  000E0E  2780               	addwf	??_tratamento& (0+255),f,b
  4827  000E10  0E00               	movlw	0
  4828  000E12  2381               	addwfc	(??_tratamento+1)& (0+255),f,b
  4829  000E14  0E05               	movlw	5
  4830  000E16  0100               	movlb	0	; () banked
  4831  000E18  1980               	xorwf	??_tratamento& (0+255),w,b
  4832  000E1A  0100               	movlb	0	; () banked
  4833  000E1C  1181               	iorwf	(??_tratamento+1)& (0+255),w,b
  4834  000E1E  A4D8               	btfss	status,2,c
  4835  000E20  D018               	goto	i2l3710
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;aplicacao.c: 265: escreverStringUart("\n*** BATERIA APROVADA! ***\n");
  4839  000E22  0E2F               	movlw	low STR_48
  4840  000E24  6E71               	movwf	i2escreverStringUart@string,c
  4841  000E26  0EFF               	movlw	high STR_48
  4842  000E28  6E72               	movwf	i2escreverStringUart@string+1,c
  4843  000E2A  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4844                           
  4845                           ;aplicacao.c: 266: escreverStringUart("\n*** Testes finalizados ***\n");
  4846  000E2E  0E12               	movlw	low STR_49
  4847  000E30  6E71               	movwf	i2escreverStringUart@string,c
  4848  000E32  0EFF               	movlw	high STR_49
  4849  000E34  6E72               	movwf	i2escreverStringUart@string+1,c
  4850  000E36  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4851                           
  4852                           ;aplicacao.c: 267: escreverStringUart("\n\n\n\n*** Pressione o botao para iniciar os tes
      +                          tes! ***\n");
  4853  000E3A  0ED3               	movlw	low STR_50
  4854  000E3C  6E71               	movwf	i2escreverStringUart@string,c
  4855  000E3E  0EFC               	movlw	high STR_50
  4856  000E40  6E72               	movwf	i2escreverStringUart@string+1,c
  4857  000E42  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4858                           
  4859                           ;aplicacao.c: 268: PORTBbits.RB4 = 1;
  4860  000E46  8881               	bsf	3969,4,c	;volatile
  4861                           
  4862                           ;aplicacao.c: 269: PORTBbits.RB5 = 0;
  4863  000E48  9A81               	bcf	3969,5,c	;volatile
  4864                           
  4865                           ;aplicacao.c: 270: PORTBbits.RB6 = 0;
  4866  000E4A  9C81               	bcf	3969,6,c	;volatile
  4867                           
  4868                           ;aplicacao.c: 271: sinalizacaoAprovada();
  4869  000E4C  ECA2  F015         	call	_sinalizacaoAprovada	;wreg free
  4870                           
  4871                           ;aplicacao.c: 272: }
  4872  000E50  D017               	goto	i2l3720
  4873  000E52                     i2l3710:
  4874                           
  4875                           ;aplicacao.c: 273: else {
  4876                           ;aplicacao.c: 274: escreverStringUart("\n*** BATERIA REPROVADA! ***\n");
  4877  000E52  0EF5               	movlw	low STR_51
  4878  000E54  6E71               	movwf	i2escreverStringUart@string,c
  4879  000E56  0EFE               	movlw	high STR_51
  4880  000E58  6E72               	movwf	i2escreverStringUart@string+1,c
  4881  000E5A  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4882                           
  4883                           ;aplicacao.c: 275: escreverStringUart("\n*** Testes finalizados ***\n");
  4884  000E5E  0E12               	movlw	low STR_49
  4885  000E60  6E71               	movwf	i2escreverStringUart@string,c
  4886  000E62  0EFF               	movlw	high STR_49
  4887  000E64  6E72               	movwf	i2escreverStringUart@string+1,c
  4888  000E66  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4889                           
  4890                           ;aplicacao.c: 276: escreverStringUart("\n\n\n\n*** Pressione o botao para iniciar os tes
      +                          tes! ***\n");
  4891  000E6A  0ED3               	movlw	low STR_50
  4892  000E6C  6E71               	movwf	i2escreverStringUart@string,c
  4893  000E6E  0EFC               	movlw	high STR_50
  4894  000E70  6E72               	movwf	i2escreverStringUart@string+1,c
  4895  000E72  EC02  F014         	call	i2_escreverStringUart	;wreg free
  4896                           
  4897                           ;aplicacao.c: 277: PORTBbits.RB4 = 0;
  4898  000E76  9881               	bcf	3969,4,c	;volatile
  4899                           
  4900                           ;aplicacao.c: 278: PORTBbits.RB5 = 0;
  4901  000E78  9A81               	bcf	3969,5,c	;volatile
  4902                           
  4903                           ;aplicacao.c: 279: PORTBbits.RB6 = 1 ;
  4904  000E7A  8C81               	bsf	3969,6,c	;volatile
  4905                           
  4906                           ;aplicacao.c: 280: sinalizacaoFalha();
  4907  000E7C  EC5F  F016         	call	_sinalizacaoFalha	;wreg free
  4908  000E80                     i2l3720:
  4909                           
  4910                           ;aplicacao.c: 281: }
  4911                           ;aplicacao.c: 282: }
  4912                           ;aplicacao.c: 284: TMR0L = 0xDB;
  4913  000E80  0EDB               	movlw	219
  4914  000E82  6ED6               	movwf	4054,c	;volatile
  4915                           
  4916                           ;aplicacao.c: 285: TMR0H = 0x0B;
  4917  000E84  0E0B               	movlw	11
  4918  000E86  6ED7               	movwf	4055,c	;volatile
  4919                           
  4920                           ;aplicacao.c: 286: INTCONbits.TMR0IF = 0;
  4921  000E88  94F2               	bcf	intcon,2,c	;volatile
  4922  000E8A                     i2l208:
  4923  000E8A  C08F  FFF5         	movff	??_tratamento+15,tablat
  4924  000E8E  C08E  FFF8         	movff	??_tratamento+14,tblptru
  4925  000E92  C08D  FFF7         	movff	??_tratamento+13,tblptrh
  4926  000E96  C08C  FFF6         	movff	??_tratamento+12,tblptrl
  4927  000E9A  C08B  FFF4         	movff	??_tratamento+11,prodh
  4928  000E9E  C08A  FFF3         	movff	??_tratamento+10,prodl
  4929  000EA2  C089  FFDA         	movff	??_tratamento+9,fsr2h
  4930  000EA6  C088  FFD9         	movff	??_tratamento+8,fsr2l
  4931  000EAA  C087  FFE2         	movff	??_tratamento+7,fsr1h
  4932  000EAE  C086  FFE1         	movff	??_tratamento+6,fsr1l
  4933  000EB2  C085  FFEA         	movff	??_tratamento+5,fsr0h
  4934  000EB6  C084  FFE9         	movff	??_tratamento+4,fsr0l
  4935  000EBA  C083  FFFB         	movff	??_tratamento+3,pclatu
  4936  000EBE  C082  FFFA         	movff	??_tratamento+2,pclath
  4937  000EC2  9279               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4938  000EC4  0011               	retfie		f
  4939  000EC6                     __end_of_tratamento:
  4940                           	opt stack 0
  4941                           pclatu	equ	0xFFB
  4942                           pclath	equ	0xFFA
  4943                           tblptru	equ	0xFF8
  4944                           tblptrh	equ	0xFF7
  4945                           tblptrl	equ	0xFF6
  4946                           tablat	equ	0xFF5
  4947                           prodh	equ	0xFF4
  4948                           prodl	equ	0xFF3
  4949                           intcon	equ	0xFF2
  4950                           indf0	equ	0xFEF
  4951                           postinc0	equ	0xFEE
  4952                           fsr0h	equ	0xFEA
  4953                           fsr0l	equ	0xFE9
  4954                           wreg	equ	0xFE8
  4955                           fsr1h	equ	0xFE2
  4956                           fsr1l	equ	0xFE1
  4957                           postinc2	equ	0xFDE
  4958                           postdec2	equ	0xFDD
  4959                           fsr2h	equ	0xFDA
  4960                           fsr2l	equ	0xFD9
  4961                           status	equ	0xFD8
  4962                           
  4963 ;; *************** function i2_escreverStringUart *****************
  4964 ;; Defined at:
  4965 ;;		line 104 in file "uart.h"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  string          2  112[COMRAM] PTR unsigned char 
  4968 ;;		 -> STR_53(55), STR_52(29), STR_51(29), STR_50(55), 
  4969 ;;		 -> STR_49(29), STR_48(28), STR_47(43), STR_46(42), 
  4970 ;;		 -> STR_45(4), STR_44(17), STR_43(41), STR_42(40), 
  4971 ;;		 -> STR_41(4), STR_40(23), STR_39(3), STR_38(16), 
  4972 ;;		 -> STR_37(3), STR_36(11), STR_35(6), STR_34(9), 
  4973 ;;		 -> STR_33(4), STR_32(68), STR_31(34), STR_30(30), 
  4974 ;;		 -> STR_29(40), STR_28(39), STR_27(4), STR_26(17), 
  4975 ;;		 -> STR_25(38), STR_24(37), STR_23(4), STR_22(16), 
  4976 ;;		 -> STR_21(3), STR_20(11), STR_19(6), STR_18(9), 
  4977 ;;		 -> STR_17(4), STR_16(68), STR_15(31), STR_14(27), 
  4978 ;;		 -> STR_13(25), STR_12(26), STR_11(4), STR_10(16), 
  4979 ;;		 -> STR_9(3), STR_8(9), STR_7(4), RAM(3967), 
  4980 ;;		 -> STR_6(70), STR_5(30), STR_4(52), STR_3(46), 
  4981 ;; Auto vars:     Size  Location     Type
  4982 ;;  escreverStri    2  118[COMRAM] int 
  4983 ;;  escreverStri    2  116[COMRAM] int 
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  1    wreg      void 
  4986 ;; Registers used:
  4987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4993 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4994 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4995 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4996 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4997 ;;Total ram usage:        8 bytes
  4998 ;; Hardware stack levels used:    1
  4999 ;; Hardware stack levels required when called:    1
  5000 ;; This function calls:
  5001 ;;		i2_escreverCharUart
  5002 ;;		i2_tamanhoDaString
  5003 ;; This function is called by:
  5004 ;;		_tratamento
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           	psect	text15
  5009  002804                     __ptext15:
  5010                           	opt stack 0
  5011  002804                     i2_escreverStringUart:
  5012                           	opt stack 26
  5013                           
  5014                           ;uart.h: 105: int contador = 0;
  5015                           
  5016                           ;incstack = 0
  5017  002804  0E00               	movlw	0
  5018  002806  6E78               	movwf	i2escreverStringUart@contador+1,c
  5019  002808  0E00               	movlw	0
  5020  00280A  6E77               	movwf	i2escreverStringUart@contador,c
  5021                           
  5022                           ;uart.h: 106: int tamanhoDaStr = tamanhoDaString(string);
  5023  00280C  C071  F001         	movff	i2escreverStringUart@string,i2tamanhoDaString@string
  5024  002810  C072  F002         	movff	i2escreverStringUart@string+1,i2tamanhoDaString@string+1
  5025  002814  EC02  F015         	call	i2_tamanhoDaString	;wreg free
  5026  002818  C001  F075         	movff	?i2_tamanhoDaString,i2escreverStringUart@tamanhoDaStr
  5027  00281C  C002  F076         	movff	?i2_tamanhoDaString+1,i2escreverStringUart@tamanhoDaStr+1
  5028                           
  5029                           ;uart.h: 108: for(contador = 0; contador < tamanhoDaStr; contador++) {
  5030  002820  0E00               	movlw	0
  5031  002822  6E78               	movwf	i2escreverStringUart@contador+1,c
  5032  002824  0E00               	movlw	0
  5033  002826  6E77               	movwf	i2escreverStringUart@contador,c
  5034  002828  D01B               	goto	i2l3364
  5035  00282A                     i2l3360:
  5036                           
  5037                           ;uart.h: 109: escreverCharUart(string[contador]);
  5038  00282A  5077               	movf	i2escreverStringUart@contador,w,c
  5039  00282C  2471               	addwf	i2escreverStringUart@string,w,c
  5040  00282E  6E73               	movwf	??i2_escreverStringUart& (0+255),c
  5041  002830  5078               	movf	i2escreverStringUart@contador+1,w,c
  5042  002832  2072               	addwfc	i2escreverStringUart@string+1,w,c
  5043  002834  6E74               	movwf	(??i2_escreverStringUart+1)& (0+255),c
  5044  002836  C073  FFF6         	movff	??i2_escreverStringUart,tblptrl
  5045  00283A  C074  FFF7         	movff	??i2_escreverStringUart+1,tblptrh
  5046  00283E  0E00               	movlw	low (__mediumconst shr (0+16))
  5047  002840  6EF8               	movwf	tblptru,c
  5048  002842  0E0F               	movlw	(high __ramtop+-1)
  5049  002844  64F7               	cpfsgt	tblptrh,c
  5050  002846  D003               	bra	i2u321_47
  5051  002848  0008               	tblrd		*
  5052  00284A  50F5               	movf	tablat,w,c
  5053  00284C  D005               	bra	i2u321_40
  5054  00284E                     i2u321_47:
  5055  00284E  CFF6 FFE9          	movff	tblptrl,fsr0l
  5056  002852  CFF7 FFEA          	movff	tblptrh,fsr0h
  5057  002856  50EF               	movf	indf0,w,c
  5058  002858                     i2u321_40:
  5059  002858  ECBC  F016         	call	i2_escreverCharUart
  5060  00285C  4A77               	infsnz	i2escreverStringUart@contador,f,c
  5061  00285E  2A78               	incf	i2escreverStringUart@contador+1,f,c
  5062  002860                     i2l3364:
  5063  002860  5075               	movf	i2escreverStringUart@tamanhoDaStr,w,c
  5064  002862  5C77               	subwf	i2escreverStringUart@contador,w,c
  5065  002864  5078               	movf	i2escreverStringUart@contador+1,w,c
  5066  002866  0A80               	xorlw	128
  5067  002868  6E73               	movwf	??i2_escreverStringUart& (0+255),c
  5068  00286A  5076               	movf	i2escreverStringUart@tamanhoDaStr+1,w,c
  5069  00286C  0A80               	xorlw	128
  5070  00286E  5873               	subwfb	??i2_escreverStringUart& (0+255),w,c
  5071  002870  B0D8               	btfsc	status,0,c
  5072  002872  0012               	return	
  5073  002874  D7DA               	goto	i2l3360
  5074  002876                     __end_ofi2_escreverStringUart:
  5075                           	opt stack 0
  5076                           pclatu	equ	0xFFB
  5077                           pclath	equ	0xFFA
  5078                           tblptru	equ	0xFF8
  5079                           tblptrh	equ	0xFF7
  5080                           tblptrl	equ	0xFF6
  5081                           tablat	equ	0xFF5
  5082                           prodh	equ	0xFF4
  5083                           prodl	equ	0xFF3
  5084                           intcon	equ	0xFF2
  5085                           indf0	equ	0xFEF
  5086                           postinc0	equ	0xFEE
  5087                           fsr0h	equ	0xFEA
  5088                           fsr0l	equ	0xFE9
  5089                           wreg	equ	0xFE8
  5090                           fsr1h	equ	0xFE2
  5091                           fsr1l	equ	0xFE1
  5092                           postinc2	equ	0xFDE
  5093                           postdec2	equ	0xFDD
  5094                           fsr2h	equ	0xFDA
  5095                           fsr2l	equ	0xFD9
  5096                           status	equ	0xFD8
  5097                           
  5098 ;; *************** function i2_tamanhoDaString *****************
  5099 ;; Defined at:
  5100 ;;		line 92 in file "uart.h"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;  string          2    0[COMRAM] PTR unsigned char 
  5103 ;;		 -> STR_53(55), STR_52(29), STR_51(29), STR_50(55), 
  5104 ;;		 -> STR_49(29), STR_48(28), STR_47(43), STR_46(42), 
  5105 ;;		 -> STR_45(4), STR_44(17), STR_43(41), STR_42(40), 
  5106 ;;		 -> STR_41(4), STR_40(23), STR_39(3), STR_38(16), 
  5107 ;;		 -> STR_37(3), STR_36(11), STR_35(6), STR_34(9), 
  5108 ;;		 -> STR_33(4), STR_32(68), STR_31(34), STR_30(30), 
  5109 ;;		 -> STR_29(40), STR_28(39), STR_27(4), STR_26(17), 
  5110 ;;		 -> STR_25(38), STR_24(37), STR_23(4), STR_22(16), 
  5111 ;;		 -> STR_21(3), STR_20(11), STR_19(6), STR_18(9), 
  5112 ;;		 -> STR_17(4), STR_16(68), STR_15(31), STR_14(27), 
  5113 ;;		 -> STR_13(25), STR_12(26), STR_11(4), STR_10(16), 
  5114 ;;		 -> STR_9(3), STR_8(9), STR_7(4), RAM(3967), 
  5115 ;;		 -> STR_6(70), STR_5(30), STR_4(52), STR_3(46), 
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;  tamanhoDaStr    2    4[COMRAM] int 
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  2    0[COMRAM] int 
  5120 ;; Registers used:
  5121 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5127 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5128 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5129 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5130 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5131 ;;Total ram usage:        6 bytes
  5132 ;; Hardware stack levels used:    1
  5133 ;; This function calls:
  5134 ;;		Nothing
  5135 ;; This function is called by:
  5136 ;;		i2_escreverStringUart
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           	psect	text16
  5141  002A04                     __ptext16:
  5142                           	opt stack 0
  5143  002A04                     i2_tamanhoDaString:
  5144                           	opt stack 26
  5145                           
  5146                           ;uart.h: 93: int lenght = 0;
  5147                           
  5148                           ;incstack = 0
  5149  002A04  0E00               	movlw	0
  5150  002A06  6E06               	movwf	i2tamanhoDaString@lenght+1,c
  5151  002A08  0E00               	movlw	0
  5152  002A0A  6E05               	movwf	i2tamanhoDaString@lenght,c
  5153                           
  5154                           ;uart.h: 94: while(string[lenght] != '\0') {
  5155  002A0C  D002               	goto	i2l3134
  5156  002A0E                     i2l3132:
  5157                           
  5158                           ;uart.h: 95: lenght++;
  5159  002A0E  4A05               	infsnz	i2tamanhoDaString@lenght,f,c
  5160  002A10  2A06               	incf	i2tamanhoDaString@lenght+1,f,c
  5161  002A12                     i2l3134:
  5162  002A12  5005               	movf	i2tamanhoDaString@lenght,w,c
  5163  002A14  2401               	addwf	i2tamanhoDaString@string,w,c
  5164  002A16  6E03               	movwf	??i2_tamanhoDaString& (0+255),c
  5165  002A18  5006               	movf	i2tamanhoDaString@lenght+1,w,c
  5166  002A1A  2002               	addwfc	i2tamanhoDaString@string+1,w,c
  5167  002A1C  6E04               	movwf	(??i2_tamanhoDaString+1)& (0+255),c
  5168  002A1E  C003  FFF6         	movff	??i2_tamanhoDaString,tblptrl
  5169  002A22  C004  FFF7         	movff	??i2_tamanhoDaString+1,tblptrh
  5170  002A26  0E00               	movlw	low (__mediumconst shr (0+16))
  5171  002A28  6EF8               	movwf	tblptru,c
  5172  002A2A  0E0F               	movlw	(high __ramtop+-1)
  5173  002A2C  64F7               	cpfsgt	tblptrh,c
  5174  002A2E  D003               	bra	i2u302_47
  5175  002A30  0008               	tblrd		*
  5176  002A32  50F5               	movf	tablat,w,c
  5177  002A34  D005               	bra	i2u302_40
  5178  002A36                     i2u302_47:
  5179  002A36  CFF6 FFE9          	movff	tblptrl,fsr0l
  5180  002A3A  CFF7 FFEA          	movff	tblptrh,fsr0h
  5181  002A3E  50EF               	movf	indf0,w,c
  5182  002A40                     i2u302_40:
  5183  002A40  0900               	iorlw	0
  5184  002A42  A4D8               	btfss	status,2,c
  5185  002A44  D7E4               	goto	i2l3132
  5186                           
  5187                           ;uart.h: 96: }
  5188                           ;uart.h: 97: return lenght;
  5189  002A46  C005  F001         	movff	i2tamanhoDaString@lenght,?i2_tamanhoDaString
  5190  002A4A  C006  F002         	movff	i2tamanhoDaString@lenght+1,?i2_tamanhoDaString+1
  5191  002A4E  0012               	return		;funcret
  5192  002A50                     __end_ofi2_tamanhoDaString:
  5193                           	opt stack 0
  5194                           pclatu	equ	0xFFB
  5195                           pclath	equ	0xFFA
  5196                           tblptru	equ	0xFF8
  5197                           tblptrh	equ	0xFF7
  5198                           tblptrl	equ	0xFF6
  5199                           tablat	equ	0xFF5
  5200                           prodh	equ	0xFF4
  5201                           prodl	equ	0xFF3
  5202                           intcon	equ	0xFF2
  5203                           indf0	equ	0xFEF
  5204                           postinc0	equ	0xFEE
  5205                           fsr0h	equ	0xFEA
  5206                           fsr0l	equ	0xFE9
  5207                           wreg	equ	0xFE8
  5208                           fsr1h	equ	0xFE2
  5209                           fsr1l	equ	0xFE1
  5210                           postinc2	equ	0xFDE
  5211                           postdec2	equ	0xFDD
  5212                           fsr2h	equ	0xFDA
  5213                           fsr2l	equ	0xFD9
  5214                           status	equ	0xFD8
  5215                           
  5216 ;; *************** function i2_escreverCharUart *****************
  5217 ;; Defined at:
  5218 ;;		line 50 in file "uart.h"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;  caracter        1    wreg     unsigned char 
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;  caracter        1    0[COMRAM] unsigned char 
  5223 ;; Return value:  Size  Location     Type
  5224 ;;                  1    wreg      void 
  5225 ;; Registers used:
  5226 ;;		wreg
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5235 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5236 ;;Total ram usage:        1 bytes
  5237 ;; Hardware stack levels used:    1
  5238 ;; This function calls:
  5239 ;;		Nothing
  5240 ;; This function is called by:
  5241 ;;		i2_escreverStringUart
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           	psect	text17
  5246  002D78                     __ptext17:
  5247                           	opt stack 0
  5248  002D78                     i2_escreverCharUart:
  5249                           	opt stack 26
  5250                           
  5251                           ;incstack = 0
  5252                           ;i2escreverCharUart@caracter stored from wreg
  5253  002D78  6E01               	movwf	i2escreverCharUart@caracter,c
  5254                           
  5255                           ;uart.h: 51: TXREG = caracter;
  5256  002D7A  C001  FFAD         	movff	i2escreverCharUart@caracter,4013	;volatile
  5257  002D7E                     i2l75:
  5258  002D7E  B2AC               	btfsc	4012,1,c	;volatile
  5259  002D80  0012               	return	
  5260  002D82  D7FD               	goto	i2l75
  5261  002D84                     __end_ofi2_escreverCharUart:
  5262                           	opt stack 0
  5263                           pclatu	equ	0xFFB
  5264                           pclath	equ	0xFFA
  5265                           tblptru	equ	0xFF8
  5266                           tblptrh	equ	0xFF7
  5267                           tblptrl	equ	0xFF6
  5268                           tablat	equ	0xFF5
  5269                           prodh	equ	0xFF4
  5270                           prodl	equ	0xFF3
  5271                           intcon	equ	0xFF2
  5272                           indf0	equ	0xFEF
  5273                           postinc0	equ	0xFEE
  5274                           fsr0h	equ	0xFEA
  5275                           fsr0l	equ	0xFE9
  5276                           wreg	equ	0xFE8
  5277                           fsr1h	equ	0xFE2
  5278                           fsr1l	equ	0xFE1
  5279                           postinc2	equ	0xFDE
  5280                           postdec2	equ	0xFDD
  5281                           fsr2h	equ	0xFDA
  5282                           fsr2l	equ	0xFD9
  5283                           status	equ	0xFD8
  5284                           
  5285 ;; *************** function i2_desabilitarTimer0 *****************
  5286 ;; Defined at:
  5287 ;;		line 38 in file "timer0.h"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;		None
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;		None
  5292 ;; Return value:  Size  Location     Type
  5293 ;;                  1    wreg      void 
  5294 ;; Registers used:
  5295 ;;		None
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5305 ;;Total ram usage:        0 bytes
  5306 ;; Hardware stack levels used:    1
  5307 ;; This function calls:
  5308 ;;		Nothing
  5309 ;; This function is called by:
  5310 ;;		_tratamento
  5311 ;; This function uses a non-reentrant model
  5312 ;;
  5313                           
  5314                           	psect	text18
  5315  002DAE                     __ptext18:
  5316                           	opt stack 0
  5317  002DAE                     i2_desabilitarTimer0:
  5318                           	opt stack 27
  5319                           
  5320                           ;timer0.h: 39: T0CONbits.TMR0ON = 0;
  5321                           
  5322                           ;incstack = 0
  5323  002DAE  9ED5               	bcf	4053,7,c	;volatile
  5324  002DB0  0012               	return		;funcret
  5325  002DB2                     __end_ofi2_desabilitarTimer0:
  5326                           	opt stack 0
  5327                           pclatu	equ	0xFFB
  5328                           pclath	equ	0xFFA
  5329                           tblptru	equ	0xFF8
  5330                           tblptrh	equ	0xFF7
  5331                           tblptrl	equ	0xFF6
  5332                           tablat	equ	0xFF5
  5333                           prodh	equ	0xFF4
  5334                           prodl	equ	0xFF3
  5335                           intcon	equ	0xFF2
  5336                           indf0	equ	0xFEF
  5337                           postinc0	equ	0xFEE
  5338                           fsr0h	equ	0xFEA
  5339                           fsr0l	equ	0xFE9
  5340                           wreg	equ	0xFE8
  5341                           fsr1h	equ	0xFE2
  5342                           fsr1l	equ	0xFE1
  5343                           postinc2	equ	0xFDE
  5344                           postdec2	equ	0xFDD
  5345                           fsr2h	equ	0xFDA
  5346                           fsr2l	equ	0xFD9
  5347                           status	equ	0xFD8
  5348                           
  5349 ;; *************** function i2_desabilitarDescarregamentoDaBateria *****************
  5350 ;; Defined at:
  5351 ;;		line 10 in file "controleDaBateria.h"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;		None
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;		None
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  1    wreg      void 
  5358 ;; Registers used:
  5359 ;;		wreg
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5367 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5368 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5369 ;;Total ram usage:        1 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; This function calls:
  5372 ;;		Nothing
  5373 ;; This function is called by:
  5374 ;;		_tratamento
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           	psect	text19
  5379  002D30                     __ptext19:
  5380                           	opt stack 0
  5381  002D30                     i2_desabilitarDescarregamentoDaBateria:
  5382                           	opt stack 27
  5383                           
  5384                           ;controleDaBateria.h: 11: PORTBbits.RB1 = 1;
  5385                           
  5386                           ;incstack = 0
  5387  002D30  8281               	bsf	3969,1,c	;volatile
  5388                           
  5389                           ;controleDaBateria.h: 12: _delay((unsigned long)((20)*(1000000/4000.0)));
  5390  002D32  0E07               	movlw	7
  5391  002D34  6E01               	movwf	??i2_desabilitarDescarregamentoDaBateria& (0+255),c
  5392  002D36  0E7D               	movlw	125
  5393  002D38                     i2u367_47:
  5394  002D38  2EE8               	decfsz	wreg,f,c
  5395  002D3A  D7FE               	bra	i2u367_47
  5396  002D3C  2E01               	decfsz	??i2_desabilitarDescarregamentoDaBateria& (0+255),f,c
  5397  002D3E  D7FC               	bra	i2u367_47
  5398  002D40  F000               	nop	
  5399  002D42  0012               	return		;funcret
  5400  002D44                     __end_ofi2_desabilitarDescarregamentoDaBateria:
  5401                           	opt stack 0
  5402                           pclatu	equ	0xFFB
  5403                           pclath	equ	0xFFA
  5404                           tblptru	equ	0xFF8
  5405                           tblptrh	equ	0xFF7
  5406                           tblptrl	equ	0xFF6
  5407                           tablat	equ	0xFF5
  5408                           prodh	equ	0xFF4
  5409                           prodl	equ	0xFF3
  5410                           intcon	equ	0xFF2
  5411                           indf0	equ	0xFEF
  5412                           postinc0	equ	0xFEE
  5413                           fsr0h	equ	0xFEA
  5414                           fsr0l	equ	0xFE9
  5415                           wreg	equ	0xFE8
  5416                           fsr1h	equ	0xFE2
  5417                           fsr1l	equ	0xFE1
  5418                           postinc2	equ	0xFDE
  5419                           postdec2	equ	0xFDD
  5420                           fsr2h	equ	0xFDA
  5421                           fsr2l	equ	0xFD9
  5422                           status	equ	0xFD8
  5423                           
  5424 ;; *************** function i2_desabilitarCarregamentoDaBateria *****************
  5425 ;; Defined at:
  5426 ;;		line 15 in file "controleDaBateria.h"
  5427 ;; Parameters:    Size  Location     Type
  5428 ;;		None
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;		None
  5431 ;; Return value:  Size  Location     Type
  5432 ;;                  1    wreg      void 
  5433 ;; Registers used:
  5434 ;;		wreg
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5442 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5443 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5444 ;;Total ram usage:        1 bytes
  5445 ;; Hardware stack levels used:    1
  5446 ;; This function calls:
  5447 ;;		Nothing
  5448 ;; This function is called by:
  5449 ;;		_tratamento
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           	psect	text20
  5454  002D44                     __ptext20:
  5455                           	opt stack 0
  5456  002D44                     i2_desabilitarCarregamentoDaBateria:
  5457                           	opt stack 27
  5458                           
  5459                           ;controleDaBateria.h: 16: PORTBbits.RB0 = 1;
  5460                           
  5461                           ;incstack = 0
  5462  002D44  8081               	bsf	3969,0,c	;volatile
  5463                           
  5464                           ;controleDaBateria.h: 17: _delay((unsigned long)((20)*(1000000/4000.0)));
  5465  002D46  0E07               	movlw	7
  5466  002D48  6E01               	movwf	??i2_desabilitarCarregamentoDaBateria& (0+255),c
  5467  002D4A  0E7D               	movlw	125
  5468  002D4C                     i2u368_47:
  5469  002D4C  2EE8               	decfsz	wreg,f,c
  5470  002D4E  D7FE               	bra	i2u368_47
  5471  002D50  2E01               	decfsz	??i2_desabilitarCarregamentoDaBateria& (0+255),f,c
  5472  002D52  D7FC               	bra	i2u368_47
  5473  002D54  F000               	nop	
  5474  002D56  0012               	return		;funcret
  5475  002D58                     __end_ofi2_desabilitarCarregamentoDaBateria:
  5476                           	opt stack 0
  5477                           pclatu	equ	0xFFB
  5478                           pclath	equ	0xFFA
  5479                           tblptru	equ	0xFF8
  5480                           tblptrh	equ	0xFF7
  5481                           tblptrl	equ	0xFF6
  5482                           tablat	equ	0xFF5
  5483                           prodh	equ	0xFF4
  5484                           prodl	equ	0xFF3
  5485                           intcon	equ	0xFF2
  5486                           indf0	equ	0xFEF
  5487                           postinc0	equ	0xFEE
  5488                           fsr0h	equ	0xFEA
  5489                           fsr0l	equ	0xFE9
  5490                           wreg	equ	0xFE8
  5491                           fsr1h	equ	0xFE2
  5492                           fsr1l	equ	0xFE1
  5493                           postinc2	equ	0xFDE
  5494                           postdec2	equ	0xFDD
  5495                           fsr2h	equ	0xFDA
  5496                           fsr2l	equ	0xFD9
  5497                           status	equ	0xFD8
  5498                           
  5499 ;; *************** function _sinalizacaoFalha *****************
  5500 ;; Defined at:
  5501 ;;		line 18 in file "buzzer.h"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;		None
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;		None
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  1    wreg      void 
  5508 ;; Registers used:
  5509 ;;		wreg
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5517 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5518 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5519 ;;Total ram usage:        2 bytes
  5520 ;; Hardware stack levels used:    1
  5521 ;; This function calls:
  5522 ;;		Nothing
  5523 ;; This function is called by:
  5524 ;;		_tratamento
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           	psect	text21
  5529  002CBE                     __ptext21:
  5530                           	opt stack 0
  5531  002CBE                     _sinalizacaoFalha:
  5532                           	opt stack 27
  5533                           
  5534                           ;buzzer.h: 19: PORTBbits.RB3 = 1;
  5535                           
  5536                           ;incstack = 0
  5537  002CBE  8681               	bsf	3969,3,c	;volatile
  5538                           
  5539                           ;buzzer.h: 20: _delay((unsigned long)((1000)*(1000000/4000.0)));
  5540  002CC0  0E02               	movlw	2
  5541  002CC2  6E02               	movwf	(??_sinalizacaoFalha+1)& (0+255),c
  5542  002CC4  0E45               	movlw	69
  5543  002CC6  6E01               	movwf	??_sinalizacaoFalha& (0+255),c
  5544  002CC8  0EAA               	movlw	170
  5545  002CCA                     i2u369_47:
  5546  002CCA  2EE8               	decfsz	wreg,f,c
  5547  002CCC  D7FE               	bra	i2u369_47
  5548  002CCE  2E01               	decfsz	??_sinalizacaoFalha& (0+255),f,c
  5549  002CD0  D7FC               	bra	i2u369_47
  5550  002CD2  2E02               	decfsz	(??_sinalizacaoFalha+1)& (0+255),f,c
  5551  002CD4  D7FA               	bra	i2u369_47
  5552                           
  5553                           ;buzzer.h: 21: PORTBbits.RB3 = 0;
  5554  002CD6  9681               	bcf	3969,3,c	;volatile
  5555  002CD8  0012               	return		;funcret
  5556  002CDA                     __end_of_sinalizacaoFalha:
  5557                           	opt stack 0
  5558                           pclatu	equ	0xFFB
  5559                           pclath	equ	0xFFA
  5560                           tblptru	equ	0xFF8
  5561                           tblptrh	equ	0xFF7
  5562                           tblptrl	equ	0xFF6
  5563                           tablat	equ	0xFF5
  5564                           prodh	equ	0xFF4
  5565                           prodl	equ	0xFF3
  5566                           intcon	equ	0xFF2
  5567                           indf0	equ	0xFEF
  5568                           postinc0	equ	0xFEE
  5569                           fsr0h	equ	0xFEA
  5570                           fsr0l	equ	0xFE9
  5571                           wreg	equ	0xFE8
  5572                           fsr1h	equ	0xFE2
  5573                           fsr1l	equ	0xFE1
  5574                           postinc2	equ	0xFDE
  5575                           postdec2	equ	0xFDD
  5576                           fsr2h	equ	0xFDA
  5577                           fsr2l	equ	0xFD9
  5578                           status	equ	0xFD8
  5579                           
  5580 ;; *************** function _sinalizacaoAprovada *****************
  5581 ;; Defined at:
  5582 ;;		line 8 in file "buzzer.h"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;		None
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;  repeticoes      1    1[COMRAM] unsigned char 
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  1    wreg      void 
  5589 ;; Registers used:
  5590 ;;		wreg, status,2, status,0
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5597 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5598 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5599 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5600 ;;Total ram usage:        2 bytes
  5601 ;; Hardware stack levels used:    1
  5602 ;; This function calls:
  5603 ;;		Nothing
  5604 ;; This function is called by:
  5605 ;;		_tratamento
  5606 ;; This function uses a non-reentrant model
  5607 ;;
  5608                           
  5609                           	psect	text22
  5610  002B44                     __ptext22:
  5611                           	opt stack 0
  5612  002B44                     _sinalizacaoAprovada:
  5613                           	opt stack 27
  5614                           
  5615                           ;buzzer.h: 9: char repeticoes = 0;
  5616                           
  5617                           ;incstack = 0
  5618  002B44  0E00               	movlw	0
  5619  002B46  6E02               	movwf	sinalizacaoAprovada@repeticoes,c
  5620                           
  5621                           ;buzzer.h: 10: for(repeticoes = 0; repeticoes < 3; repeticoes++) {
  5622  002B48  0E00               	movlw	0
  5623  002B4A  6E02               	movwf	sinalizacaoAprovada@repeticoes,c
  5624  002B4C                     i2l3250:
  5625  002B4C  0E02               	movlw	2
  5626  002B4E  6402               	cpfsgt	sinalizacaoAprovada@repeticoes,c
  5627  002B50  D001               	goto	i2l130
  5628  002B52  0012               	return	
  5629  002B54                     i2l130:
  5630                           
  5631                           ;buzzer.h: 11: PORTBbits.RB3 = 1;
  5632  002B54  8681               	bsf	3969,3,c	;volatile
  5633                           
  5634                           ;buzzer.h: 12: _delay((unsigned long)((50)*(1000000/4000.0)));
  5635  002B56  0E11               	movlw	17
  5636  002B58  6E01               	movwf	??_sinalizacaoAprovada& (0+255),c
  5637  002B5A  0E3A               	movlw	58
  5638  002B5C                     i2u370_47:
  5639  002B5C  2EE8               	decfsz	wreg,f,c
  5640  002B5E  D7FE               	bra	i2u370_47
  5641  002B60  2E01               	decfsz	??_sinalizacaoAprovada& (0+255),f,c
  5642  002B62  D7FC               	bra	i2u370_47
  5643  002B64  D000               	nop2	
  5644                           
  5645                           ;buzzer.h: 13: PORTBbits.RB3 = 0;
  5646  002B66  9681               	bcf	3969,3,c	;volatile
  5647                           
  5648                           ;buzzer.h: 14: _delay((unsigned long)((50)*(1000000/4000.0)));
  5649  002B68  0E11               	movlw	17
  5650  002B6A  6E01               	movwf	??_sinalizacaoAprovada& (0+255),c
  5651  002B6C  0E3A               	movlw	58
  5652  002B6E                     i2u371_47:
  5653  002B6E  2EE8               	decfsz	wreg,f,c
  5654  002B70  D7FE               	bra	i2u371_47
  5655  002B72  2E01               	decfsz	??_sinalizacaoAprovada& (0+255),f,c
  5656  002B74  D7FC               	bra	i2u371_47
  5657  002B76  D000               	nop2	
  5658  002B78  2A02               	incf	sinalizacaoAprovada@repeticoes,f,c
  5659  002B7A  D7E8               	goto	i2l3250
  5660  002B7C                     __end_of_sinalizacaoAprovada:
  5661                           	opt stack 0
  5662                           pclatu	equ	0xFFB
  5663                           pclath	equ	0xFFA
  5664                           tblptru	equ	0xFF8
  5665                           tblptrh	equ	0xFF7
  5666                           tblptrl	equ	0xFF6
  5667                           tablat	equ	0xFF5
  5668                           prodh	equ	0xFF4
  5669                           prodl	equ	0xFF3
  5670                           intcon	equ	0xFF2
  5671                           indf0	equ	0xFEF
  5672                           postinc0	equ	0xFEE
  5673                           fsr0h	equ	0xFEA
  5674                           fsr0l	equ	0xFE9
  5675                           wreg	equ	0xFE8
  5676                           fsr1h	equ	0xFE2
  5677                           fsr1l	equ	0xFE1
  5678                           postinc2	equ	0xFDE
  5679                           postdec2	equ	0xFDD
  5680                           fsr2h	equ	0xFDA
  5681                           fsr2l	equ	0xFD9
  5682                           status	equ	0xFD8
  5683                           
  5684 ;; *************** function _lerAdcAn2 *****************
  5685 ;; Defined at:
  5686 ;;		line 32 in file "adc.h"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;		None
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;  valorLido       2    4[COMRAM] int 
  5691 ;; Return value:  Size  Location     Type
  5692 ;;                  2    0[COMRAM] int 
  5693 ;; Registers used:
  5694 ;;		wreg, status,2, status,0
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5700 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5701 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5702 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5703 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5704 ;;Total ram usage:        6 bytes
  5705 ;; Hardware stack levels used:    1
  5706 ;; This function calls:
  5707 ;;		Nothing
  5708 ;; This function is called by:
  5709 ;;		_tratamento
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712                           
  5713                           	psect	text23
  5714  002A90                     __ptext23:
  5715                           	opt stack 0
  5716  002A90                     _lerAdcAn2:
  5717                           	opt stack 27
  5718                           
  5719                           ;adc.h: 33: ADCON0bits.CHS = 0b0010;
  5720                           
  5721                           ;incstack = 0
  5722  002A90  50C2               	movf	4034,w,c	;volatile
  5723  002A92  0BC3               	andlw	-61
  5724  002A94  0908               	iorlw	8
  5725  002A96  6EC2               	movwf	4034,c	;volatile
  5726                           
  5727                           ;adc.h: 34: ADCON0bits.ADON = 1;
  5728  002A98  80C2               	bsf	4034,0,c	;volatile
  5729                           
  5730                           ;adc.h: 35: int valorLido = 0;
  5731  002A9A  0E00               	movlw	0
  5732  002A9C  6E06               	movwf	lerAdcAn2@valorLido+1,c
  5733  002A9E  0E00               	movlw	0
  5734  002AA0  6E05               	movwf	lerAdcAn2@valorLido,c
  5735                           
  5736                           ;adc.h: 36: ADCON0bits.GO_nDONE = 1;
  5737  002AA2  82C2               	bsf	4034,1,c	;volatile
  5738  002AA4                     i2l63:
  5739  002AA4  AC9E               	btfss	3998,6,c	;volatile
  5740  002AA6  D7FE               	goto	i2l63
  5741                           
  5742                           ;adc.h: 38: valorLido = ((ADRESH<<8) | ADRESL);
  5743  002AA8  50C3               	movf	4035,w,c	;volatile
  5744  002AAA  CFC4 F003          	movff	4036,??_lerAdcAn2	;volatile
  5745  002AAE  6A04               	clrf	(??_lerAdcAn2+1)& (0+255),c
  5746  002AB0  C003  F004         	movff	??_lerAdcAn2,??_lerAdcAn2+1
  5747  002AB4  6A03               	clrf	??_lerAdcAn2,c
  5748  002AB6  1003               	iorwf	??_lerAdcAn2,w,c
  5749  002AB8  6E05               	movwf	lerAdcAn2@valorLido,c
  5750  002ABA  5004               	movf	??_lerAdcAn2+1,w,c
  5751  002ABC  6E06               	movwf	lerAdcAn2@valorLido+1,c
  5752                           
  5753                           ;adc.h: 39: PIR1bits.ADIF = 0;
  5754  002ABE  9C9E               	bcf	3998,6,c	;volatile
  5755                           
  5756                           ;adc.h: 40: ADCON0bits.ADON = 0;
  5757  002AC0  90C2               	bcf	4034,0,c	;volatile
  5758                           
  5759                           ;adc.h: 41: return valorLido;
  5760  002AC2  C005  F001         	movff	lerAdcAn2@valorLido,?_lerAdcAn2
  5761  002AC6  C006  F002         	movff	lerAdcAn2@valorLido+1,?_lerAdcAn2+1
  5762  002ACA  0012               	return	
  5763  002ACC                     __end_of_lerAdcAn2:
  5764                           	opt stack 0
  5765                           pclatu	equ	0xFFB
  5766                           pclath	equ	0xFFA
  5767                           tblptru	equ	0xFF8
  5768                           tblptrh	equ	0xFF7
  5769                           tblptrl	equ	0xFF6
  5770                           tablat	equ	0xFF5
  5771                           prodh	equ	0xFF4
  5772                           prodl	equ	0xFF3
  5773                           intcon	equ	0xFF2
  5774                           indf0	equ	0xFEF
  5775                           postinc0	equ	0xFEE
  5776                           fsr0h	equ	0xFEA
  5777                           fsr0l	equ	0xFE9
  5778                           wreg	equ	0xFE8
  5779                           fsr1h	equ	0xFE2
  5780                           fsr1l	equ	0xFE1
  5781                           postinc2	equ	0xFDE
  5782                           postdec2	equ	0xFDD
  5783                           fsr2h	equ	0xFDA
  5784                           fsr2l	equ	0xFD9
  5785                           status	equ	0xFD8
  5786                           
  5787 ;; *************** function _lerAdcAn1 *****************
  5788 ;; Defined at:
  5789 ;;		line 20 in file "adc.h"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;		None
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;  valorLido       2    4[COMRAM] int 
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  2    0[COMRAM] int 
  5796 ;; Registers used:
  5797 ;;		wreg, status,2, status,0
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5804 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5805 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5806 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5807 ;;Total ram usage:        6 bytes
  5808 ;; Hardware stack levels used:    1
  5809 ;; This function calls:
  5810 ;;		Nothing
  5811 ;; This function is called by:
  5812 ;;		_tratamento
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           	psect	text24
  5817  002ACC                     __ptext24:
  5818                           	opt stack 0
  5819  002ACC                     _lerAdcAn1:
  5820                           	opt stack 27
  5821                           
  5822                           ;adc.h: 21: ADCON0bits.CHS = 0b0001;
  5823                           
  5824                           ;incstack = 0
  5825  002ACC  50C2               	movf	4034,w,c	;volatile
  5826  002ACE  0BC3               	andlw	-61
  5827  002AD0  0904               	iorlw	4
  5828  002AD2  6EC2               	movwf	4034,c	;volatile
  5829                           
  5830                           ;adc.h: 22: ADCON0bits.ADON = 1;
  5831  002AD4  80C2               	bsf	4034,0,c	;volatile
  5832                           
  5833                           ;adc.h: 23: int valorLido = 0;
  5834  002AD6  0E00               	movlw	0
  5835  002AD8  6E06               	movwf	lerAdcAn1@valorLido+1,c
  5836  002ADA  0E00               	movlw	0
  5837  002ADC  6E05               	movwf	lerAdcAn1@valorLido,c
  5838                           
  5839                           ;adc.h: 24: ADCON0bits.GO_nDONE = 1;
  5840  002ADE  82C2               	bsf	4034,1,c	;volatile
  5841  002AE0                     i2l57:
  5842  002AE0  AC9E               	btfss	3998,6,c	;volatile
  5843  002AE2  D7FE               	goto	i2l57
  5844                           
  5845                           ;adc.h: 26: valorLido = ((ADRESH<<8) | ADRESL);
  5846  002AE4  50C3               	movf	4035,w,c	;volatile
  5847  002AE6  CFC4 F003          	movff	4036,??_lerAdcAn1	;volatile
  5848  002AEA  6A04               	clrf	(??_lerAdcAn1+1)& (0+255),c
  5849  002AEC  C003  F004         	movff	??_lerAdcAn1,??_lerAdcAn1+1
  5850  002AF0  6A03               	clrf	??_lerAdcAn1,c
  5851  002AF2  1003               	iorwf	??_lerAdcAn1,w,c
  5852  002AF4  6E05               	movwf	lerAdcAn1@valorLido,c
  5853  002AF6  5004               	movf	??_lerAdcAn1+1,w,c
  5854  002AF8  6E06               	movwf	lerAdcAn1@valorLido+1,c
  5855                           
  5856                           ;adc.h: 27: PIR1bits.ADIF = 0;
  5857  002AFA  9C9E               	bcf	3998,6,c	;volatile
  5858                           
  5859                           ;adc.h: 28: ADCON0bits.ADON = 0;
  5860  002AFC  90C2               	bcf	4034,0,c	;volatile
  5861                           
  5862                           ;adc.h: 29: return valorLido;
  5863  002AFE  C005  F001         	movff	lerAdcAn1@valorLido,?_lerAdcAn1
  5864  002B02  C006  F002         	movff	lerAdcAn1@valorLido+1,?_lerAdcAn1+1
  5865  002B06  0012               	return	
  5866  002B08                     __end_of_lerAdcAn1:
  5867                           	opt stack 0
  5868                           pclatu	equ	0xFFB
  5869                           pclath	equ	0xFFA
  5870                           tblptru	equ	0xFF8
  5871                           tblptrh	equ	0xFF7
  5872                           tblptrl	equ	0xFF6
  5873                           tablat	equ	0xFF5
  5874                           prodh	equ	0xFF4
  5875                           prodl	equ	0xFF3
  5876                           intcon	equ	0xFF2
  5877                           indf0	equ	0xFEF
  5878                           postinc0	equ	0xFEE
  5879                           fsr0h	equ	0xFEA
  5880                           fsr0l	equ	0xFE9
  5881                           wreg	equ	0xFE8
  5882                           fsr1h	equ	0xFE2
  5883                           fsr1l	equ	0xFE1
  5884                           postinc2	equ	0xFDE
  5885                           postdec2	equ	0xFDD
  5886                           fsr2h	equ	0xFDA
  5887                           fsr2l	equ	0xFD9
  5888                           status	equ	0xFD8
  5889                           
  5890 ;; *************** function _lerAdcAn0 *****************
  5891 ;; Defined at:
  5892 ;;		line 8 in file "adc.h"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;		None
  5895 ;; Auto vars:     Size  Location     Type
  5896 ;;  valorLido       2    4[COMRAM] int 
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  2    0[COMRAM] int 
  5899 ;; Registers used:
  5900 ;;		wreg, status,2, status,0
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 0/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5906 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5907 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5908 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5909 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5910 ;;Total ram usage:        6 bytes
  5911 ;; Hardware stack levels used:    1
  5912 ;; This function calls:
  5913 ;;		Nothing
  5914 ;; This function is called by:
  5915 ;;		_tratamento
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           
  5919                           	psect	text25
  5920  002B08                     __ptext25:
  5921                           	opt stack 0
  5922  002B08                     _lerAdcAn0:
  5923                           	opt stack 27
  5924                           
  5925                           ;adc.h: 9: ADCON0bits.CHS = 0b0000;
  5926                           
  5927                           ;incstack = 0
  5928  002B08  94C2               	bcf	4034,2,c	;volatile
  5929  002B0A  96C2               	bcf	4034,3,c	;volatile
  5930  002B0C  98C2               	bcf	4034,4,c	;volatile
  5931  002B0E  9AC2               	bcf	4034,5,c	;volatile
  5932                           
  5933                           ;adc.h: 10: ADCON0bits.ADON = 1;
  5934  002B10  80C2               	bsf	4034,0,c	;volatile
  5935                           
  5936                           ;adc.h: 11: int valorLido = 0;
  5937  002B12  0E00               	movlw	0
  5938  002B14  6E06               	movwf	lerAdcAn0@valorLido+1,c
  5939  002B16  0E00               	movlw	0
  5940  002B18  6E05               	movwf	lerAdcAn0@valorLido,c
  5941                           
  5942                           ;adc.h: 12: ADCON0bits.GO_nDONE = 1;
  5943  002B1A  82C2               	bsf	4034,1,c	;volatile
  5944  002B1C                     i2l51:
  5945  002B1C  AC9E               	btfss	3998,6,c	;volatile
  5946  002B1E  D7FE               	goto	i2l51
  5947                           
  5948                           ;adc.h: 14: valorLido = ((ADRESH<<8) | ADRESL);
  5949  002B20  50C3               	movf	4035,w,c	;volatile
  5950  002B22  CFC4 F003          	movff	4036,??_lerAdcAn0	;volatile
  5951  002B26  6A04               	clrf	(??_lerAdcAn0+1)& (0+255),c
  5952  002B28  C003  F004         	movff	??_lerAdcAn0,??_lerAdcAn0+1
  5953  002B2C  6A03               	clrf	??_lerAdcAn0,c
  5954  002B2E  1003               	iorwf	??_lerAdcAn0,w,c
  5955  002B30  6E05               	movwf	lerAdcAn0@valorLido,c
  5956  002B32  5004               	movf	??_lerAdcAn0+1,w,c
  5957  002B34  6E06               	movwf	lerAdcAn0@valorLido+1,c
  5958                           
  5959                           ;adc.h: 15: PIR1bits.ADIF = 0;
  5960  002B36  9C9E               	bcf	3998,6,c	;volatile
  5961                           
  5962                           ;adc.h: 16: ADCON0bits.ADON = 0;
  5963  002B38  90C2               	bcf	4034,0,c	;volatile
  5964                           
  5965                           ;adc.h: 17: return valorLido;
  5966  002B3A  C005  F001         	movff	lerAdcAn0@valorLido,?_lerAdcAn0
  5967  002B3E  C006  F002         	movff	lerAdcAn0@valorLido+1,?_lerAdcAn0+1
  5968  002B42  0012               	return	
  5969  002B44                     __end_of_lerAdcAn0:
  5970                           	opt stack 0
  5971                           pclatu	equ	0xFFB
  5972                           pclath	equ	0xFFA
  5973                           tblptru	equ	0xFF8
  5974                           tblptrh	equ	0xFF7
  5975                           tblptrl	equ	0xFF6
  5976                           tablat	equ	0xFF5
  5977                           prodh	equ	0xFF4
  5978                           prodl	equ	0xFF3
  5979                           intcon	equ	0xFF2
  5980                           indf0	equ	0xFEF
  5981                           postinc0	equ	0xFEE
  5982                           fsr0h	equ	0xFEA
  5983                           fsr0l	equ	0xFE9
  5984                           wreg	equ	0xFE8
  5985                           fsr1h	equ	0xFE2
  5986                           fsr1l	equ	0xFE1
  5987                           postinc2	equ	0xFDE
  5988                           postdec2	equ	0xFDD
  5989                           fsr2h	equ	0xFDA
  5990                           fsr2l	equ	0xFD9
  5991                           status	equ	0xFD8
  5992                           
  5993 ;; *************** function _indexDoMenorValor *****************
  5994 ;; Defined at:
  5995 ;;		line 3 in file "analiseDeDados.h"
  5996 ;; Parameters:    Size  Location     Type
  5997 ;;  dados           2   29[COMRAM] PTR float 
  5998 ;;		 -> tensaoNaBateria(15), 
  5999 ;;  quantidadeDe    2   31[COMRAM] int 
  6000 ;; Auto vars:     Size  Location     Type
  6001 ;;  menorValor      3   34[COMRAM] float 
  6002 ;;  contador        2   39[COMRAM] int 
  6003 ;;  index           2   37[COMRAM] int 
  6004 ;; Return value:  Size  Location     Type
  6005 ;;                  2   29[COMRAM] int 
  6006 ;; Registers used:
  6007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6008 ;; Tracked objects:
  6009 ;;		On entry : 0/0
  6010 ;;		On exit  : 0/0
  6011 ;;		Unchanged: 0/0
  6012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6013 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6014 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6015 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6016 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6017 ;;Total ram usage:       12 bytes
  6018 ;; Hardware stack levels used:    1
  6019 ;; Hardware stack levels required when called:    1
  6020 ;; This function calls:
  6021 ;;		___ftge
  6022 ;;		___wmul
  6023 ;; This function is called by:
  6024 ;;		_tratamento
  6025 ;; This function uses a non-reentrant model
  6026 ;;
  6027                           
  6028                           	psect	text26
  6029  0022B8                     __ptext26:
  6030                           	opt stack 0
  6031  0022B8                     _indexDoMenorValor:
  6032                           	opt stack 26
  6033                           
  6034                           ;analiseDeDados.h: 4: int index = 0;
  6035                           
  6036                           ;incstack = 0
  6037  0022B8  0E00               	movlw	0
  6038  0022BA  6E27               	movwf	indexDoMenorValor@index+1,c
  6039  0022BC  0E00               	movlw	0
  6040  0022BE  6E26               	movwf	indexDoMenorValor@index,c
  6041                           
  6042                           ;analiseDeDados.h: 5: int contador = 0;
  6043  0022C0  0E00               	movlw	0
  6044  0022C2  6E29               	movwf	indexDoMenorValor@contador+1,c
  6045  0022C4  0E00               	movlw	0
  6046  0022C6  6E28               	movwf	indexDoMenorValor@contador,c
  6047                           
  6048                           ;analiseDeDados.h: 6: float menorValor = 0;
  6049  0022C8  0E00               	movlw	0
  6050  0022CA  6E23               	movwf	indexDoMenorValor@menorValor,c
  6051  0022CC  0E00               	movlw	0
  6052  0022CE  6E24               	movwf	indexDoMenorValor@menorValor+1,c
  6053  0022D0  0E00               	movlw	0
  6054  0022D2  6E25               	movwf	indexDoMenorValor@menorValor+2,c
  6055                           
  6056                           ;analiseDeDados.h: 7: menorValor = dados[contador];
  6057  0022D4  C028  F00F         	movff	indexDoMenorValor@contador,___wmul@multiplier
  6058  0022D8  C029  F010         	movff	indexDoMenorValor@contador+1,___wmul@multiplier+1
  6059  0022DC  0E00               	movlw	0
  6060  0022DE  6E12               	movwf	___wmul@multiplicand+1,c
  6061  0022E0  0E03               	movlw	3
  6062  0022E2  6E11               	movwf	___wmul@multiplicand,c
  6063  0022E4  EC0A  F016         	call	___wmul	;wreg free
  6064  0022E8  500F               	movf	?___wmul,w,c
  6065  0022EA  241E               	addwf	indexDoMenorValor@dados,w,c
  6066  0022EC  6ED9               	movwf	fsr2l,c
  6067  0022EE  5010               	movf	?___wmul+1,w,c
  6068  0022F0  201F               	addwfc	indexDoMenorValor@dados+1,w,c
  6069  0022F2  6EDA               	movwf	fsr2h,c
  6070  0022F4  CFDE F023          	movff	postinc2,indexDoMenorValor@menorValor
  6071  0022F8  CFDE F024          	movff	postinc2,indexDoMenorValor@menorValor+1
  6072  0022FC  CFDD F025          	movff	postdec2,indexDoMenorValor@menorValor+2
  6073                           
  6074                           ;analiseDeDados.h: 8: index = contador;
  6075  002300  C028  F026         	movff	indexDoMenorValor@contador,indexDoMenorValor@index
  6076  002304  C029  F027         	movff	indexDoMenorValor@contador+1,indexDoMenorValor@index+1
  6077                           
  6078                           ;analiseDeDados.h: 10: for(contador = 0; contador < quantidadeDeValoresParaAnalisar; con
      +                          tador++) {
  6079  002308  0E00               	movlw	0
  6080  00230A  6E29               	movwf	indexDoMenorValor@contador+1,c
  6081  00230C  0E00               	movlw	0
  6082  00230E  6E28               	movwf	indexDoMenorValor@contador,c
  6083  002310  D03C               	goto	i2l3288
  6084  002312                     i2l3280:
  6085                           
  6086                           ;analiseDeDados.h: 11: if(dados[contador] < menorValor) {
  6087  002312  C028  F00F         	movff	indexDoMenorValor@contador,___wmul@multiplier
  6088  002316  C029  F010         	movff	indexDoMenorValor@contador+1,___wmul@multiplier+1
  6089  00231A  0E00               	movlw	0
  6090  00231C  6E12               	movwf	___wmul@multiplicand+1,c
  6091  00231E  0E03               	movlw	3
  6092  002320  6E11               	movwf	___wmul@multiplicand,c
  6093  002322  EC0A  F016         	call	___wmul	;wreg free
  6094  002326  500F               	movf	?___wmul,w,c
  6095  002328  241E               	addwf	indexDoMenorValor@dados,w,c
  6096  00232A  6ED9               	movwf	fsr2l,c
  6097  00232C  5010               	movf	?___wmul+1,w,c
  6098  00232E  201F               	addwfc	indexDoMenorValor@dados+1,w,c
  6099  002330  6EDA               	movwf	fsr2h,c
  6100  002332  CFDE F015          	movff	postinc2,___ftge@ff1
  6101  002336  CFDE F016          	movff	postinc2,___ftge@ff1+1
  6102  00233A  CFDD F017          	movff	postdec2,___ftge@ff1+2
  6103  00233E  C023  F018         	movff	indexDoMenorValor@menorValor,___ftge@ff2
  6104  002342  C024  F019         	movff	indexDoMenorValor@menorValor+1,___ftge@ff2+1
  6105  002346  C025  F01A         	movff	indexDoMenorValor@menorValor+2,___ftge@ff2+2
  6106  00234A  EC37  F013         	call	___ftge	;wreg free
  6107  00234E  B0D8               	btfsc	status,0,c
  6108  002350  D01A               	goto	i2l3286
  6109                           
  6110                           ;analiseDeDados.h: 12: index = contador;
  6111  002352  C028  F026         	movff	indexDoMenorValor@contador,indexDoMenorValor@index
  6112  002356  C029  F027         	movff	indexDoMenorValor@contador+1,indexDoMenorValor@index+1
  6113                           
  6114                           ;analiseDeDados.h: 13: menorValor = dados[contador];
  6115  00235A  C028  F00F         	movff	indexDoMenorValor@contador,___wmul@multiplier
  6116  00235E  C029  F010         	movff	indexDoMenorValor@contador+1,___wmul@multiplier+1
  6117  002362  0E00               	movlw	0
  6118  002364  6E12               	movwf	___wmul@multiplicand+1,c
  6119  002366  0E03               	movlw	3
  6120  002368  6E11               	movwf	___wmul@multiplicand,c
  6121  00236A  EC0A  F016         	call	___wmul	;wreg free
  6122  00236E  500F               	movf	?___wmul,w,c
  6123  002370  241E               	addwf	indexDoMenorValor@dados,w,c
  6124  002372  6ED9               	movwf	fsr2l,c
  6125  002374  5010               	movf	?___wmul+1,w,c
  6126  002376  201F               	addwfc	indexDoMenorValor@dados+1,w,c
  6127  002378  6EDA               	movwf	fsr2h,c
  6128  00237A  CFDE F023          	movff	postinc2,indexDoMenorValor@menorValor
  6129  00237E  CFDE F024          	movff	postinc2,indexDoMenorValor@menorValor+1
  6130  002382  CFDD F025          	movff	postdec2,indexDoMenorValor@menorValor+2
  6131  002386                     i2l3286:
  6132  002386  4A28               	infsnz	indexDoMenorValor@contador,f,c
  6133  002388  2A29               	incf	indexDoMenorValor@contador+1,f,c
  6134  00238A                     i2l3288:
  6135  00238A  5020               	movf	indexDoMenorValor@quantidadeDeValoresParaAnalisar,w,c
  6136  00238C  5C28               	subwf	indexDoMenorValor@contador,w,c
  6137  00238E  5029               	movf	indexDoMenorValor@contador+1,w,c
  6138  002390  0A80               	xorlw	128
  6139  002392  6E22               	movwf	??_indexDoMenorValor& (0+255),c
  6140  002394  5021               	movf	indexDoMenorValor@quantidadeDeValoresParaAnalisar+1,w,c
  6141  002396  0A80               	xorlw	128
  6142  002398  5822               	subwfb	??_indexDoMenorValor& (0+255),w,c
  6143  00239A  A0D8               	btfss	status,0,c
  6144  00239C  D7BA               	goto	i2l3280
  6145                           
  6146                           ;analiseDeDados.h: 14: }
  6147                           ;analiseDeDados.h: 15: }
  6148                           ;analiseDeDados.h: 17: return index;
  6149  00239E  C026  F01E         	movff	indexDoMenorValor@index,?_indexDoMenorValor
  6150  0023A2  C027  F01F         	movff	indexDoMenorValor@index+1,?_indexDoMenorValor+1
  6151  0023A6  0012               	return		;funcret
  6152  0023A8                     __end_of_indexDoMenorValor:
  6153                           	opt stack 0
  6154                           pclatu	equ	0xFFB
  6155                           pclath	equ	0xFFA
  6156                           tblptru	equ	0xFF8
  6157                           tblptrh	equ	0xFF7
  6158                           tblptrl	equ	0xFF6
  6159                           tablat	equ	0xFF5
  6160                           prodh	equ	0xFF4
  6161                           prodl	equ	0xFF3
  6162                           intcon	equ	0xFF2
  6163                           indf0	equ	0xFEF
  6164                           postinc0	equ	0xFEE
  6165                           fsr0h	equ	0xFEA
  6166                           fsr0l	equ	0xFE9
  6167                           wreg	equ	0xFE8
  6168                           fsr1h	equ	0xFE2
  6169                           fsr1l	equ	0xFE1
  6170                           postinc2	equ	0xFDE
  6171                           postdec2	equ	0xFDD
  6172                           fsr2h	equ	0xFDA
  6173                           fsr2l	equ	0xFD9
  6174                           status	equ	0xFD8
  6175                           
  6176 ;; *************** function _habilitarDescarregamentoDaBateria *****************
  6177 ;; Defined at:
  6178 ;;		line 31 in file "controleDaBateria.h"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;		None
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;		None
  6183 ;; Return value:  Size  Location     Type
  6184 ;;                  1    wreg      void 
  6185 ;; Registers used:
  6186 ;;		None
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6196 ;;Total ram usage:        0 bytes
  6197 ;; Hardware stack levels used:    1
  6198 ;; This function calls:
  6199 ;;		Nothing
  6200 ;; This function is called by:
  6201 ;;		_tratamento
  6202 ;; This function uses a non-reentrant model
  6203 ;;
  6204                           
  6205                           	psect	text27
  6206  002D84                     __ptext27:
  6207                           	opt stack 0
  6208  002D84                     _habilitarDescarregamentoDaBateria:
  6209                           	opt stack 27
  6210                           
  6211                           ;controleDaBateria.h: 33: if(PORTBbits.RB0 == 1) {
  6212                           
  6213                           ;incstack = 0
  6214  002D84  A081               	btfss	3969,0,c	;volatile
  6215  002D86  D002               	goto	i2l125
  6216                           
  6217                           ;controleDaBateria.h: 34: PORTBbits.RB1 = 0;
  6218  002D88  9281               	bcf	3969,1,c	;volatile
  6219                           
  6220                           ;controleDaBateria.h: 35: }
  6221  002D8A  0012               	return	
  6222  002D8C                     i2l125:
  6223                           
  6224                           ;controleDaBateria.h: 36: else {
  6225                           ;controleDaBateria.h: 37: PORTBbits.RB1 = 1;
  6226  002D8C  8281               	bsf	3969,1,c	;volatile
  6227  002D8E  0012               	return	
  6228  002D90                     __end_of_habilitarDescarregamentoDaBateria:
  6229                           	opt stack 0
  6230                           pclatu	equ	0xFFB
  6231                           pclath	equ	0xFFA
  6232                           tblptru	equ	0xFF8
  6233                           tblptrh	equ	0xFF7
  6234                           tblptrl	equ	0xFF6
  6235                           tablat	equ	0xFF5
  6236                           prodh	equ	0xFF4
  6237                           prodl	equ	0xFF3
  6238                           intcon	equ	0xFF2
  6239                           indf0	equ	0xFEF
  6240                           postinc0	equ	0xFEE
  6241                           fsr0h	equ	0xFEA
  6242                           fsr0l	equ	0xFE9
  6243                           wreg	equ	0xFE8
  6244                           fsr1h	equ	0xFE2
  6245                           fsr1l	equ	0xFE1
  6246                           postinc2	equ	0xFDE
  6247                           postdec2	equ	0xFDD
  6248                           fsr2h	equ	0xFDA
  6249                           fsr2l	equ	0xFD9
  6250                           status	equ	0xFD8
  6251                           
  6252 ;; *************** function _habilitarCarregamentoDaBateria *****************
  6253 ;; Defined at:
  6254 ;;		line 20 in file "controleDaBateria.h"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;		None
  6257 ;; Auto vars:     Size  Location     Type
  6258 ;;		None
  6259 ;; Return value:  Size  Location     Type
  6260 ;;                  1    wreg      void 
  6261 ;; Registers used:
  6262 ;;		None
  6263 ;; Tracked objects:
  6264 ;;		On entry : 0/0
  6265 ;;		On exit  : 0/0
  6266 ;;		Unchanged: 0/0
  6267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6272 ;;Total ram usage:        0 bytes
  6273 ;; Hardware stack levels used:    1
  6274 ;; This function calls:
  6275 ;;		Nothing
  6276 ;; This function is called by:
  6277 ;;		_tratamento
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           	psect	text28
  6282  002D90                     __ptext28:
  6283                           	opt stack 0
  6284  002D90                     _habilitarCarregamentoDaBateria:
  6285                           	opt stack 27
  6286                           
  6287                           ;controleDaBateria.h: 22: if(PORTBbits.RB1 == 1) {
  6288                           
  6289                           ;incstack = 0
  6290  002D90  A281               	btfss	3969,1,c	;volatile
  6291  002D92  D002               	goto	i2l120
  6292                           
  6293                           ;controleDaBateria.h: 23: PORTBbits.RB0 = 0;
  6294  002D94  9081               	bcf	3969,0,c	;volatile
  6295                           
  6296                           ;controleDaBateria.h: 24: }
  6297  002D96  0012               	return	
  6298  002D98                     i2l120:
  6299                           
  6300                           ;controleDaBateria.h: 25: else {
  6301                           ;controleDaBateria.h: 26: PORTBbits.RB0 = 1;
  6302  002D98  8081               	bsf	3969,0,c	;volatile
  6303  002D9A  0012               	return	
  6304  002D9C                     __end_of_habilitarCarregamentoDaBateria:
  6305                           	opt stack 0
  6306                           pclatu	equ	0xFFB
  6307                           pclath	equ	0xFFA
  6308                           tblptru	equ	0xFF8
  6309                           tblptrh	equ	0xFF7
  6310                           tblptrl	equ	0xFF6
  6311                           tablat	equ	0xFF5
  6312                           prodh	equ	0xFF4
  6313                           prodl	equ	0xFF3
  6314                           intcon	equ	0xFF2
  6315                           indf0	equ	0xFEF
  6316                           postinc0	equ	0xFEE
  6317                           fsr0h	equ	0xFEA
  6318                           fsr0l	equ	0xFE9
  6319                           wreg	equ	0xFE8
  6320                           fsr1h	equ	0xFE2
  6321                           fsr1l	equ	0xFE1
  6322                           postinc2	equ	0xFDE
  6323                           postdec2	equ	0xFDD
  6324                           fsr2h	equ	0xFDA
  6325                           fsr2l	equ	0xFD9
  6326                           status	equ	0xFD8
  6327                           
  6328 ;; *************** function _converterIntParaString *****************
  6329 ;; Defined at:
  6330 ;;		line 60 in file "uart.h"
  6331 ;; Parameters:    Size  Location     Type
  6332 ;;  valorParaSer    2   99[COMRAM] int 
  6333 ;; Auto vars:     Size  Location     Type
  6334 ;;  string          7  101[COMRAM] unsigned char [7]
  6335 ;; Return value:  Size  Location     Type
  6336 ;;                  1    wreg      unsigned char 
  6337 ;; Registers used:
  6338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6339 ;; Tracked objects:
  6340 ;;		On entry : 0/0
  6341 ;;		On exit  : 0/0
  6342 ;;		Unchanged: 0/0
  6343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6345 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6347 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6348 ;;Total ram usage:        9 bytes
  6349 ;; Hardware stack levels used:    1
  6350 ;; Hardware stack levels required when called:    4
  6351 ;; This function calls:
  6352 ;;		_sprintf
  6353 ;; This function is called by:
  6354 ;;		_tratamento
  6355 ;; This function uses a non-reentrant model
  6356 ;;
  6357                           
  6358                           	psect	text29
  6359  002C82                     __ptext29:
  6360                           	opt stack 0
  6361  002C82                     _converterIntParaString:
  6362                           	opt stack 23
  6363                           
  6364                           ;uart.h: 61: char string[7];
  6365                           ;uart.h: 62: sprintf(string, "%d", valorParaSerConvertido);
  6366                           
  6367                           ;incstack = 0
  6368  002C82  0E66               	movlw	low converterIntParaString@string
  6369  002C84  6E40               	movwf	sprintf@sp,c
  6370  002C86  0E00               	movlw	high converterIntParaString@string
  6371  002C88  6E41               	movwf	sprintf@sp+1,c
  6372  002C8A  0EF9               	movlw	low STR_1
  6373  002C8C  6E42               	movwf	sprintf@f,c
  6374  002C8E  0EFF               	movlw	high STR_1
  6375  002C90  6E43               	movwf	sprintf@f+1,c
  6376  002C92  C064  F044         	movff	converterIntParaString@valorParaSerConvertido,?_sprintf+4
  6377  002C96  C065  F045         	movff	converterIntParaString@valorParaSerConvertido+1,?_sprintf+5
  6378  002C9A  EC63  F007         	call	_sprintf	;wreg free
  6379                           
  6380                           ;uart.h: 63: return string;
  6381  002C9E  0E66               	movlw	converterIntParaString@string& (0+255)
  6382  002CA0  0012               	return	
  6383  002CA2                     __end_of_converterIntParaString:
  6384                           	opt stack 0
  6385                           pclatu	equ	0xFFB
  6386                           pclath	equ	0xFFA
  6387                           tblptru	equ	0xFF8
  6388                           tblptrh	equ	0xFF7
  6389                           tblptrl	equ	0xFF6
  6390                           tablat	equ	0xFF5
  6391                           prodh	equ	0xFF4
  6392                           prodl	equ	0xFF3
  6393                           intcon	equ	0xFF2
  6394                           indf0	equ	0xFEF
  6395                           postinc0	equ	0xFEE
  6396                           fsr0h	equ	0xFEA
  6397                           fsr0l	equ	0xFE9
  6398                           wreg	equ	0xFE8
  6399                           fsr1h	equ	0xFE2
  6400                           fsr1l	equ	0xFE1
  6401                           postinc2	equ	0xFDE
  6402                           postdec2	equ	0xFDD
  6403                           fsr2h	equ	0xFDA
  6404                           fsr2l	equ	0xFD9
  6405                           status	equ	0xFD8
  6406                           
  6407 ;; *************** function _converterFloatParaString *****************
  6408 ;; Defined at:
  6409 ;;		line 71 in file "uart.h"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;  valorParaSer    3   99[COMRAM] float 
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;  string         10  102[COMRAM] unsigned char [10]
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  1    wreg      unsigned char 
  6416 ;; Registers used:
  6417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6423 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6424 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6426 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6427 ;;Total ram usage:       13 bytes
  6428 ;; Hardware stack levels used:    1
  6429 ;; Hardware stack levels required when called:    4
  6430 ;; This function calls:
  6431 ;;		_sprintf
  6432 ;; This function is called by:
  6433 ;;		_tratamento
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           	psect	text30
  6438  002C3A                     __ptext30:
  6439                           	opt stack 0
  6440  002C3A                     _converterFloatParaString:
  6441                           	opt stack 23
  6442                           
  6443                           ;uart.h: 72: char string[10];
  6444                           ;uart.h: 73: sprintf(string, "%f", valorParaSerConvertido);
  6445                           
  6446                           ;incstack = 0
  6447  002C3A  0E67               	movlw	low converterFloatParaString@string
  6448  002C3C  6E40               	movwf	sprintf@sp,c
  6449  002C3E  0E00               	movlw	high converterFloatParaString@string
  6450  002C40  6E41               	movwf	sprintf@sp+1,c
  6451  002C42  0EFC               	movlw	low STR_2
  6452  002C44  6E42               	movwf	sprintf@f,c
  6453  002C46  0EFF               	movlw	high STR_2
  6454  002C48  6E43               	movwf	sprintf@f+1,c
  6455  002C4A  C064  F044         	movff	converterFloatParaString@valorParaSerConvertido,?_sprintf+4
  6456  002C4E  C065  F045         	movff	converterFloatParaString@valorParaSerConvertido+1,?_sprintf+5
  6457  002C52  C066  F046         	movff	converterFloatParaString@valorParaSerConvertido+2,?_sprintf+6
  6458  002C56  EC63  F007         	call	_sprintf	;wreg free
  6459                           
  6460                           ;uart.h: 74: return string;
  6461  002C5A  0E67               	movlw	converterFloatParaString@string& (0+255)
  6462  002C5C  0012               	return	
  6463  002C5E                     __end_of_converterFloatParaString:
  6464                           	opt stack 0
  6465                           pclatu	equ	0xFFB
  6466                           pclath	equ	0xFFA
  6467                           tblptru	equ	0xFF8
  6468                           tblptrh	equ	0xFF7
  6469                           tblptrl	equ	0xFF6
  6470                           tablat	equ	0xFF5
  6471                           prodh	equ	0xFF4
  6472                           prodl	equ	0xFF3
  6473                           intcon	equ	0xFF2
  6474                           indf0	equ	0xFEF
  6475                           postinc0	equ	0xFEE
  6476                           fsr0h	equ	0xFEA
  6477                           fsr0l	equ	0xFE9
  6478                           wreg	equ	0xFE8
  6479                           fsr1h	equ	0xFE2
  6480                           fsr1l	equ	0xFE1
  6481                           postinc2	equ	0xFDE
  6482                           postdec2	equ	0xFDD
  6483                           fsr2h	equ	0xFDA
  6484                           fsr2l	equ	0xFD9
  6485                           status	equ	0xFD8
  6486                           
  6487 ;; *************** function _sprintf *****************
  6488 ;; Defined at:
  6489 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\doprnt.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;  sp              2   63[COMRAM] PTR unsigned char 
  6492 ;;		 -> converterFloatParaString@string(10), converterIntParaString@string(7), 
  6493 ;;  f               2   65[COMRAM] PTR const unsigned char 
  6494 ;;		 -> STR_2(3), STR_1(3), 
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;  tmpval          4   91[COMRAM] struct .
  6497 ;;  val             4   85[COMRAM] unsigned long 
  6498 ;;  fval            3   95[COMRAM] unsigned long 
  6499 ;;  cp              3    0        PTR const unsigned char 
  6500 ;;  exp             2   89[COMRAM] int 
  6501 ;;  prec            2   83[COMRAM] int 
  6502 ;;  flag            2   81[COMRAM] unsigned short 
  6503 ;;  ap              2   79[COMRAM] PTR void [1]
  6504 ;;		 -> ?_sprintf(2), 
  6505 ;;  len             2    0        unsigned int 
  6506 ;;  width           2    0        int 
  6507 ;;  c               1   98[COMRAM] char 
  6508 ;;  d               1    0        unsigned char 
  6509 ;; Return value:  Size  Location     Type
  6510 ;;                  2   63[COMRAM] int 
  6511 ;; Registers used:
  6512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6513 ;; Tracked objects:
  6514 ;;		On entry : 0/0
  6515 ;;		On exit  : 0/0
  6516 ;;		Unchanged: 0/0
  6517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6518 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6520 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6521 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6522 ;;Total ram usage:       36 bytes
  6523 ;; Hardware stack levels used:    1
  6524 ;; Hardware stack levels required when called:    3
  6525 ;; This function calls:
  6526 ;;		___awdiv
  6527 ;;		___ftadd
  6528 ;;		___ftge
  6529 ;;		___ftmul
  6530 ;;		___ftneg
  6531 ;;		___ftsub
  6532 ;;		___fttol
  6533 ;;		___lldiv
  6534 ;;		___llmod
  6535 ;;		___lltoft
  6536 ;;		___wmul
  6537 ;;		__div_to_l_
  6538 ;;		__tdiv_to_l_
  6539 ;;		_fround
  6540 ;;		_scale
  6541 ;; This function is called by:
  6542 ;;		_converterIntParaString
  6543 ;;		_converterFloatParaString
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           	psect	text31
  6548  000EC6                     __ptext31:
  6549                           	opt stack 0
  6550  000EC6                     _sprintf:
  6551                           	opt stack 23
  6552                           
  6553                           ;doprnt.c: 494: va_list ap;
  6554                           ;doprnt.c: 499: signed char c;
  6555                           ;doprnt.c: 501: int width;
  6556                           ;doprnt.c: 504: int prec;
  6557                           ;doprnt.c: 508: unsigned short flag;
  6558                           ;doprnt.c: 515: char d;
  6559                           ;doprnt.c: 516: double fval;
  6560                           ;doprnt.c: 517: int exp;
  6561                           ;doprnt.c: 523: union {
  6562                           ;doprnt.c: 524: unsigned long vd;
  6563                           ;doprnt.c: 525: double integ;
  6564                           ;doprnt.c: 526: } tmpval;
  6565                           ;doprnt.c: 528: unsigned long val;
  6566                           ;doprnt.c: 529: unsigned len;
  6567                           ;doprnt.c: 530: const char * cp;
  6568                           ;doprnt.c: 533: *ap = __va_start();
  6569                           
  6570                           ;incstack = 0
  6571  000EC6  0E44               	movlw	low (?_sprintf+4)
  6572  000EC8  6E50               	movwf	sprintf@ap,c
  6573  000ECA  0E00               	movlw	high (?_sprintf+4)
  6574  000ECC  6E51               	movwf	sprintf@ap+1,c
  6575                           
  6576                           ;doprnt.c: 536: while(c = *f++) {
  6577  000ECE  D398               	goto	i2l3108
  6578  000ED0                     i2l2908:
  6579                           
  6580                           ;doprnt.c: 538: if(c != '%')
  6581  000ED0  0E25               	movlw	37
  6582  000ED2  1863               	xorwf	sprintf@c,w,c
  6583  000ED4  B4D8               	btfsc	status,2,c
  6584  000ED6  D009               	goto	i2l2914
  6585                           
  6586                           ;doprnt.c: 540: {
  6587                           ;doprnt.c: 541: ((*sp++ = (c)));
  6588  000ED8  C040  FFD9         	movff	sprintf@sp,fsr2l
  6589  000EDC  C041  FFDA         	movff	sprintf@sp+1,fsr2h
  6590  000EE0  C063  FFDF         	movff	sprintf@c,indf2
  6591  000EE4  4A40               	infsnz	sprintf@sp,f,c
  6592  000EE6  2A41               	incf	sprintf@sp+1,f,c
  6593                           
  6594                           ;doprnt.c: 542: continue;
  6595  000EE8  D38B               	goto	i2l3108
  6596  000EEA                     i2l2914:
  6597                           
  6598                           ;doprnt.c: 543: }
  6599                           ;doprnt.c: 548: flag = 0;
  6600  000EEA  0E00               	movlw	0
  6601  000EEC  6E53               	movwf	sprintf@flag+1,c
  6602  000EEE  0E00               	movlw	0
  6603  000EF0  6E52               	movwf	sprintf@flag,c
  6604                           
  6605                           ;doprnt.c: 635: switch(c = *f++) {
  6606  000EF2  D002               	goto	i2l2920
  6607  000EF4                     i2l2916:
  6608                           
  6609                           ;doprnt.c: 663: flag |= 0x400;
  6610  000EF4  8453               	bsf	sprintf@flag+1,2,c
  6611                           
  6612                           ;doprnt.c: 698: case 'i':
  6613                           ;doprnt.c: 699: break;
  6614                           
  6615                           ;doprnt.c: 697: case 'd':
  6616                           
  6617                           ;doprnt.c: 664: break;
  6618  000EF6  D017               	goto	i2l2922
  6619  000EF8                     i2l2920:
  6620  000EF8  C042  FFF6         	movff	sprintf@f,tblptrl
  6621  000EFC  C043  FFF7         	movff	sprintf@f+1,tblptrh
  6622  000F00  4A42               	infsnz	sprintf@f,f,c
  6623  000F02  2A43               	incf	sprintf@f+1,f,c
  6624  000F04                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6625  000F04  6AF8               	clrf	tblptru,c
  6626  000F06                     	endif
  6627  000F06                     	if	0	;tblptru may be non-zero
  6628  000F06                     	endif
  6629  000F06  0008               	tblrd		*
  6630  000F08  CFF5 F063          	movff	tablat,sprintf@c
  6631  000F0C  5063               	movf	sprintf@c,w,c
  6632                           
  6633                           ; Switch size 1, requested type "space"
  6634                           ; Number of cases is 4, Range of values is 0 to 105
  6635                           ; switch strategies available:
  6636                           ; Name         Instructions Cycles
  6637                           ; simple_byte           13     7 (average)
  6638                           ;	Chosen strategy is simple_byte
  6639  000F0E  0A00               	xorlw	0	; case 0
  6640  000F10  B4D8               	btfsc	status,2,c
  6641  000F12  D383               	goto	i2l3110
  6642  000F14  0A64               	xorlw	100	; case 100
  6643  000F16  B4D8               	btfsc	status,2,c
  6644  000F18  D006               	goto	i2l2922
  6645  000F1A  0A02               	xorlw	2	; case 102
  6646  000F1C  B4D8               	btfsc	status,2,c
  6647  000F1E  D7EA               	goto	i2l2916
  6648  000F20  0A0F               	xorlw	15	; case 105
  6649  000F22  A4D8               	btfss	status,2,c
  6650  000F24  D36D               	goto	i2l3108
  6651  000F26                     i2l2922:
  6652                           
  6653                           ;doprnt.c: 825: if(flag & (0x700)) {
  6654  000F26  0E07               	movlw	7
  6655  000F28  1453               	andwf	sprintf@flag+1,w,c
  6656  000F2A  B4D8               	btfsc	status,2,c
  6657  000F2C  D2C5               	goto	i2l3068
  6658                           
  6659                           ;doprnt.c: 829: prec = 6;
  6660  000F2E  0E00               	movlw	0
  6661  000F30  6E55               	movwf	sprintf@prec+1,c
  6662  000F32  0E06               	movlw	6
  6663  000F34  6E54               	movwf	sprintf@prec,c
  6664                           
  6665                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6666  000F36  C050  FFD9         	movff	sprintf@ap,fsr2l
  6667  000F3A  C051  FFDA         	movff	sprintf@ap+1,fsr2h
  6668  000F3E  CFDE F060          	movff	postinc2,sprintf@fval
  6669  000F42  CFDE F061          	movff	postinc2,sprintf@fval+1
  6670  000F46  CFDD F062          	movff	postdec2,sprintf@fval+2
  6671  000F4A  0E03               	movlw	3
  6672  000F4C  2650               	addwf	sprintf@ap,f,c
  6673  000F4E  0E00               	movlw	0
  6674  000F50  2251               	addwfc	sprintf@ap+1,f,c
  6675                           
  6676                           ;doprnt.c: 831: if(fval < 0.0) {
  6677  000F52  AE62               	btfss	sprintf@fval+2,7,c
  6678  000F54  D010               	goto	i2l2936
  6679                           
  6680                           ;doprnt.c: 832: fval = -fval;
  6681  000F56  C060  F024         	movff	sprintf@fval,___ftneg@f1
  6682  000F5A  C061  F025         	movff	sprintf@fval+1,___ftneg@f1+1
  6683  000F5E  C062  F026         	movff	sprintf@fval+2,___ftneg@f1+2
  6684  000F62  EC2F  F016         	call	___ftneg	;wreg free
  6685  000F66  C024  F060         	movff	?___ftneg,sprintf@fval
  6686  000F6A  C025  F061         	movff	?___ftneg+1,sprintf@fval+1
  6687  000F6E  C026  F062         	movff	?___ftneg+2,sprintf@fval+2
  6688                           
  6689                           ;doprnt.c: 833: flag |= 0x03;
  6690  000F72  0E03               	movlw	3
  6691  000F74  1252               	iorwf	sprintf@flag,f,c
  6692  000F76                     i2l2936:
  6693                           
  6694                           ;doprnt.c: 834: }
  6695                           ;doprnt.c: 835: exp = 0;
  6696  000F76  0E00               	movlw	0
  6697  000F78  6E5B               	movwf	sprintf@exp+1,c
  6698  000F7A  0E00               	movlw	0
  6699  000F7C  6E5A               	movwf	sprintf@exp,c
  6700                           
  6701                           ;doprnt.c: 836: if( fval!=0) {
  6702  000F7E  5060               	movf	sprintf@fval,w,c
  6703  000F80  1061               	iorwf	sprintf@fval+1,w,c
  6704  000F82  1062               	iorwf	sprintf@fval+2,w,c
  6705  000F84  B4D8               	btfsc	status,2,c
  6706  000F86  D083               	goto	i2l2964
  6707                           
  6708                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  6709  000F88  0E82               	movlw	130
  6710  000F8A  6E47               	movwf	??_sprintf& (0+255),c
  6711  000F8C  0EFF               	movlw	255
  6712  000F8E  6E48               	movwf	(??_sprintf+1)& (0+255),c
  6713  000F90  C060  F049         	movff	sprintf@fval,??_sprintf+2
  6714  000F94  C061  F04A         	movff	sprintf@fval+1,??_sprintf+3
  6715  000F98  C062  F04B         	movff	sprintf@fval+2,??_sprintf+4
  6716  000F9C  C063  F04C         	movff	sprintf@fval+3,??_sprintf+5
  6717  000FA0  0E10               	movlw	16
  6718  000FA2  D005               	goto	i2u272_40
  6719  000FA4                     i2u272_45:
  6720  000FA4  90D8               	bcf	status,0,c
  6721  000FA6  324C               	rrcf	??_sprintf+5,f,c
  6722  000FA8  324B               	rrcf	??_sprintf+4,f,c
  6723  000FAA  324A               	rrcf	??_sprintf+3,f,c
  6724  000FAC  3249               	rrcf	??_sprintf+2,f,c
  6725  000FAE                     i2u272_40:
  6726  000FAE  2EE8               	decfsz	wreg,f,c
  6727  000FB0  D7F9               	goto	i2u272_45
  6728  000FB2  5049               	movf	??_sprintf+2,w,c
  6729  000FB4  2447               	addwf	??_sprintf,w,c
  6730  000FB6  6E5A               	movwf	sprintf@exp,c
  6731  000FB8  0E00               	movlw	0
  6732  000FBA  2048               	addwfc	??_sprintf+1,w,c
  6733  000FBC  6E5B               	movwf	sprintf@exp+1,c
  6734                           
  6735                           ;doprnt.c: 838: exp--;
  6736  000FBE  065A               	decf	sprintf@exp,f,c
  6737  000FC0  A0D8               	btfss	status,0,c
  6738  000FC2  065B               	decf	sprintf@exp+1,f,c
  6739                           
  6740                           ;doprnt.c: 839: exp *= 3;
  6741  000FC4  C05A  F00F         	movff	sprintf@exp,___wmul@multiplier
  6742  000FC8  C05B  F010         	movff	sprintf@exp+1,___wmul@multiplier+1
  6743  000FCC  0E00               	movlw	0
  6744  000FCE  6E12               	movwf	___wmul@multiplicand+1,c
  6745  000FD0  0E03               	movlw	3
  6746  000FD2  6E11               	movwf	___wmul@multiplicand,c
  6747  000FD4  EC0A  F016         	call	___wmul	;wreg free
  6748  000FD8  C00F  F05A         	movff	?___wmul,sprintf@exp
  6749  000FDC  C010  F05B         	movff	?___wmul+1,sprintf@exp+1
  6750                           
  6751                           ;doprnt.c: 840: exp /= 10;
  6752  000FE0  C05A  F007         	movff	sprintf@exp,___awdiv@dividend
  6753  000FE4  C05B  F008         	movff	sprintf@exp+1,___awdiv@dividend+1
  6754  000FE8  0E00               	movlw	0
  6755  000FEA  6E0A               	movwf	___awdiv@divisor+1,c
  6756  000FEC  0E0A               	movlw	10
  6757  000FEE  6E09               	movwf	___awdiv@divisor,c
  6758  000FF0  EC7F  F013         	call	___awdiv	;wreg free
  6759  000FF4  C007  F05A         	movff	?___awdiv,sprintf@exp
  6760  000FF8  C008  F05B         	movff	?___awdiv+1,sprintf@exp+1
  6761                           
  6762                           ;doprnt.c: 841: if(exp < 0)
  6763  000FFC  AE5B               	btfss	sprintf@exp+1,7,c
  6764  000FFE  D003               	goto	i2l2952
  6765                           
  6766                           ;doprnt.c: 842: exp--;
  6767  001000  065A               	decf	sprintf@exp,f,c
  6768  001002  A0D8               	btfss	status,0,c
  6769  001004  065B               	decf	sprintf@exp+1,f,c
  6770  001006                     i2l2952:
  6771                           
  6772                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6773  001006  505A               	movf	sprintf@exp,w,c
  6774  001008  0800               	sublw	0
  6775  00100A  EC14  F00B         	call	_scale
  6776  00100E  C024  F05C         	movff	?_scale,sprintf@tmpval
  6777  001012  C025  F05D         	movff	?_scale+1,sprintf@tmpval+1
  6778  001016  C026  F05E         	movff	?_scale+2,sprintf@tmpval+2
  6779                           
  6780                           ;doprnt.c: 847: tmpval.integ *= fval;
  6781  00101A  C05C  F015         	movff	sprintf@tmpval,___ftmul@f1
  6782  00101E  C05D  F016         	movff	sprintf@tmpval+1,___ftmul@f1+1
  6783  001022  C05E  F017         	movff	sprintf@tmpval+2,___ftmul@f1+2
  6784  001026  C060  F018         	movff	sprintf@fval,___ftmul@f2
  6785  00102A  C061  F019         	movff	sprintf@fval+1,___ftmul@f2+1
  6786  00102E  C062  F01A         	movff	sprintf@fval+2,___ftmul@f2+2
  6787  001032  EC68  F010         	call	___ftmul	;wreg free
  6788  001036  C015  F05C         	movff	?___ftmul,sprintf@tmpval
  6789  00103A  C016  F05D         	movff	?___ftmul+1,sprintf@tmpval+1
  6790  00103E  C017  F05E         	movff	?___ftmul+2,sprintf@tmpval+2
  6791                           
  6792                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6793  001042  C05C  F015         	movff	sprintf@tmpval,___ftge@ff1
  6794  001046  C05D  F016         	movff	sprintf@tmpval+1,___ftge@ff1+1
  6795  00104A  C05E  F017         	movff	sprintf@tmpval+2,___ftge@ff1+2
  6796  00104E  0E00               	movlw	0
  6797  001050  6E18               	movwf	___ftge@ff2,c
  6798  001052  0E80               	movlw	128
  6799  001054  6E19               	movwf	___ftge@ff2+1,c
  6800  001056  0E3F               	movlw	63
  6801  001058  6E1A               	movwf	___ftge@ff2+2,c
  6802  00105A  EC37  F013         	call	___ftge	;wreg free
  6803  00105E  B0D8               	btfsc	status,0,c
  6804  001060  D004               	goto	i2l2960
  6805                           
  6806                           ;doprnt.c: 849: exp--;
  6807  001062  065A               	decf	sprintf@exp,f,c
  6808  001064  A0D8               	btfss	status,0,c
  6809  001066  065B               	decf	sprintf@exp+1,f,c
  6810  001068  D012               	goto	i2l2964
  6811  00106A                     i2l2960:
  6812                           
  6813                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6814  00106A  C05C  F015         	movff	sprintf@tmpval,___ftge@ff1
  6815  00106E  C05D  F016         	movff	sprintf@tmpval+1,___ftge@ff1+1
  6816  001072  C05E  F017         	movff	sprintf@tmpval+2,___ftge@ff1+2
  6817  001076  0E00               	movlw	0
  6818  001078  6E18               	movwf	___ftge@ff2,c
  6819  00107A  0E20               	movlw	32
  6820  00107C  6E19               	movwf	___ftge@ff2+1,c
  6821  00107E  0E41               	movlw	65
  6822  001080  6E1A               	movwf	___ftge@ff2+2,c
  6823  001082  EC37  F013         	call	___ftge	;wreg free
  6824  001086  A0D8               	btfss	status,0,c
  6825  001088  D002               	goto	i2l2964
  6826                           
  6827                           ;doprnt.c: 851: exp++;
  6828  00108A  4A5A               	infsnz	sprintf@exp,f,c
  6829  00108C  2A5B               	incf	sprintf@exp+1,f,c
  6830  00108E                     i2l2964:
  6831                           
  6832                           ;doprnt.c: 852: }
  6833                           ;doprnt.c: 1112: if(prec <= 12)
  6834  00108E  BE55               	btfsc	sprintf@prec+1,7,c
  6835  001090  D006               	goto	i2l2966
  6836  001092  5055               	movf	sprintf@prec+1,w,c
  6837  001094  E11B               	bnz	i2l2968
  6838  001096  0E0D               	movlw	13
  6839  001098  5C54               	subwf	sprintf@prec,w,c
  6840  00109A  B0D8               	btfsc	status,0,c
  6841  00109C  D017               	goto	i2l2968
  6842  00109E                     i2l2966:
  6843                           
  6844                           ;doprnt.c: 1113: fval += fround(prec);
  6845  00109E  C060  F02E         	movff	sprintf@fval,___ftadd@f1
  6846  0010A2  C061  F02F         	movff	sprintf@fval+1,___ftadd@f1+1
  6847  0010A6  C062  F030         	movff	sprintf@fval+2,___ftadd@f1+2
  6848  0010AA  5054               	movf	sprintf@prec,w,c
  6849  0010AC  EC30  F00D         	call	_fround
  6850  0010B0  C024  F031         	movff	?_fround,___ftadd@f2
  6851  0010B4  C025  F032         	movff	?_fround+1,___ftadd@f2+1
  6852  0010B8  C026  F033         	movff	?_fround+2,___ftadd@f2+2
  6853  0010BC  EC65  F00E         	call	___ftadd	;wreg free
  6854  0010C0  C02E  F060         	movff	?___ftadd,sprintf@fval
  6855  0010C4  C02F  F061         	movff	?___ftadd+1,sprintf@fval+1
  6856  0010C8  C030  F062         	movff	?___ftadd+2,sprintf@fval+2
  6857  0010CC                     i2l2968:
  6858                           
  6859                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6860  0010CC  BE5B               	btfsc	sprintf@exp+1,7,c
  6861  0010CE  D006               	goto	i2l2970
  6862  0010D0  505B               	movf	sprintf@exp+1,w,c
  6863  0010D2  E11E               	bnz	i2l2976
  6864  0010D4  0E0A               	movlw	10
  6865  0010D6  5C5A               	subwf	sprintf@exp,w,c
  6866  0010D8  B0D8               	btfsc	status,0,c
  6867  0010DA  D01A               	goto	i2l2976
  6868  0010DC                     i2l2970:
  6869  0010DC  5060               	movf	sprintf@fval,w,c
  6870  0010DE  1061               	iorwf	sprintf@fval+1,w,c
  6871  0010E0  1062               	iorwf	sprintf@fval+2,w,c
  6872  0010E2  B4D8               	btfsc	status,2,c
  6873  0010E4  D051               	goto	i2l2990
  6874  0010E6  C060  F024         	movff	sprintf@fval,___fttol@f1
  6875  0010EA  C061  F025         	movff	sprintf@fval+1,___fttol@f1+1
  6876  0010EE  C062  F026         	movff	sprintf@fval+2,___fttol@f1+2
  6877  0010F2  ECE2  F010         	call	___fttol	;wreg free
  6878  0010F6  5024               	movf	?___fttol,w,c
  6879  0010F8  1025               	iorwf	?___fttol+1,w,c
  6880  0010FA  1026               	iorwf	?___fttol+2,w,c
  6881  0010FC  1027               	iorwf	?___fttol+3,w,c
  6882  0010FE  B4D8               	btfsc	status,2,c
  6883  001100  BE5B               	btfsc	sprintf@exp+1,7,c
  6884  001102  D042               	goto	i2l2990
  6885  001104  505B               	movf	sprintf@exp+1,w,c
  6886  001106  E104               	bnz	i2l2976
  6887  001108  0E02               	movlw	2
  6888  00110A  5C5A               	subwf	sprintf@exp,w,c
  6889  00110C  A0D8               	btfss	status,0,c
  6890  00110E  D03C               	goto	i2l2990
  6891  001110                     i2l2976:
  6892                           
  6893                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6894  001110  C05C  F015         	movff	sprintf@tmpval,___ftge@ff1
  6895  001114  C05D  F016         	movff	sprintf@tmpval+1,___ftge@ff1+1
  6896  001118  C05E  F017         	movff	sprintf@tmpval+2,___ftge@ff1+2
  6897  00111C  0E70               	movlw	112
  6898  00111E  6E18               	movwf	___ftge@ff2,c
  6899  001120  0E89               	movlw	137
  6900  001122  6E19               	movwf	___ftge@ff2+1,c
  6901  001124  0E40               	movlw	64
  6902  001126  6E1A               	movwf	___ftge@ff2+2,c
  6903  001128  EC37  F013         	call	___ftge	;wreg free
  6904  00112C  B0D8               	btfsc	status,0,c
  6905  00112E  D002               	goto	i2l2980
  6906                           
  6907                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6908  001130  0EF7               	movlw	247
  6909  001132  D001               	goto	L3
  6910  001134                     i2l2980:
  6911                           
  6912                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6913  001134  0EF8               	movlw	248
  6914  001136                     L3:
  6915  001136  265A               	addwf	sprintf@exp,f,c
  6916  001138  0EFF               	movlw	255
  6917  00113A  225B               	addwfc	sprintf@exp+1,f,c
  6918                           
  6919                           ;doprnt.c: 1124: }
  6920                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  6921  00113C  505A               	movf	sprintf@exp,w,c
  6922  00113E  EC14  F00B         	call	_scale
  6923  001142  C024  F05C         	movff	?_scale,sprintf@tmpval
  6924  001146  C025  F05D         	movff	?_scale+1,sprintf@tmpval+1
  6925  00114A  C026  F05E         	movff	?_scale+2,sprintf@tmpval+2
  6926                           
  6927                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6928  00114E  C060  F001         	movff	sprintf@fval,__tdiv_to_l_@f1
  6929  001152  C061  F002         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  6930  001156  C062  F003         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  6931  00115A  C05C  F004         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  6932  00115E  C05D  F005         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  6933  001162  C05E  F006         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  6934  001166  EC3B  F00F         	call	__tdiv_to_l_	;wreg free
  6935  00116A  C001  F056         	movff	?__tdiv_to_l_,sprintf@val
  6936  00116E  C002  F057         	movff	?__tdiv_to_l_+1,sprintf@val+1
  6937  001172  C003  F058         	movff	?__tdiv_to_l_+2,sprintf@val+2
  6938  001176  C004  F059         	movff	?__tdiv_to_l_+3,sprintf@val+3
  6939                           
  6940                           ;doprnt.c: 1129: fval = 0.0;
  6941  00117A  0E00               	movlw	0
  6942  00117C  6E60               	movwf	sprintf@fval,c
  6943  00117E  0E00               	movlw	0
  6944  001180  6E61               	movwf	sprintf@fval+1,c
  6945  001182  0E00               	movlw	0
  6946  001184  6E62               	movwf	sprintf@fval+2,c
  6947                           
  6948                           ;doprnt.c: 1130: } else {
  6949  001186  D032               	goto	i2l2994
  6950  001188                     i2l2990:
  6951                           
  6952                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6953  001188  C060  F024         	movff	sprintf@fval,___fttol@f1
  6954  00118C  C061  F025         	movff	sprintf@fval+1,___fttol@f1+1
  6955  001190  C062  F026         	movff	sprintf@fval+2,___fttol@f1+2
  6956  001194  ECE2  F010         	call	___fttol	;wreg free
  6957  001198  C024  F056         	movff	?___fttol,sprintf@val
  6958  00119C  C025  F057         	movff	?___fttol+1,sprintf@val+1
  6959  0011A0  C026  F058         	movff	?___fttol+2,sprintf@val+2
  6960  0011A4  C027  F059         	movff	?___fttol+3,sprintf@val+3
  6961                           
  6962                           ;doprnt.c: 1132: fval -= (double)val;
  6963  0011A8  C060  F03A         	movff	sprintf@fval,___ftsub@f1
  6964  0011AC  C061  F03B         	movff	sprintf@fval+1,___ftsub@f1+1
  6965  0011B0  C062  F03C         	movff	sprintf@fval+2,___ftsub@f1+2
  6966  0011B4  C056  F009         	movff	sprintf@val,___lltoft@c
  6967  0011B8  C057  F00A         	movff	sprintf@val+1,___lltoft@c+1
  6968  0011BC  C058  F00B         	movff	sprintf@val+2,___lltoft@c+2
  6969  0011C0  C059  F00C         	movff	sprintf@val+3,___lltoft@c+3
  6970  0011C4  ECD4  F014         	call	___lltoft	;wreg free
  6971  0011C8  C009  F03D         	movff	?___lltoft,___ftsub@f2
  6972  0011CC  C00A  F03E         	movff	?___lltoft+1,___ftsub@f2+1
  6973  0011D0  C00B  F03F         	movff	?___lltoft+2,___ftsub@f2+2
  6974  0011D4  EC28  F015         	call	___ftsub	;wreg free
  6975  0011D8  C03A  F060         	movff	?___ftsub,sprintf@fval
  6976  0011DC  C03B  F061         	movff	?___ftsub+1,sprintf@fval+1
  6977  0011E0  C03C  F062         	movff	?___ftsub+2,sprintf@fval+2
  6978                           
  6979                           ;doprnt.c: 1133: exp = 0;
  6980  0011E4  0E00               	movlw	0
  6981  0011E6  6E5B               	movwf	sprintf@exp+1,c
  6982  0011E8  0E00               	movlw	0
  6983  0011EA  6E5A               	movwf	sprintf@exp,c
  6984  0011EC                     i2l2994:
  6985                           
  6986                           ;doprnt.c: 1134: }
  6987                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6988  0011EC  0E01               	movlw	1
  6989  0011EE  6E63               	movwf	sprintf@c,c
  6990  0011F0                     i2l2996:
  6991  0011F0  0E0A               	movlw	10
  6992  0011F2  1863               	xorwf	sprintf@c,w,c
  6993  0011F4  B4D8               	btfsc	status,2,c
  6994  0011F6  D01B               	goto	i2l3008
  6995                           
  6996                           ;doprnt.c: 1137: if(val < dpowers[c])
  6997  0011F8  5063               	movf	sprintf@c,w,c
  6998  0011FA  0D04               	mullw	4
  6999  0011FC  0E8F               	movlw	low _dpowers
  7000  0011FE  24F3               	addwf	prodl,w,c
  7001  001200  6EF6               	movwf	tblptrl,c
  7002  001202  0EFB               	movlw	high _dpowers
  7003  001204  20F4               	addwfc	prodh,w,c
  7004  001206  6EF7               	movwf	tblptrh,c
  7005  001208                     	if	1	;There are 3 active tblptr bytes
  7006  001208  6AF8               	clrf	tblptru,c
  7007  00120A  0E00               	movlw	low (__mediumconst shr (0+16))
  7008  00120C  22F8               	addwfc	tblptru,f,c
  7009  00120E                     	endif
  7010  00120E  0009               	tblrd		*+
  7011  001210  50F5               	movf	tablat,w,c
  7012  001212  5C56               	subwf	sprintf@val,w,c
  7013  001214  0009               	tblrd		*+
  7014  001216  50F5               	movf	tablat,w,c
  7015  001218  5857               	subwfb	sprintf@val+1,w,c
  7016  00121A  0009               	tblrd		*+
  7017  00121C  50F5               	movf	tablat,w,c
  7018  00121E  5858               	subwfb	sprintf@val+2,w,c
  7019  001220  0009               	tblrd		*+
  7020  001222  50F5               	movf	tablat,w,c
  7021  001224  5859               	subwfb	sprintf@val+3,w,c
  7022  001226  A0D8               	btfss	status,0,c
  7023  001228  D002               	goto	i2l3008
  7024                           
  7025                           ;doprnt.c: 1138: break;
  7026  00122A  2A63               	incf	sprintf@c,f,c
  7027  00122C  D7E1               	goto	i2l2996
  7028  00122E                     i2l3008:
  7029                           
  7030                           ;doprnt.c: 1175: {
  7031                           ;doprnt.c: 1188: if(flag & 0x03)
  7032  00122E  0E03               	movlw	3
  7033  001230  1452               	andwf	sprintf@flag,w,c
  7034  001232  6E47               	movwf	??_sprintf& (0+255),c
  7035  001234  0E00               	movlw	0
  7036  001236  1453               	andwf	sprintf@flag+1,w,c
  7037  001238  6E48               	movwf	(??_sprintf+1)& (0+255),c
  7038  00123A  5047               	movf	??_sprintf,w,c
  7039  00123C  1048               	iorwf	??_sprintf+1,w,c
  7040  00123E  B4D8               	btfsc	status,2,c
  7041  001240  D054               	goto	i2l3022
  7042                           
  7043                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7044  001242  C040  FFD9         	movff	sprintf@sp,fsr2l
  7045  001246  C041  FFDA         	movff	sprintf@sp+1,fsr2h
  7046  00124A  0E2D               	movlw	45
  7047  00124C  D04C               	goto	L4
  7048  00124E                     i2l3012:
  7049  00124E  4A40               	infsnz	sprintf@sp,f,c
  7050  001250  2A41               	incf	sprintf@sp+1,f,c
  7051                           
  7052                           ;doprnt.c: 1195: }
  7053                           ;doprnt.c: 1196: while(c--) {
  7054  001252  D04B               	goto	i2l3022
  7055  001254                     i2l3014:
  7056                           
  7057                           ;doprnt.c: 1200: {
  7058                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7059  001254  C056  F001         	movff	sprintf@val,___lldiv@dividend
  7060  001258  C057  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  7061  00125C  C058  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  7062  001260  C059  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  7063  001264  5063               	movf	sprintf@c,w,c
  7064  001266  0D04               	mullw	4
  7065  001268  0E8F               	movlw	low _dpowers
  7066  00126A  24F3               	addwf	prodl,w,c
  7067  00126C  6EF6               	movwf	tblptrl,c
  7068  00126E  0EFB               	movlw	high _dpowers
  7069  001270  20F4               	addwfc	prodh,w,c
  7070  001272  6EF7               	movwf	tblptrh,c
  7071  001274                     	if	1	;There are 3 active tblptr bytes
  7072  001274  6AF8               	clrf	tblptru,c
  7073  001276  0E00               	movlw	low (__mediumconst shr (0+16))
  7074  001278  22F8               	addwfc	tblptru,f,c
  7075  00127A                     	endif
  7076  00127A  0009               	tblrd		*+
  7077  00127C  CFF5 F005          	movff	tablat,___lldiv@divisor
  7078  001280  0009               	tblrd		*+
  7079  001282  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  7080  001286  0009               	tblrd		*+
  7081  001288  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  7082  00128C  000A               	tblrd		*-
  7083  00128E  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  7084  001292  ECC1  F013         	call	___lldiv	;wreg free
  7085  001296  C001  F05C         	movff	?___lldiv,sprintf@tmpval
  7086  00129A  C002  F05D         	movff	?___lldiv+1,sprintf@tmpval+1
  7087  00129E  C003  F05E         	movff	?___lldiv+2,sprintf@tmpval+2
  7088  0012A2  C004  F05F         	movff	?___lldiv+3,sprintf@tmpval+3
  7089                           
  7090                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7091  0012A6  C05C  F00E         	movff	sprintf@tmpval,___llmod@dividend
  7092  0012AA  C05D  F00F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7093  0012AE  C05E  F010         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7094  0012B2  C05F  F011         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7095  0012B6  0E0A               	movlw	10
  7096  0012B8  6E12               	movwf	___llmod@divisor,c
  7097  0012BA  0E00               	movlw	0
  7098  0012BC  6E13               	movwf	___llmod@divisor+1,c
  7099  0012BE  0E00               	movlw	0
  7100  0012C0  6E14               	movwf	___llmod@divisor+2,c
  7101  0012C2  0E00               	movlw	0
  7102  0012C4  6E15               	movwf	___llmod@divisor+3,c
  7103  0012C6  EC73  F014         	call	___llmod	;wreg free
  7104  0012CA  C00E  F05C         	movff	?___llmod,sprintf@tmpval
  7105  0012CE  C00F  F05D         	movff	?___llmod+1,sprintf@tmpval+1
  7106  0012D2  C010  F05E         	movff	?___llmod+2,sprintf@tmpval+2
  7107  0012D6  C011  F05F         	movff	?___llmod+3,sprintf@tmpval+3
  7108                           
  7109                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7110  0012DA  505C               	movf	sprintf@tmpval,w,c
  7111  0012DC  0F30               	addlw	48
  7112  0012DE  C040  FFD9         	movff	sprintf@sp,fsr2l
  7113  0012E2  C041  FFDA         	movff	sprintf@sp+1,fsr2h
  7114  0012E6                     L4:
  7115  0012E6  6EDF               	movwf	indf2,c
  7116  0012E8  D7B2               	goto	i2l3012
  7117  0012EA                     i2l3022:
  7118  0012EA  0663               	decf	sprintf@c,f,c
  7119  0012EC  2863               	incf	sprintf@c,w,c
  7120  0012EE  B4D8               	btfsc	status,2,c
  7121  0012F0  D00C               	goto	i2l3030
  7122  0012F2  D7B0               	goto	i2l3014
  7123  0012F4                     i2l3024:
  7124                           
  7125                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7126  0012F4  C040  FFD9         	movff	sprintf@sp,fsr2l
  7127  0012F8  C041  FFDA         	movff	sprintf@sp+1,fsr2h
  7128  0012FC  0E30               	movlw	48
  7129  0012FE  6EDF               	movwf	indf2,c
  7130  001300  4A40               	infsnz	sprintf@sp,f,c
  7131  001302  2A41               	incf	sprintf@sp+1,f,c
  7132                           
  7133                           ;doprnt.c: 1209: exp--;
  7134  001304  065A               	decf	sprintf@exp,f,c
  7135  001306  A0D8               	btfss	status,0,c
  7136  001308  065B               	decf	sprintf@exp+1,f,c
  7137  00130A                     i2l3030:
  7138  00130A  BE5B               	btfsc	sprintf@exp+1,7,c
  7139  00130C  D005               	goto	i2l3032
  7140  00130E  505B               	movf	sprintf@exp+1,w,c
  7141  001310  E1F1               	bnz	i2l3024
  7142  001312  045A               	decf	sprintf@exp,w,c
  7143  001314  B0D8               	btfsc	status,0,c
  7144  001316  D7EE               	goto	i2l3024
  7145  001318                     i2l3032:
  7146                           
  7147                           ;doprnt.c: 1210: }
  7148                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7149  001318  BE55               	btfsc	sprintf@prec+1,7,c
  7150  00131A  D009               	goto	i2l280
  7151  00131C  5055               	movf	sprintf@prec+1,w,c
  7152  00131E  E104               	bnz	i2u288_40
  7153  001320  0E09               	movlw	9
  7154  001322  5C54               	subwf	sprintf@prec,w,c
  7155  001324  A0D8               	btfss	status,0,c
  7156  001326  D003               	goto	i2l280
  7157  001328                     i2u288_40:
  7158                           
  7159                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7160  001328  0E08               	movlw	8
  7161  00132A  6E63               	movwf	sprintf@c,c
  7162  00132C  D002               	goto	i2l3036
  7163  00132E                     i2l280:
  7164                           
  7165                           ;doprnt.c: 1213: else
  7166                           ;doprnt.c: 1214: c = prec;
  7167  00132E  C054  F063         	movff	sprintf@prec,sprintf@c
  7168  001332                     i2l3036:
  7169                           
  7170                           ;doprnt.c: 1215: prec -= c;
  7171  001332  5063               	movf	sprintf@c,w,c
  7172  001334  5E54               	subwf	sprintf@prec,f,c
  7173  001336  0E00               	movlw	0
  7174  001338  BE63               	btfsc	sprintf@c,7,c
  7175  00133A  0EFF               	movlw	255
  7176  00133C  5A55               	subwfb	sprintf@prec+1,f,c
  7177                           
  7178                           ;doprnt.c: 1219: if(c)
  7179  00133E  5063               	movf	sprintf@c,w,c
  7180  001340  B4D8               	btfsc	status,2,c
  7181  001342  D008               	goto	i2l3044
  7182                           
  7183                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7184  001344  C040  FFD9         	movff	sprintf@sp,fsr2l
  7185  001348  C041  FFDA         	movff	sprintf@sp+1,fsr2h
  7186  00134C  0E2E               	movlw	46
  7187  00134E  6EDF               	movwf	indf2,c
  7188  001350  4A40               	infsnz	sprintf@sp,f,c
  7189  001352  2A41               	incf	sprintf@sp+1,f,c
  7190  001354                     i2l3044:
  7191                           
  7192                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7193  001354  5063               	movf	sprintf@c,w,c
  7194  001356  EC14  F00B         	call	_scale
  7195  00135A  C024  F04D         	movff	?_scale,_sprintf$1472
  7196  00135E  C025  F04E         	movff	?_scale+1,_sprintf$1472+1
  7197  001362  C026  F04F         	movff	?_scale+2,_sprintf$1472+2
  7198                           
  7199                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7200  001366  C060  F018         	movff	sprintf@fval,___ftmul@f2
  7201  00136A  C061  F019         	movff	sprintf@fval+1,___ftmul@f2+1
  7202  00136E  C062  F01A         	movff	sprintf@fval+2,___ftmul@f2+2
  7203  001372  C04D  F015         	movff	_sprintf$1472,___ftmul@f1
  7204  001376  C04E  F016         	movff	_sprintf$1472+1,___ftmul@f1+1
  7205  00137A  C04F  F017         	movff	_sprintf$1472+2,___ftmul@f1+2
  7206  00137E  EC68  F010         	call	___ftmul	;wreg free
  7207  001382  C015  F024         	movff	?___ftmul,___fttol@f1
  7208  001386  C016  F025         	movff	?___ftmul+1,___fttol@f1+1
  7209  00138A  C017  F026         	movff	?___ftmul+2,___fttol@f1+2
  7210  00138E  ECE2  F010         	call	___fttol	;wreg free
  7211  001392  C024  F056         	movff	?___fttol,sprintf@val
  7212  001396  C025  F057         	movff	?___fttol+1,sprintf@val+1
  7213  00139A  C026  F058         	movff	?___fttol+2,sprintf@val+2
  7214  00139E  C027  F059         	movff	?___fttol+3,sprintf@val+3
  7215                           
  7216                           ;doprnt.c: 1228: while(c--) {
  7217  0013A2  D075               	goto	i2l3058
  7218  0013A4                     i2l3048:
  7219                           
  7220                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7221  0013A4  C056  F001         	movff	sprintf@val,___lldiv@dividend
  7222  0013A8  C057  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  7223  0013AC  C058  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  7224  0013B0  C059  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  7225  0013B4  5063               	movf	sprintf@c,w,c
  7226  0013B6  0D04               	mullw	4
  7227  0013B8  0E8F               	movlw	low _dpowers
  7228  0013BA  24F3               	addwf	prodl,w,c
  7229  0013BC  6EF6               	movwf	tblptrl,c
  7230  0013BE  0EFB               	movlw	high _dpowers
  7231  0013C0  20F4               	addwfc	prodh,w,c
  7232  0013C2  6EF7               	movwf	tblptrh,c
  7233  0013C4                     	if	1	;There are 3 active tblptr bytes
  7234  0013C4  6AF8               	clrf	tblptru,c
  7235  0013C6  0E00               	movlw	low (__mediumconst shr (0+16))
  7236  0013C8  22F8               	addwfc	tblptru,f,c
  7237  0013CA                     	endif
  7238  0013CA  0009               	tblrd		*+
  7239  0013CC  CFF5 F005          	movff	tablat,___lldiv@divisor
  7240  0013D0  0009               	tblrd		*+
  7241  0013D2  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  7242  0013D6  0009               	tblrd		*+
  7243  0013D8  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  7244  0013DC  000A               	tblrd		*-
  7245  0013DE  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  7246  0013E2  ECC1  F013         	call	___lldiv	;wreg free
  7247  0013E6  C001  F05C         	movff	?___lldiv,sprintf@tmpval
  7248  0013EA  C002  F05D         	movff	?___lldiv+1,sprintf@tmpval+1
  7249  0013EE  C003  F05E         	movff	?___lldiv+2,sprintf@tmpval+2
  7250  0013F2  C004  F05F         	movff	?___lldiv+3,sprintf@tmpval+3
  7251                           
  7252                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7253  0013F6  C05C  F00E         	movff	sprintf@tmpval,___llmod@dividend
  7254  0013FA  C05D  F00F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7255  0013FE  C05E  F010         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7256  001402  C05F  F011         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7257  001406  0E0A               	movlw	10
  7258  001408  6E12               	movwf	___llmod@divisor,c
  7259  00140A  0E00               	movlw	0
  7260  00140C  6E13               	movwf	___llmod@divisor+1,c
  7261  00140E  0E00               	movlw	0
  7262  001410  6E14               	movwf	___llmod@divisor+2,c
  7263  001412  0E00               	movlw	0
  7264  001414  6E15               	movwf	___llmod@divisor+3,c
  7265  001416  EC73  F014         	call	___llmod	;wreg free
  7266  00141A  C00E  F05C         	movff	?___llmod,sprintf@tmpval
  7267  00141E  C00F  F05D         	movff	?___llmod+1,sprintf@tmpval+1
  7268  001422  C010  F05E         	movff	?___llmod+2,sprintf@tmpval+2
  7269  001426  C011  F05F         	movff	?___llmod+3,sprintf@tmpval+3
  7270                           
  7271                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7272  00142A  505C               	movf	sprintf@tmpval,w,c
  7273  00142C  0F30               	addlw	48
  7274  00142E  C040  FFD9         	movff	sprintf@sp,fsr2l
  7275  001432  C041  FFDA         	movff	sprintf@sp+1,fsr2h
  7276  001436  6EDF               	movwf	indf2,c
  7277  001438  4A40               	infsnz	sprintf@sp,f,c
  7278  00143A  2A41               	incf	sprintf@sp+1,f,c
  7279                           
  7280                           ;doprnt.c: 1232: val %= dpowers[c];
  7281  00143C  C056  F00E         	movff	sprintf@val,___llmod@dividend
  7282  001440  C057  F00F         	movff	sprintf@val+1,___llmod@dividend+1
  7283  001444  C058  F010         	movff	sprintf@val+2,___llmod@dividend+2
  7284  001448  C059  F011         	movff	sprintf@val+3,___llmod@dividend+3
  7285  00144C  5063               	movf	sprintf@c,w,c
  7286  00144E  0D04               	mullw	4
  7287  001450  0E8F               	movlw	low _dpowers
  7288  001452  24F3               	addwf	prodl,w,c
  7289  001454  6EF6               	movwf	tblptrl,c
  7290  001456  0EFB               	movlw	high _dpowers
  7291  001458  20F4               	addwfc	prodh,w,c
  7292  00145A  6EF7               	movwf	tblptrh,c
  7293  00145C                     	if	1	;There are 3 active tblptr bytes
  7294  00145C  6AF8               	clrf	tblptru,c
  7295  00145E  0E00               	movlw	low (__mediumconst shr (0+16))
  7296  001460  22F8               	addwfc	tblptru,f,c
  7297  001462                     	endif
  7298  001462  0009               	tblrd		*+
  7299  001464  CFF5 F012          	movff	tablat,___llmod@divisor
  7300  001468  0009               	tblrd		*+
  7301  00146A  CFF5 F013          	movff	tablat,___llmod@divisor+1
  7302  00146E  0009               	tblrd		*+
  7303  001470  CFF5 F014          	movff	tablat,___llmod@divisor+2
  7304  001474  000A               	tblrd		*-
  7305  001476  CFF5 F015          	movff	tablat,___llmod@divisor+3
  7306  00147A  EC73  F014         	call	___llmod	;wreg free
  7307  00147E  C00E  F056         	movff	?___llmod,sprintf@val
  7308  001482  C00F  F057         	movff	?___llmod+1,sprintf@val+1
  7309  001486  C010  F058         	movff	?___llmod+2,sprintf@val+2
  7310  00148A  C011  F059         	movff	?___llmod+3,sprintf@val+3
  7311  00148E                     i2l3058:
  7312  00148E  0663               	decf	sprintf@c,f,c
  7313  001490  2863               	incf	sprintf@c,w,c
  7314  001492  B4D8               	btfsc	status,2,c
  7315  001494  D00C               	goto	i2l3066
  7316  001496  D786               	goto	i2l3048
  7317  001498                     i2l3060:
  7318                           
  7319                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7320  001498  C040  FFD9         	movff	sprintf@sp,fsr2l
  7321  00149C  C041  FFDA         	movff	sprintf@sp+1,fsr2h
  7322  0014A0  0E30               	movlw	48
  7323  0014A2  6EDF               	movwf	indf2,c
  7324  0014A4  4A40               	infsnz	sprintf@sp,f,c
  7325  0014A6  2A41               	incf	sprintf@sp+1,f,c
  7326                           
  7327                           ;doprnt.c: 1237: prec--;
  7328  0014A8  0654               	decf	sprintf@prec,f,c
  7329  0014AA  A0D8               	btfss	status,0,c
  7330  0014AC  0655               	decf	sprintf@prec+1,f,c
  7331  0014AE                     i2l3066:
  7332  0014AE  5054               	movf	sprintf@prec,w,c
  7333  0014B0  1055               	iorwf	sprintf@prec+1,w,c
  7334  0014B2  B4D8               	btfsc	status,2,c
  7335  0014B4  D0A5               	goto	i2l3108
  7336  0014B6  D7F0               	goto	i2l3060
  7337  0014B8                     i2l3068:
  7338                           
  7339                           ;doprnt.c: 1246: }
  7340                           ;doprnt.c: 1253: {
  7341                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  7342  0014B8  C050  FFD9         	movff	sprintf@ap,fsr2l
  7343  0014BC  C051  FFDA         	movff	sprintf@ap+1,fsr2h
  7344  0014C0  CFDE F056          	movff	postinc2,sprintf@val
  7345  0014C4  CFDD F057          	movff	postdec2,sprintf@val+1
  7346  0014C8  0E00               	movlw	0
  7347  0014CA  BE57               	btfsc	sprintf@val+1,7,c
  7348  0014CC  0EFF               	movlw	-1
  7349  0014CE  6E58               	movwf	sprintf@val+2,c
  7350  0014D0  6E59               	movwf	sprintf@val+3,c
  7351  0014D2  0E02               	movlw	2
  7352  0014D4  2650               	addwf	sprintf@ap,f,c
  7353  0014D6  0E00               	movlw	0
  7354  0014D8  2251               	addwfc	sprintf@ap+1,f,c
  7355                           
  7356                           ;doprnt.c: 1261: if((long)val < 0) {
  7357  0014DA  AE59               	btfss	sprintf@val+3,7,c
  7358  0014DC  D00A               	goto	i2l3078
  7359                           
  7360                           ;doprnt.c: 1262: flag |= 0x03;
  7361  0014DE  0E03               	movlw	3
  7362  0014E0  1252               	iorwf	sprintf@flag,f,c
  7363                           
  7364                           ;doprnt.c: 1263: val = -val;
  7365  0014E2  1E59               	comf	sprintf@val+3,f,c
  7366  0014E4  1E58               	comf	sprintf@val+2,f,c
  7367  0014E6  1E57               	comf	sprintf@val+1,f,c
  7368  0014E8  6C56               	negf	sprintf@val,c
  7369  0014EA  0E00               	movlw	0
  7370  0014EC  2257               	addwfc	sprintf@val+1,f,c
  7371  0014EE  2258               	addwfc	sprintf@val+2,f,c
  7372  0014F0  2259               	addwfc	sprintf@val+3,f,c
  7373  0014F2                     i2l3078:
  7374                           
  7375                           ;doprnt.c: 1264: }
  7376                           ;doprnt.c: 1266: }
  7377                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7378  0014F2  0E01               	movlw	1
  7379  0014F4  6E63               	movwf	sprintf@c,c
  7380  0014F6                     i2l3080:
  7381  0014F6  0E0A               	movlw	10
  7382  0014F8  1863               	xorwf	sprintf@c,w,c
  7383  0014FA  B4D8               	btfsc	status,2,c
  7384  0014FC  D01B               	goto	i2l3092
  7385                           
  7386                           ;doprnt.c: 1306: if(val < dpowers[c])
  7387  0014FE  5063               	movf	sprintf@c,w,c
  7388  001500  0D04               	mullw	4
  7389  001502  0E8F               	movlw	low _dpowers
  7390  001504  24F3               	addwf	prodl,w,c
  7391  001506  6EF6               	movwf	tblptrl,c
  7392  001508  0EFB               	movlw	high _dpowers
  7393  00150A  20F4               	addwfc	prodh,w,c
  7394  00150C  6EF7               	movwf	tblptrh,c
  7395  00150E                     	if	1	;There are 3 active tblptr bytes
  7396  00150E  6AF8               	clrf	tblptru,c
  7397  001510  0E00               	movlw	low (__mediumconst shr (0+16))
  7398  001512  22F8               	addwfc	tblptru,f,c
  7399  001514                     	endif
  7400  001514  0009               	tblrd		*+
  7401  001516  50F5               	movf	tablat,w,c
  7402  001518  5C56               	subwf	sprintf@val,w,c
  7403  00151A  0009               	tblrd		*+
  7404  00151C  50F5               	movf	tablat,w,c
  7405  00151E  5857               	subwfb	sprintf@val+1,w,c
  7406  001520  0009               	tblrd		*+
  7407  001522  50F5               	movf	tablat,w,c
  7408  001524  5858               	subwfb	sprintf@val+2,w,c
  7409  001526  0009               	tblrd		*+
  7410  001528  50F5               	movf	tablat,w,c
  7411  00152A  5859               	subwfb	sprintf@val+3,w,c
  7412  00152C  A0D8               	btfss	status,0,c
  7413  00152E  D002               	goto	i2l3092
  7414                           
  7415                           ;doprnt.c: 1307: break;
  7416  001530  2A63               	incf	sprintf@c,f,c
  7417  001532  D7E1               	goto	i2l3080
  7418  001534                     i2l3092:
  7419                           
  7420                           ;doprnt.c: 1422: {
  7421                           ;doprnt.c: 1438: if(flag & 0x03)
  7422  001534  0E03               	movlw	3
  7423  001536  1452               	andwf	sprintf@flag,w,c
  7424  001538  6E47               	movwf	??_sprintf& (0+255),c
  7425  00153A  0E00               	movlw	0
  7426  00153C  1453               	andwf	sprintf@flag+1,w,c
  7427  00153E  6E48               	movwf	(??_sprintf+1)& (0+255),c
  7428  001540  5047               	movf	??_sprintf,w,c
  7429  001542  1048               	iorwf	??_sprintf+1,w,c
  7430  001544  B4D8               	btfsc	status,2,c
  7431  001546  D008               	goto	i2l3098
  7432                           
  7433                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7434  001548  C040  FFD9         	movff	sprintf@sp,fsr2l
  7435  00154C  C041  FFDA         	movff	sprintf@sp+1,fsr2h
  7436  001550  0E2D               	movlw	45
  7437  001552  6EDF               	movwf	indf2,c
  7438  001554  4A40               	infsnz	sprintf@sp,f,c
  7439  001556  2A41               	incf	sprintf@sp+1,f,c
  7440  001558                     i2l3098:
  7441                           
  7442                           ;doprnt.c: 1469: }
  7443                           ;doprnt.c: 1472: prec = c;
  7444  001558  5063               	movf	sprintf@c,w,c
  7445  00155A  6E54               	movwf	sprintf@prec,c
  7446  00155C  6A55               	clrf	sprintf@prec+1,c
  7447  00155E  BE54               	btfsc	sprintf@prec,7,c
  7448  001560  0655               	decf	sprintf@prec+1,f,c
  7449                           
  7450                           ;doprnt.c: 1474: while(prec--) {
  7451  001562  D046               	goto	i2l3106
  7452  001564                     i2l3100:
  7453                           
  7454                           ;doprnt.c: 1478: {
  7455                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  7456  001564  C054  F047         	movff	sprintf@prec,??_sprintf
  7457  001568  C055  F048         	movff	sprintf@prec+1,??_sprintf+1
  7458  00156C  90D8               	bcf	status,0,c
  7459  00156E  3647               	rlcf	??_sprintf,f,c
  7460  001570  3648               	rlcf	??_sprintf+1,f,c
  7461  001572  90D8               	bcf	status,0,c
  7462  001574  3647               	rlcf	??_sprintf,f,c
  7463  001576  3648               	rlcf	??_sprintf+1,f,c
  7464  001578  0E8F               	movlw	low _dpowers
  7465  00157A  2447               	addwf	??_sprintf,w,c
  7466  00157C  6EF6               	movwf	tblptrl,c
  7467  00157E  0EFB               	movlw	high _dpowers
  7468  001580  2048               	addwfc	??_sprintf+1,w,c
  7469  001582  6EF7               	movwf	tblptrh,c
  7470  001584                     	if	1	;There are 3 active tblptr bytes
  7471  001584  6AF8               	clrf	tblptru,c
  7472  001586  0E00               	movlw	low (__mediumconst shr (0+16))
  7473  001588  22F8               	addwfc	tblptru,f,c
  7474  00158A                     	endif
  7475  00158A  0009               	tblrd		*+
  7476  00158C  CFF5 F005          	movff	tablat,___lldiv@divisor
  7477  001590  0009               	tblrd		*+
  7478  001592  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  7479  001596  0009               	tblrd		*+
  7480  001598  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  7481  00159C  000A               	tblrd		*-
  7482  00159E  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  7483  0015A2  C056  F001         	movff	sprintf@val,___lldiv@dividend
  7484  0015A6  C057  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  7485  0015AA  C058  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  7486  0015AE  C059  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  7487  0015B2  ECC1  F013         	call	___lldiv	;wreg free
  7488  0015B6  C001  F00E         	movff	?___lldiv,___llmod@dividend
  7489  0015BA  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  7490  0015BE  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  7491  0015C2  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  7492  0015C6  0E0A               	movlw	10
  7493  0015C8  6E12               	movwf	___llmod@divisor,c
  7494  0015CA  0E00               	movlw	0
  7495  0015CC  6E13               	movwf	___llmod@divisor+1,c
  7496  0015CE  0E00               	movlw	0
  7497  0015D0  6E14               	movwf	___llmod@divisor+2,c
  7498  0015D2  0E00               	movlw	0
  7499  0015D4  6E15               	movwf	___llmod@divisor+3,c
  7500  0015D6  EC73  F014         	call	___llmod	;wreg free
  7501  0015DA  500E               	movf	?___llmod,w,c
  7502  0015DC  0F30               	addlw	48
  7503  0015DE  6E63               	movwf	sprintf@c,c
  7504                           
  7505                           ;doprnt.c: 1523: }
  7506                           ;doprnt.c: 1524: ((*sp++ = (c)));
  7507  0015E0  C040  FFD9         	movff	sprintf@sp,fsr2l
  7508  0015E4  C041  FFDA         	movff	sprintf@sp+1,fsr2h
  7509  0015E8  C063  FFDF         	movff	sprintf@c,indf2
  7510  0015EC  4A40               	infsnz	sprintf@sp,f,c
  7511  0015EE  2A41               	incf	sprintf@sp+1,f,c
  7512  0015F0                     i2l3106:
  7513  0015F0  0654               	decf	sprintf@prec,f,c
  7514  0015F2  A0D8               	btfss	status,0,c
  7515  0015F4  0655               	decf	sprintf@prec+1,f,c
  7516  0015F6  2854               	incf	sprintf@prec,w,c
  7517  0015F8  E1B5               	bnz	i2l3100
  7518  0015FA  2855               	incf	sprintf@prec+1,w,c
  7519  0015FC  A4D8               	btfss	status,2,c
  7520  0015FE  D7B2               	goto	i2l3100
  7521  001600                     i2l3108:
  7522  001600  C042  FFF6         	movff	sprintf@f,tblptrl
  7523  001604  C043  FFF7         	movff	sprintf@f+1,tblptrh
  7524  001608  4A42               	infsnz	sprintf@f,f,c
  7525  00160A  2A43               	incf	sprintf@f+1,f,c
  7526  00160C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7527  00160C  6AF8               	clrf	tblptru,c
  7528  00160E                     	endif
  7529  00160E                     	if	0	;tblptru may be non-zero
  7530  00160E                     	endif
  7531  00160E  0008               	tblrd		*
  7532  001610  CFF5 F063          	movff	tablat,sprintf@c
  7533  001614  5063               	movf	sprintf@c,w,c
  7534  001616  A4D8               	btfss	status,2,c
  7535  001618  D45B               	goto	i2l2908
  7536  00161A                     i2l3110:
  7537                           
  7538                           ;doprnt.c: 1538: *sp = 0;
  7539  00161A  C040  FFD9         	movff	sprintf@sp,fsr2l
  7540  00161E  C041  FFDA         	movff	sprintf@sp+1,fsr2h
  7541  001622  0E00               	movlw	0
  7542  001624  6EDF               	movwf	indf2,c
  7543  001626  0012               	return	
  7544  001628                     __end_of_sprintf:
  7545                           	opt stack 0
  7546                           pclatu	equ	0xFFB
  7547                           pclath	equ	0xFFA
  7548                           tblptru	equ	0xFF8
  7549                           tblptrh	equ	0xFF7
  7550                           tblptrl	equ	0xFF6
  7551                           tablat	equ	0xFF5
  7552                           prodh	equ	0xFF4
  7553                           prodl	equ	0xFF3
  7554                           intcon	equ	0xFF2
  7555                           indf0	equ	0xFEF
  7556                           postinc0	equ	0xFEE
  7557                           fsr0h	equ	0xFEA
  7558                           fsr0l	equ	0xFE9
  7559                           wreg	equ	0xFE8
  7560                           fsr1h	equ	0xFE2
  7561                           fsr1l	equ	0xFE1
  7562                           indf2	equ	0xFDF
  7563                           postinc2	equ	0xFDE
  7564                           postdec2	equ	0xFDD
  7565                           fsr2h	equ	0xFDA
  7566                           fsr2l	equ	0xFD9
  7567                           status	equ	0xFD8
  7568                           
  7569 ;; *************** function _scale *****************
  7570 ;; Defined at:
  7571 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\doprnt.c"
  7572 ;; Parameters:    Size  Location     Type
  7573 ;;  scl             1    wreg     char 
  7574 ;; Auto vars:     Size  Location     Type
  7575 ;;  scl             1   41[COMRAM] char 
  7576 ;; Return value:  Size  Location     Type
  7577 ;;                  3   35[COMRAM] char 
  7578 ;; Registers used:
  7579 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7580 ;; Tracked objects:
  7581 ;;		On entry : 0/0
  7582 ;;		On exit  : 0/0
  7583 ;;		Unchanged: 0/0
  7584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7585 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7586 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7588 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7589 ;;Total ram usage:        7 bytes
  7590 ;; Hardware stack levels used:    1
  7591 ;; Hardware stack levels required when called:    2
  7592 ;; This function calls:
  7593 ;;		___awdiv
  7594 ;;		___awmod
  7595 ;;		___ftmul
  7596 ;;		___wmul
  7597 ;; This function is called by:
  7598 ;;		_sprintf
  7599 ;; This function uses a non-reentrant model
  7600 ;;
  7601                           
  7602                           	psect	text32
  7603  001628                     __ptext32:
  7604                           	opt stack 0
  7605  001628                     _scale:
  7606                           	opt stack 23
  7607                           
  7608                           ;incstack = 0
  7609                           ;scale@scl stored from wreg
  7610  001628  6E2A               	movwf	scale@scl,c
  7611                           
  7612                           ;doprnt.c: 428: if(scl < 0) {
  7613  00162A  AE2A               	btfss	scale@scl,7,c
  7614  00162C  D10D               	goto	i2l2646
  7615                           
  7616                           ;doprnt.c: 429: scl = -scl;
  7617  00162E  6C2A               	negf	scale@scl,c
  7618                           
  7619                           ;doprnt.c: 430: if(scl>=110)
  7620  001630  502A               	movf	scale@scl,w,c
  7621  001632  0A80               	xorlw	128
  7622  001634  0F12               	addlw	-238
  7623  001636  A0D8               	btfss	status,0,c
  7624  001638  D09A               	goto	i2l2636
  7625                           
  7626                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7627  00163A  0E00               	movlw	0
  7628  00163C  6E12               	movwf	___wmul@multiplicand+1,c
  7629  00163E  0E03               	movlw	3
  7630  001640  6E11               	movwf	___wmul@multiplicand,c
  7631  001642  0E00               	movlw	0
  7632  001644  6E0A               	movwf	___awdiv@divisor+1,c
  7633  001646  0E0A               	movlw	10
  7634  001648  6E09               	movwf	___awdiv@divisor,c
  7635  00164A  0E00               	movlw	0
  7636  00164C  6E04               	movwf	___awmod@divisor+1,c
  7637  00164E  0E64               	movlw	100
  7638  001650  6E03               	movwf	___awmod@divisor,c
  7639  001652  502A               	movf	scale@scl,w,c
  7640  001654  6E01               	movwf	___awmod@dividend,c
  7641  001656  6A02               	clrf	___awmod@dividend+1,c
  7642  001658  BE01               	btfsc	___awmod@dividend,7,c
  7643  00165A  0602               	decf	___awmod@dividend+1,f,c
  7644  00165C  EC3B  F014         	call	___awmod	;wreg free
  7645  001660  C001  F007         	movff	?___awmod,___awdiv@dividend
  7646  001664  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  7647  001668  EC7F  F013         	call	___awdiv	;wreg free
  7648  00166C  0E09               	movlw	9
  7649  00166E  2407               	addwf	?___awdiv,w,c
  7650  001670  6E0F               	movwf	___wmul@multiplier,c
  7651  001672  0E00               	movlw	0
  7652  001674  2008               	addwfc	?___awdiv+1,w,c
  7653  001676  6E10               	movwf	___wmul@multiplier+1,c
  7654  001678  EC0A  F016         	call	___wmul	;wreg free
  7655  00167C  0EDE               	movlw	low __npowers_
  7656  00167E  240F               	addwf	?___wmul,w,c
  7657  001680  6EF6               	movwf	tblptrl,c
  7658  001682  0EFB               	movlw	high __npowers_
  7659  001684  2010               	addwfc	?___wmul+1,w,c
  7660  001686  6EF7               	movwf	tblptrh,c
  7661  001688                     	if	1	;There are 3 active tblptr bytes
  7662  001688  6AF8               	clrf	tblptru,c
  7663  00168A  0E00               	movlw	low (__mediumconst shr (0+16))
  7664  00168C  22F8               	addwfc	tblptru,f,c
  7665  00168E                     	endif
  7666  00168E  0009               	tblrd		*+
  7667  001690  CFF5 F018          	movff	tablat,___ftmul@f2
  7668  001694  0009               	tblrd		*+
  7669  001696  CFF5 F019          	movff	tablat,___ftmul@f2+1
  7670  00169A  000A               	tblrd		*-
  7671  00169C  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  7672  0016A0  0E00               	movlw	0
  7673  0016A2  6E0A               	movwf	___awdiv@divisor+1,c
  7674  0016A4  0E64               	movlw	100
  7675  0016A6  6E09               	movwf	___awdiv@divisor,c
  7676  0016A8  502A               	movf	scale@scl,w,c
  7677  0016AA  6E07               	movwf	___awdiv@dividend,c
  7678  0016AC  6A08               	clrf	___awdiv@dividend+1,c
  7679  0016AE  BE07               	btfsc	___awdiv@dividend,7,c
  7680  0016B0  0608               	decf	___awdiv@dividend+1,f,c
  7681  0016B2  EC7F  F013         	call	___awdiv	;wreg free
  7682  0016B6  0E12               	movlw	18
  7683  0016B8  2407               	addwf	?___awdiv,w,c
  7684  0016BA  6E0F               	movwf	___wmul@multiplier,c
  7685  0016BC  0E00               	movlw	0
  7686  0016BE  2008               	addwfc	?___awdiv+1,w,c
  7687  0016C0  6E10               	movwf	___wmul@multiplier+1,c
  7688  0016C2  0E00               	movlw	0
  7689  0016C4  6E12               	movwf	___wmul@multiplicand+1,c
  7690  0016C6  0E03               	movlw	3
  7691  0016C8  6E11               	movwf	___wmul@multiplicand,c
  7692  0016CA  EC0A  F016         	call	___wmul	;wreg free
  7693  0016CE  0EDE               	movlw	low __npowers_
  7694  0016D0  240F               	addwf	?___wmul,w,c
  7695  0016D2  6EF6               	movwf	tblptrl,c
  7696  0016D4  0EFB               	movlw	high __npowers_
  7697  0016D6  2010               	addwfc	?___wmul+1,w,c
  7698  0016D8  6EF7               	movwf	tblptrh,c
  7699  0016DA                     	if	1	;There are 3 active tblptr bytes
  7700  0016DA  6AF8               	clrf	tblptru,c
  7701  0016DC  0E00               	movlw	low (__mediumconst shr (0+16))
  7702  0016DE  22F8               	addwfc	tblptru,f,c
  7703  0016E0                     	endif
  7704  0016E0  0009               	tblrd		*+
  7705  0016E2  CFF5 F015          	movff	tablat,___ftmul@f1
  7706  0016E6  0009               	tblrd		*+
  7707  0016E8  CFF5 F016          	movff	tablat,___ftmul@f1+1
  7708  0016EC  000A               	tblrd		*-
  7709  0016EE  CFF5 F017          	movff	tablat,___ftmul@f1+2
  7710  0016F2  EC68  F010         	call	___ftmul	;wreg free
  7711  0016F6  C015  F027         	movff	?___ftmul,_scale$1471
  7712  0016FA  C016  F028         	movff	?___ftmul+1,_scale$1471+1
  7713  0016FE  C017  F029         	movff	?___ftmul+2,_scale$1471+2
  7714                           
  7715                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7716  001702  C027  F015         	movff	_scale$1471,___ftmul@f1
  7717  001706  C028  F016         	movff	_scale$1471+1,___ftmul@f1+1
  7718  00170A  C029  F017         	movff	_scale$1471+2,___ftmul@f1+2
  7719  00170E  0E00               	movlw	0
  7720  001710  6E12               	movwf	___wmul@multiplicand+1,c
  7721  001712  0E03               	movlw	3
  7722  001714  6E11               	movwf	___wmul@multiplicand,c
  7723  001716  0E00               	movlw	0
  7724  001718  6E04               	movwf	___awmod@divisor+1,c
  7725  00171A  0E0A               	movlw	10
  7726  00171C  6E03               	movwf	___awmod@divisor,c
  7727  00171E  502A               	movf	scale@scl,w,c
  7728  001720  6E01               	movwf	___awmod@dividend,c
  7729  001722  6A02               	clrf	___awmod@dividend+1,c
  7730  001724  BE01               	btfsc	___awmod@dividend,7,c
  7731  001726  0602               	decf	___awmod@dividend+1,f,c
  7732  001728  EC3B  F014         	call	___awmod	;wreg free
  7733  00172C  C001  F00F         	movff	?___awmod,___wmul@multiplier
  7734  001730  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  7735  001734  EC0A  F016         	call	___wmul	;wreg free
  7736  001738  0EDE               	movlw	low __npowers_
  7737  00173A  240F               	addwf	?___wmul,w,c
  7738  00173C  6EF6               	movwf	tblptrl,c
  7739  00173E  0EFB               	movlw	high __npowers_
  7740  001740  2010               	addwfc	?___wmul+1,w,c
  7741  001742  6EF7               	movwf	tblptrh,c
  7742  001744                     	if	1	;There are 3 active tblptr bytes
  7743  001744  6AF8               	clrf	tblptru,c
  7744  001746  0E00               	movlw	low (__mediumconst shr (0+16))
  7745  001748  22F8               	addwfc	tblptru,f,c
  7746  00174A                     	endif
  7747  00174A  0009               	tblrd		*+
  7748  00174C  CFF5 F018          	movff	tablat,___ftmul@f2
  7749  001750  0009               	tblrd		*+
  7750  001752  CFF5 F019          	movff	tablat,___ftmul@f2+1
  7751  001756  000A               	tblrd		*-
  7752  001758  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  7753  00175C  EC68  F010         	call	___ftmul	;wreg free
  7754  001760  C015  F024         	movff	?___ftmul,?_scale
  7755  001764  C016  F025         	movff	?___ftmul+1,?_scale+1
  7756  001768  C017  F026         	movff	?___ftmul+2,?_scale+2
  7757  00176C  0012               	return	
  7758  00176E                     i2l2636:
  7759                           
  7760                           ;doprnt.c: 432: else if(scl > 10)
  7761  00176E  502A               	movf	scale@scl,w,c
  7762  001770  0A80               	xorlw	128
  7763  001772  0F75               	addlw	-139
  7764  001774  A0D8               	btfss	status,0,c
  7765  001776  D053               	goto	i2l2642
  7766                           
  7767                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7768  001778  0E00               	movlw	0
  7769  00177A  6E0A               	movwf	___awdiv@divisor+1,c
  7770  00177C  0E0A               	movlw	10
  7771  00177E  6E09               	movwf	___awdiv@divisor,c
  7772  001780  502A               	movf	scale@scl,w,c
  7773  001782  6E07               	movwf	___awdiv@dividend,c
  7774  001784  6A08               	clrf	___awdiv@dividend+1,c
  7775  001786  BE07               	btfsc	___awdiv@dividend,7,c
  7776  001788  0608               	decf	___awdiv@dividend+1,f,c
  7777  00178A  EC7F  F013         	call	___awdiv	;wreg free
  7778  00178E  0E09               	movlw	9
  7779  001790  2407               	addwf	?___awdiv,w,c
  7780  001792  6E0F               	movwf	___wmul@multiplier,c
  7781  001794  0E00               	movlw	0
  7782  001796  2008               	addwfc	?___awdiv+1,w,c
  7783  001798  6E10               	movwf	___wmul@multiplier+1,c
  7784  00179A  0E00               	movlw	0
  7785  00179C  6E12               	movwf	___wmul@multiplicand+1,c
  7786  00179E  0E03               	movlw	3
  7787  0017A0  6E11               	movwf	___wmul@multiplicand,c
  7788  0017A2  EC0A  F016         	call	___wmul	;wreg free
  7789  0017A6  0EDE               	movlw	low __npowers_
  7790  0017A8  240F               	addwf	?___wmul,w,c
  7791  0017AA  6EF6               	movwf	tblptrl,c
  7792  0017AC  0EFB               	movlw	high __npowers_
  7793  0017AE  2010               	addwfc	?___wmul+1,w,c
  7794  0017B0  6EF7               	movwf	tblptrh,c
  7795  0017B2                     	if	1	;There are 3 active tblptr bytes
  7796  0017B2  6AF8               	clrf	tblptru,c
  7797  0017B4  0E00               	movlw	low (__mediumconst shr (0+16))
  7798  0017B6  22F8               	addwfc	tblptru,f,c
  7799  0017B8                     	endif
  7800  0017B8  0009               	tblrd		*+
  7801  0017BA  CFF5 F015          	movff	tablat,___ftmul@f1
  7802  0017BE  0009               	tblrd		*+
  7803  0017C0  CFF5 F016          	movff	tablat,___ftmul@f1+1
  7804  0017C4  000A               	tblrd		*-
  7805  0017C6  CFF5 F017          	movff	tablat,___ftmul@f1+2
  7806  0017CA  0E00               	movlw	0
  7807  0017CC  6E12               	movwf	___wmul@multiplicand+1,c
  7808  0017CE  0E03               	movlw	3
  7809  0017D0  6E11               	movwf	___wmul@multiplicand,c
  7810  0017D2  0E00               	movlw	0
  7811  0017D4  6E04               	movwf	___awmod@divisor+1,c
  7812  0017D6  0E0A               	movlw	10
  7813  0017D8  6E03               	movwf	___awmod@divisor,c
  7814  0017DA  502A               	movf	scale@scl,w,c
  7815  0017DC  6E01               	movwf	___awmod@dividend,c
  7816  0017DE  6A02               	clrf	___awmod@dividend+1,c
  7817  0017E0  BE01               	btfsc	___awmod@dividend,7,c
  7818  0017E2  0602               	decf	___awmod@dividend+1,f,c
  7819  0017E4  EC3B  F014         	call	___awmod	;wreg free
  7820  0017E8  C001  F00F         	movff	?___awmod,___wmul@multiplier
  7821  0017EC  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  7822  0017F0  EC0A  F016         	call	___wmul	;wreg free
  7823  0017F4  0EDE               	movlw	low __npowers_
  7824  0017F6  240F               	addwf	?___wmul,w,c
  7825  0017F8  6EF6               	movwf	tblptrl,c
  7826  0017FA  0EFB               	movlw	high __npowers_
  7827  0017FC  2010               	addwfc	?___wmul+1,w,c
  7828  0017FE  6EF7               	movwf	tblptrh,c
  7829  001800                     	if	1	;There are 3 active tblptr bytes
  7830  001800  6AF8               	clrf	tblptru,c
  7831  001802  0E00               	movlw	low (__mediumconst shr (0+16))
  7832  001804  22F8               	addwfc	tblptru,f,c
  7833  001806                     	endif
  7834  001806  0009               	tblrd		*+
  7835  001808  CFF5 F018          	movff	tablat,___ftmul@f2
  7836  00180C  0009               	tblrd		*+
  7837  00180E  CFF5 F019          	movff	tablat,___ftmul@f2+1
  7838  001812  000A               	tblrd		*-
  7839  001814  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  7840  001818  EC68  F010         	call	___ftmul	;wreg free
  7841  00181C  D7A1               	goto	L5
  7842  00181E                     i2l2642:
  7843                           
  7844                           ;doprnt.c: 434: return _npowers_[scl];
  7845  00181E  502A               	movf	scale@scl,w,c
  7846  001820  0D03               	mullw	3
  7847  001822  0EDE               	movlw	low __npowers_
  7848  001824  24F3               	addwf	prodl,w,c
  7849  001826  6EF6               	movwf	tblptrl,c
  7850  001828  0EFB               	movlw	high __npowers_
  7851  00182A  20F4               	addwfc	prodh,w,c
  7852  00182C  6EF7               	movwf	tblptrh,c
  7853  00182E                     	if	1	;There are 3 active tblptr bytes
  7854  00182E  6AF8               	clrf	tblptru,c
  7855  001830  0E00               	movlw	low (__mediumconst shr (0+16))
  7856  001832  22F8               	addwfc	tblptru,f,c
  7857  001834                     	endif
  7858  001834  0009               	tblrd		*+
  7859  001836  CFF5 F024          	movff	tablat,?_scale
  7860  00183A  0009               	tblrd		*+
  7861  00183C  CFF5 F025          	movff	tablat,?_scale+1
  7862  001840  000A               	tblrd		*-
  7863  001842  CFF5 F026          	movff	tablat,?_scale+2
  7864  001846  0012               	return	
  7865  001848                     i2l2646:
  7866                           
  7867                           ;doprnt.c: 435: }
  7868                           ;doprnt.c: 436: if(scl>=110)
  7869  001848  502A               	movf	scale@scl,w,c
  7870  00184A  0A80               	xorlw	128
  7871  00184C  0F12               	addlw	-238
  7872  00184E  A0D8               	btfss	status,0,c
  7873  001850  D09A               	goto	i2l2654
  7874                           
  7875                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7876  001852  0E00               	movlw	0
  7877  001854  6E12               	movwf	___wmul@multiplicand+1,c
  7878  001856  0E03               	movlw	3
  7879  001858  6E11               	movwf	___wmul@multiplicand,c
  7880  00185A  0E00               	movlw	0
  7881  00185C  6E0A               	movwf	___awdiv@divisor+1,c
  7882  00185E  0E0A               	movlw	10
  7883  001860  6E09               	movwf	___awdiv@divisor,c
  7884  001862  0E00               	movlw	0
  7885  001864  6E04               	movwf	___awmod@divisor+1,c
  7886  001866  0E64               	movlw	100
  7887  001868  6E03               	movwf	___awmod@divisor,c
  7888  00186A  502A               	movf	scale@scl,w,c
  7889  00186C  6E01               	movwf	___awmod@dividend,c
  7890  00186E  6A02               	clrf	___awmod@dividend+1,c
  7891  001870  BE01               	btfsc	___awmod@dividend,7,c
  7892  001872  0602               	decf	___awmod@dividend+1,f,c
  7893  001874  EC3B  F014         	call	___awmod	;wreg free
  7894  001878  C001  F007         	movff	?___awmod,___awdiv@dividend
  7895  00187C  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  7896  001880  EC7F  F013         	call	___awdiv	;wreg free
  7897  001884  0E09               	movlw	9
  7898  001886  2407               	addwf	?___awdiv,w,c
  7899  001888  6E0F               	movwf	___wmul@multiplier,c
  7900  00188A  0E00               	movlw	0
  7901  00188C  2008               	addwfc	?___awdiv+1,w,c
  7902  00188E  6E10               	movwf	___wmul@multiplier+1,c
  7903  001890  EC0A  F016         	call	___wmul	;wreg free
  7904  001894  0EB7               	movlw	low __powers_
  7905  001896  240F               	addwf	?___wmul,w,c
  7906  001898  6EF6               	movwf	tblptrl,c
  7907  00189A  0EFB               	movlw	high __powers_
  7908  00189C  2010               	addwfc	?___wmul+1,w,c
  7909  00189E  6EF7               	movwf	tblptrh,c
  7910  0018A0                     	if	1	;There are 3 active tblptr bytes
  7911  0018A0  6AF8               	clrf	tblptru,c
  7912  0018A2  0E00               	movlw	low (__mediumconst shr (0+16))
  7913  0018A4  22F8               	addwfc	tblptru,f,c
  7914  0018A6                     	endif
  7915  0018A6  0009               	tblrd		*+
  7916  0018A8  CFF5 F018          	movff	tablat,___ftmul@f2
  7917  0018AC  0009               	tblrd		*+
  7918  0018AE  CFF5 F019          	movff	tablat,___ftmul@f2+1
  7919  0018B2  000A               	tblrd		*-
  7920  0018B4  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  7921  0018B8  0E00               	movlw	0
  7922  0018BA  6E0A               	movwf	___awdiv@divisor+1,c
  7923  0018BC  0E64               	movlw	100
  7924  0018BE  6E09               	movwf	___awdiv@divisor,c
  7925  0018C0  502A               	movf	scale@scl,w,c
  7926  0018C2  6E07               	movwf	___awdiv@dividend,c
  7927  0018C4  6A08               	clrf	___awdiv@dividend+1,c
  7928  0018C6  BE07               	btfsc	___awdiv@dividend,7,c
  7929  0018C8  0608               	decf	___awdiv@dividend+1,f,c
  7930  0018CA  EC7F  F013         	call	___awdiv	;wreg free
  7931  0018CE  0E12               	movlw	18
  7932  0018D0  2407               	addwf	?___awdiv,w,c
  7933  0018D2  6E0F               	movwf	___wmul@multiplier,c
  7934  0018D4  0E00               	movlw	0
  7935  0018D6  2008               	addwfc	?___awdiv+1,w,c
  7936  0018D8  6E10               	movwf	___wmul@multiplier+1,c
  7937  0018DA  0E00               	movlw	0
  7938  0018DC  6E12               	movwf	___wmul@multiplicand+1,c
  7939  0018DE  0E03               	movlw	3
  7940  0018E0  6E11               	movwf	___wmul@multiplicand,c
  7941  0018E2  EC0A  F016         	call	___wmul	;wreg free
  7942  0018E6  0EB7               	movlw	low __powers_
  7943  0018E8  240F               	addwf	?___wmul,w,c
  7944  0018EA  6EF6               	movwf	tblptrl,c
  7945  0018EC  0EFB               	movlw	high __powers_
  7946  0018EE  2010               	addwfc	?___wmul+1,w,c
  7947  0018F0  6EF7               	movwf	tblptrh,c
  7948  0018F2                     	if	1	;There are 3 active tblptr bytes
  7949  0018F2  6AF8               	clrf	tblptru,c
  7950  0018F4  0E00               	movlw	low (__mediumconst shr (0+16))
  7951  0018F6  22F8               	addwfc	tblptru,f,c
  7952  0018F8                     	endif
  7953  0018F8  0009               	tblrd		*+
  7954  0018FA  CFF5 F015          	movff	tablat,___ftmul@f1
  7955  0018FE  0009               	tblrd		*+
  7956  001900  CFF5 F016          	movff	tablat,___ftmul@f1+1
  7957  001904  000A               	tblrd		*-
  7958  001906  CFF5 F017          	movff	tablat,___ftmul@f1+2
  7959  00190A  EC68  F010         	call	___ftmul	;wreg free
  7960  00190E  C015  F027         	movff	?___ftmul,_scale$1471
  7961  001912  C016  F028         	movff	?___ftmul+1,_scale$1471+1
  7962  001916  C017  F029         	movff	?___ftmul+2,_scale$1471+2
  7963                           
  7964                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7965  00191A  C027  F015         	movff	_scale$1471,___ftmul@f1
  7966  00191E  C028  F016         	movff	_scale$1471+1,___ftmul@f1+1
  7967  001922  C029  F017         	movff	_scale$1471+2,___ftmul@f1+2
  7968  001926  0E00               	movlw	0
  7969  001928  6E12               	movwf	___wmul@multiplicand+1,c
  7970  00192A  0E03               	movlw	3
  7971  00192C  6E11               	movwf	___wmul@multiplicand,c
  7972  00192E  0E00               	movlw	0
  7973  001930  6E04               	movwf	___awmod@divisor+1,c
  7974  001932  0E0A               	movlw	10
  7975  001934  6E03               	movwf	___awmod@divisor,c
  7976  001936  502A               	movf	scale@scl,w,c
  7977  001938  6E01               	movwf	___awmod@dividend,c
  7978  00193A  6A02               	clrf	___awmod@dividend+1,c
  7979  00193C  BE01               	btfsc	___awmod@dividend,7,c
  7980  00193E  0602               	decf	___awmod@dividend+1,f,c
  7981  001940  EC3B  F014         	call	___awmod	;wreg free
  7982  001944  C001  F00F         	movff	?___awmod,___wmul@multiplier
  7983  001948  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  7984  00194C  EC0A  F016         	call	___wmul	;wreg free
  7985  001950  0EB7               	movlw	low __powers_
  7986  001952  240F               	addwf	?___wmul,w,c
  7987  001954  6EF6               	movwf	tblptrl,c
  7988  001956  0EFB               	movlw	high __powers_
  7989  001958  2010               	addwfc	?___wmul+1,w,c
  7990  00195A  6EF7               	movwf	tblptrh,c
  7991  00195C                     	if	1	;There are 3 active tblptr bytes
  7992  00195C  6AF8               	clrf	tblptru,c
  7993  00195E  0E00               	movlw	low (__mediumconst shr (0+16))
  7994  001960  22F8               	addwfc	tblptru,f,c
  7995  001962                     	endif
  7996  001962  0009               	tblrd		*+
  7997  001964  CFF5 F018          	movff	tablat,___ftmul@f2
  7998  001968  0009               	tblrd		*+
  7999  00196A  CFF5 F019          	movff	tablat,___ftmul@f2+1
  8000  00196E  000A               	tblrd		*-
  8001  001970  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  8002  001974  EC68  F010         	call	___ftmul	;wreg free
  8003  001978  C015  F024         	movff	?___ftmul,?_scale
  8004  00197C  C016  F025         	movff	?___ftmul+1,?_scale+1
  8005  001980  C017  F026         	movff	?___ftmul+2,?_scale+2
  8006  001984  0012               	return	
  8007  001986                     i2l2654:
  8008                           
  8009                           ;doprnt.c: 438: else if(scl > 10)
  8010  001986  502A               	movf	scale@scl,w,c
  8011  001988  0A80               	xorlw	128
  8012  00198A  0F75               	addlw	-139
  8013  00198C  A0D8               	btfss	status,0,c
  8014  00198E  D053               	goto	i2l2660
  8015                           
  8016                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8017  001990  0E00               	movlw	0
  8018  001992  6E0A               	movwf	___awdiv@divisor+1,c
  8019  001994  0E0A               	movlw	10
  8020  001996  6E09               	movwf	___awdiv@divisor,c
  8021  001998  502A               	movf	scale@scl,w,c
  8022  00199A  6E07               	movwf	___awdiv@dividend,c
  8023  00199C  6A08               	clrf	___awdiv@dividend+1,c
  8024  00199E  BE07               	btfsc	___awdiv@dividend,7,c
  8025  0019A0  0608               	decf	___awdiv@dividend+1,f,c
  8026  0019A2  EC7F  F013         	call	___awdiv	;wreg free
  8027  0019A6  0E09               	movlw	9
  8028  0019A8  2407               	addwf	?___awdiv,w,c
  8029  0019AA  6E0F               	movwf	___wmul@multiplier,c
  8030  0019AC  0E00               	movlw	0
  8031  0019AE  2008               	addwfc	?___awdiv+1,w,c
  8032  0019B0  6E10               	movwf	___wmul@multiplier+1,c
  8033  0019B2  0E00               	movlw	0
  8034  0019B4  6E12               	movwf	___wmul@multiplicand+1,c
  8035  0019B6  0E03               	movlw	3
  8036  0019B8  6E11               	movwf	___wmul@multiplicand,c
  8037  0019BA  EC0A  F016         	call	___wmul	;wreg free
  8038  0019BE  0EB7               	movlw	low __powers_
  8039  0019C0  240F               	addwf	?___wmul,w,c
  8040  0019C2  6EF6               	movwf	tblptrl,c
  8041  0019C4  0EFB               	movlw	high __powers_
  8042  0019C6  2010               	addwfc	?___wmul+1,w,c
  8043  0019C8  6EF7               	movwf	tblptrh,c
  8044  0019CA                     	if	1	;There are 3 active tblptr bytes
  8045  0019CA  6AF8               	clrf	tblptru,c
  8046  0019CC  0E00               	movlw	low (__mediumconst shr (0+16))
  8047  0019CE  22F8               	addwfc	tblptru,f,c
  8048  0019D0                     	endif
  8049  0019D0  0009               	tblrd		*+
  8050  0019D2  CFF5 F015          	movff	tablat,___ftmul@f1
  8051  0019D6  0009               	tblrd		*+
  8052  0019D8  CFF5 F016          	movff	tablat,___ftmul@f1+1
  8053  0019DC  000A               	tblrd		*-
  8054  0019DE  CFF5 F017          	movff	tablat,___ftmul@f1+2
  8055  0019E2  0E00               	movlw	0
  8056  0019E4  6E12               	movwf	___wmul@multiplicand+1,c
  8057  0019E6  0E03               	movlw	3
  8058  0019E8  6E11               	movwf	___wmul@multiplicand,c
  8059  0019EA  0E00               	movlw	0
  8060  0019EC  6E04               	movwf	___awmod@divisor+1,c
  8061  0019EE  0E0A               	movlw	10
  8062  0019F0  6E03               	movwf	___awmod@divisor,c
  8063  0019F2  502A               	movf	scale@scl,w,c
  8064  0019F4  6E01               	movwf	___awmod@dividend,c
  8065  0019F6  6A02               	clrf	___awmod@dividend+1,c
  8066  0019F8  BE01               	btfsc	___awmod@dividend,7,c
  8067  0019FA  0602               	decf	___awmod@dividend+1,f,c
  8068  0019FC  EC3B  F014         	call	___awmod	;wreg free
  8069  001A00  C001  F00F         	movff	?___awmod,___wmul@multiplier
  8070  001A04  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  8071  001A08  EC0A  F016         	call	___wmul	;wreg free
  8072  001A0C  0EB7               	movlw	low __powers_
  8073  001A0E  240F               	addwf	?___wmul,w,c
  8074  001A10  6EF6               	movwf	tblptrl,c
  8075  001A12  0EFB               	movlw	high __powers_
  8076  001A14  2010               	addwfc	?___wmul+1,w,c
  8077  001A16  6EF7               	movwf	tblptrh,c
  8078  001A18                     	if	1	;There are 3 active tblptr bytes
  8079  001A18  6AF8               	clrf	tblptru,c
  8080  001A1A  0E00               	movlw	low (__mediumconst shr (0+16))
  8081  001A1C  22F8               	addwfc	tblptru,f,c
  8082  001A1E                     	endif
  8083  001A1E  0009               	tblrd		*+
  8084  001A20  CFF5 F018          	movff	tablat,___ftmul@f2
  8085  001A24  0009               	tblrd		*+
  8086  001A26  CFF5 F019          	movff	tablat,___ftmul@f2+1
  8087  001A2A  000A               	tblrd		*-
  8088  001A2C  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  8089  001A30  EC68  F010         	call	___ftmul	;wreg free
  8090  001A34  D7A1               	goto	L6
  8091  001A36                     i2l2660:
  8092                           
  8093                           ;doprnt.c: 440: return _powers_[scl];
  8094  001A36  502A               	movf	scale@scl,w,c
  8095  001A38  0D03               	mullw	3
  8096  001A3A  0EB7               	movlw	low __powers_
  8097  001A3C  24F3               	addwf	prodl,w,c
  8098  001A3E  6EF6               	movwf	tblptrl,c
  8099  001A40  0EFB               	movlw	high __powers_
  8100  001A42  20F4               	addwfc	prodh,w,c
  8101  001A44  6EF7               	movwf	tblptrh,c
  8102  001A46                     	if	1	;There are 3 active tblptr bytes
  8103  001A46  6AF8               	clrf	tblptru,c
  8104  001A48  0E00               	movlw	low (__mediumconst shr (0+16))
  8105  001A4A  22F8               	addwfc	tblptru,f,c
  8106  001A4C                     	endif
  8107  001A4C  0009               	tblrd		*+
  8108  001A4E  CFF5 F024          	movff	tablat,?_scale
  8109  001A52  0009               	tblrd		*+
  8110  001A54  CFF5 F025          	movff	tablat,?_scale+1
  8111  001A58  000A               	tblrd		*-
  8112  001A5A  CFF5 F026          	movff	tablat,?_scale+2
  8113  001A5E  0012               	return	
  8114  001A60                     __end_of_scale:
  8115                           	opt stack 0
  8116                           pclatu	equ	0xFFB
  8117                           pclath	equ	0xFFA
  8118                           tblptru	equ	0xFF8
  8119                           tblptrh	equ	0xFF7
  8120                           tblptrl	equ	0xFF6
  8121                           tablat	equ	0xFF5
  8122                           prodh	equ	0xFF4
  8123                           prodl	equ	0xFF3
  8124                           intcon	equ	0xFF2
  8125                           indf0	equ	0xFEF
  8126                           postinc0	equ	0xFEE
  8127                           fsr0h	equ	0xFEA
  8128                           fsr0l	equ	0xFE9
  8129                           wreg	equ	0xFE8
  8130                           fsr1h	equ	0xFE2
  8131                           fsr1l	equ	0xFE1
  8132                           indf2	equ	0xFDF
  8133                           postinc2	equ	0xFDE
  8134                           postdec2	equ	0xFDD
  8135                           fsr2h	equ	0xFDA
  8136                           fsr2l	equ	0xFD9
  8137                           status	equ	0xFD8
  8138                           
  8139 ;; *************** function _fround *****************
  8140 ;; Defined at:
  8141 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\doprnt.c"
  8142 ;; Parameters:    Size  Location     Type
  8143 ;;  prec            1    wreg     unsigned char 
  8144 ;; Auto vars:     Size  Location     Type
  8145 ;;  prec            1   44[COMRAM] unsigned char 
  8146 ;; Return value:  Size  Location     Type
  8147 ;;                  3   35[COMRAM] unsigned char 
  8148 ;; Registers used:
  8149 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8150 ;; Tracked objects:
  8151 ;;		On entry : 0/0
  8152 ;;		On exit  : 0/0
  8153 ;;		Unchanged: 0/0
  8154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8155 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8156 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8158 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8159 ;;Total ram usage:       10 bytes
  8160 ;; Hardware stack levels used:    1
  8161 ;; Hardware stack levels required when called:    2
  8162 ;; This function calls:
  8163 ;;		___awdiv
  8164 ;;		___awmod
  8165 ;;		___ftmul
  8166 ;;		___wmul
  8167 ;; This function is called by:
  8168 ;;		_sprintf
  8169 ;; This function uses a non-reentrant model
  8170 ;;
  8171                           
  8172                           	psect	text33
  8173  001A60                     __ptext33:
  8174                           	opt stack 0
  8175  001A60                     _fround:
  8176                           	opt stack 23
  8177                           
  8178                           ;incstack = 0
  8179                           ;fround@prec stored from wreg
  8180  001A60  6E2D               	movwf	fround@prec,c
  8181                           
  8182                           ;doprnt.c: 413: if(prec>=110)
  8183  001A62  0E6D               	movlw	109
  8184  001A64  642D               	cpfsgt	fround@prec,c
  8185  001A66  D0A8               	goto	i2l2614
  8186                           
  8187                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8188  001A68  0E00               	movlw	0
  8189  001A6A  6E12               	movwf	___wmul@multiplicand+1,c
  8190  001A6C  0E03               	movlw	3
  8191  001A6E  6E11               	movwf	___wmul@multiplicand,c
  8192  001A70  0E00               	movlw	0
  8193  001A72  6E0A               	movwf	___awdiv@divisor+1,c
  8194  001A74  0E0A               	movlw	10
  8195  001A76  6E09               	movwf	___awdiv@divisor,c
  8196  001A78  0E00               	movlw	0
  8197  001A7A  6E04               	movwf	___awmod@divisor+1,c
  8198  001A7C  0E64               	movlw	100
  8199  001A7E  6E03               	movwf	___awmod@divisor,c
  8200  001A80  C02D  F001         	movff	fround@prec,___awmod@dividend
  8201  001A84  6A02               	clrf	___awmod@dividend+1,c
  8202  001A86  EC3B  F014         	call	___awmod	;wreg free
  8203  001A8A  C001  F007         	movff	?___awmod,___awdiv@dividend
  8204  001A8E  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  8205  001A92  EC7F  F013         	call	___awdiv	;wreg free
  8206  001A96  0E09               	movlw	9
  8207  001A98  2407               	addwf	?___awdiv,w,c
  8208  001A9A  6E0F               	movwf	___wmul@multiplier,c
  8209  001A9C  0E00               	movlw	0
  8210  001A9E  2008               	addwfc	?___awdiv+1,w,c
  8211  001AA0  6E10               	movwf	___wmul@multiplier+1,c
  8212  001AA2  EC0A  F016         	call	___wmul	;wreg free
  8213  001AA6  0EDE               	movlw	low __npowers_
  8214  001AA8  240F               	addwf	?___wmul,w,c
  8215  001AAA  6EF6               	movwf	tblptrl,c
  8216  001AAC  0EFB               	movlw	high __npowers_
  8217  001AAE  2010               	addwfc	?___wmul+1,w,c
  8218  001AB0  6EF7               	movwf	tblptrh,c
  8219  001AB2                     	if	1	;There are 3 active tblptr bytes
  8220  001AB2  6AF8               	clrf	tblptru,c
  8221  001AB4  0E00               	movlw	low (__mediumconst shr (0+16))
  8222  001AB6  22F8               	addwfc	tblptru,f,c
  8223  001AB8                     	endif
  8224  001AB8  0009               	tblrd		*+
  8225  001ABA  CFF5 F018          	movff	tablat,___ftmul@f2
  8226  001ABE  0009               	tblrd		*+
  8227  001AC0  CFF5 F019          	movff	tablat,___ftmul@f2+1
  8228  001AC4  000A               	tblrd		*-
  8229  001AC6  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  8230  001ACA  0E00               	movlw	0
  8231  001ACC  6E0A               	movwf	___awdiv@divisor+1,c
  8232  001ACE  0E64               	movlw	100
  8233  001AD0  6E09               	movwf	___awdiv@divisor,c
  8234  001AD2  C02D  F007         	movff	fround@prec,___awdiv@dividend
  8235  001AD6  6A08               	clrf	___awdiv@dividend+1,c
  8236  001AD8  EC7F  F013         	call	___awdiv	;wreg free
  8237  001ADC  0E12               	movlw	18
  8238  001ADE  2407               	addwf	?___awdiv,w,c
  8239  001AE0  6E0F               	movwf	___wmul@multiplier,c
  8240  001AE2  0E00               	movlw	0
  8241  001AE4  2008               	addwfc	?___awdiv+1,w,c
  8242  001AE6  6E10               	movwf	___wmul@multiplier+1,c
  8243  001AE8  0E00               	movlw	0
  8244  001AEA  6E12               	movwf	___wmul@multiplicand+1,c
  8245  001AEC  0E03               	movlw	3
  8246  001AEE  6E11               	movwf	___wmul@multiplicand,c
  8247  001AF0  EC0A  F016         	call	___wmul	;wreg free
  8248  001AF4  0EDE               	movlw	low __npowers_
  8249  001AF6  240F               	addwf	?___wmul,w,c
  8250  001AF8  6EF6               	movwf	tblptrl,c
  8251  001AFA  0EFB               	movlw	high __npowers_
  8252  001AFC  2010               	addwfc	?___wmul+1,w,c
  8253  001AFE  6EF7               	movwf	tblptrh,c
  8254  001B00                     	if	1	;There are 3 active tblptr bytes
  8255  001B00  6AF8               	clrf	tblptru,c
  8256  001B02  0E00               	movlw	low (__mediumconst shr (0+16))
  8257  001B04  22F8               	addwfc	tblptru,f,c
  8258  001B06                     	endif
  8259  001B06  0009               	tblrd		*+
  8260  001B08  CFF5 F015          	movff	tablat,___ftmul@f1
  8261  001B0C  0009               	tblrd		*+
  8262  001B0E  CFF5 F016          	movff	tablat,___ftmul@f1+1
  8263  001B12  000A               	tblrd		*-
  8264  001B14  CFF5 F017          	movff	tablat,___ftmul@f1+2
  8265  001B18  EC68  F010         	call	___ftmul	;wreg free
  8266  001B1C  C015  F02A         	movff	?___ftmul,_fround$1469
  8267  001B20  C016  F02B         	movff	?___ftmul+1,_fround$1469+1
  8268  001B24  C017  F02C         	movff	?___ftmul+2,_fround$1469+2
  8269                           
  8270                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8271  001B28  0E00               	movlw	0
  8272  001B2A  6E12               	movwf	___wmul@multiplicand+1,c
  8273  001B2C  0E03               	movlw	3
  8274  001B2E  6E11               	movwf	___wmul@multiplicand,c
  8275  001B30  0E00               	movlw	0
  8276  001B32  6E04               	movwf	___awmod@divisor+1,c
  8277  001B34  0E0A               	movlw	10
  8278  001B36  6E03               	movwf	___awmod@divisor,c
  8279  001B38  C02D  F001         	movff	fround@prec,___awmod@dividend
  8280  001B3C  6A02               	clrf	___awmod@dividend+1,c
  8281  001B3E  EC3B  F014         	call	___awmod	;wreg free
  8282  001B42  C001  F00F         	movff	?___awmod,___wmul@multiplier
  8283  001B46  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  8284  001B4A  EC0A  F016         	call	___wmul	;wreg free
  8285  001B4E  0EDE               	movlw	low __npowers_
  8286  001B50  240F               	addwf	?___wmul,w,c
  8287  001B52  6EF6               	movwf	tblptrl,c
  8288  001B54  0EFB               	movlw	high __npowers_
  8289  001B56  2010               	addwfc	?___wmul+1,w,c
  8290  001B58  6EF7               	movwf	tblptrh,c
  8291  001B5A                     	if	1	;There are 3 active tblptr bytes
  8292  001B5A  6AF8               	clrf	tblptru,c
  8293  001B5C  0E00               	movlw	low (__mediumconst shr (0+16))
  8294  001B5E  22F8               	addwfc	tblptru,f,c
  8295  001B60                     	endif
  8296  001B60  0009               	tblrd		*+
  8297  001B62  CFF5 F018          	movff	tablat,___ftmul@f2
  8298  001B66  0009               	tblrd		*+
  8299  001B68  CFF5 F019          	movff	tablat,___ftmul@f2+1
  8300  001B6C  000A               	tblrd		*-
  8301  001B6E  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  8302  001B72  C02A  F015         	movff	_fround$1469,___ftmul@f1
  8303  001B76  C02B  F016         	movff	_fround$1469+1,___ftmul@f1+1
  8304  001B7A  C02C  F017         	movff	_fround$1469+2,___ftmul@f1+2
  8305  001B7E  EC68  F010         	call	___ftmul	;wreg free
  8306  001B82  C015  F027         	movff	?___ftmul,_fround$1470
  8307  001B86  C016  F028         	movff	?___ftmul+1,_fround$1470+1
  8308  001B8A  C017  F029         	movff	?___ftmul+2,_fround$1470+2
  8309                           
  8310                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8311  001B8E  C027  F015         	movff	_fround$1470,___ftmul@f1
  8312  001B92  C028  F016         	movff	_fround$1470+1,___ftmul@f1+1
  8313  001B96  C029  F017         	movff	_fround$1470+2,___ftmul@f1+2
  8314  001B9A  0E00               	movlw	0
  8315  001B9C  6E18               	movwf	___ftmul@f2,c
  8316  001B9E  0E00               	movlw	0
  8317  001BA0  6E19               	movwf	___ftmul@f2+1,c
  8318  001BA2  0E3F               	movlw	63
  8319  001BA4  6E1A               	movwf	___ftmul@f2+2,c
  8320  001BA6  EC68  F010         	call	___ftmul	;wreg free
  8321  001BAA  C015  F024         	movff	?___ftmul,?_fround
  8322  001BAE  C016  F025         	movff	?___ftmul+1,?_fround+1
  8323  001BB2  C017  F026         	movff	?___ftmul+2,?_fround+2
  8324  001BB6  0012               	return	
  8325  001BB8                     i2l2614:
  8326                           
  8327                           ;doprnt.c: 415: else if(prec > 10)
  8328  001BB8  0E0A               	movlw	10
  8329  001BBA  642D               	cpfsgt	fround@prec,c
  8330  001BBC  D063               	goto	i2l2622
  8331                           
  8332                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8333  001BBE  0E00               	movlw	0
  8334  001BC0  6E12               	movwf	___wmul@multiplicand+1,c
  8335  001BC2  0E03               	movlw	3
  8336  001BC4  6E11               	movwf	___wmul@multiplicand,c
  8337  001BC6  0E00               	movlw	0
  8338  001BC8  6E04               	movwf	___awmod@divisor+1,c
  8339  001BCA  0E0A               	movlw	10
  8340  001BCC  6E03               	movwf	___awmod@divisor,c
  8341  001BCE  C02D  F001         	movff	fround@prec,___awmod@dividend
  8342  001BD2  6A02               	clrf	___awmod@dividend+1,c
  8343  001BD4  EC3B  F014         	call	___awmod	;wreg free
  8344  001BD8  C001  F00F         	movff	?___awmod,___wmul@multiplier
  8345  001BDC  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  8346  001BE0  EC0A  F016         	call	___wmul	;wreg free
  8347  001BE4  0EDE               	movlw	low __npowers_
  8348  001BE6  240F               	addwf	?___wmul,w,c
  8349  001BE8  6EF6               	movwf	tblptrl,c
  8350  001BEA  0EFB               	movlw	high __npowers_
  8351  001BEC  2010               	addwfc	?___wmul+1,w,c
  8352  001BEE  6EF7               	movwf	tblptrh,c
  8353  001BF0                     	if	1	;There are 3 active tblptr bytes
  8354  001BF0  6AF8               	clrf	tblptru,c
  8355  001BF2  0E00               	movlw	low (__mediumconst shr (0+16))
  8356  001BF4  22F8               	addwfc	tblptru,f,c
  8357  001BF6                     	endif
  8358  001BF6  0009               	tblrd		*+
  8359  001BF8  CFF5 F018          	movff	tablat,___ftmul@f2
  8360  001BFC  0009               	tblrd		*+
  8361  001BFE  CFF5 F019          	movff	tablat,___ftmul@f2+1
  8362  001C02  000A               	tblrd		*-
  8363  001C04  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  8364  001C08  0E00               	movlw	0
  8365  001C0A  6E0A               	movwf	___awdiv@divisor+1,c
  8366  001C0C  0E0A               	movlw	10
  8367  001C0E  6E09               	movwf	___awdiv@divisor,c
  8368  001C10  C02D  F007         	movff	fround@prec,___awdiv@dividend
  8369  001C14  6A08               	clrf	___awdiv@dividend+1,c
  8370  001C16  EC7F  F013         	call	___awdiv	;wreg free
  8371  001C1A  0E09               	movlw	9
  8372  001C1C  2407               	addwf	?___awdiv,w,c
  8373  001C1E  6E0F               	movwf	___wmul@multiplier,c
  8374  001C20  0E00               	movlw	0
  8375  001C22  2008               	addwfc	?___awdiv+1,w,c
  8376  001C24  6E10               	movwf	___wmul@multiplier+1,c
  8377  001C26  0E00               	movlw	0
  8378  001C28  6E12               	movwf	___wmul@multiplicand+1,c
  8379  001C2A  0E03               	movlw	3
  8380  001C2C  6E11               	movwf	___wmul@multiplicand,c
  8381  001C2E  EC0A  F016         	call	___wmul	;wreg free
  8382  001C32  0EDE               	movlw	low __npowers_
  8383  001C34  240F               	addwf	?___wmul,w,c
  8384  001C36  6EF6               	movwf	tblptrl,c
  8385  001C38  0EFB               	movlw	high __npowers_
  8386  001C3A  2010               	addwfc	?___wmul+1,w,c
  8387  001C3C  6EF7               	movwf	tblptrh,c
  8388  001C3E                     	if	1	;There are 3 active tblptr bytes
  8389  001C3E  6AF8               	clrf	tblptru,c
  8390  001C40  0E00               	movlw	low (__mediumconst shr (0+16))
  8391  001C42  22F8               	addwfc	tblptru,f,c
  8392  001C44                     	endif
  8393  001C44  0009               	tblrd		*+
  8394  001C46  CFF5 F015          	movff	tablat,___ftmul@f1
  8395  001C4A  0009               	tblrd		*+
  8396  001C4C  CFF5 F016          	movff	tablat,___ftmul@f1+1
  8397  001C50  000A               	tblrd		*-
  8398  001C52  CFF5 F017          	movff	tablat,___ftmul@f1+2
  8399  001C56  EC68  F010         	call	___ftmul	;wreg free
  8400  001C5A  C015  F02A         	movff	?___ftmul,_fround$1469
  8401  001C5E  C016  F02B         	movff	?___ftmul+1,_fround$1469+1
  8402  001C62  C017  F02C         	movff	?___ftmul+2,_fround$1469+2
  8403                           
  8404                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8405  001C66  C02A  F015         	movff	_fround$1469,___ftmul@f1
  8406  001C6A  C02B  F016         	movff	_fround$1469+1,___ftmul@f1+1
  8407  001C6E  C02C  F017         	movff	_fround$1469+2,___ftmul@f1+2
  8408  001C72  0E00               	movlw	0
  8409  001C74  6E18               	movwf	___ftmul@f2,c
  8410  001C76  0E00               	movlw	0
  8411  001C78  6E19               	movwf	___ftmul@f2+1,c
  8412  001C7A  0E3F               	movlw	63
  8413  001C7C  6E1A               	movwf	___ftmul@f2+2,c
  8414  001C7E  EC68  F010         	call	___ftmul	;wreg free
  8415  001C82  D793               	goto	L7
  8416  001C84                     i2l2622:
  8417                           
  8418                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8419  001C84  502D               	movf	fround@prec,w,c
  8420  001C86  0D03               	mullw	3
  8421  001C88  0EDE               	movlw	low __npowers_
  8422  001C8A  24F3               	addwf	prodl,w,c
  8423  001C8C  6EF6               	movwf	tblptrl,c
  8424  001C8E  0EFB               	movlw	high __npowers_
  8425  001C90  20F4               	addwfc	prodh,w,c
  8426  001C92  6EF7               	movwf	tblptrh,c
  8427  001C94                     	if	1	;There are 3 active tblptr bytes
  8428  001C94  6AF8               	clrf	tblptru,c
  8429  001C96  0E00               	movlw	low (__mediumconst shr (0+16))
  8430  001C98  22F8               	addwfc	tblptru,f,c
  8431  001C9A                     	endif
  8432  001C9A  0009               	tblrd		*+
  8433  001C9C  CFF5 F015          	movff	tablat,___ftmul@f1
  8434  001CA0  0009               	tblrd		*+
  8435  001CA2  CFF5 F016          	movff	tablat,___ftmul@f1+1
  8436  001CA6  000A               	tblrd		*-
  8437  001CA8  CFF5 F017          	movff	tablat,___ftmul@f1+2
  8438  001CAC  0E00               	movlw	0
  8439  001CAE  6E18               	movwf	___ftmul@f2,c
  8440  001CB0  0E00               	movlw	0
  8441  001CB2  6E19               	movwf	___ftmul@f2+1,c
  8442  001CB4  0E3F               	movlw	63
  8443  001CB6  6E1A               	movwf	___ftmul@f2+2,c
  8444  001CB8  EC68  F010         	call	___ftmul	;wreg free
  8445  001CBC  C015  F024         	movff	?___ftmul,?_fround
  8446  001CC0  C016  F025         	movff	?___ftmul+1,?_fround+1
  8447  001CC4  C017  F026         	movff	?___ftmul+2,?_fround+2
  8448  001CC8  0012               	return	
  8449  001CCA                     __end_of_fround:
  8450                           	opt stack 0
  8451                           pclatu	equ	0xFFB
  8452                           pclath	equ	0xFFA
  8453                           tblptru	equ	0xFF8
  8454                           tblptrh	equ	0xFF7
  8455                           tblptrl	equ	0xFF6
  8456                           tablat	equ	0xFF5
  8457                           prodh	equ	0xFF4
  8458                           prodl	equ	0xFF3
  8459                           intcon	equ	0xFF2
  8460                           indf0	equ	0xFEF
  8461                           postinc0	equ	0xFEE
  8462                           fsr0h	equ	0xFEA
  8463                           fsr0l	equ	0xFE9
  8464                           wreg	equ	0xFE8
  8465                           fsr1h	equ	0xFE2
  8466                           fsr1l	equ	0xFE1
  8467                           indf2	equ	0xFDF
  8468                           postinc2	equ	0xFDE
  8469                           postdec2	equ	0xFDD
  8470                           fsr2h	equ	0xFDA
  8471                           fsr2l	equ	0xFD9
  8472                           status	equ	0xFD8
  8473                           
  8474 ;; *************** function ___wmul *****************
  8475 ;; Defined at:
  8476 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  8477 ;; Parameters:    Size  Location     Type
  8478 ;;  multiplier      2   14[COMRAM] unsigned int 
  8479 ;;  multiplicand    2   16[COMRAM] unsigned int 
  8480 ;; Auto vars:     Size  Location     Type
  8481 ;;  product         2   18[COMRAM] unsigned int 
  8482 ;; Return value:  Size  Location     Type
  8483 ;;                  2   14[COMRAM] unsigned int 
  8484 ;; Registers used:
  8485 ;;		wreg, status,2, status,0, prodl, prodh
  8486 ;; Tracked objects:
  8487 ;;		On entry : 0/0
  8488 ;;		On exit  : 0/0
  8489 ;;		Unchanged: 0/0
  8490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8491 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8492 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8494 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8495 ;;Total ram usage:        6 bytes
  8496 ;; Hardware stack levels used:    1
  8497 ;; This function calls:
  8498 ;;		Nothing
  8499 ;; This function is called by:
  8500 ;;		_indexDoMenorValor
  8501 ;;		_tratamento
  8502 ;;		_fround
  8503 ;;		_scale
  8504 ;;		_sprintf
  8505 ;; This function uses a non-reentrant model
  8506 ;;
  8507                           
  8508                           	psect	text34
  8509  002C14                     __ptext34:
  8510                           	opt stack 0
  8511  002C14                     ___wmul:
  8512                           	opt stack 26
  8513                           
  8514                           ;incstack = 0
  8515  002C14  500F               	movf	___wmul@multiplier,w,c
  8516  002C16  0211               	mulwf	___wmul@multiplicand,c
  8517  002C18  CFF3 F013          	movff	prodl,___wmul@product
  8518  002C1C  CFF4 F014          	movff	prodh,___wmul@product+1
  8519  002C20  500F               	movf	___wmul@multiplier,w,c
  8520  002C22  0212               	mulwf	___wmul@multiplicand+1,c
  8521  002C24  50F3               	movf	prodl,w,c
  8522  002C26  2614               	addwf	___wmul@product+1,f,c
  8523  002C28  5010               	movf	___wmul@multiplier+1,w,c
  8524  002C2A  0211               	mulwf	___wmul@multiplicand,c
  8525  002C2C  50F3               	movf	prodl,w,c
  8526  002C2E  2614               	addwf	___wmul@product+1,f,c
  8527  002C30  C013  F00F         	movff	___wmul@product,?___wmul
  8528  002C34  C014  F010         	movff	___wmul@product+1,?___wmul+1
  8529  002C38  0012               	return	
  8530  002C3A                     __end_of___wmul:
  8531                           	opt stack 0
  8532                           pclatu	equ	0xFFB
  8533                           pclath	equ	0xFFA
  8534                           tblptru	equ	0xFF8
  8535                           tblptrh	equ	0xFF7
  8536                           tblptrl	equ	0xFF6
  8537                           tablat	equ	0xFF5
  8538                           prodh	equ	0xFF4
  8539                           prodl	equ	0xFF3
  8540                           intcon	equ	0xFF2
  8541                           indf0	equ	0xFEF
  8542                           postinc0	equ	0xFEE
  8543                           fsr0h	equ	0xFEA
  8544                           fsr0l	equ	0xFE9
  8545                           wreg	equ	0xFE8
  8546                           fsr1h	equ	0xFE2
  8547                           fsr1l	equ	0xFE1
  8548                           indf2	equ	0xFDF
  8549                           postinc2	equ	0xFDE
  8550                           postdec2	equ	0xFDD
  8551                           fsr2h	equ	0xFDA
  8552                           fsr2l	equ	0xFD9
  8553                           status	equ	0xFD8
  8554                           
  8555 ;; *************** function ___ftmul *****************
  8556 ;; Defined at:
  8557 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftmul.c"
  8558 ;; Parameters:    Size  Location     Type
  8559 ;;  f1              3   20[COMRAM] float 
  8560 ;;  f2              3   23[COMRAM] float 
  8561 ;; Auto vars:     Size  Location     Type
  8562 ;;  f3_as_produc    3   30[COMRAM] unsigned um
  8563 ;;  sign            1   34[COMRAM] unsigned char 
  8564 ;;  cntr            1   33[COMRAM] unsigned char 
  8565 ;;  exp             1   29[COMRAM] unsigned char 
  8566 ;; Return value:  Size  Location     Type
  8567 ;;                  3   20[COMRAM] float 
  8568 ;; Registers used:
  8569 ;;		wreg, status,2, status,0, cstack
  8570 ;; Tracked objects:
  8571 ;;		On entry : 0/0
  8572 ;;		On exit  : 0/0
  8573 ;;		Unchanged: 0/0
  8574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8575 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8576 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8577 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8578 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8579 ;;Total ram usage:       15 bytes
  8580 ;; Hardware stack levels used:    1
  8581 ;; Hardware stack levels required when called:    1
  8582 ;; This function calls:
  8583 ;;		___ftpack
  8584 ;; This function is called by:
  8585 ;;		_tratamento
  8586 ;;		_fround
  8587 ;;		_scale
  8588 ;;		_sprintf
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           	psect	text35
  8593  0020D0                     __ptext35:
  8594                           	opt stack 0
  8595  0020D0                     ___ftmul:
  8596                           	opt stack 23
  8597                           
  8598                           ;incstack = 0
  8599  0020D0  C017  F01B         	movff	___ftmul@f1+2,??___ftmul
  8600  0020D4  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  8601  0020D6  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  8602  0020D8  3416               	rlcf	___ftmul@f1+1,w,c
  8603  0020DA  361B               	rlcf	??___ftmul& (0+255),f,c
  8604  0020DC  E301               	bnc	u206_41
  8605  0020DE  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  8606  0020E0                     u206_41:
  8607  0020E0  501B               	movf	??___ftmul,w,c
  8608  0020E2  6E1E               	movwf	___ftmul@exp,c
  8609  0020E4  501E               	movf	___ftmul@exp,w,c
  8610  0020E6  A4D8               	btfss	status,2,c
  8611  0020E8  D007               	goto	i2l2482
  8612  0020EA  0E00               	movlw	0
  8613  0020EC  6E15               	movwf	?___ftmul,c
  8614  0020EE  0E00               	movlw	0
  8615  0020F0  6E16               	movwf	?___ftmul+1,c
  8616  0020F2  0E00               	movlw	0
  8617  0020F4  6E17               	movwf	?___ftmul+2,c
  8618  0020F6  0012               	return	
  8619  0020F8                     i2l2482:
  8620  0020F8  C01A  F01B         	movff	___ftmul@f2+2,??___ftmul
  8621  0020FC  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  8622  0020FE  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  8623  002100  3419               	rlcf	___ftmul@f2+1,w,c
  8624  002102  361B               	rlcf	??___ftmul& (0+255),f,c
  8625  002104  E301               	bnc	u208_41
  8626  002106  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  8627  002108                     u208_41:
  8628  002108  501B               	movf	??___ftmul,w,c
  8629  00210A  6E23               	movwf	___ftmul@sign,c
  8630  00210C  5023               	movf	___ftmul@sign,w,c
  8631  00210E  A4D8               	btfss	status,2,c
  8632  002110  D007               	goto	i2l2488
  8633  002112  0E00               	movlw	0
  8634  002114  6E15               	movwf	?___ftmul,c
  8635  002116  0E00               	movlw	0
  8636  002118  6E16               	movwf	?___ftmul+1,c
  8637  00211A  0E00               	movlw	0
  8638  00211C  6E17               	movwf	?___ftmul+2,c
  8639  00211E  0012               	return	
  8640  002120                     i2l2488:
  8641  002120  5023               	movf	___ftmul@sign,w,c
  8642  002122  0F7B               	addlw	123
  8643  002124  261E               	addwf	___ftmul@exp,f,c
  8644  002126  C017  F023         	movff	___ftmul@f1+2,___ftmul@sign
  8645  00212A  501A               	movf	___ftmul@f2+2,w,c
  8646  00212C  1A23               	xorwf	___ftmul@sign,f,c
  8647  00212E  0E80               	movlw	128
  8648  002130  1623               	andwf	___ftmul@sign,f,c
  8649  002132  8E16               	bsf	___ftmul@f1+1,7,c
  8650  002134  8E19               	bsf	___ftmul@f2+1,7,c
  8651  002136  0EFF               	movlw	255
  8652  002138  1618               	andwf	___ftmul@f2,f,c
  8653  00213A  0EFF               	movlw	255
  8654  00213C  1619               	andwf	___ftmul@f2+1,f,c
  8655  00213E  0E00               	movlw	0
  8656  002140  161A               	andwf	___ftmul@f2+2,f,c
  8657  002142  0E00               	movlw	0
  8658  002144  6E1F               	movwf	___ftmul@f3_as_product,c
  8659  002146  0E00               	movlw	0
  8660  002148  6E20               	movwf	___ftmul@f3_as_product+1,c
  8661  00214A  0E00               	movlw	0
  8662  00214C  6E21               	movwf	___ftmul@f3_as_product+2,c
  8663  00214E  0E07               	movlw	7
  8664  002150  6E22               	movwf	___ftmul@cntr,c
  8665  002152                     i2l2502:
  8666  002152  A015               	btfss	___ftmul@f1,0,c
  8667  002154  D006               	goto	i2l2506
  8668  002156  5018               	movf	___ftmul@f2,w,c
  8669  002158  261F               	addwf	___ftmul@f3_as_product,f,c
  8670  00215A  5019               	movf	___ftmul@f2+1,w,c
  8671  00215C  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  8672  00215E  501A               	movf	___ftmul@f2+2,w,c
  8673  002160  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  8674  002162                     i2l2506:
  8675  002162  90D8               	bcf	status,0,c
  8676  002164  3217               	rrcf	___ftmul@f1+2,f,c
  8677  002166  3216               	rrcf	___ftmul@f1+1,f,c
  8678  002168  3215               	rrcf	___ftmul@f1,f,c
  8679  00216A  90D8               	bcf	status,0,c
  8680  00216C  3618               	rlcf	___ftmul@f2,f,c
  8681  00216E  3619               	rlcf	___ftmul@f2+1,f,c
  8682  002170  361A               	rlcf	___ftmul@f2+2,f,c
  8683  002172  2E22               	decfsz	___ftmul@cntr,f,c
  8684  002174  D7EE               	goto	i2l2502
  8685  002176  0E09               	movlw	9
  8686  002178  6E22               	movwf	___ftmul@cntr,c
  8687  00217A                     i2l2512:
  8688  00217A  A015               	btfss	___ftmul@f1,0,c
  8689  00217C  D006               	goto	i2l2516
  8690  00217E  5018               	movf	___ftmul@f2,w,c
  8691  002180  261F               	addwf	___ftmul@f3_as_product,f,c
  8692  002182  5019               	movf	___ftmul@f2+1,w,c
  8693  002184  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  8694  002186  501A               	movf	___ftmul@f2+2,w,c
  8695  002188  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  8696  00218A                     i2l2516:
  8697  00218A  90D8               	bcf	status,0,c
  8698  00218C  3217               	rrcf	___ftmul@f1+2,f,c
  8699  00218E  3216               	rrcf	___ftmul@f1+1,f,c
  8700  002190  3215               	rrcf	___ftmul@f1,f,c
  8701  002192  90D8               	bcf	status,0,c
  8702  002194  3221               	rrcf	___ftmul@f3_as_product+2,f,c
  8703  002196  3220               	rrcf	___ftmul@f3_as_product+1,f,c
  8704  002198  321F               	rrcf	___ftmul@f3_as_product,f,c
  8705  00219A  2E22               	decfsz	___ftmul@cntr,f,c
  8706  00219C  D7EE               	goto	i2l2512
  8707  00219E  C01F  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  8708  0021A2  C020  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  8709  0021A6  C021  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  8710  0021AA  C01E  F004         	movff	___ftmul@exp,___ftpack@exp
  8711  0021AE  C023  F005         	movff	___ftmul@sign,___ftpack@sign
  8712  0021B2  EC47  F012         	call	___ftpack	;wreg free
  8713  0021B6  C001  F015         	movff	?___ftpack,?___ftmul
  8714  0021BA  C002  F016         	movff	?___ftpack+1,?___ftmul+1
  8715  0021BE  C003  F017         	movff	?___ftpack+2,?___ftmul+2
  8716  0021C2  0012               	return	
  8717  0021C4                     __end_of___ftmul:
  8718                           	opt stack 0
  8719                           pclatu	equ	0xFFB
  8720                           pclath	equ	0xFFA
  8721                           tblptru	equ	0xFF8
  8722                           tblptrh	equ	0xFF7
  8723                           tblptrl	equ	0xFF6
  8724                           tablat	equ	0xFF5
  8725                           prodh	equ	0xFF4
  8726                           prodl	equ	0xFF3
  8727                           intcon	equ	0xFF2
  8728                           indf0	equ	0xFEF
  8729                           postinc0	equ	0xFEE
  8730                           fsr0h	equ	0xFEA
  8731                           fsr0l	equ	0xFE9
  8732                           wreg	equ	0xFE8
  8733                           fsr1h	equ	0xFE2
  8734                           fsr1l	equ	0xFE1
  8735                           indf2	equ	0xFDF
  8736                           postinc2	equ	0xFDE
  8737                           postdec2	equ	0xFDD
  8738                           fsr2h	equ	0xFDA
  8739                           fsr2l	equ	0xFD9
  8740                           status	equ	0xFD8
  8741                           
  8742 ;; *************** function ___awmod *****************
  8743 ;; Defined at:
  8744 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awmod.c"
  8745 ;; Parameters:    Size  Location     Type
  8746 ;;  dividend        2    0[COMRAM] int 
  8747 ;;  divisor         2    2[COMRAM] int 
  8748 ;; Auto vars:     Size  Location     Type
  8749 ;;  sign            1    5[COMRAM] unsigned char 
  8750 ;;  counter         1    4[COMRAM] unsigned char 
  8751 ;; Return value:  Size  Location     Type
  8752 ;;                  2    0[COMRAM] int 
  8753 ;; Registers used:
  8754 ;;		wreg, status,2, status,0
  8755 ;; Tracked objects:
  8756 ;;		On entry : 0/0
  8757 ;;		On exit  : 0/0
  8758 ;;		Unchanged: 0/0
  8759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8760 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8761 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8763 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8764 ;;Total ram usage:        6 bytes
  8765 ;; Hardware stack levels used:    1
  8766 ;; This function calls:
  8767 ;;		Nothing
  8768 ;; This function is called by:
  8769 ;;		_fround
  8770 ;;		_scale
  8771 ;; This function uses a non-reentrant model
  8772 ;;
  8773                           
  8774                           	psect	text36
  8775  002876                     __ptext36:
  8776                           	opt stack 0
  8777  002876                     ___awmod:
  8778                           	opt stack 24
  8779                           
  8780                           ;incstack = 0
  8781  002876  0E00               	movlw	0
  8782  002878  6E06               	movwf	___awmod@sign,c
  8783  00287A  AE02               	btfss	___awmod@dividend+1,7,c
  8784  00287C  D006               	goto	i2l2576
  8785  00287E  6C01               	negf	___awmod@dividend,c
  8786  002880  1E02               	comf	___awmod@dividend+1,f,c
  8787  002882  B0D8               	btfsc	status,0,c
  8788  002884  2A02               	incf	___awmod@dividend+1,f,c
  8789  002886  0E01               	movlw	1
  8790  002888  6E06               	movwf	___awmod@sign,c
  8791  00288A                     i2l2576:
  8792  00288A  AE04               	btfss	___awmod@divisor+1,7,c
  8793  00288C  D004               	goto	i2l2580
  8794  00288E  6C03               	negf	___awmod@divisor,c
  8795  002890  1E04               	comf	___awmod@divisor+1,f,c
  8796  002892  B0D8               	btfsc	status,0,c
  8797  002894  2A04               	incf	___awmod@divisor+1,f,c
  8798  002896                     i2l2580:
  8799  002896  5003               	movf	___awmod@divisor,w,c
  8800  002898  1004               	iorwf	___awmod@divisor+1,w,c
  8801  00289A  B4D8               	btfsc	status,2,c
  8802  00289C  D018               	goto	i2l2596
  8803  00289E  0E01               	movlw	1
  8804  0028A0  6E05               	movwf	___awmod@counter,c
  8805  0028A2  D004               	goto	i2l2586
  8806  0028A4                     i2l2584:
  8807  0028A4  90D8               	bcf	status,0,c
  8808  0028A6  3603               	rlcf	___awmod@divisor,f,c
  8809  0028A8  3604               	rlcf	___awmod@divisor+1,f,c
  8810  0028AA  2A05               	incf	___awmod@counter,f,c
  8811  0028AC                     i2l2586:
  8812  0028AC  AE04               	btfss	___awmod@divisor+1,7,c
  8813  0028AE  D7FA               	goto	i2l2584
  8814  0028B0                     i2l2588:
  8815  0028B0  5003               	movf	___awmod@divisor,w,c
  8816  0028B2  5C01               	subwf	___awmod@dividend,w,c
  8817  0028B4  5004               	movf	___awmod@divisor+1,w,c
  8818  0028B6  5802               	subwfb	___awmod@dividend+1,w,c
  8819  0028B8  A0D8               	btfss	status,0,c
  8820  0028BA  D004               	goto	i2l2592
  8821  0028BC  5003               	movf	___awmod@divisor,w,c
  8822  0028BE  5E01               	subwf	___awmod@dividend,f,c
  8823  0028C0  5004               	movf	___awmod@divisor+1,w,c
  8824  0028C2  5A02               	subwfb	___awmod@dividend+1,f,c
  8825  0028C4                     i2l2592:
  8826  0028C4  90D8               	bcf	status,0,c
  8827  0028C6  3204               	rrcf	___awmod@divisor+1,f,c
  8828  0028C8  3203               	rrcf	___awmod@divisor,f,c
  8829  0028CA  2E05               	decfsz	___awmod@counter,f,c
  8830  0028CC  D7F1               	goto	i2l2588
  8831  0028CE                     i2l2596:
  8832  0028CE  5006               	movf	___awmod@sign,w,c
  8833  0028D0  B4D8               	btfsc	status,2,c
  8834  0028D2  D004               	goto	i2l2600
  8835  0028D4  6C01               	negf	___awmod@dividend,c
  8836  0028D6  1E02               	comf	___awmod@dividend+1,f,c
  8837  0028D8  B0D8               	btfsc	status,0,c
  8838  0028DA  2A02               	incf	___awmod@dividend+1,f,c
  8839  0028DC                     i2l2600:
  8840  0028DC  C001  F001         	movff	___awmod@dividend,?___awmod
  8841  0028E0  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  8842  0028E4  0012               	return	
  8843  0028E6                     __end_of___awmod:
  8844                           	opt stack 0
  8845                           pclatu	equ	0xFFB
  8846                           pclath	equ	0xFFA
  8847                           tblptru	equ	0xFF8
  8848                           tblptrh	equ	0xFF7
  8849                           tblptrl	equ	0xFF6
  8850                           tablat	equ	0xFF5
  8851                           prodh	equ	0xFF4
  8852                           prodl	equ	0xFF3
  8853                           intcon	equ	0xFF2
  8854                           indf0	equ	0xFEF
  8855                           postinc0	equ	0xFEE
  8856                           fsr0h	equ	0xFEA
  8857                           fsr0l	equ	0xFE9
  8858                           wreg	equ	0xFE8
  8859                           fsr1h	equ	0xFE2
  8860                           fsr1l	equ	0xFE1
  8861                           indf2	equ	0xFDF
  8862                           postinc2	equ	0xFDE
  8863                           postdec2	equ	0xFDD
  8864                           fsr2h	equ	0xFDA
  8865                           fsr2l	equ	0xFD9
  8866                           status	equ	0xFD8
  8867                           
  8868 ;; *************** function ___awdiv *****************
  8869 ;; Defined at:
  8870 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
  8871 ;; Parameters:    Size  Location     Type
  8872 ;;  dividend        2    6[COMRAM] int 
  8873 ;;  divisor         2    8[COMRAM] int 
  8874 ;; Auto vars:     Size  Location     Type
  8875 ;;  quotient        2   12[COMRAM] int 
  8876 ;;  sign            1   11[COMRAM] unsigned char 
  8877 ;;  counter         1   10[COMRAM] unsigned char 
  8878 ;; Return value:  Size  Location     Type
  8879 ;;                  2    6[COMRAM] int 
  8880 ;; Registers used:
  8881 ;;		wreg, status,2, status,0
  8882 ;; Tracked objects:
  8883 ;;		On entry : 0/0
  8884 ;;		On exit  : 0/0
  8885 ;;		Unchanged: 0/0
  8886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8887 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8888 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8890 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8891 ;;Total ram usage:        8 bytes
  8892 ;; Hardware stack levels used:    1
  8893 ;; This function calls:
  8894 ;;		Nothing
  8895 ;; This function is called by:
  8896 ;;		_fround
  8897 ;;		_scale
  8898 ;;		_sprintf
  8899 ;; This function uses a non-reentrant model
  8900 ;;
  8901                           
  8902                           	psect	text37
  8903  0026FE                     __ptext37:
  8904                           	opt stack 0
  8905  0026FE                     ___awdiv:
  8906                           	opt stack 24
  8907                           
  8908                           ;incstack = 0
  8909  0026FE  0E00               	movlw	0
  8910  002700  6E0C               	movwf	___awdiv@sign,c
  8911  002702  AE0A               	btfss	___awdiv@divisor+1,7,c
  8912  002704  D006               	goto	i2l2532
  8913  002706  6C09               	negf	___awdiv@divisor,c
  8914  002708  1E0A               	comf	___awdiv@divisor+1,f,c
  8915  00270A  B0D8               	btfsc	status,0,c
  8916  00270C  2A0A               	incf	___awdiv@divisor+1,f,c
  8917  00270E  0E01               	movlw	1
  8918  002710  6E0C               	movwf	___awdiv@sign,c
  8919  002712                     i2l2532:
  8920  002712  AE08               	btfss	___awdiv@dividend+1,7,c
  8921  002714  D006               	goto	i2l2538
  8922  002716  6C07               	negf	___awdiv@dividend,c
  8923  002718  1E08               	comf	___awdiv@dividend+1,f,c
  8924  00271A  B0D8               	btfsc	status,0,c
  8925  00271C  2A08               	incf	___awdiv@dividend+1,f,c
  8926  00271E  0E01               	movlw	1
  8927  002720  1A0C               	xorwf	___awdiv@sign,f,c
  8928  002722                     i2l2538:
  8929  002722  0E00               	movlw	0
  8930  002724  6E0E               	movwf	___awdiv@quotient+1,c
  8931  002726  0E00               	movlw	0
  8932  002728  6E0D               	movwf	___awdiv@quotient,c
  8933  00272A  5009               	movf	___awdiv@divisor,w,c
  8934  00272C  100A               	iorwf	___awdiv@divisor+1,w,c
  8935  00272E  B4D8               	btfsc	status,2,c
  8936  002730  D01C               	goto	i2l2560
  8937  002732  0E01               	movlw	1
  8938  002734  6E0B               	movwf	___awdiv@counter,c
  8939  002736  D004               	goto	i2l2546
  8940  002738                     i2l2544:
  8941  002738  90D8               	bcf	status,0,c
  8942  00273A  3609               	rlcf	___awdiv@divisor,f,c
  8943  00273C  360A               	rlcf	___awdiv@divisor+1,f,c
  8944  00273E  2A0B               	incf	___awdiv@counter,f,c
  8945  002740                     i2l2546:
  8946  002740  AE0A               	btfss	___awdiv@divisor+1,7,c
  8947  002742  D7FA               	goto	i2l2544
  8948  002744                     i2l2548:
  8949  002744  90D8               	bcf	status,0,c
  8950  002746  360D               	rlcf	___awdiv@quotient,f,c
  8951  002748  360E               	rlcf	___awdiv@quotient+1,f,c
  8952  00274A  5009               	movf	___awdiv@divisor,w,c
  8953  00274C  5C07               	subwf	___awdiv@dividend,w,c
  8954  00274E  500A               	movf	___awdiv@divisor+1,w,c
  8955  002750  5808               	subwfb	___awdiv@dividend+1,w,c
  8956  002752  A0D8               	btfss	status,0,c
  8957  002754  D005               	goto	i2l2556
  8958  002756  5009               	movf	___awdiv@divisor,w,c
  8959  002758  5E07               	subwf	___awdiv@dividend,f,c
  8960  00275A  500A               	movf	___awdiv@divisor+1,w,c
  8961  00275C  5A08               	subwfb	___awdiv@dividend+1,f,c
  8962  00275E  800D               	bsf	___awdiv@quotient,0,c
  8963  002760                     i2l2556:
  8964  002760  90D8               	bcf	status,0,c
  8965  002762  320A               	rrcf	___awdiv@divisor+1,f,c
  8966  002764  3209               	rrcf	___awdiv@divisor,f,c
  8967  002766  2E0B               	decfsz	___awdiv@counter,f,c
  8968  002768  D7ED               	goto	i2l2548
  8969  00276A                     i2l2560:
  8970  00276A  500C               	movf	___awdiv@sign,w,c
  8971  00276C  B4D8               	btfsc	status,2,c
  8972  00276E  D004               	goto	i2l2564
  8973  002770  6C0D               	negf	___awdiv@quotient,c
  8974  002772  1E0E               	comf	___awdiv@quotient+1,f,c
  8975  002774  B0D8               	btfsc	status,0,c
  8976  002776  2A0E               	incf	___awdiv@quotient+1,f,c
  8977  002778                     i2l2564:
  8978  002778  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  8979  00277C  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  8980  002780  0012               	return	
  8981  002782                     __end_of___awdiv:
  8982                           	opt stack 0
  8983                           pclatu	equ	0xFFB
  8984                           pclath	equ	0xFFA
  8985                           tblptru	equ	0xFF8
  8986                           tblptrh	equ	0xFF7
  8987                           tblptrl	equ	0xFF6
  8988                           tablat	equ	0xFF5
  8989                           prodh	equ	0xFF4
  8990                           prodl	equ	0xFF3
  8991                           intcon	equ	0xFF2
  8992                           indf0	equ	0xFEF
  8993                           postinc0	equ	0xFEE
  8994                           fsr0h	equ	0xFEA
  8995                           fsr0l	equ	0xFE9
  8996                           wreg	equ	0xFE8
  8997                           fsr1h	equ	0xFE2
  8998                           fsr1l	equ	0xFE1
  8999                           indf2	equ	0xFDF
  9000                           postinc2	equ	0xFDE
  9001                           postdec2	equ	0xFDD
  9002                           fsr2h	equ	0xFDA
  9003                           fsr2l	equ	0xFD9
  9004                           status	equ	0xFD8
  9005                           
  9006 ;; *************** function __tdiv_to_l_ *****************
  9007 ;; Defined at:
  9008 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftdivl.c"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;  f1              3    0[COMRAM] float 
  9011 ;;  f2              3    3[COMRAM] float 
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;  quot            4    9[COMRAM] unsigned long 
  9014 ;;  exp1            1   14[COMRAM] unsigned char 
  9015 ;;  cntr            1   13[COMRAM] unsigned char 
  9016 ;; Return value:  Size  Location     Type
  9017 ;;                  4    0[COMRAM] unsigned long 
  9018 ;; Registers used:
  9019 ;;		wreg, status,2, status,0
  9020 ;; Tracked objects:
  9021 ;;		On entry : 0/0
  9022 ;;		On exit  : 0/0
  9023 ;;		Unchanged: 0/0
  9024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9025 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9026 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9027 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9028 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9029 ;;Total ram usage:       15 bytes
  9030 ;; Hardware stack levels used:    1
  9031 ;; This function calls:
  9032 ;;		Nothing
  9033 ;; This function is called by:
  9034 ;;		_sprintf
  9035 ;; This function uses a non-reentrant model
  9036 ;;
  9037                           
  9038                           	psect	text38
  9039  001E76                     __ptext38:
  9040                           	opt stack 0
  9041  001E76                     __tdiv_to_l_:
  9042                           	opt stack 25
  9043                           
  9044                           ;incstack = 0
  9045  001E76  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9046  001E7A  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  9047  001E7C  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  9048  001E7E  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  9049  001E80  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  9050  001E82  E301               	bnc	u231_41
  9051  001E84  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  9052  001E86                     u231_41:
  9053  001E86  5007               	movf	??__tdiv_to_l_,w,c
  9054  001E88  6E0F               	movwf	__tdiv_to_l_@exp1,c
  9055  001E8A  500F               	movf	__tdiv_to_l_@exp1,w,c
  9056  001E8C  A4D8               	btfss	status,2,c
  9057  001E8E  D009               	goto	i2l2670
  9058  001E90  0E00               	movlw	0
  9059  001E92  6E01               	movwf	?__tdiv_to_l_,c
  9060  001E94  0E00               	movlw	0
  9061  001E96  6E02               	movwf	?__tdiv_to_l_+1,c
  9062  001E98  0E00               	movlw	0
  9063  001E9A  6E03               	movwf	?__tdiv_to_l_+2,c
  9064  001E9C  0E00               	movlw	0
  9065  001E9E  6E04               	movwf	?__tdiv_to_l_+3,c
  9066  001EA0  0012               	return	
  9067  001EA2                     i2l2670:
  9068  001EA2  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9069  001EA6  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  9070  001EA8  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  9071  001EAA  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  9072  001EAC  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  9073  001EAE  E301               	bnc	u233_41
  9074  001EB0  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  9075  001EB2                     u233_41:
  9076  001EB2  5007               	movf	??__tdiv_to_l_,w,c
  9077  001EB4  6E0E               	movwf	__tdiv_to_l_@cntr,c
  9078  001EB6  500E               	movf	__tdiv_to_l_@cntr,w,c
  9079  001EB8  A4D8               	btfss	status,2,c
  9080  001EBA  D009               	goto	i2l2676
  9081  001EBC  0E00               	movlw	0
  9082  001EBE  6E01               	movwf	?__tdiv_to_l_,c
  9083  001EC0  0E00               	movlw	0
  9084  001EC2  6E02               	movwf	?__tdiv_to_l_+1,c
  9085  001EC4  0E00               	movlw	0
  9086  001EC6  6E03               	movwf	?__tdiv_to_l_+2,c
  9087  001EC8  0E00               	movlw	0
  9088  001ECA  6E04               	movwf	?__tdiv_to_l_+3,c
  9089  001ECC  0012               	return	
  9090  001ECE                     i2l2676:
  9091  001ECE  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  9092  001ED0  0EFF               	movlw	255
  9093  001ED2  1601               	andwf	__tdiv_to_l_@f1,f,c
  9094  001ED4  0EFF               	movlw	255
  9095  001ED6  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  9096  001ED8  0E00               	movlw	0
  9097  001EDA  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  9098  001EDC  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  9099  001EDE  0EFF               	movlw	255
  9100  001EE0  1604               	andwf	__tdiv_to_l_@f2,f,c
  9101  001EE2  0EFF               	movlw	255
  9102  001EE4  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  9103  001EE6  0E00               	movlw	0
  9104  001EE8  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  9105  001EEA  0E00               	movlw	0
  9106  001EEC  6E0A               	movwf	__tdiv_to_l_@quot,c
  9107  001EEE  0E00               	movlw	0
  9108  001EF0  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  9109  001EF2  0E00               	movlw	0
  9110  001EF4  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  9111  001EF6  0E00               	movlw	0
  9112  001EF8  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  9113  001EFA  0E7F               	movlw	127
  9114  001EFC  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  9115  001EFE  500E               	movf	__tdiv_to_l_@cntr,w,c
  9116  001F00  0F98               	addlw	152
  9117  001F02  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  9118  001F04  0E18               	movlw	24
  9119  001F06  6E0E               	movwf	__tdiv_to_l_@cntr,c
  9120  001F08                     i2l620:
  9121  001F08  90D8               	bcf	status,0,c
  9122  001F0A  360A               	rlcf	__tdiv_to_l_@quot,f,c
  9123  001F0C  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  9124  001F0E  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  9125  001F10  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  9126  001F12  5004               	movf	__tdiv_to_l_@f2,w,c
  9127  001F14  5C01               	subwf	__tdiv_to_l_@f1,w,c
  9128  001F16  5005               	movf	__tdiv_to_l_@f2+1,w,c
  9129  001F18  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  9130  001F1A  5006               	movf	__tdiv_to_l_@f2+2,w,c
  9131  001F1C  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  9132  001F1E  A0D8               	btfss	status,0,c
  9133  001F20  D007               	goto	i2l621
  9134  001F22  5004               	movf	__tdiv_to_l_@f2,w,c
  9135  001F24  5E01               	subwf	__tdiv_to_l_@f1,f,c
  9136  001F26  5005               	movf	__tdiv_to_l_@f2+1,w,c
  9137  001F28  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  9138  001F2A  5006               	movf	__tdiv_to_l_@f2+2,w,c
  9139  001F2C  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  9140  001F2E  800A               	bsf	__tdiv_to_l_@quot,0,c
  9141  001F30                     i2l621:
  9142  001F30  90D8               	bcf	status,0,c
  9143  001F32  3601               	rlcf	__tdiv_to_l_@f1,f,c
  9144  001F34  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  9145  001F36  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  9146  001F38  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  9147  001F3A  D7E6               	goto	i2l620
  9148  001F3C  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  9149  001F3E  D016               	goto	i2l2710
  9150  001F40  500F               	movf	__tdiv_to_l_@exp1,w,c
  9151  001F42  0A80               	xorlw	128
  9152  001F44  0F97               	addlw	151
  9153  001F46  B0D8               	btfsc	status,0,c
  9154  001F48  D009               	goto	i2l2706
  9155  001F4A  0E00               	movlw	0
  9156  001F4C  6E01               	movwf	?__tdiv_to_l_,c
  9157  001F4E  0E00               	movlw	0
  9158  001F50  6E02               	movwf	?__tdiv_to_l_+1,c
  9159  001F52  0E00               	movlw	0
  9160  001F54  6E03               	movwf	?__tdiv_to_l_+2,c
  9161  001F56  0E00               	movlw	0
  9162  001F58  6E04               	movwf	?__tdiv_to_l_+3,c
  9163  001F5A  0012               	return	
  9164  001F5C                     i2l2706:
  9165  001F5C  90D8               	bcf	status,0,c
  9166  001F5E  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  9167  001F60  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  9168  001F62  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  9169  001F64  320A               	rrcf	__tdiv_to_l_@quot,f,c
  9170  001F66  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  9171  001F68  D7F9               	goto	i2l2706
  9172  001F6A  D015               	goto	i2l627
  9173  001F6C                     i2l2710:
  9174  001F6C  0E17               	movlw	23
  9175  001F6E  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  9176  001F70  D00F               	goto	i2l2718
  9177  001F72  0E00               	movlw	0
  9178  001F74  6E01               	movwf	?__tdiv_to_l_,c
  9179  001F76  0E00               	movlw	0
  9180  001F78  6E02               	movwf	?__tdiv_to_l_+1,c
  9181  001F7A  0E00               	movlw	0
  9182  001F7C  6E03               	movwf	?__tdiv_to_l_+2,c
  9183  001F7E  0E00               	movlw	0
  9184  001F80  6E04               	movwf	?__tdiv_to_l_+3,c
  9185  001F82  0012               	return	
  9186  001F84                     i2l2716:
  9187  001F84  90D8               	bcf	status,0,c
  9188  001F86  360A               	rlcf	__tdiv_to_l_@quot,f,c
  9189  001F88  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  9190  001F8A  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  9191  001F8C  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  9192  001F8E  060F               	decf	__tdiv_to_l_@exp1,f,c
  9193  001F90                     i2l2718:
  9194  001F90  500F               	movf	__tdiv_to_l_@exp1,w,c
  9195  001F92  A4D8               	btfss	status,2,c
  9196  001F94  D7F7               	goto	i2l2716
  9197  001F96                     i2l627:
  9198  001F96  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  9199  001F9A  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  9200  001F9E  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  9201  001FA2  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  9202  001FA6  0012               	return		;funcret
  9203  001FA8                     __end_of__tdiv_to_l_:
  9204                           	opt stack 0
  9205                           pclatu	equ	0xFFB
  9206                           pclath	equ	0xFFA
  9207                           tblptru	equ	0xFF8
  9208                           tblptrh	equ	0xFF7
  9209                           tblptrl	equ	0xFF6
  9210                           tablat	equ	0xFF5
  9211                           prodh	equ	0xFF4
  9212                           prodl	equ	0xFF3
  9213                           intcon	equ	0xFF2
  9214                           indf0	equ	0xFEF
  9215                           postinc0	equ	0xFEE
  9216                           fsr0h	equ	0xFEA
  9217                           fsr0l	equ	0xFE9
  9218                           wreg	equ	0xFE8
  9219                           fsr1h	equ	0xFE2
  9220                           fsr1l	equ	0xFE1
  9221                           indf2	equ	0xFDF
  9222                           postinc2	equ	0xFDE
  9223                           postdec2	equ	0xFDD
  9224                           fsr2h	equ	0xFDA
  9225                           fsr2l	equ	0xFD9
  9226                           status	equ	0xFD8
  9227                           
  9228 ;; *************** function __div_to_l_ *****************
  9229 ;; Defined at:
  9230 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fldivl.c"
  9231 ;; Parameters:    Size  Location     Type
  9232 ;;  f1              3    0[COMRAM] unsigned long 
  9233 ;;  f2              3    3[COMRAM] unsigned long 
  9234 ;; Auto vars:     Size  Location     Type
  9235 ;;  quot            4    6[COMRAM] unsigned long 
  9236 ;;  exp1            1   11[COMRAM] unsigned char 
  9237 ;;  cntr            1   10[COMRAM] unsigned char 
  9238 ;; Return value:  Size  Location     Type
  9239 ;;                  4    0[COMRAM] unsigned long 
  9240 ;; Registers used:
  9241 ;;		wreg, status,2, status,0
  9242 ;; Tracked objects:
  9243 ;;		On entry : 0/0
  9244 ;;		On exit  : 0/0
  9245 ;;		Unchanged: 0/0
  9246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9247 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9248 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9250 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9251 ;;Total ram usage:       12 bytes
  9252 ;; Hardware stack levels used:    1
  9253 ;; This function calls:
  9254 ;;		Nothing
  9255 ;; This function is called by:
  9256 ;;		_sprintf
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           
  9260                           	psect	text39
  9261  001FA8                     __ptext39:
  9262                           	opt stack 0
  9263  001FA8                     __div_to_l_:
  9264                           	opt stack 25
  9265                           
  9266                           ;incstack = 0
  9267  001FA8  3403               	rlcf	__div_to_l_@f1+2,w,c
  9268  001FAA  3404               	rlcf	__div_to_l_@f1+3,w,c
  9269  001FAC  6E0C               	movwf	__div_to_l_@exp1,c
  9270  001FAE  500C               	movf	__div_to_l_@exp1,w,c
  9271  001FB0  A4D8               	btfss	status,2,c
  9272  001FB2  D009               	goto	i2l2726
  9273  001FB4  0E00               	movlw	0
  9274  001FB6  6E01               	movwf	?__div_to_l_,c
  9275  001FB8  0E00               	movlw	0
  9276  001FBA  6E02               	movwf	?__div_to_l_+1,c
  9277  001FBC  0E00               	movlw	0
  9278  001FBE  6E03               	movwf	?__div_to_l_+2,c
  9279  001FC0  0E00               	movlw	0
  9280  001FC2  6E04               	movwf	?__div_to_l_+3,c
  9281  001FC4  0012               	return	
  9282  001FC6                     i2l2726:
  9283  001FC6  3406               	rlcf	__div_to_l_@f2+2,w,c
  9284  001FC8  3407               	rlcf	__div_to_l_@f2+3,w,c
  9285  001FCA  6E0B               	movwf	__div_to_l_@cntr,c
  9286  001FCC  500B               	movf	__div_to_l_@cntr,w,c
  9287  001FCE  A4D8               	btfss	status,2,c
  9288  001FD0  D009               	goto	i2l2732
  9289  001FD2  0E00               	movlw	0
  9290  001FD4  6E01               	movwf	?__div_to_l_,c
  9291  001FD6  0E00               	movlw	0
  9292  001FD8  6E02               	movwf	?__div_to_l_+1,c
  9293  001FDA  0E00               	movlw	0
  9294  001FDC  6E03               	movwf	?__div_to_l_+2,c
  9295  001FDE  0E00               	movlw	0
  9296  001FE0  6E04               	movwf	?__div_to_l_+3,c
  9297  001FE2  0012               	return	
  9298  001FE4                     i2l2732:
  9299  001FE4  8E03               	bsf	__div_to_l_@f1+2,7,c
  9300  001FE6  0EFF               	movlw	255
  9301  001FE8  1601               	andwf	__div_to_l_@f1,f,c
  9302  001FEA  0EFF               	movlw	255
  9303  001FEC  1602               	andwf	__div_to_l_@f1+1,f,c
  9304  001FEE  0EFF               	movlw	255
  9305  001FF0  1603               	andwf	__div_to_l_@f1+2,f,c
  9306  001FF2  0E00               	movlw	0
  9307  001FF4  1604               	andwf	__div_to_l_@f1+3,f,c
  9308  001FF6  8E06               	bsf	__div_to_l_@f2+2,7,c
  9309  001FF8  0EFF               	movlw	255
  9310  001FFA  1604               	andwf	__div_to_l_@f2,f,c
  9311  001FFC  0EFF               	movlw	255
  9312  001FFE  1605               	andwf	__div_to_l_@f2+1,f,c
  9313  002000  0EFF               	movlw	255
  9314  002002  1606               	andwf	__div_to_l_@f2+2,f,c
  9315  002004  0E00               	movlw	0
  9316  002006  1607               	andwf	__div_to_l_@f2+3,f,c
  9317  002008  0E00               	movlw	0
  9318  00200A  6E07               	movwf	__div_to_l_@quot,c
  9319  00200C  0E00               	movlw	0
  9320  00200E  6E08               	movwf	__div_to_l_@quot+1,c
  9321  002010  0E00               	movlw	0
  9322  002012  6E09               	movwf	__div_to_l_@quot+2,c
  9323  002014  0E00               	movlw	0
  9324  002016  6E0A               	movwf	__div_to_l_@quot+3,c
  9325  002018  0E7F               	movlw	127
  9326  00201A  5E0C               	subwf	__div_to_l_@exp1,f,c
  9327  00201C  500B               	movf	__div_to_l_@cntr,w,c
  9328  00201E  0FA0               	addlw	160
  9329  002020  5E0C               	subwf	__div_to_l_@exp1,f,c
  9330  002022  0E20               	movlw	32
  9331  002024  6E0B               	movwf	__div_to_l_@cntr,c
  9332  002026                     i2l2746:
  9333  002026  90D8               	bcf	status,0,c
  9334  002028  3607               	rlcf	__div_to_l_@quot,f,c
  9335  00202A  3608               	rlcf	__div_to_l_@quot+1,f,c
  9336  00202C  3609               	rlcf	__div_to_l_@quot+2,f,c
  9337  00202E  360A               	rlcf	__div_to_l_@quot+3,f,c
  9338  002030  5004               	movf	__div_to_l_@f2,w,c
  9339  002032  5C01               	subwf	__div_to_l_@f1,w,c
  9340  002034  5005               	movf	__div_to_l_@f2+1,w,c
  9341  002036  5802               	subwfb	__div_to_l_@f1+1,w,c
  9342  002038  5006               	movf	__div_to_l_@f2+2,w,c
  9343  00203A  5803               	subwfb	__div_to_l_@f1+2,w,c
  9344  00203C  5007               	movf	__div_to_l_@f2+3,w,c
  9345  00203E  5804               	subwfb	__div_to_l_@f1+3,w,c
  9346  002040  A0D8               	btfss	status,0,c
  9347  002042  D009               	goto	i2l2754
  9348  002044  5004               	movf	__div_to_l_@f2,w,c
  9349  002046  5E01               	subwf	__div_to_l_@f1,f,c
  9350  002048  5005               	movf	__div_to_l_@f2+1,w,c
  9351  00204A  5A02               	subwfb	__div_to_l_@f1+1,f,c
  9352  00204C  5006               	movf	__div_to_l_@f2+2,w,c
  9353  00204E  5A03               	subwfb	__div_to_l_@f1+2,f,c
  9354  002050  5007               	movf	__div_to_l_@f2+3,w,c
  9355  002052  5A04               	subwfb	__div_to_l_@f1+3,f,c
  9356  002054  8007               	bsf	__div_to_l_@quot,0,c
  9357  002056                     i2l2754:
  9358  002056  90D8               	bcf	status,0,c
  9359  002058  3601               	rlcf	__div_to_l_@f1,f,c
  9360  00205A  3602               	rlcf	__div_to_l_@f1+1,f,c
  9361  00205C  3603               	rlcf	__div_to_l_@f1+2,f,c
  9362  00205E  3604               	rlcf	__div_to_l_@f1+3,f,c
  9363  002060  2E0B               	decfsz	__div_to_l_@cntr,f,c
  9364  002062  D7E1               	goto	i2l2746
  9365  002064  AE0C               	btfss	__div_to_l_@exp1,7,c
  9366  002066  D016               	goto	i2l2770
  9367  002068  500C               	movf	__div_to_l_@exp1,w,c
  9368  00206A  0A80               	xorlw	128
  9369  00206C  0F9F               	addlw	159
  9370  00206E  B0D8               	btfsc	status,0,c
  9371  002070  D009               	goto	i2l2766
  9372  002072  0E00               	movlw	0
  9373  002074  6E01               	movwf	?__div_to_l_,c
  9374  002076  0E00               	movlw	0
  9375  002078  6E02               	movwf	?__div_to_l_+1,c
  9376  00207A  0E00               	movlw	0
  9377  00207C  6E03               	movwf	?__div_to_l_+2,c
  9378  00207E  0E00               	movlw	0
  9379  002080  6E04               	movwf	?__div_to_l_+3,c
  9380  002082  0012               	return	
  9381  002084                     i2l2766:
  9382  002084  90D8               	bcf	status,0,c
  9383  002086  320A               	rrcf	__div_to_l_@quot+3,f,c
  9384  002088  3209               	rrcf	__div_to_l_@quot+2,f,c
  9385  00208A  3208               	rrcf	__div_to_l_@quot+1,f,c
  9386  00208C  3207               	rrcf	__div_to_l_@quot,f,c
  9387  00208E  3E0C               	incfsz	__div_to_l_@exp1,f,c
  9388  002090  D7F9               	goto	i2l2766
  9389  002092  D015               	goto	i2l523
  9390  002094                     i2l2770:
  9391  002094  0E1F               	movlw	31
  9392  002096  640C               	cpfsgt	__div_to_l_@exp1,c
  9393  002098  D00F               	goto	i2l2778
  9394  00209A  0E00               	movlw	0
  9395  00209C  6E01               	movwf	?__div_to_l_,c
  9396  00209E  0E00               	movlw	0
  9397  0020A0  6E02               	movwf	?__div_to_l_+1,c
  9398  0020A2  0E00               	movlw	0
  9399  0020A4  6E03               	movwf	?__div_to_l_+2,c
  9400  0020A6  0E00               	movlw	0
  9401  0020A8  6E04               	movwf	?__div_to_l_+3,c
  9402  0020AA  0012               	return	
  9403  0020AC                     i2l2776:
  9404  0020AC  90D8               	bcf	status,0,c
  9405  0020AE  3607               	rlcf	__div_to_l_@quot,f,c
  9406  0020B0  3608               	rlcf	__div_to_l_@quot+1,f,c
  9407  0020B2  3609               	rlcf	__div_to_l_@quot+2,f,c
  9408  0020B4  360A               	rlcf	__div_to_l_@quot+3,f,c
  9409  0020B6  060C               	decf	__div_to_l_@exp1,f,c
  9410  0020B8                     i2l2778:
  9411  0020B8  500C               	movf	__div_to_l_@exp1,w,c
  9412  0020BA  A4D8               	btfss	status,2,c
  9413  0020BC  D7F7               	goto	i2l2776
  9414  0020BE                     i2l523:
  9415  0020BE  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  9416  0020C2  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  9417  0020C6  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  9418  0020CA  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  9419  0020CE  0012               	return		;funcret
  9420  0020D0                     __end_of__div_to_l_:
  9421                           	opt stack 0
  9422                           pclatu	equ	0xFFB
  9423                           pclath	equ	0xFFA
  9424                           tblptru	equ	0xFF8
  9425                           tblptrh	equ	0xFF7
  9426                           tblptrl	equ	0xFF6
  9427                           tablat	equ	0xFF5
  9428                           prodh	equ	0xFF4
  9429                           prodl	equ	0xFF3
  9430                           intcon	equ	0xFF2
  9431                           indf0	equ	0xFEF
  9432                           postinc0	equ	0xFEE
  9433                           fsr0h	equ	0xFEA
  9434                           fsr0l	equ	0xFE9
  9435                           wreg	equ	0xFE8
  9436                           fsr1h	equ	0xFE2
  9437                           fsr1l	equ	0xFE1
  9438                           indf2	equ	0xFDF
  9439                           postinc2	equ	0xFDE
  9440                           postdec2	equ	0xFDD
  9441                           fsr2h	equ	0xFDA
  9442                           fsr2l	equ	0xFD9
  9443                           status	equ	0xFD8
  9444                           
  9445 ;; *************** function ___lltoft *****************
  9446 ;; Defined at:
  9447 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lltoft.c"
  9448 ;; Parameters:    Size  Location     Type
  9449 ;;  c               4    8[COMRAM] unsigned long 
  9450 ;; Auto vars:     Size  Location     Type
  9451 ;;  exp             1   16[COMRAM] unsigned char 
  9452 ;; Return value:  Size  Location     Type
  9453 ;;                  3    8[COMRAM] float 
  9454 ;; Registers used:
  9455 ;;		wreg, status,2, status,0, cstack
  9456 ;; Tracked objects:
  9457 ;;		On entry : 0/0
  9458 ;;		On exit  : 0/0
  9459 ;;		Unchanged: 0/0
  9460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9461 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9462 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9463 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9464 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9465 ;;Total ram usage:        9 bytes
  9466 ;; Hardware stack levels used:    1
  9467 ;; Hardware stack levels required when called:    1
  9468 ;; This function calls:
  9469 ;;		___ftpack
  9470 ;; This function is called by:
  9471 ;;		_sprintf
  9472 ;; This function uses a non-reentrant model
  9473 ;;
  9474                           
  9475                           	psect	text40
  9476  0029A8                     __ptext40:
  9477                           	opt stack 0
  9478  0029A8                     ___lltoft:
  9479                           	opt stack 24
  9480                           
  9481                           ;incstack = 0
  9482  0029A8  0E8E               	movlw	142
  9483  0029AA  6E11               	movwf	___lltoft@exp,c
  9484  0029AC  D006               	goto	i2l2898
  9485  0029AE                     i2l2896:
  9486  0029AE  90D8               	bcf	status,0,c
  9487  0029B0  320C               	rrcf	___lltoft@c+3,f,c
  9488  0029B2  320B               	rrcf	___lltoft@c+2,f,c
  9489  0029B4  320A               	rrcf	___lltoft@c+1,f,c
  9490  0029B6  3209               	rrcf	___lltoft@c,f,c
  9491  0029B8  2A11               	incf	___lltoft@exp,f,c
  9492  0029BA                     i2l2898:
  9493  0029BA  0E00               	movlw	0
  9494  0029BC  1409               	andwf	___lltoft@c,w,c
  9495  0029BE  6E0D               	movwf	??___lltoft& (0+255),c
  9496  0029C0  0E00               	movlw	0
  9497  0029C2  140A               	andwf	___lltoft@c+1,w,c
  9498  0029C4  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  9499  0029C6  0E00               	movlw	0
  9500  0029C8  140B               	andwf	___lltoft@c+2,w,c
  9501  0029CA  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  9502  0029CC  0EFF               	movlw	255
  9503  0029CE  140C               	andwf	___lltoft@c+3,w,c
  9504  0029D0  6E10               	movwf	(??___lltoft+3)& (0+255),c
  9505  0029D2  500D               	movf	??___lltoft,w,c
  9506  0029D4  100E               	iorwf	??___lltoft+1,w,c
  9507  0029D6  100F               	iorwf	??___lltoft+2,w,c
  9508  0029D8  1010               	iorwf	??___lltoft+3,w,c
  9509  0029DA  A4D8               	btfss	status,2,c
  9510  0029DC  D7E8               	goto	i2l2896
  9511  0029DE  C009  F001         	movff	___lltoft@c,___ftpack@arg
  9512  0029E2  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  9513  0029E6  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  9514  0029EA  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  9515  0029EE  0E00               	movlw	0
  9516  0029F0  6E05               	movwf	___ftpack@sign,c
  9517  0029F2  EC47  F012         	call	___ftpack	;wreg free
  9518  0029F6  C001  F009         	movff	?___ftpack,?___lltoft
  9519  0029FA  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  9520  0029FE  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  9521  002A02  0012               	return	
  9522  002A04                     __end_of___lltoft:
  9523                           	opt stack 0
  9524                           pclatu	equ	0xFFB
  9525                           pclath	equ	0xFFA
  9526                           tblptru	equ	0xFF8
  9527                           tblptrh	equ	0xFF7
  9528                           tblptrl	equ	0xFF6
  9529                           tablat	equ	0xFF5
  9530                           prodh	equ	0xFF4
  9531                           prodl	equ	0xFF3
  9532                           intcon	equ	0xFF2
  9533                           indf0	equ	0xFEF
  9534                           postinc0	equ	0xFEE
  9535                           fsr0h	equ	0xFEA
  9536                           fsr0l	equ	0xFE9
  9537                           wreg	equ	0xFE8
  9538                           fsr1h	equ	0xFE2
  9539                           fsr1l	equ	0xFE1
  9540                           indf2	equ	0xFDF
  9541                           postinc2	equ	0xFDE
  9542                           postdec2	equ	0xFDD
  9543                           fsr2h	equ	0xFDA
  9544                           fsr2l	equ	0xFD9
  9545                           status	equ	0xFD8
  9546                           
  9547 ;; *************** function ___llmod *****************
  9548 ;; Defined at:
  9549 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\llmod.c"
  9550 ;; Parameters:    Size  Location     Type
  9551 ;;  dividend        4   13[COMRAM] unsigned long 
  9552 ;;  divisor         4   17[COMRAM] unsigned long 
  9553 ;; Auto vars:     Size  Location     Type
  9554 ;;  counter         1   21[COMRAM] unsigned char 
  9555 ;; Return value:  Size  Location     Type
  9556 ;;                  4   13[COMRAM] unsigned long 
  9557 ;; Registers used:
  9558 ;;		wreg, status,2, status,0
  9559 ;; Tracked objects:
  9560 ;;		On entry : 0/0
  9561 ;;		On exit  : 0/0
  9562 ;;		Unchanged: 0/0
  9563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9564 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9567 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9568 ;;Total ram usage:        9 bytes
  9569 ;; Hardware stack levels used:    1
  9570 ;; This function calls:
  9571 ;;		Nothing
  9572 ;; This function is called by:
  9573 ;;		_sprintf
  9574 ;; This function uses a non-reentrant model
  9575 ;;
  9576                           
  9577                           	psect	text41
  9578  0028E6                     __ptext41:
  9579                           	opt stack 0
  9580  0028E6                     ___llmod:
  9581                           	opt stack 25
  9582                           
  9583                           ;incstack = 0
  9584  0028E6  5012               	movf	___llmod@divisor,w,c
  9585  0028E8  1013               	iorwf	___llmod@divisor+1,w,c
  9586  0028EA  1014               	iorwf	___llmod@divisor+2,w,c
  9587  0028EC  1015               	iorwf	___llmod@divisor+3,w,c
  9588  0028EE  B4D8               	btfsc	status,2,c
  9589  0028F0  D024               	goto	i2l712
  9590  0028F2  0E01               	movlw	1
  9591  0028F4  6E16               	movwf	___llmod@counter,c
  9592  0028F6  D006               	goto	i2l2884
  9593  0028F8                     i2l2882:
  9594  0028F8  90D8               	bcf	status,0,c
  9595  0028FA  3612               	rlcf	___llmod@divisor,f,c
  9596  0028FC  3613               	rlcf	___llmod@divisor+1,f,c
  9597  0028FE  3614               	rlcf	___llmod@divisor+2,f,c
  9598  002900  3615               	rlcf	___llmod@divisor+3,f,c
  9599  002902  2A16               	incf	___llmod@counter,f,c
  9600  002904                     i2l2884:
  9601  002904  AE15               	btfss	___llmod@divisor+3,7,c
  9602  002906  D7F8               	goto	i2l2882
  9603  002908                     i2l2886:
  9604  002908  5012               	movf	___llmod@divisor,w,c
  9605  00290A  5C0E               	subwf	___llmod@dividend,w,c
  9606  00290C  5013               	movf	___llmod@divisor+1,w,c
  9607  00290E  580F               	subwfb	___llmod@dividend+1,w,c
  9608  002910  5014               	movf	___llmod@divisor+2,w,c
  9609  002912  5810               	subwfb	___llmod@dividend+2,w,c
  9610  002914  5015               	movf	___llmod@divisor+3,w,c
  9611  002916  5811               	subwfb	___llmod@dividend+3,w,c
  9612  002918  A0D8               	btfss	status,0,c
  9613  00291A  D008               	goto	i2l2890
  9614  00291C  5012               	movf	___llmod@divisor,w,c
  9615  00291E  5E0E               	subwf	___llmod@dividend,f,c
  9616  002920  5013               	movf	___llmod@divisor+1,w,c
  9617  002922  5A0F               	subwfb	___llmod@dividend+1,f,c
  9618  002924  5014               	movf	___llmod@divisor+2,w,c
  9619  002926  5A10               	subwfb	___llmod@dividend+2,f,c
  9620  002928  5015               	movf	___llmod@divisor+3,w,c
  9621  00292A  5A11               	subwfb	___llmod@dividend+3,f,c
  9622  00292C                     i2l2890:
  9623  00292C  90D8               	bcf	status,0,c
  9624  00292E  3215               	rrcf	___llmod@divisor+3,f,c
  9625  002930  3214               	rrcf	___llmod@divisor+2,f,c
  9626  002932  3213               	rrcf	___llmod@divisor+1,f,c
  9627  002934  3212               	rrcf	___llmod@divisor,f,c
  9628  002936  2E16               	decfsz	___llmod@counter,f,c
  9629  002938  D7E7               	goto	i2l2886
  9630  00293A                     i2l712:
  9631  00293A  C00E  F00E         	movff	___llmod@dividend,?___llmod
  9632  00293E  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  9633  002942  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  9634  002946  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  9635  00294A  0012               	return		;funcret
  9636  00294C                     __end_of___llmod:
  9637                           	opt stack 0
  9638                           pclatu	equ	0xFFB
  9639                           pclath	equ	0xFFA
  9640                           tblptru	equ	0xFF8
  9641                           tblptrh	equ	0xFF7
  9642                           tblptrl	equ	0xFF6
  9643                           tablat	equ	0xFF5
  9644                           prodh	equ	0xFF4
  9645                           prodl	equ	0xFF3
  9646                           intcon	equ	0xFF2
  9647                           indf0	equ	0xFEF
  9648                           postinc0	equ	0xFEE
  9649                           fsr0h	equ	0xFEA
  9650                           fsr0l	equ	0xFE9
  9651                           wreg	equ	0xFE8
  9652                           fsr1h	equ	0xFE2
  9653                           fsr1l	equ	0xFE1
  9654                           indf2	equ	0xFDF
  9655                           postinc2	equ	0xFDE
  9656                           postdec2	equ	0xFDD
  9657                           fsr2h	equ	0xFDA
  9658                           fsr2l	equ	0xFD9
  9659                           status	equ	0xFD8
  9660                           
  9661 ;; *************** function ___lldiv *****************
  9662 ;; Defined at:
  9663 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lldiv.c"
  9664 ;; Parameters:    Size  Location     Type
  9665 ;;  dividend        4    0[COMRAM] unsigned long 
  9666 ;;  divisor         4    4[COMRAM] unsigned long 
  9667 ;; Auto vars:     Size  Location     Type
  9668 ;;  quotient        4    8[COMRAM] unsigned long 
  9669 ;;  counter         1   12[COMRAM] unsigned char 
  9670 ;; Return value:  Size  Location     Type
  9671 ;;                  4    0[COMRAM] unsigned long 
  9672 ;; Registers used:
  9673 ;;		wreg, status,2, status,0
  9674 ;; Tracked objects:
  9675 ;;		On entry : 0/0
  9676 ;;		On exit  : 0/0
  9677 ;;		Unchanged: 0/0
  9678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9679 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9680 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9682 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9683 ;;Total ram usage:       13 bytes
  9684 ;; Hardware stack levels used:    1
  9685 ;; This function calls:
  9686 ;;		Nothing
  9687 ;; This function is called by:
  9688 ;;		_sprintf
  9689 ;; This function uses a non-reentrant model
  9690 ;;
  9691                           
  9692                           	psect	text42
  9693  002782                     __ptext42:
  9694                           	opt stack 0
  9695  002782                     ___lldiv:
  9696                           	opt stack 25
  9697                           
  9698                           ;incstack = 0
  9699  002782  0E00               	movlw	0
  9700  002784  6E09               	movwf	___lldiv@quotient,c
  9701  002786  0E00               	movlw	0
  9702  002788  6E0A               	movwf	___lldiv@quotient+1,c
  9703  00278A  0E00               	movlw	0
  9704  00278C  6E0B               	movwf	___lldiv@quotient+2,c
  9705  00278E  0E00               	movlw	0
  9706  002790  6E0C               	movwf	___lldiv@quotient+3,c
  9707  002792  5005               	movf	___lldiv@divisor,w,c
  9708  002794  1006               	iorwf	___lldiv@divisor+1,w,c
  9709  002796  1007               	iorwf	___lldiv@divisor+2,w,c
  9710  002798  1008               	iorwf	___lldiv@divisor+3,w,c
  9711  00279A  B4D8               	btfsc	status,2,c
  9712  00279C  D02A               	goto	i2l702
  9713  00279E  0E01               	movlw	1
  9714  0027A0  6E0D               	movwf	___lldiv@counter,c
  9715  0027A2  D006               	goto	i2l2864
  9716  0027A4                     i2l2862:
  9717  0027A4  90D8               	bcf	status,0,c
  9718  0027A6  3605               	rlcf	___lldiv@divisor,f,c
  9719  0027A8  3606               	rlcf	___lldiv@divisor+1,f,c
  9720  0027AA  3607               	rlcf	___lldiv@divisor+2,f,c
  9721  0027AC  3608               	rlcf	___lldiv@divisor+3,f,c
  9722  0027AE  2A0D               	incf	___lldiv@counter,f,c
  9723  0027B0                     i2l2864:
  9724  0027B0  AE08               	btfss	___lldiv@divisor+3,7,c
  9725  0027B2  D7F8               	goto	i2l2862
  9726  0027B4                     i2l2866:
  9727  0027B4  90D8               	bcf	status,0,c
  9728  0027B6  3609               	rlcf	___lldiv@quotient,f,c
  9729  0027B8  360A               	rlcf	___lldiv@quotient+1,f,c
  9730  0027BA  360B               	rlcf	___lldiv@quotient+2,f,c
  9731  0027BC  360C               	rlcf	___lldiv@quotient+3,f,c
  9732  0027BE  5005               	movf	___lldiv@divisor,w,c
  9733  0027C0  5C01               	subwf	___lldiv@dividend,w,c
  9734  0027C2  5006               	movf	___lldiv@divisor+1,w,c
  9735  0027C4  5802               	subwfb	___lldiv@dividend+1,w,c
  9736  0027C6  5007               	movf	___lldiv@divisor+2,w,c
  9737  0027C8  5803               	subwfb	___lldiv@dividend+2,w,c
  9738  0027CA  5008               	movf	___lldiv@divisor+3,w,c
  9739  0027CC  5804               	subwfb	___lldiv@dividend+3,w,c
  9740  0027CE  A0D8               	btfss	status,0,c
  9741  0027D0  D009               	goto	i2l2874
  9742  0027D2  5005               	movf	___lldiv@divisor,w,c
  9743  0027D4  5E01               	subwf	___lldiv@dividend,f,c
  9744  0027D6  5006               	movf	___lldiv@divisor+1,w,c
  9745  0027D8  5A02               	subwfb	___lldiv@dividend+1,f,c
  9746  0027DA  5007               	movf	___lldiv@divisor+2,w,c
  9747  0027DC  5A03               	subwfb	___lldiv@dividend+2,f,c
  9748  0027DE  5008               	movf	___lldiv@divisor+3,w,c
  9749  0027E0  5A04               	subwfb	___lldiv@dividend+3,f,c
  9750  0027E2  8009               	bsf	___lldiv@quotient,0,c
  9751  0027E4                     i2l2874:
  9752  0027E4  90D8               	bcf	status,0,c
  9753  0027E6  3208               	rrcf	___lldiv@divisor+3,f,c
  9754  0027E8  3207               	rrcf	___lldiv@divisor+2,f,c
  9755  0027EA  3206               	rrcf	___lldiv@divisor+1,f,c
  9756  0027EC  3205               	rrcf	___lldiv@divisor,f,c
  9757  0027EE  2E0D               	decfsz	___lldiv@counter,f,c
  9758  0027F0  D7E1               	goto	i2l2866
  9759  0027F2                     i2l702:
  9760  0027F2  C009  F001         	movff	___lldiv@quotient,?___lldiv
  9761  0027F6  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  9762  0027FA  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  9763  0027FE  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  9764  002802  0012               	return		;funcret
  9765  002804                     __end_of___lldiv:
  9766                           	opt stack 0
  9767                           pclatu	equ	0xFFB
  9768                           pclath	equ	0xFFA
  9769                           tblptru	equ	0xFF8
  9770                           tblptrh	equ	0xFF7
  9771                           tblptrl	equ	0xFF6
  9772                           tablat	equ	0xFF5
  9773                           prodh	equ	0xFF4
  9774                           prodl	equ	0xFF3
  9775                           intcon	equ	0xFF2
  9776                           indf0	equ	0xFEF
  9777                           postinc0	equ	0xFEE
  9778                           fsr0h	equ	0xFEA
  9779                           fsr0l	equ	0xFE9
  9780                           wreg	equ	0xFE8
  9781                           fsr1h	equ	0xFE2
  9782                           fsr1l	equ	0xFE1
  9783                           indf2	equ	0xFDF
  9784                           postinc2	equ	0xFDE
  9785                           postdec2	equ	0xFDD
  9786                           fsr2h	equ	0xFDA
  9787                           fsr2l	equ	0xFD9
  9788                           status	equ	0xFD8
  9789                           
  9790 ;; *************** function ___fttol *****************
  9791 ;; Defined at:
  9792 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
  9793 ;; Parameters:    Size  Location     Type
  9794 ;;  f1              3   35[COMRAM] float 
  9795 ;; Auto vars:     Size  Location     Type
  9796 ;;  lval            4   45[COMRAM] unsigned long 
  9797 ;;  exp1            1   49[COMRAM] unsigned char 
  9798 ;;  sign1           1   44[COMRAM] unsigned char 
  9799 ;; Return value:  Size  Location     Type
  9800 ;;                  4   35[COMRAM] long 
  9801 ;; Registers used:
  9802 ;;		wreg, status,2, status,0
  9803 ;; Tracked objects:
  9804 ;;		On entry : 0/0
  9805 ;;		On exit  : 0/0
  9806 ;;		Unchanged: 0/0
  9807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9808 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9809 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9810 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9811 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9812 ;;Total ram usage:       15 bytes
  9813 ;; Hardware stack levels used:    1
  9814 ;; This function calls:
  9815 ;;		Nothing
  9816 ;; This function is called by:
  9817 ;;		_sprintf
  9818 ;; This function uses a non-reentrant model
  9819 ;;
  9820                           
  9821                           	psect	text43
  9822  0021C4                     __ptext43:
  9823                           	opt stack 0
  9824  0021C4                     ___fttol:
  9825                           	opt stack 25
  9826                           
  9827                           ;incstack = 0
  9828  0021C4  C026  F028         	movff	___fttol@f1+2,??___fttol
  9829  0021C8  6A29               	clrf	(??___fttol+1)& (0+255),c
  9830  0021CA  6A2A               	clrf	(??___fttol+2)& (0+255),c
  9831  0021CC  3425               	rlcf	___fttol@f1+1,w,c
  9832  0021CE  3628               	rlcf	??___fttol& (0+255),f,c
  9833  0021D0  E301               	bnc	u252_41
  9834  0021D2  8029               	bsf	(??___fttol+1)& (0+255),0,c
  9835  0021D4                     u252_41:
  9836  0021D4  5028               	movf	??___fttol,w,c
  9837  0021D6  6E32               	movwf	___fttol@exp1,c
  9838  0021D8  5032               	movf	___fttol@exp1,w,c
  9839  0021DA  A4D8               	btfss	status,2,c
  9840  0021DC  D009               	goto	i2l2816
  9841  0021DE  0E00               	movlw	0
  9842  0021E0  6E24               	movwf	?___fttol,c
  9843  0021E2  0E00               	movlw	0
  9844  0021E4  6E25               	movwf	?___fttol+1,c
  9845  0021E6  0E00               	movlw	0
  9846  0021E8  6E26               	movwf	?___fttol+2,c
  9847  0021EA  0E00               	movlw	0
  9848  0021EC  6E27               	movwf	?___fttol+3,c
  9849  0021EE  0012               	return	
  9850  0021F0                     i2l2816:
  9851  0021F0  0E17               	movlw	23
  9852  0021F2  6E28               	movwf	??___fttol& (0+255),c
  9853  0021F4  C024  F029         	movff	___fttol@f1,??___fttol+1
  9854  0021F8  C025  F02A         	movff	___fttol@f1+1,??___fttol+2
  9855  0021FC  C026  F02B         	movff	___fttol@f1+2,??___fttol+3
  9856  002200  2828               	incf	??___fttol,w,c
  9857  002202  6E2C               	movwf	(??___fttol+4)& (0+255),c
  9858  002204  D004               	goto	i2u254_40
  9859  002206                     i2u254_45:
  9860  002206  90D8               	bcf	status,0,c
  9861  002208  322B               	rrcf	??___fttol+3,f,c
  9862  00220A  322A               	rrcf	??___fttol+2,f,c
  9863  00220C  3229               	rrcf	??___fttol+1,f,c
  9864  00220E                     i2u254_40:
  9865  00220E  2E2C               	decfsz	(??___fttol+4)& (0+255),f,c
  9866  002210  D7FA               	goto	i2u254_45
  9867  002212  5029               	movf	??___fttol+1,w,c
  9868  002214  6E2D               	movwf	___fttol@sign1,c
  9869  002216  8E25               	bsf	___fttol@f1+1,7,c
  9870  002218  0EFF               	movlw	255
  9871  00221A  1624               	andwf	___fttol@f1,f,c
  9872  00221C  0EFF               	movlw	255
  9873  00221E  1625               	andwf	___fttol@f1+1,f,c
  9874  002220  0E00               	movlw	0
  9875  002222  1626               	andwf	___fttol@f1+2,f,c
  9876  002224  5024               	movf	___fttol@f1,w,c
  9877  002226  6E2E               	movwf	___fttol@lval,c
  9878  002228  5025               	movf	___fttol@f1+1,w,c
  9879  00222A  6E2F               	movwf	___fttol@lval+1,c
  9880  00222C  5026               	movf	___fttol@f1+2,w,c
  9881  00222E  6E30               	movwf	___fttol@lval+2,c
  9882  002230  6A31               	clrf	___fttol@lval+3,c
  9883  002232  0E8E               	movlw	142
  9884  002234  5E32               	subwf	___fttol@exp1,f,c
  9885  002236  AE32               	btfss	___fttol@exp1,7,c
  9886  002238  D016               	goto	i2l2838
  9887  00223A  5032               	movf	___fttol@exp1,w,c
  9888  00223C  0A80               	xorlw	128
  9889  00223E  0F8F               	addlw	143
  9890  002240  B0D8               	btfsc	status,0,c
  9891  002242  D009               	goto	i2l2834
  9892  002244  0E00               	movlw	0
  9893  002246  6E24               	movwf	?___fttol,c
  9894  002248  0E00               	movlw	0
  9895  00224A  6E25               	movwf	?___fttol+1,c
  9896  00224C  0E00               	movlw	0
  9897  00224E  6E26               	movwf	?___fttol+2,c
  9898  002250  0E00               	movlw	0
  9899  002252  6E27               	movwf	?___fttol+3,c
  9900  002254  0012               	return	
  9901  002256                     i2l2834:
  9902  002256  90D8               	bcf	status,0,c
  9903  002258  3231               	rrcf	___fttol@lval+3,f,c
  9904  00225A  3230               	rrcf	___fttol@lval+2,f,c
  9905  00225C  322F               	rrcf	___fttol@lval+1,f,c
  9906  00225E  322E               	rrcf	___fttol@lval,f,c
  9907  002260  3E32               	incfsz	___fttol@exp1,f,c
  9908  002262  D7F9               	goto	i2l2834
  9909  002264  D015               	goto	i2l2848
  9910  002266                     i2l2838:
  9911  002266  0E17               	movlw	23
  9912  002268  6432               	cpfsgt	___fttol@exp1,c
  9913  00226A  D00F               	goto	i2l2846
  9914  00226C  0E00               	movlw	0
  9915  00226E  6E24               	movwf	?___fttol,c
  9916  002270  0E00               	movlw	0
  9917  002272  6E25               	movwf	?___fttol+1,c
  9918  002274  0E00               	movlw	0
  9919  002276  6E26               	movwf	?___fttol+2,c
  9920  002278  0E00               	movlw	0
  9921  00227A  6E27               	movwf	?___fttol+3,c
  9922  00227C  0012               	return	
  9923  00227E                     i2l2844:
  9924  00227E  90D8               	bcf	status,0,c
  9925  002280  362E               	rlcf	___fttol@lval,f,c
  9926  002282  362F               	rlcf	___fttol@lval+1,f,c
  9927  002284  3630               	rlcf	___fttol@lval+2,f,c
  9928  002286  3631               	rlcf	___fttol@lval+3,f,c
  9929  002288  0632               	decf	___fttol@exp1,f,c
  9930  00228A                     i2l2846:
  9931  00228A  5032               	movf	___fttol@exp1,w,c
  9932  00228C  A4D8               	btfss	status,2,c
  9933  00228E  D7F7               	goto	i2l2844
  9934  002290                     i2l2848:
  9935  002290  502D               	movf	___fttol@sign1,w,c
  9936  002292  B4D8               	btfsc	status,2,c
  9937  002294  D008               	goto	i2l2852
  9938  002296  1E31               	comf	___fttol@lval+3,f,c
  9939  002298  1E30               	comf	___fttol@lval+2,f,c
  9940  00229A  1E2F               	comf	___fttol@lval+1,f,c
  9941  00229C  6C2E               	negf	___fttol@lval,c
  9942  00229E  0E00               	movlw	0
  9943  0022A0  222F               	addwfc	___fttol@lval+1,f,c
  9944  0022A2  2230               	addwfc	___fttol@lval+2,f,c
  9945  0022A4  2231               	addwfc	___fttol@lval+3,f,c
  9946  0022A6                     i2l2852:
  9947  0022A6  C02E  F024         	movff	___fttol@lval,?___fttol
  9948  0022AA  C02F  F025         	movff	___fttol@lval+1,?___fttol+1
  9949  0022AE  C030  F026         	movff	___fttol@lval+2,?___fttol+2
  9950  0022B2  C031  F027         	movff	___fttol@lval+3,?___fttol+3
  9951  0022B6  0012               	return	
  9952  0022B8                     __end_of___fttol:
  9953                           	opt stack 0
  9954                           pclatu	equ	0xFFB
  9955                           pclath	equ	0xFFA
  9956                           tblptru	equ	0xFF8
  9957                           tblptrh	equ	0xFF7
  9958                           tblptrl	equ	0xFF6
  9959                           tablat	equ	0xFF5
  9960                           prodh	equ	0xFF4
  9961                           prodl	equ	0xFF3
  9962                           intcon	equ	0xFF2
  9963                           indf0	equ	0xFEF
  9964                           postinc0	equ	0xFEE
  9965                           fsr0h	equ	0xFEA
  9966                           fsr0l	equ	0xFE9
  9967                           wreg	equ	0xFE8
  9968                           fsr1h	equ	0xFE2
  9969                           fsr1l	equ	0xFE1
  9970                           indf2	equ	0xFDF
  9971                           postinc2	equ	0xFDE
  9972                           postdec2	equ	0xFDD
  9973                           fsr2h	equ	0xFDA
  9974                           fsr2l	equ	0xFD9
  9975                           status	equ	0xFD8
  9976                           
  9977 ;; *************** function ___ftsub *****************
  9978 ;; Defined at:
  9979 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftsub.c"
  9980 ;; Parameters:    Size  Location     Type
  9981 ;;  f1              3   57[COMRAM] float 
  9982 ;;  f2              3   60[COMRAM] float 
  9983 ;; Auto vars:     Size  Location     Type
  9984 ;;		None
  9985 ;; Return value:  Size  Location     Type
  9986 ;;                  3   57[COMRAM] float 
  9987 ;; Registers used:
  9988 ;;		wreg, status,2, status,0, cstack
  9989 ;; Tracked objects:
  9990 ;;		On entry : 0/0
  9991 ;;		On exit  : 0/0
  9992 ;;		Unchanged: 0/0
  9993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9994 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9997 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9998 ;;Total ram usage:        6 bytes
  9999 ;; Hardware stack levels used:    1
 10000 ;; Hardware stack levels required when called:    2
 10001 ;; This function calls:
 10002 ;;		___ftadd
 10003 ;; This function is called by:
 10004 ;;		_sprintf
 10005 ;; This function uses a non-reentrant model
 10006 ;;
 10007                           
 10008                           	psect	text44
 10009  002A50                     __ptext44:
 10010                           	opt stack 0
 10011  002A50                     ___ftsub:
 10012                           	opt stack 23
 10013                           
 10014                           ;incstack = 0
 10015  002A50  503D               	movf	___ftsub@f2,w,c
 10016  002A52  103E               	iorwf	___ftsub@f2+1,w,c
 10017  002A54  103F               	iorwf	___ftsub@f2+2,w,c
 10018  002A56  B4D8               	btfsc	status,2,c
 10019  002A58  D006               	goto	i2l2784
 10020  002A5A  0E00               	movlw	0
 10021  002A5C  1A3D               	xorwf	___ftsub@f2,f,c
 10022  002A5E  0E00               	movlw	0
 10023  002A60  1A3E               	xorwf	___ftsub@f2+1,f,c
 10024  002A62  0E80               	movlw	128
 10025  002A64  1A3F               	xorwf	___ftsub@f2+2,f,c
 10026  002A66                     i2l2784:
 10027  002A66  C03A  F02E         	movff	___ftsub@f1,___ftadd@f1
 10028  002A6A  C03B  F02F         	movff	___ftsub@f1+1,___ftadd@f1+1
 10029  002A6E  C03C  F030         	movff	___ftsub@f1+2,___ftadd@f1+2
 10030  002A72  C03D  F031         	movff	___ftsub@f2,___ftadd@f2
 10031  002A76  C03E  F032         	movff	___ftsub@f2+1,___ftadd@f2+1
 10032  002A7A  C03F  F033         	movff	___ftsub@f2+2,___ftadd@f2+2
 10033  002A7E  EC65  F00E         	call	___ftadd	;wreg free
 10034  002A82  C02E  F03A         	movff	?___ftadd,?___ftsub
 10035  002A86  C02F  F03B         	movff	?___ftadd+1,?___ftsub+1
 10036  002A8A  C030  F03C         	movff	?___ftadd+2,?___ftsub+2
 10037  002A8E  0012               	return	
 10038  002A90                     __end_of___ftsub:
 10039                           	opt stack 0
 10040                           pclatu	equ	0xFFB
 10041                           pclath	equ	0xFFA
 10042                           tblptru	equ	0xFF8
 10043                           tblptrh	equ	0xFF7
 10044                           tblptrl	equ	0xFF6
 10045                           tablat	equ	0xFF5
 10046                           prodh	equ	0xFF4
 10047                           prodl	equ	0xFF3
 10048                           intcon	equ	0xFF2
 10049                           indf0	equ	0xFEF
 10050                           postinc0	equ	0xFEE
 10051                           fsr0h	equ	0xFEA
 10052                           fsr0l	equ	0xFE9
 10053                           wreg	equ	0xFE8
 10054                           fsr1h	equ	0xFE2
 10055                           fsr1l	equ	0xFE1
 10056                           indf2	equ	0xFDF
 10057                           postinc2	equ	0xFDE
 10058                           postdec2	equ	0xFDD
 10059                           fsr2h	equ	0xFDA
 10060                           fsr2l	equ	0xFD9
 10061                           status	equ	0xFD8
 10062                           
 10063 ;; *************** function ___ftadd *****************
 10064 ;; Defined at:
 10065 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftadd.c"
 10066 ;; Parameters:    Size  Location     Type
 10067 ;;  f1              3   45[COMRAM] float 
 10068 ;;  f2              3   48[COMRAM] float 
 10069 ;; Auto vars:     Size  Location     Type
 10070 ;;  exp1            1   56[COMRAM] unsigned char 
 10071 ;;  exp2            1   55[COMRAM] unsigned char 
 10072 ;;  sign            1   54[COMRAM] unsigned char 
 10073 ;; Return value:  Size  Location     Type
 10074 ;;                  3   45[COMRAM] float 
 10075 ;; Registers used:
 10076 ;;		wreg, status,2, status,0, cstack
 10077 ;; Tracked objects:
 10078 ;;		On entry : 0/0
 10079 ;;		On exit  : 0/0
 10080 ;;		Unchanged: 0/0
 10081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10082 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10083 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10084 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10085 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10086 ;;Total ram usage:       12 bytes
 10087 ;; Hardware stack levels used:    1
 10088 ;; Hardware stack levels required when called:    1
 10089 ;; This function calls:
 10090 ;;		___ftpack
 10091 ;; This function is called by:
 10092 ;;		_tratamento
 10093 ;;		_sprintf
 10094 ;;		___ftsub
 10095 ;; This function uses a non-reentrant model
 10096 ;;
 10097                           
 10098                           	psect	text45
 10099  001CCA                     __ptext45:
 10100                           	opt stack 0
 10101  001CCA                     ___ftadd:
 10102                           	opt stack 23
 10103                           
 10104                           ;incstack = 0
 10105  001CCA  C030  F034         	movff	___ftadd@f1+2,??___ftadd
 10106  001CCE  6A35               	clrf	(??___ftadd+1)& (0+255),c
 10107  001CD0  6A36               	clrf	(??___ftadd+2)& (0+255),c
 10108  001CD2  342F               	rlcf	___ftadd@f1+1,w,c
 10109  001CD4  3634               	rlcf	??___ftadd& (0+255),f,c
 10110  001CD6  E301               	bnc	u185_41
 10111  001CD8  8035               	bsf	(??___ftadd+1)& (0+255),0,c
 10112  001CDA                     u185_41:
 10113  001CDA  5034               	movf	??___ftadd,w,c
 10114  001CDC  6E39               	movwf	___ftadd@exp1,c
 10115  001CDE  C033  F034         	movff	___ftadd@f2+2,??___ftadd
 10116  001CE2  6A35               	clrf	(??___ftadd+1)& (0+255),c
 10117  001CE4  6A36               	clrf	(??___ftadd+2)& (0+255),c
 10118  001CE6  3432               	rlcf	___ftadd@f2+1,w,c
 10119  001CE8  3634               	rlcf	??___ftadd& (0+255),f,c
 10120  001CEA  E301               	bnc	u186_41
 10121  001CEC  8035               	bsf	(??___ftadd+1)& (0+255),0,c
 10122  001CEE                     u186_41:
 10123  001CEE  5034               	movf	??___ftadd,w,c
 10124  001CF0  6E38               	movwf	___ftadd@exp2,c
 10125  001CF2  5039               	movf	___ftadd@exp1,w,c
 10126  001CF4  B4D8               	btfsc	status,2,c
 10127  001CF6  D00B               	goto	i2l578
 10128  001CF8  5038               	movf	___ftadd@exp2,w,c
 10129  001CFA  5C39               	subwf	___ftadd@exp1,w,c
 10130  001CFC  B0D8               	btfsc	status,0,c
 10131  001CFE  D00E               	goto	i2l2414
 10132  001D00  5039               	movf	___ftadd@exp1,w,c
 10133  001D02  0800               	sublw	0
 10134  001D04  2438               	addwf	___ftadd@exp2,w,c
 10135  001D06  6E34               	movwf	??___ftadd& (0+255),c
 10136  001D08  0E18               	movlw	24
 10137  001D0A  6434               	cpfsgt	??___ftadd,c
 10138  001D0C  D007               	goto	i2l2414
 10139  001D0E                     i2l578:
 10140  001D0E  C031  F02E         	movff	___ftadd@f2,?___ftadd
 10141  001D12  C032  F02F         	movff	___ftadd@f2+1,?___ftadd+1
 10142  001D16  C033  F030         	movff	___ftadd@f2+2,?___ftadd+2
 10143  001D1A  0012               	return	
 10144  001D1C                     i2l2414:
 10145  001D1C  5038               	movf	___ftadd@exp2,w,c
 10146  001D1E  B4D8               	btfsc	status,2,c
 10147  001D20  D00B               	goto	i2l582
 10148  001D22  5039               	movf	___ftadd@exp1,w,c
 10149  001D24  5C38               	subwf	___ftadd@exp2,w,c
 10150  001D26  B0D8               	btfsc	status,0,c
 10151  001D28  D00E               	goto	i2l2420
 10152  001D2A  5038               	movf	___ftadd@exp2,w,c
 10153  001D2C  0800               	sublw	0
 10154  001D2E  2439               	addwf	___ftadd@exp1,w,c
 10155  001D30  6E34               	movwf	??___ftadd& (0+255),c
 10156  001D32  0E18               	movlw	24
 10157  001D34  6434               	cpfsgt	??___ftadd,c
 10158  001D36  D007               	goto	i2l2420
 10159  001D38                     i2l582:
 10160  001D38  C02E  F02E         	movff	___ftadd@f1,?___ftadd
 10161  001D3C  C02F  F02F         	movff	___ftadd@f1+1,?___ftadd+1
 10162  001D40  C030  F030         	movff	___ftadd@f1+2,?___ftadd+2
 10163  001D44  0012               	return	
 10164  001D46                     i2l2420:
 10165  001D46  0E06               	movlw	6
 10166  001D48  6E37               	movwf	___ftadd@sign,c
 10167  001D4A  BE30               	btfsc	___ftadd@f1+2,7,c
 10168  001D4C  8E37               	bsf	___ftadd@sign,7,c
 10169  001D4E  BE33               	btfsc	___ftadd@f2+2,7,c
 10170  001D50  8C37               	bsf	___ftadd@sign,6,c
 10171  001D52  8E2F               	bsf	___ftadd@f1+1,7,c
 10172  001D54  0EFF               	movlw	255
 10173  001D56  162E               	andwf	___ftadd@f1,f,c
 10174  001D58  0EFF               	movlw	255
 10175  001D5A  162F               	andwf	___ftadd@f1+1,f,c
 10176  001D5C  0E00               	movlw	0
 10177  001D5E  1630               	andwf	___ftadd@f1+2,f,c
 10178  001D60  8E32               	bsf	___ftadd@f2+1,7,c
 10179  001D62  0EFF               	movlw	255
 10180  001D64  1631               	andwf	___ftadd@f2,f,c
 10181  001D66  0EFF               	movlw	255
 10182  001D68  1632               	andwf	___ftadd@f2+1,f,c
 10183  001D6A  0E00               	movlw	0
 10184  001D6C  1633               	andwf	___ftadd@f2+2,f,c
 10185  001D6E  5038               	movf	___ftadd@exp2,w,c
 10186  001D70  5C39               	subwf	___ftadd@exp1,w,c
 10187  001D72  B0D8               	btfsc	status,0,c
 10188  001D74  D01B               	goto	i2l2446
 10189  001D76                     i2l2436:
 10190  001D76  90D8               	bcf	status,0,c
 10191  001D78  3631               	rlcf	___ftadd@f2,f,c
 10192  001D7A  3632               	rlcf	___ftadd@f2+1,f,c
 10193  001D7C  3633               	rlcf	___ftadd@f2+2,f,c
 10194  001D7E  0638               	decf	___ftadd@exp2,f,c
 10195  001D80  5039               	movf	___ftadd@exp1,w,c
 10196  001D82  1838               	xorwf	___ftadd@exp2,w,c
 10197  001D84  B4D8               	btfsc	status,2,c
 10198  001D86  D00D               	goto	i2l2444
 10199  001D88  0637               	decf	___ftadd@sign,f,c
 10200  001D8A  C037  F034         	movff	___ftadd@sign,??___ftadd
 10201  001D8E  0E07               	movlw	7
 10202  001D90  1634               	andwf	??___ftadd,f,c
 10203  001D92  B4D8               	btfsc	status,2,c
 10204  001D94  D006               	goto	i2l2444
 10205  001D96  D7EF               	goto	i2l2436
 10206  001D98                     i2l2442:
 10207  001D98  90D8               	bcf	status,0,c
 10208  001D9A  3230               	rrcf	___ftadd@f1+2,f,c
 10209  001D9C  322F               	rrcf	___ftadd@f1+1,f,c
 10210  001D9E  322E               	rrcf	___ftadd@f1,f,c
 10211  001DA0  2A39               	incf	___ftadd@exp1,f,c
 10212  001DA2                     i2l2444:
 10213  001DA2  5038               	movf	___ftadd@exp2,w,c
 10214  001DA4  1839               	xorwf	___ftadd@exp1,w,c
 10215  001DA6  B4D8               	btfsc	status,2,c
 10216  001DA8  D01F               	goto	i2l593
 10217  001DAA  D7F6               	goto	i2l2442
 10218  001DAC                     i2l2446:
 10219  001DAC  5039               	movf	___ftadd@exp1,w,c
 10220  001DAE  5C38               	subwf	___ftadd@exp2,w,c
 10221  001DB0  B0D8               	btfsc	status,0,c
 10222  001DB2  D01A               	goto	i2l593
 10223  001DB4                     i2l2448:
 10224  001DB4  90D8               	bcf	status,0,c
 10225  001DB6  362E               	rlcf	___ftadd@f1,f,c
 10226  001DB8  362F               	rlcf	___ftadd@f1+1,f,c
 10227  001DBA  3630               	rlcf	___ftadd@f1+2,f,c
 10228  001DBC  0639               	decf	___ftadd@exp1,f,c
 10229  001DBE  5039               	movf	___ftadd@exp1,w,c
 10230  001DC0  1838               	xorwf	___ftadd@exp2,w,c
 10231  001DC2  B4D8               	btfsc	status,2,c
 10232  001DC4  D00D               	goto	i2l2456
 10233  001DC6  0637               	decf	___ftadd@sign,f,c
 10234  001DC8  C037  F034         	movff	___ftadd@sign,??___ftadd
 10235  001DCC  0E07               	movlw	7
 10236  001DCE  1634               	andwf	??___ftadd,f,c
 10237  001DD0  B4D8               	btfsc	status,2,c
 10238  001DD2  D006               	goto	i2l2456
 10239  001DD4  D7EF               	goto	i2l2448
 10240  001DD6                     i2l2454:
 10241  001DD6  90D8               	bcf	status,0,c
 10242  001DD8  3233               	rrcf	___ftadd@f2+2,f,c
 10243  001DDA  3232               	rrcf	___ftadd@f2+1,f,c
 10244  001DDC  3231               	rrcf	___ftadd@f2,f,c
 10245  001DDE  2A38               	incf	___ftadd@exp2,f,c
 10246  001DE0                     i2l2456:
 10247  001DE0  5038               	movf	___ftadd@exp2,w,c
 10248  001DE2  1839               	xorwf	___ftadd@exp1,w,c
 10249  001DE4  A4D8               	btfss	status,2,c
 10250  001DE6  D7F7               	goto	i2l2454
 10251  001DE8                     i2l593:
 10252  001DE8  AE37               	btfss	___ftadd@sign,7,c
 10253  001DEA  D00C               	goto	i2l602
 10254  001DEC  0EFF               	movlw	255
 10255  001DEE  1A2E               	xorwf	___ftadd@f1,f,c
 10256  001DF0  0EFF               	movlw	255
 10257  001DF2  1A2F               	xorwf	___ftadd@f1+1,f,c
 10258  001DF4  0EFF               	movlw	255
 10259  001DF6  1A30               	xorwf	___ftadd@f1+2,f,c
 10260  001DF8  0E01               	movlw	1
 10261  001DFA  262E               	addwf	___ftadd@f1,f,c
 10262  001DFC  0E00               	movlw	0
 10263  001DFE  222F               	addwfc	___ftadd@f1+1,f,c
 10264  001E00  0E00               	movlw	0
 10265  001E02  2230               	addwfc	___ftadd@f1+2,f,c
 10266  001E04                     i2l602:
 10267  001E04  AC37               	btfss	___ftadd@sign,6,c
 10268  001E06  D00C               	goto	i2l2462
 10269  001E08  0EFF               	movlw	255
 10270  001E0A  1A31               	xorwf	___ftadd@f2,f,c
 10271  001E0C  0EFF               	movlw	255
 10272  001E0E  1A32               	xorwf	___ftadd@f2+1,f,c
 10273  001E10  0EFF               	movlw	255
 10274  001E12  1A33               	xorwf	___ftadd@f2+2,f,c
 10275  001E14  0E01               	movlw	1
 10276  001E16  2631               	addwf	___ftadd@f2,f,c
 10277  001E18  0E00               	movlw	0
 10278  001E1A  2232               	addwfc	___ftadd@f2+1,f,c
 10279  001E1C  0E00               	movlw	0
 10280  001E1E  2233               	addwfc	___ftadd@f2+2,f,c
 10281  001E20                     i2l2462:
 10282  001E20  0E00               	movlw	0
 10283  001E22  6E37               	movwf	___ftadd@sign,c
 10284  001E24  502E               	movf	___ftadd@f1,w,c
 10285  001E26  2631               	addwf	___ftadd@f2,f,c
 10286  001E28  502F               	movf	___ftadd@f1+1,w,c
 10287  001E2A  2232               	addwfc	___ftadd@f2+1,f,c
 10288  001E2C  5030               	movf	___ftadd@f1+2,w,c
 10289  001E2E  2233               	addwfc	___ftadd@f2+2,f,c
 10290  001E30  AE33               	btfss	___ftadd@f2+2,7,c
 10291  001E32  D00E               	goto	i2l2472
 10292  001E34  0EFF               	movlw	255
 10293  001E36  1A31               	xorwf	___ftadd@f2,f,c
 10294  001E38  0EFF               	movlw	255
 10295  001E3A  1A32               	xorwf	___ftadd@f2+1,f,c
 10296  001E3C  0EFF               	movlw	255
 10297  001E3E  1A33               	xorwf	___ftadd@f2+2,f,c
 10298  001E40  0E01               	movlw	1
 10299  001E42  2631               	addwf	___ftadd@f2,f,c
 10300  001E44  0E00               	movlw	0
 10301  001E46  2232               	addwfc	___ftadd@f2+1,f,c
 10302  001E48  0E00               	movlw	0
 10303  001E4A  2233               	addwfc	___ftadd@f2+2,f,c
 10304  001E4C  0E01               	movlw	1
 10305  001E4E  6E37               	movwf	___ftadd@sign,c
 10306  001E50                     i2l2472:
 10307  001E50  C031  F001         	movff	___ftadd@f2,___ftpack@arg
 10308  001E54  C032  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
 10309  001E58  C033  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
 10310  001E5C  C039  F004         	movff	___ftadd@exp1,___ftpack@exp
 10311  001E60  C037  F005         	movff	___ftadd@sign,___ftpack@sign
 10312  001E64  EC47  F012         	call	___ftpack	;wreg free
 10313  001E68  C001  F02E         	movff	?___ftpack,?___ftadd
 10314  001E6C  C002  F02F         	movff	?___ftpack+1,?___ftadd+1
 10315  001E70  C003  F030         	movff	?___ftpack+2,?___ftadd+2
 10316  001E74  0012               	return	
 10317  001E76                     __end_of___ftadd:
 10318                           	opt stack 0
 10319                           pclatu	equ	0xFFB
 10320                           pclath	equ	0xFFA
 10321                           tblptru	equ	0xFF8
 10322                           tblptrh	equ	0xFF7
 10323                           tblptrl	equ	0xFF6
 10324                           tablat	equ	0xFF5
 10325                           prodh	equ	0xFF4
 10326                           prodl	equ	0xFF3
 10327                           intcon	equ	0xFF2
 10328                           indf0	equ	0xFEF
 10329                           postinc0	equ	0xFEE
 10330                           fsr0h	equ	0xFEA
 10331                           fsr0l	equ	0xFE9
 10332                           wreg	equ	0xFE8
 10333                           fsr1h	equ	0xFE2
 10334                           fsr1l	equ	0xFE1
 10335                           indf2	equ	0xFDF
 10336                           postinc2	equ	0xFDE
 10337                           postdec2	equ	0xFDD
 10338                           fsr2h	equ	0xFDA
 10339                           fsr2l	equ	0xFD9
 10340                           status	equ	0xFD8
 10341                           
 10342 ;; *************** function ___ftneg *****************
 10343 ;; Defined at:
 10344 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftneg.c"
 10345 ;; Parameters:    Size  Location     Type
 10346 ;;  f1              3   35[COMRAM] float 
 10347 ;; Auto vars:     Size  Location     Type
 10348 ;;		None
 10349 ;; Return value:  Size  Location     Type
 10350 ;;                  3   35[COMRAM] float 
 10351 ;; Registers used:
 10352 ;;		wreg, status,2, status,0
 10353 ;; Tracked objects:
 10354 ;;		On entry : 0/0
 10355 ;;		On exit  : 0/0
 10356 ;;		Unchanged: 0/0
 10357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10358 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10361 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10362 ;;Total ram usage:        3 bytes
 10363 ;; Hardware stack levels used:    1
 10364 ;; This function calls:
 10365 ;;		Nothing
 10366 ;; This function is called by:
 10367 ;;		_tratamento
 10368 ;;		_sprintf
 10369 ;; This function uses a non-reentrant model
 10370 ;;
 10371                           
 10372                           	psect	text46
 10373  002C5E                     __ptext46:
 10374                           	opt stack 0
 10375  002C5E                     ___ftneg:
 10376                           	opt stack 25
 10377                           
 10378                           ;incstack = 0
 10379  002C5E  5024               	movf	___ftneg@f1,w,c
 10380  002C60  1025               	iorwf	___ftneg@f1+1,w,c
 10381  002C62  1026               	iorwf	___ftneg@f1+2,w,c
 10382  002C64  B4D8               	btfsc	status,2,c
 10383  002C66  D006               	goto	i2l652
 10384  002C68  0E00               	movlw	0
 10385  002C6A  1A24               	xorwf	___ftneg@f1,f,c
 10386  002C6C  0E00               	movlw	0
 10387  002C6E  1A25               	xorwf	___ftneg@f1+1,f,c
 10388  002C70  0E80               	movlw	128
 10389  002C72  1A26               	xorwf	___ftneg@f1+2,f,c
 10390  002C74                     i2l652:
 10391  002C74  C024  F024         	movff	___ftneg@f1,?___ftneg
 10392  002C78  C025  F025         	movff	___ftneg@f1+1,?___ftneg+1
 10393  002C7C  C026  F026         	movff	___ftneg@f1+2,?___ftneg+2
 10394  002C80  0012               	return		;funcret
 10395  002C82                     __end_of___ftneg:
 10396                           	opt stack 0
 10397                           pclatu	equ	0xFFB
 10398                           pclath	equ	0xFFA
 10399                           tblptru	equ	0xFF8
 10400                           tblptrh	equ	0xFF7
 10401                           tblptrl	equ	0xFF6
 10402                           tablat	equ	0xFF5
 10403                           prodh	equ	0xFF4
 10404                           prodl	equ	0xFF3
 10405                           intcon	equ	0xFF2
 10406                           indf0	equ	0xFEF
 10407                           postinc0	equ	0xFEE
 10408                           fsr0h	equ	0xFEA
 10409                           fsr0l	equ	0xFE9
 10410                           wreg	equ	0xFE8
 10411                           fsr1h	equ	0xFE2
 10412                           fsr1l	equ	0xFE1
 10413                           indf2	equ	0xFDF
 10414                           postinc2	equ	0xFDE
 10415                           postdec2	equ	0xFDD
 10416                           fsr2h	equ	0xFDA
 10417                           fsr2l	equ	0xFD9
 10418                           status	equ	0xFD8
 10419                           
 10420 ;; *************** function ___ftge *****************
 10421 ;; Defined at:
 10422 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftge.c"
 10423 ;; Parameters:    Size  Location     Type
 10424 ;;  ff1             3   20[COMRAM] float 
 10425 ;;  ff2             3   23[COMRAM] float 
 10426 ;; Auto vars:     Size  Location     Type
 10427 ;;		None
 10428 ;; Return value:  Size  Location     Type
 10429 ;;		None               void
 10430 ;; Registers used:
 10431 ;;		wreg, status,2, status,0
 10432 ;; Tracked objects:
 10433 ;;		On entry : 0/0
 10434 ;;		On exit  : 0/0
 10435 ;;		Unchanged: 0/0
 10436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10437 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10439 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10440 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10441 ;;Total ram usage:        9 bytes
 10442 ;; Hardware stack levels used:    1
 10443 ;; This function calls:
 10444 ;;		Nothing
 10445 ;; This function is called by:
 10446 ;;		_indexDoMenorValor
 10447 ;;		_tratamento
 10448 ;;		_sprintf
 10449 ;; This function uses a non-reentrant model
 10450 ;;
 10451                           
 10452                           	psect	text47
 10453  00266E                     __ptext47:
 10454                           	opt stack 0
 10455  00266E                     ___ftge:
 10456                           	opt stack 26
 10457                           
 10458                           ;incstack = 0
 10459  00266E  AE17               	btfss	___ftge@ff1+2,7,c
 10460  002670  D016               	goto	i2l2792
 10461  002672  C015  F01B         	movff	___ftge@ff1,??___ftge
 10462  002676  C016  F01C         	movff	___ftge@ff1+1,??___ftge+1
 10463  00267A  C017  F01D         	movff	___ftge@ff1+2,??___ftge+2
 10464  00267E  1E1B               	comf	??___ftge,f,c
 10465  002680  1E1C               	comf	??___ftge+1,f,c
 10466  002682  1E1D               	comf	??___ftge+2,f,c
 10467  002684  2A1B               	incf	??___ftge,f,c
 10468  002686  0E00               	movlw	0
 10469  002688  221C               	addwfc	??___ftge+1,f,c
 10470  00268A  221D               	addwfc	??___ftge+2,f,c
 10471  00268C  0E00               	movlw	0
 10472  00268E  241B               	addwf	??___ftge,w,c
 10473  002690  6E15               	movwf	___ftge@ff1,c
 10474  002692  0E00               	movlw	0
 10475  002694  201C               	addwfc	??___ftge+1,w,c
 10476  002696  6E16               	movwf	___ftge@ff1+1,c
 10477  002698  0E80               	movlw	128
 10478  00269A  201D               	addwfc	??___ftge+2,w,c
 10479  00269C  6E17               	movwf	___ftge@ff1+2,c
 10480  00269E                     i2l2792:
 10481  00269E  AE1A               	btfss	___ftge@ff2+2,7,c
 10482  0026A0  D016               	goto	i2l2796
 10483  0026A2  C018  F01B         	movff	___ftge@ff2,??___ftge
 10484  0026A6  C019  F01C         	movff	___ftge@ff2+1,??___ftge+1
 10485  0026AA  C01A  F01D         	movff	___ftge@ff2+2,??___ftge+2
 10486  0026AE  1E1B               	comf	??___ftge,f,c
 10487  0026B0  1E1C               	comf	??___ftge+1,f,c
 10488  0026B2  1E1D               	comf	??___ftge+2,f,c
 10489  0026B4  2A1B               	incf	??___ftge,f,c
 10490  0026B6  0E00               	movlw	0
 10491  0026B8  221C               	addwfc	??___ftge+1,f,c
 10492  0026BA  221D               	addwfc	??___ftge+2,f,c
 10493  0026BC  0E00               	movlw	0
 10494  0026BE  241B               	addwf	??___ftge,w,c
 10495  0026C0  6E18               	movwf	___ftge@ff2,c
 10496  0026C2  0E00               	movlw	0
 10497  0026C4  201C               	addwfc	??___ftge+1,w,c
 10498  0026C6  6E19               	movwf	___ftge@ff2+1,c
 10499  0026C8  0E80               	movlw	128
 10500  0026CA  201D               	addwfc	??___ftge+2,w,c
 10501  0026CC  6E1A               	movwf	___ftge@ff2+2,c
 10502  0026CE                     i2l2796:
 10503  0026CE  0E00               	movlw	0
 10504  0026D0  1A15               	xorwf	___ftge@ff1,f,c
 10505  0026D2  0E00               	movlw	0
 10506  0026D4  1A16               	xorwf	___ftge@ff1+1,f,c
 10507  0026D6  0E80               	movlw	128
 10508  0026D8  1A17               	xorwf	___ftge@ff1+2,f,c
 10509  0026DA  0E00               	movlw	0
 10510  0026DC  1A18               	xorwf	___ftge@ff2,f,c
 10511  0026DE  0E00               	movlw	0
 10512  0026E0  1A19               	xorwf	___ftge@ff2+1,f,c
 10513  0026E2  0E80               	movlw	128
 10514  0026E4  1A1A               	xorwf	___ftge@ff2+2,f,c
 10515  0026E6  5018               	movf	___ftge@ff2,w,c
 10516  0026E8  5C15               	subwf	___ftge@ff1,w,c
 10517  0026EA  5019               	movf	___ftge@ff2+1,w,c
 10518  0026EC  5816               	subwfb	___ftge@ff1+1,w,c
 10519  0026EE  501A               	movf	___ftge@ff2+2,w,c
 10520  0026F0  5817               	subwfb	___ftge@ff1+2,w,c
 10521  0026F2  B0D8               	btfsc	status,0,c
 10522  0026F4  D002               	goto	i2l2802
 10523  0026F6  90D8               	bcf	status,0,c
 10524  0026F8  0012               	return	
 10525  0026FA                     i2l2802:
 10526  0026FA  80D8               	bsf	status,0,c
 10527  0026FC  0012               	return	
 10528  0026FE                     __end_of___ftge:
 10529                           	opt stack 0
 10530                           pclatu	equ	0xFFB
 10531                           pclath	equ	0xFFA
 10532                           tblptru	equ	0xFF8
 10533                           tblptrh	equ	0xFF7
 10534                           tblptrl	equ	0xFF6
 10535                           tablat	equ	0xFF5
 10536                           prodh	equ	0xFF4
 10537                           prodl	equ	0xFF3
 10538                           intcon	equ	0xFF2
 10539                           indf0	equ	0xFEF
 10540                           postinc0	equ	0xFEE
 10541                           fsr0h	equ	0xFEA
 10542                           fsr0l	equ	0xFE9
 10543                           wreg	equ	0xFE8
 10544                           fsr1h	equ	0xFE2
 10545                           fsr1l	equ	0xFE1
 10546                           indf2	equ	0xFDF
 10547                           postinc2	equ	0xFDE
 10548                           postdec2	equ	0xFDD
 10549                           fsr2h	equ	0xFDA
 10550                           fsr2l	equ	0xFD9
 10551                           status	equ	0xFD8
 10552                           
 10553 ;; *************** function ___ftdiv *****************
 10554 ;; Defined at:
 10555 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftdiv.c"
 10556 ;; Parameters:    Size  Location     Type
 10557 ;;  f1              3   57[COMRAM] float 
 10558 ;;  f2              3   60[COMRAM] float 
 10559 ;; Auto vars:     Size  Location     Type
 10560 ;;  f3              3   67[COMRAM] float 
 10561 ;;  sign            1   71[COMRAM] unsigned char 
 10562 ;;  exp             1   70[COMRAM] unsigned char 
 10563 ;;  cntr            1   66[COMRAM] unsigned char 
 10564 ;; Return value:  Size  Location     Type
 10565 ;;                  3   57[COMRAM] float 
 10566 ;; Registers used:
 10567 ;;		wreg, status,2, status,0, cstack
 10568 ;; Tracked objects:
 10569 ;;		On entry : 0/0
 10570 ;;		On exit  : 0/0
 10571 ;;		Unchanged: 0/0
 10572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10573 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10574 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10575 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10576 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10577 ;;Total ram usage:       15 bytes
 10578 ;; Hardware stack levels used:    1
 10579 ;; Hardware stack levels required when called:    1
 10580 ;; This function calls:
 10581 ;;		___ftpack
 10582 ;; This function is called by:
 10583 ;;		_tratamento
 10584 ;; This function uses a non-reentrant model
 10585 ;;
 10586                           
 10587                           	psect	text48
 10588  0023A8                     __ptext48:
 10589                           	opt stack 0
 10590  0023A8                     ___ftdiv:
 10591                           	opt stack 26
 10592                           
 10593                           ;incstack = 0
 10594  0023A8  C03C  F040         	movff	___ftdiv@f1+2,??___ftdiv
 10595  0023AC  6A41               	clrf	(??___ftdiv+1)& (0+255),c
 10596  0023AE  6A42               	clrf	(??___ftdiv+2)& (0+255),c
 10597  0023B0  343B               	rlcf	___ftdiv@f1+1,w,c
 10598  0023B2  3640               	rlcf	??___ftdiv& (0+255),f,c
 10599  0023B4  E301               	bnc	u315_41
 10600  0023B6  8041               	bsf	(??___ftdiv+1)& (0+255),0,c
 10601  0023B8                     u315_41:
 10602  0023B8  5040               	movf	??___ftdiv,w,c
 10603  0023BA  6E47               	movwf	___ftdiv@exp,c
 10604  0023BC  5047               	movf	___ftdiv@exp,w,c
 10605  0023BE  A4D8               	btfss	status,2,c
 10606  0023C0  D007               	goto	i2l3302
 10607  0023C2  0E00               	movlw	0
 10608  0023C4  6E3A               	movwf	?___ftdiv,c
 10609  0023C6  0E00               	movlw	0
 10610  0023C8  6E3B               	movwf	?___ftdiv+1,c
 10611  0023CA  0E00               	movlw	0
 10612  0023CC  6E3C               	movwf	?___ftdiv+2,c
 10613  0023CE  0012               	return	
 10614  0023D0                     i2l3302:
 10615  0023D0  C03F  F040         	movff	___ftdiv@f2+2,??___ftdiv
 10616  0023D4  6A41               	clrf	(??___ftdiv+1)& (0+255),c
 10617  0023D6  6A42               	clrf	(??___ftdiv+2)& (0+255),c
 10618  0023D8  343E               	rlcf	___ftdiv@f2+1,w,c
 10619  0023DA  3640               	rlcf	??___ftdiv& (0+255),f,c
 10620  0023DC  E301               	bnc	u317_41
 10621  0023DE  8041               	bsf	(??___ftdiv+1)& (0+255),0,c
 10622  0023E0                     u317_41:
 10623  0023E0  5040               	movf	??___ftdiv,w,c
 10624  0023E2  6E48               	movwf	___ftdiv@sign,c
 10625  0023E4  5048               	movf	___ftdiv@sign,w,c
 10626  0023E6  A4D8               	btfss	status,2,c
 10627  0023E8  D007               	goto	i2l3308
 10628  0023EA  0E00               	movlw	0
 10629  0023EC  6E3A               	movwf	?___ftdiv,c
 10630  0023EE  0E00               	movlw	0
 10631  0023F0  6E3B               	movwf	?___ftdiv+1,c
 10632  0023F2  0E00               	movlw	0
 10633  0023F4  6E3C               	movwf	?___ftdiv+2,c
 10634  0023F6  0012               	return	
 10635  0023F8                     i2l3308:
 10636  0023F8  0E00               	movlw	0
 10637  0023FA  6E44               	movwf	___ftdiv@f3,c
 10638  0023FC  0E00               	movlw	0
 10639  0023FE  6E45               	movwf	___ftdiv@f3+1,c
 10640  002400  0E00               	movlw	0
 10641  002402  6E46               	movwf	___ftdiv@f3+2,c
 10642  002404  5048               	movf	___ftdiv@sign,w,c
 10643  002406  0F89               	addlw	137
 10644  002408  5E47               	subwf	___ftdiv@exp,f,c
 10645  00240A  C03C  F048         	movff	___ftdiv@f1+2,___ftdiv@sign
 10646  00240E  503F               	movf	___ftdiv@f2+2,w,c
 10647  002410  1A48               	xorwf	___ftdiv@sign,f,c
 10648  002412  0E80               	movlw	128
 10649  002414  1648               	andwf	___ftdiv@sign,f,c
 10650  002416  8E3B               	bsf	___ftdiv@f1+1,7,c
 10651  002418  0EFF               	movlw	255
 10652  00241A  163A               	andwf	___ftdiv@f1,f,c
 10653  00241C  0EFF               	movlw	255
 10654  00241E  163B               	andwf	___ftdiv@f1+1,f,c
 10655  002420  0E00               	movlw	0
 10656  002422  163C               	andwf	___ftdiv@f1+2,f,c
 10657  002424  8E3E               	bsf	___ftdiv@f2+1,7,c
 10658  002426  0EFF               	movlw	255
 10659  002428  163D               	andwf	___ftdiv@f2,f,c
 10660  00242A  0EFF               	movlw	255
 10661  00242C  163E               	andwf	___ftdiv@f2+1,f,c
 10662  00242E  0E00               	movlw	0
 10663  002430  163F               	andwf	___ftdiv@f2+2,f,c
 10664  002432  0E18               	movlw	24
 10665  002434  6E43               	movwf	___ftdiv@cntr,c
 10666  002436                     i2l3328:
 10667  002436  90D8               	bcf	status,0,c
 10668  002438  3644               	rlcf	___ftdiv@f3,f,c
 10669  00243A  3645               	rlcf	___ftdiv@f3+1,f,c
 10670  00243C  3646               	rlcf	___ftdiv@f3+2,f,c
 10671  00243E  503D               	movf	___ftdiv@f2,w,c
 10672  002440  5C3A               	subwf	___ftdiv@f1,w,c
 10673  002442  503E               	movf	___ftdiv@f2+1,w,c
 10674  002444  583B               	subwfb	___ftdiv@f1+1,w,c
 10675  002446  503F               	movf	___ftdiv@f2+2,w,c
 10676  002448  583C               	subwfb	___ftdiv@f1+2,w,c
 10677  00244A  A0D8               	btfss	status,0,c
 10678  00244C  D007               	goto	i2l613
 10679  00244E  503D               	movf	___ftdiv@f2,w,c
 10680  002450  5E3A               	subwf	___ftdiv@f1,f,c
 10681  002452  503E               	movf	___ftdiv@f2+1,w,c
 10682  002454  5A3B               	subwfb	___ftdiv@f1+1,f,c
 10683  002456  503F               	movf	___ftdiv@f2+2,w,c
 10684  002458  5A3C               	subwfb	___ftdiv@f1+2,f,c
 10685  00245A  8044               	bsf	___ftdiv@f3,0,c
 10686  00245C                     i2l613:
 10687  00245C  90D8               	bcf	status,0,c
 10688  00245E  363A               	rlcf	___ftdiv@f1,f,c
 10689  002460  363B               	rlcf	___ftdiv@f1+1,f,c
 10690  002462  363C               	rlcf	___ftdiv@f1+2,f,c
 10691  002464  2E43               	decfsz	___ftdiv@cntr,f,c
 10692  002466  D7E7               	goto	i2l3328
 10693  002468  C044  F001         	movff	___ftdiv@f3,___ftpack@arg
 10694  00246C  C045  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
 10695  002470  C046  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
 10696  002474  C047  F004         	movff	___ftdiv@exp,___ftpack@exp
 10697  002478  C048  F005         	movff	___ftdiv@sign,___ftpack@sign
 10698  00247C  EC47  F012         	call	___ftpack	;wreg free
 10699  002480  C001  F03A         	movff	?___ftpack,?___ftdiv
 10700  002484  C002  F03B         	movff	?___ftpack+1,?___ftdiv+1
 10701  002488  C003  F03C         	movff	?___ftpack+2,?___ftdiv+2
 10702  00248C  0012               	return	
 10703  00248E                     __end_of___ftdiv:
 10704                           	opt stack 0
 10705                           pclatu	equ	0xFFB
 10706                           pclath	equ	0xFFA
 10707                           tblptru	equ	0xFF8
 10708                           tblptrh	equ	0xFF7
 10709                           tblptrl	equ	0xFF6
 10710                           tablat	equ	0xFF5
 10711                           prodh	equ	0xFF4
 10712                           prodl	equ	0xFF3
 10713                           intcon	equ	0xFF2
 10714                           indf0	equ	0xFEF
 10715                           postinc0	equ	0xFEE
 10716                           fsr0h	equ	0xFEA
 10717                           fsr0l	equ	0xFE9
 10718                           wreg	equ	0xFE8
 10719                           fsr1h	equ	0xFE2
 10720                           fsr1l	equ	0xFE1
 10721                           indf2	equ	0xFDF
 10722                           postinc2	equ	0xFDE
 10723                           postdec2	equ	0xFDD
 10724                           fsr2h	equ	0xFDA
 10725                           fsr2l	equ	0xFD9
 10726                           status	equ	0xFD8
 10727                           
 10728 ;; *************** function ___awtoft *****************
 10729 ;; Defined at:
 10730 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awtoft.c"
 10731 ;; Parameters:    Size  Location     Type
 10732 ;;  c               2    8[COMRAM] int 
 10733 ;; Auto vars:     Size  Location     Type
 10734 ;;  sign            1   11[COMRAM] unsigned char 
 10735 ;; Return value:  Size  Location     Type
 10736 ;;                  3    8[COMRAM] float 
 10737 ;; Registers used:
 10738 ;;		wreg, status,2, status,0, cstack
 10739 ;; Tracked objects:
 10740 ;;		On entry : 0/0
 10741 ;;		On exit  : 0/0
 10742 ;;		Unchanged: 0/0
 10743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10744 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10745 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10747 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10748 ;;Total ram usage:        4 bytes
 10749 ;; Hardware stack levels used:    1
 10750 ;; Hardware stack levels required when called:    1
 10751 ;; This function calls:
 10752 ;;		___ftpack
 10753 ;; This function is called by:
 10754 ;;		_tratamento
 10755 ;; This function uses a non-reentrant model
 10756 ;;
 10757                           
 10758                           	psect	text49
 10759  002B7C                     __ptext49:
 10760                           	opt stack 0
 10761  002B7C                     ___awtoft:
 10762                           	opt stack 26
 10763                           
 10764                           ;incstack = 0
 10765  002B7C  0E00               	movlw	0
 10766  002B7E  6E0C               	movwf	___awtoft@sign,c
 10767  002B80  AE0A               	btfss	___awtoft@c+1,7,c
 10768  002B82  D006               	goto	i2l3350
 10769  002B84  6C09               	negf	___awtoft@c,c
 10770  002B86  1E0A               	comf	___awtoft@c+1,f,c
 10771  002B88  B0D8               	btfsc	status,0,c
 10772  002B8A  2A0A               	incf	___awtoft@c+1,f,c
 10773  002B8C  0E01               	movlw	1
 10774  002B8E  6E0C               	movwf	___awtoft@sign,c
 10775  002B90                     i2l3350:
 10776  002B90  C009  F001         	movff	___awtoft@c,___ftpack@arg
 10777  002B94  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
 10778  002B98  6A03               	clrf	___ftpack@arg+2,c
 10779  002B9A  0E8E               	movlw	142
 10780  002B9C  6E04               	movwf	___ftpack@exp,c
 10781  002B9E  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
 10782  002BA2  EC47  F012         	call	___ftpack	;wreg free
 10783  002BA6  C001  F009         	movff	?___ftpack,?___awtoft
 10784  002BAA  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
 10785  002BAE  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
 10786  002BB2  0012               	return	
 10787  002BB4                     __end_of___awtoft:
 10788                           	opt stack 0
 10789                           pclatu	equ	0xFFB
 10790                           pclath	equ	0xFFA
 10791                           tblptru	equ	0xFF8
 10792                           tblptrh	equ	0xFF7
 10793                           tblptrl	equ	0xFF6
 10794                           tablat	equ	0xFF5
 10795                           prodh	equ	0xFF4
 10796                           prodl	equ	0xFF3
 10797                           intcon	equ	0xFF2
 10798                           indf0	equ	0xFEF
 10799                           postinc0	equ	0xFEE
 10800                           fsr0h	equ	0xFEA
 10801                           fsr0l	equ	0xFE9
 10802                           wreg	equ	0xFE8
 10803                           fsr1h	equ	0xFE2
 10804                           fsr1l	equ	0xFE1
 10805                           indf2	equ	0xFDF
 10806                           postinc2	equ	0xFDE
 10807                           postdec2	equ	0xFDD
 10808                           fsr2h	equ	0xFDA
 10809                           fsr2l	equ	0xFD9
 10810                           status	equ	0xFD8
 10811                           
 10812 ;; *************** function ___ftpack *****************
 10813 ;; Defined at:
 10814 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
 10815 ;; Parameters:    Size  Location     Type
 10816 ;;  arg             3    0[COMRAM] unsigned um
 10817 ;;  exp             1    3[COMRAM] unsigned char 
 10818 ;;  sign            1    4[COMRAM] unsigned char 
 10819 ;; Auto vars:     Size  Location     Type
 10820 ;;		None
 10821 ;; Return value:  Size  Location     Type
 10822 ;;                  3    0[COMRAM] float 
 10823 ;; Registers used:
 10824 ;;		wreg, status,2, status,0
 10825 ;; Tracked objects:
 10826 ;;		On entry : 0/0
 10827 ;;		On exit  : 0/0
 10828 ;;		Unchanged: 0/0
 10829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10830 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10832 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10833 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10834 ;;Total ram usage:        8 bytes
 10835 ;; Hardware stack levels used:    1
 10836 ;; This function calls:
 10837 ;;		Nothing
 10838 ;; This function is called by:
 10839 ;;		___awtoft
 10840 ;;		___ftadd
 10841 ;;		___ftdiv
 10842 ;;		___ftmul
 10843 ;;		___lltoft
 10844 ;; This function uses a non-reentrant model
 10845 ;;
 10846                           
 10847                           	psect	text50
 10848  00248E                     __ptext50:
 10849                           	opt stack 0
 10850  00248E                     ___ftpack:
 10851                           	opt stack 23
 10852                           
 10853                           ;incstack = 0
 10854  00248E  5004               	movf	___ftpack@exp,w,c
 10855  002490  B4D8               	btfsc	status,2,c
 10856  002492  D005               	goto	i2l2368
 10857  002494  5001               	movf	___ftpack@arg,w,c
 10858  002496  1002               	iorwf	___ftpack@arg+1,w,c
 10859  002498  1003               	iorwf	___ftpack@arg+2,w,c
 10860  00249A  A4D8               	btfss	status,2,c
 10861  00249C  D00C               	goto	i2l2374
 10862  00249E                     i2l2368:
 10863  00249E  0E00               	movlw	0
 10864  0024A0  6E01               	movwf	?___ftpack,c
 10865  0024A2  0E00               	movlw	0
 10866  0024A4  6E02               	movwf	?___ftpack+1,c
 10867  0024A6  0E00               	movlw	0
 10868  0024A8  6E03               	movwf	?___ftpack+2,c
 10869  0024AA  0012               	return	
 10870  0024AC                     i2l2372:
 10871  0024AC  2A04               	incf	___ftpack@exp,f,c
 10872  0024AE  90D8               	bcf	status,0,c
 10873  0024B0  3203               	rrcf	___ftpack@arg+2,f,c
 10874  0024B2  3202               	rrcf	___ftpack@arg+1,f,c
 10875  0024B4  3201               	rrcf	___ftpack@arg,f,c
 10876  0024B6                     i2l2374:
 10877  0024B6  0E00               	movlw	0
 10878  0024B8  1401               	andwf	___ftpack@arg,w,c
 10879  0024BA  6E06               	movwf	??___ftpack& (0+255),c
 10880  0024BC  0E00               	movlw	0
 10881  0024BE  1402               	andwf	___ftpack@arg+1,w,c
 10882  0024C0  6E07               	movwf	(??___ftpack+1)& (0+255),c
 10883  0024C2  0EFE               	movlw	254
 10884  0024C4  1403               	andwf	___ftpack@arg+2,w,c
 10885  0024C6  6E08               	movwf	(??___ftpack+2)& (0+255),c
 10886  0024C8  5006               	movf	??___ftpack,w,c
 10887  0024CA  1007               	iorwf	??___ftpack+1,w,c
 10888  0024CC  1008               	iorwf	??___ftpack+2,w,c
 10889  0024CE  B4D8               	btfsc	status,2,c
 10890  0024D0  D00C               	goto	i2l2380
 10891  0024D2  D7EC               	goto	i2l2372
 10892  0024D4                     i2l2376:
 10893  0024D4  2A04               	incf	___ftpack@exp,f,c
 10894  0024D6  0E01               	movlw	1
 10895  0024D8  2601               	addwf	___ftpack@arg,f,c
 10896  0024DA  0E00               	movlw	0
 10897  0024DC  2202               	addwfc	___ftpack@arg+1,f,c
 10898  0024DE  0E00               	movlw	0
 10899  0024E0  2203               	addwfc	___ftpack@arg+2,f,c
 10900  0024E2  90D8               	bcf	status,0,c
 10901  0024E4  3203               	rrcf	___ftpack@arg+2,f,c
 10902  0024E6  3202               	rrcf	___ftpack@arg+1,f,c
 10903  0024E8  3201               	rrcf	___ftpack@arg,f,c
 10904  0024EA                     i2l2380:
 10905  0024EA  0E00               	movlw	0
 10906  0024EC  1401               	andwf	___ftpack@arg,w,c
 10907  0024EE  6E06               	movwf	??___ftpack& (0+255),c
 10908  0024F0  0E00               	movlw	0
 10909  0024F2  1402               	andwf	___ftpack@arg+1,w,c
 10910  0024F4  6E07               	movwf	(??___ftpack+1)& (0+255),c
 10911  0024F6  0EFF               	movlw	255
 10912  0024F8  1403               	andwf	___ftpack@arg+2,w,c
 10913  0024FA  6E08               	movwf	(??___ftpack+2)& (0+255),c
 10914  0024FC  5006               	movf	??___ftpack,w,c
 10915  0024FE  1007               	iorwf	??___ftpack+1,w,c
 10916  002500  1008               	iorwf	??___ftpack+2,w,c
 10917  002502  B4D8               	btfsc	status,2,c
 10918  002504  D006               	goto	i2l2384
 10919  002506  D7E6               	goto	i2l2376
 10920  002508                     i2l2382:
 10921  002508  0604               	decf	___ftpack@exp,f,c
 10922  00250A  90D8               	bcf	status,0,c
 10923  00250C  3601               	rlcf	___ftpack@arg,f,c
 10924  00250E  3602               	rlcf	___ftpack@arg+1,f,c
 10925  002510  3603               	rlcf	___ftpack@arg+2,f,c
 10926  002512                     i2l2384:
 10927  002512  BE02               	btfsc	___ftpack@arg+1,7,c
 10928  002514  D003               	goto	i2l555
 10929  002516  0E02               	movlw	2
 10930  002518  6004               	cpfslt	___ftpack@exp,c
 10931  00251A  D7F6               	goto	i2l2382
 10932  00251C                     i2l555:
 10933  00251C  A004               	btfss	___ftpack@exp,0,c
 10934  00251E  9E02               	bcf	___ftpack@arg+1,7,c
 10935  002520  90D8               	bcf	status,0,c
 10936  002522  3204               	rrcf	___ftpack@exp,f,c
 10937  002524  5004               	movf	___ftpack@exp,w,c
 10938  002526  1203               	iorwf	___ftpack@arg+2,f,c
 10939  002528  5005               	movf	___ftpack@sign,w,c
 10940  00252A  A4D8               	btfss	status,2,c
 10941  00252C  8E03               	bsf	___ftpack@arg+2,7,c
 10942  00252E  C001  F001         	movff	___ftpack@arg,?___ftpack
 10943  002532  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
 10944  002536  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
 10945  00253A  0012               	return	
 10946  00253C                     __end_of___ftpack:
 10947                           	opt stack 0
 10948                           pclatu	equ	0xFFB
 10949                           pclath	equ	0xFFA
 10950                           tblptru	equ	0xFF8
 10951                           tblptrh	equ	0xFF7
 10952                           tblptrl	equ	0xFF6
 10953                           tablat	equ	0xFF5
 10954                           prodh	equ	0xFF4
 10955                           prodl	equ	0xFF3
 10956                           intcon	equ	0xFF2
 10957                           indf0	equ	0xFEF
 10958                           postinc0	equ	0xFEE
 10959                           fsr0h	equ	0xFEA
 10960                           fsr0l	equ	0xFE9
 10961                           wreg	equ	0xFE8
 10962                           fsr1h	equ	0xFE2
 10963                           fsr1l	equ	0xFE1
 10964                           indf2	equ	0xFDF
 10965                           postinc2	equ	0xFDE
 10966                           postdec2	equ	0xFDD
 10967                           fsr2h	equ	0xFDA
 10968                           fsr2l	equ	0xFD9
 10969                           status	equ	0xFD8
 10970                           pclatu	equ	0xFFB
 10971                           pclath	equ	0xFFA
 10972                           tblptru	equ	0xFF8
 10973                           tblptrh	equ	0xFF7
 10974                           tblptrl	equ	0xFF6
 10975                           tablat	equ	0xFF5
 10976                           prodh	equ	0xFF4
 10977                           prodl	equ	0xFF3
 10978                           intcon	equ	0xFF2
 10979                           indf0	equ	0xFEF
 10980                           postinc0	equ	0xFEE
 10981                           fsr0h	equ	0xFEA
 10982                           fsr0l	equ	0xFE9
 10983                           wreg	equ	0xFE8
 10984                           fsr1h	equ	0xFE2
 10985                           fsr1l	equ	0xFE1
 10986                           indf2	equ	0xFDF
 10987                           postinc2	equ	0xFDE
 10988                           postdec2	equ	0xFDD
 10989                           fsr2h	equ	0xFDA
 10990                           fsr2l	equ	0xFD9
 10991                           status	equ	0xFD8
 10992                           
 10993                           	psect	rparam
 10994  0000                     pclatu	equ	0xFFB
 10995                           pclath	equ	0xFFA
 10996                           tblptru	equ	0xFF8
 10997                           tblptrh	equ	0xFF7
 10998                           tblptrl	equ	0xFF6
 10999                           tablat	equ	0xFF5
 11000                           prodh	equ	0xFF4
 11001                           prodl	equ	0xFF3
 11002                           intcon	equ	0xFF2
 11003                           indf0	equ	0xFEF
 11004                           postinc0	equ	0xFEE
 11005                           fsr0h	equ	0xFEA
 11006                           fsr0l	equ	0xFE9
 11007                           wreg	equ	0xFE8
 11008                           fsr1h	equ	0xFE2
 11009                           fsr1l	equ	0xFE1
 11010                           indf2	equ	0xFDF
 11011                           postinc2	equ	0xFDE
 11012                           postdec2	equ	0xFDD
 11013                           fsr2h	equ	0xFDA
 11014                           fsr2l	equ	0xFD9
 11015                           status	equ	0xFD8
 11016                           
 11017                           	psect	temp
 11018  000079                     btemp:
 11019                           	opt stack 0
 11020  000079                     	ds	1
 11021  0000                     int$flags	set	btemp
 11022                           pclatu	equ	0xFFB
 11023                           pclath	equ	0xFFA
 11024                           tblptru	equ	0xFF8
 11025                           tblptrh	equ	0xFF7
 11026                           tblptrl	equ	0xFF6
 11027                           tablat	equ	0xFF5
 11028                           prodh	equ	0xFF4
 11029                           prodl	equ	0xFF3
 11030                           intcon	equ	0xFF2
 11031                           indf0	equ	0xFEF
 11032                           postinc0	equ	0xFEE
 11033                           fsr0h	equ	0xFEA
 11034                           fsr0l	equ	0xFE9
 11035                           wreg	equ	0xFE8
 11036                           fsr1h	equ	0xFE2
 11037                           fsr1l	equ	0xFE1
 11038                           indf2	equ	0xFDF
 11039                           postinc2	equ	0xFDE
 11040                           postdec2	equ	0xFDD
 11041                           fsr2h	equ	0xFDA
 11042                           fsr2l	equ	0xFD9
 11043                           status	equ	0xFD8


Data Sizes:
    Strings     1018
    Constant    118
    Data        0
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    120     120
    BANK0           128     48      86
    BANK1           256     16      16
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 10
		 -> converterFloatParaString@string(COMRAM[10]), converterIntParaString@string(COMRAM[7]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    indexDoMenorValor@dados	PTR float  size(2) Largest target is 15
		 -> tensaoNaBateria(BANK0[15]), 

    escreverStringUart@string	PTR unsigned char  size(2) Largest target is 3967
		 -> STR_53(CODE[55]), STR_52(CODE[29]), STR_51(CODE[29]), STR_50(CODE[55]), 
		 -> STR_49(CODE[29]), STR_48(CODE[28]), STR_47(CODE[43]), STR_46(CODE[42]), 
		 -> STR_45(CODE[4]), STR_44(CODE[17]), STR_43(CODE[41]), STR_42(CODE[40]), 
		 -> STR_41(CODE[4]), STR_40(CODE[23]), STR_39(CODE[3]), STR_38(CODE[16]), 
		 -> STR_37(CODE[3]), STR_36(CODE[11]), STR_35(CODE[6]), STR_34(CODE[9]), 
		 -> STR_33(CODE[4]), STR_32(CODE[68]), STR_31(CODE[34]), STR_30(CODE[30]), 
		 -> STR_29(CODE[40]), STR_28(CODE[39]), STR_27(CODE[4]), STR_26(CODE[17]), 
		 -> STR_25(CODE[38]), STR_24(CODE[37]), STR_23(CODE[4]), STR_22(CODE[16]), 
		 -> STR_21(CODE[3]), STR_20(CODE[11]), STR_19(CODE[6]), STR_18(CODE[9]), 
		 -> STR_17(CODE[4]), STR_16(CODE[68]), STR_15(CODE[31]), STR_14(CODE[27]), 
		 -> STR_13(CODE[25]), STR_12(CODE[26]), STR_11(CODE[4]), STR_10(CODE[16]), 
		 -> STR_9(CODE[3]), STR_8(CODE[9]), STR_7(CODE[4]), RAM(DATA[3967]), 
		 -> STR_6(CODE[70]), STR_5(CODE[30]), STR_4(CODE[52]), STR_3(CODE[46]), 

    tamanhoDaString@string	PTR unsigned char  size(2) Largest target is 3967
		 -> STR_53(CODE[55]), STR_52(CODE[29]), STR_51(CODE[29]), STR_50(CODE[55]), 
		 -> STR_49(CODE[29]), STR_48(CODE[28]), STR_47(CODE[43]), STR_46(CODE[42]), 
		 -> STR_45(CODE[4]), STR_44(CODE[17]), STR_43(CODE[41]), STR_42(CODE[40]), 
		 -> STR_41(CODE[4]), STR_40(CODE[23]), STR_39(CODE[3]), STR_38(CODE[16]), 
		 -> STR_37(CODE[3]), STR_36(CODE[11]), STR_35(CODE[6]), STR_34(CODE[9]), 
		 -> STR_33(CODE[4]), STR_32(CODE[68]), STR_31(CODE[34]), STR_30(CODE[30]), 
		 -> STR_29(CODE[40]), STR_28(CODE[39]), STR_27(CODE[4]), STR_26(CODE[17]), 
		 -> STR_25(CODE[38]), STR_24(CODE[37]), STR_23(CODE[4]), STR_22(CODE[16]), 
		 -> STR_21(CODE[3]), STR_20(CODE[11]), STR_19(CODE[6]), STR_18(CODE[9]), 
		 -> STR_17(CODE[4]), STR_16(CODE[68]), STR_15(CODE[31]), STR_14(CODE[27]), 
		 -> STR_13(CODE[25]), STR_12(CODE[26]), STR_11(CODE[4]), STR_10(CODE[16]), 
		 -> STR_9(CODE[3]), STR_8(CODE[9]), STR_7(CODE[4]), RAM(DATA[3967]), 
		 -> STR_6(CODE[70]), STR_5(CODE[30]), STR_4(CODE[52]), STR_3(CODE[46]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _tratamento in COMRAM

    _tratamento->i2_escreverStringUart
    i2_escreverStringUart->_converterFloatParaString
    _indexDoMenorValor->___ftge
    _converterIntParaString->_sprintf
    _converterFloatParaString->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___ftneg->___ftmul
    ___ftge->___wmul
    ___ftdiv->___ftadd
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _tratamento in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_escreverStringUart
    _escreverStringUart->_tamanhoDaString
    _configureGpios->_desabilitarCarregamentoDaBateria
    _configureGpios->_desabilitarDescarregamentoDaBateria

Critical Paths under _tratamento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tratamento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tratamento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tratamento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tratamento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _tratamento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _tratamento in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _tratamento in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _tratamento in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _tratamento in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _tratamento in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _tratamento in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _tratamento in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _tratamento in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _tratamento in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4067
                                             14 BANK1      2     2      0
                       _configureAdc
                     _configureGpios
                _configureInterrupts
                    _configureTimer0
                      _configureUart
                  _desabilitarTimer0
                 _escreverStringUart
                    _habilitarTimer0
                    _sinalizacaoBeep
 ---------------------------------------------------------------------------------
 (1) _sinalizacaoBeep                                      1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _habilitarTimer0                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escreverStringUart                                   8     6      2    4067
                                              6 BANK1      8     6      2
                   _escreverCharUart
                    _tamanhoDaString
 ---------------------------------------------------------------------------------
 (2) _tamanhoDaString                                      6     4      2     189
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (2) _escreverCharUart                                     1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _desabilitarTimer0                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureUart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureTimer0                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureGpios                                       0     0      0       0
   _desabilitarCarregamentoDaBateria
_desabilitarDescarregamentoDaBateria
 ---------------------------------------------------------------------------------
 (2) _desabilitarDescarregamentoDaBateria                  1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _desabilitarCarregamentoDaBateria                     1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configureAdc                                         1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _tratamento                                          87    87      0  162448
                                              0 BANK0     48    48      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                             ___wmul
           _converterFloatParaString
             _converterIntParaString
     _habilitarCarregamentoDaBateria
  _habilitarDescarregamentoDaBateria
                  _indexDoMenorValor
                          _lerAdcAn0
                          _lerAdcAn1
                          _lerAdcAn2
                _sinalizacaoAprovada
                   _sinalizacaoFalha
 i2_desabilitarCarregamentoDaBateria
i2_desabilitarDescarregamentoDaBater
                i2_desabilitarTimer0
               i2_escreverStringUart
 ---------------------------------------------------------------------------------
 (4) i2_escreverStringUart                                 8     6      2    1842
                                            112 COMRAM     8     6      2
           _converterFloatParaString (ARG)
             _converterIntParaString (ARG)
                 i2_escreverCharUart
                  i2_tamanhoDaString
 ---------------------------------------------------------------------------------
 (5) i2_tamanhoDaString                                    6     4      2      94
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) i2_escreverCharUart                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) i2_desabilitarTimer0                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) i2_desabilitarDescarregamentoDaBateria                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) i2_desabilitarCarregamentoDaBateria                   1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _sinalizacaoFalha                                     2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _sinalizacaoAprovada                                  2     2      0      47
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _lerAdcAn2                                            6     4      2      24
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _lerAdcAn1                                            6     4      2      24
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _lerAdcAn0                                            6     4      2      24
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _indexDoMenorValor                                   12     8      4    6014
                                             29 COMRAM    12     8      4
                             ___ftge
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _habilitarDescarregamentoDaBateria                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _habilitarCarregamentoDaBateria                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _converterIntParaString                               9     7      2   62576
                                             99 COMRAM     9     7      2
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _converterFloatParaString                            13    10      3   63184
                                             99 COMRAM    13    10      3
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             44    37      7   62262
                                             63 COMRAM    36    29      7
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
 ---------------------------------------------------------------------------------
 (6) _scale                                               10     7      3   13295
                                             35 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _fround                                              13    10      3   13097
                                             35 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3477
                                             14 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftmul                                             15     9      6    5845
                                             20 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
                          _lerAdcAn0 (ARG)
                          _lerAdcAn1 (ARG)
                          _lerAdcAn2 (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4    1664
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    1820
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) __tdiv_to_l_                                         15     9      6     455
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (6) __div_to_l_                                          12     6      6     598
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (6) ___lltoft                                             9     5      4    2650
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     767
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     618
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             15    11      4     480
                                             35 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftsub                                              6     0      6    7464
                                             57 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftadd                                             12     6      6    7119
                                             45 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             _fround (ARG)
                          _lerAdcAn1 (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     273
                                             35 COMRAM     3     0      3
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack (ARG)
                          _lerAdcAn1 (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6    2112
                                             20 COMRAM     9     3      6
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    4735
                                             57 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                          _lerAdcAn0 (ARG)
                          _lerAdcAn1 (ARG)
                          _lerAdcAn2 (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    2976
                                              8 COMRAM     4     1      3
                           ___ftpack
                          _lerAdcAn0 (ARG)
                          _lerAdcAn1 (ARG)
                          _lerAdcAn2 (ARG)
 ---------------------------------------------------------------------------------
 (8) ___ftpack                                             8     3      5    2505
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configureAdc
   _configureGpios
     _desabilitarCarregamentoDaBateria
     _desabilitarDescarregamentoDaBateria
   _configureInterrupts
   _configureTimer0
   _configureUart
   _desabilitarTimer0
   _escreverStringUart
     _escreverCharUart
     _tamanhoDaString
   _habilitarTimer0
   _sinalizacaoBeep

 _tratamento (ROOT)
   ___awtoft
     ___ftpack
     _lerAdcAn0 (ARG)
     _lerAdcAn1 (ARG)
     _lerAdcAn2 (ARG)
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
       _lerAdcAn0 (ARG)
       _lerAdcAn1 (ARG)
       _lerAdcAn2 (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
         _lerAdcAn2 (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _lerAdcAn0 (ARG)
       _lerAdcAn1 (ARG)
       _lerAdcAn2 (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
         _lerAdcAn2 (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
         _lerAdcAn2 (ARG)
       ___ftpack (ARG)
       _lerAdcAn1 (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
         _lerAdcAn2 (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _lerAdcAn1 (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
       _lerAdcAn0 (ARG)
       _lerAdcAn1 (ARG)
       _lerAdcAn2 (ARG)
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
         _lerAdcAn2 (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
         _lerAdcAn2 (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___ftpack (ARG)
         _lerAdcAn1 (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _lerAdcAn1 (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
         _lerAdcAn2 (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _lerAdcAn0 (ARG)
       _lerAdcAn1 (ARG)
       _lerAdcAn2 (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
         _lerAdcAn2 (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
         _lerAdcAn2 (ARG)
       ___ftpack (ARG)
       _lerAdcAn1 (ARG)
     ___ftpack (ARG)
     _lerAdcAn0 (ARG)
     _lerAdcAn1 (ARG)
     _lerAdcAn2 (ARG)
   ___ftge
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
       _lerAdcAn0 (ARG)
       _lerAdcAn1 (ARG)
       _lerAdcAn2 (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     _lerAdcAn0 (ARG)
     _lerAdcAn1 (ARG)
     _lerAdcAn2 (ARG)
   ___ftneg
     ___awtoft (ARG)
       ___ftpack
       _lerAdcAn0 (ARG)
       _lerAdcAn1 (ARG)
       _lerAdcAn2 (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
         _lerAdcAn2 (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _lerAdcAn0 (ARG)
       _lerAdcAn1 (ARG)
       _lerAdcAn2 (ARG)
     ___ftpack (ARG)
     _lerAdcAn1 (ARG)
   ___wmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
   _converterFloatParaString
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftpack (ARG)
           _lerAdcAn1 (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _lerAdcAn1 (ARG)
       ___ftge
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
         _lerAdcAn2 (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___ftpack (ARG)
         _lerAdcAn1 (ARG)
       ___ftsub
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
                 _lerAdcAn2 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftpack (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
                 _lerAdcAn2 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _lerAdcAn1 (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _converterIntParaString
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftpack (ARG)
           _lerAdcAn1 (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _lerAdcAn1 (ARG)
       ___ftge
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _lerAdcAn0 (ARG)
         _lerAdcAn1 (ARG)
         _lerAdcAn2 (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___ftpack (ARG)
         _lerAdcAn1 (ARG)
       ___ftsub
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
                 _lerAdcAn2 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftpack (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
                 _lerAdcAn2 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _lerAdcAn1 (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _habilitarCarregamentoDaBateria
   _habilitarDescarregamentoDaBateria
   _indexDoMenorValor
     ___ftge
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   _lerAdcAn0
   _lerAdcAn1
   _lerAdcAn2
   _sinalizacaoAprovada
   _sinalizacaoFalha
   i2_desabilitarCarregamentoDaBateria
   i2_desabilitarDescarregamentoDaBateria
   i2_desabilitarTimer0
   i2_escreverStringUart
     _converterFloatParaString (ARG)
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
                 _lerAdcAn2 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftpack (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
                 _lerAdcAn2 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _lerAdcAn1 (ARG)
         ___ftge
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftpack (ARG)
           _lerAdcAn1 (ARG)
         ___ftsub
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
                 _lerAdcAn2 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
                 _lerAdcAn2 (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _lerAdcAn0 (ARG)
                   _lerAdcAn1 (ARG)
                   _lerAdcAn2 (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
                 _lerAdcAn2 (ARG)
               ___ftpack (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _lerAdcAn0 (ARG)
                   _lerAdcAn1 (ARG)
                   _lerAdcAn2 (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
                 _lerAdcAn2 (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _lerAdcAn1 (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _converterIntParaString (ARG)
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
                 _lerAdcAn2 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftpack (ARG)
             _lerAdcAn1 (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
                 _lerAdcAn2 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _lerAdcAn1 (ARG)
         ___ftge
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _lerAdcAn0 (ARG)
           _lerAdcAn1 (ARG)
           _lerAdcAn2 (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___ftpack (ARG)
           _lerAdcAn1 (ARG)
         ___ftsub
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
                 _lerAdcAn2 (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
                 _lerAdcAn2 (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _lerAdcAn0 (ARG)
                   _lerAdcAn1 (ARG)
                   _lerAdcAn2 (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
                 _lerAdcAn2 (ARG)
               ___ftpack (ARG)
               _lerAdcAn1 (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _lerAdcAn0 (ARG)
                   _lerAdcAn1 (ARG)
                   _lerAdcAn2 (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 _lerAdcAn0 (ARG)
                 _lerAdcAn1 (ARG)
                 _lerAdcAn2 (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _lerAdcAn1 (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
               _lerAdcAn0 (ARG)
               _lerAdcAn1 (ARG)
               _lerAdcAn2 (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _lerAdcAn0 (ARG)
             _lerAdcAn1 (ARG)
             _lerAdcAn2 (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     i2_escreverCharUart (ARG)
     i2_tamanhoDaString (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     10      10       7        6.3%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     30      56       5       67.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     78      78       1       95.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DE      34        0.0%
DATA                 0      0      DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Jan 22 16:52:03 2018

                                   ?_configureAdc 0001                                                l75 2D72  
                                    ___awdiv@sign 000C                                    ?_configureUart 0001  
                                _escreverCharUart 2D6A                               ___wmul@multiplicand 0011  
                                     __CFG_BORV$3 000000                               ??_desabilitarTimer0 0100  
                                    __CFG_CP0$OFF 000000                                      __CFG_CP1$OFF 000000  
                                    __CFG_CP2$OFF 000000                                      __CFG_CP3$OFF 000000  
                                    ___ftadd@exp1 0039                                      ___ftadd@exp2 0038  
                                    ___ftadd@sign 0037                                               l165 25A8  
                                    __CFG_CPB$OFF 000000                                   ?_configureGpios 0001  
                                    __CFG_CPD$OFF 000000                                      ___awmod@sign 0006  
                                             prod 000FF3                                               wreg 000FE8  
                                    __CFG_LVP$OFF 000000                                      ___ftdiv@cntr 0043  
                                    ___ftdiv@sign 0048                                      __CFG_WDT$OFF 000000  
                                            l3730 2958                                              l3732 295E  
                                            l3816 2590                                              l3772 264C  
                                            l3768 2608                                              STR_1 FFF9  
                                            STR_2 FFFC                                              STR_3 FD0A  
                                            STR_4 FCD6                                              STR_5 FED7  
                                            STR_6 FC05                                              STR_7 FFE7  
                                            STR_8 FFDC                                              STR_9 FFF6  
                                            u3540 2998                        i2escreverCharUart@caracter 0001  
                                            u3560 2642                                              u3617 254A  
                                            u3547 298E                                              u3627 259C  
                                            u3637 2CE4                                              u3647 2D12  
                                            u3567 2638                                              u3657 2D26  
                                            u3667 2BDE                                              i2l51 2B1C  
                                            i2l63 2AA4                                              i2l57 2AE0  
                                            i2l75 2D7E                      __size_of_sinalizacaoAprovada 0038  
                                 _tempoEmSegundos 00C5                                      __CFG_PWRT$ON 000000  
                                ?_configureTimer0 0001                         __end_of_desabilitarTimer0 2DAE  
                    converterIntParaString@string 0066                                              _main 253C  
                                    ___ftpack@arg 0001                                      ___ftpack@exp 0004  
                                            fsr0h 000FEA                                              fsr1h 000FE2  
                                            indf0 000FEF                                              fsr2h 000FDA  
                                            fsr0l 000FE9                                              indf2 000FDF  
                                            fsr1l 000FE1                                              fsr2l 000FD9  
                                            btemp 0079                                              prodh 000FF4  
                                            prodl 000FF3                                              start 000E  
                                   __CFG_IESO$OFF 000000                                      _sprintf$1472 004D  
                                   __CFG_MCLRE$ON 000000                                      ___ftmul@cntr 0022  
                                  ??_configureAdc 0100                                      ___param_bank 000000  
                                    ___ftmul@sign 0023                        __end_ofi2_escreverCharUart 2D84  
                                    ___fttol@exp1 0032                                      ___fttol@lval 002E  
                                           ?_main 0001                                   __end_of___awdiv 2782  
                                 __end_of___ftadd 1E76                                             STR_10 FFC1  
                                           STR_11 FFEF                                             STR_20 FFD1  
                                           STR_12 FF66                                             STR_21 FFF3  
                                           STR_13 FF80                                             STR_22 FFC1  
                                           STR_14 FF4B                                             STR_30 FEB9  
                                           STR_23 FFEF                                             STR_15 FE9A  
                                           STR_31 FE78                                             STR_40 FF99  
                                           STR_24 FE53                                             STR_16 FC8F  
                                           STR_32 FC4B                                             STR_41 FFEF  
                                           STR_33 FFE7                                             STR_17 FFE7  
                                           STR_25 FE2D                                             STR_34 FFDC  
                                           STR_18 FFDC                                             STR_26 FFB0  
                                           STR_42 FDB6                                             STR_50 FCD3  
                                           STR_35 FFE5                                             STR_27 FFEB  
                                           STR_19 FFE5                                             STR_51 FEF5  
                                           STR_43 FD8D                                             STR_52 FF12  
                                           STR_44 FFB0                                             STR_36 FFD1  
                                           STR_28 FE06                                   __end_of___awmod 28E6  
                                           STR_53 FCD3                                             STR_45 FFEB  
                                           STR_37 FFF3                                             STR_29 FDDE  
                                           STR_38 FFC1                                             STR_46 FD63  
                                           STR_39 FFF6                                             STR_47 FD38  
                                           STR_48 FF2F                                             STR_49 FF12  
                                 __end_of___ftdiv 248E                                   __end_of___ftneg 2C82  
                                 __end_of___lldiv 2804                                   __end_of___ftmul 21C4  
                                 ___awdiv@divisor 0009                                   __end_of___llmod 294C  
                                 __end_of___ftsub 2A90                                   __end_of___fttol 22B8  
                                           i2l120 2D98                                             i2l130 2B54  
                                           i2l125 2D8C                                             i2l208 0E8A  
                                           i2l280 132E                                             i2l602 1E04  
                                           i2l523 20BE                                             i2l620 1F08  
                                           i2l613 245C                                             i2l621 1F30  
                                           i2l702 27F2                                             i2l712 293A  
                                           i2l555 251C                                             i2l627 1F96  
                                           i2l652 2C74                                             i2l582 1D38  
                                           i2l593 1DE8                                             i2l578 1D0E  
                                 ___awdiv@counter 000B                                             _TMR0H 000FD7  
                                           _TMR0L 000FD6                                             _SPBRG 000FAF  
                                           _PORTB 000F81                                             _TRISB 000F93  
                                           _TXREG 000FAD                                     __CFG_WRT0$OFF 000000  
                                   __CFG_WRT1$OFF 000000                                     __CFG_WRT2$OFF 000000  
                                   __CFG_WRT3$OFF 000000                                      ___lltoft@exp 0011  
                                  __CFG_EBTR0$OFF 000000                                    __CFG_FCMEN$OFF 000000  
                                  __CFG_EBTR1$OFF 000000                                    __CFG_EBTR2$OFF 000000  
                                  __CFG_EBTR3$OFF 000000                                     __CFG_WRTB$OFF 000000  
                                   __CFG_WRTC$OFF 000000                                     __CFG_WRTD$OFF 000000  
                                  __CFG_EBTRB$OFF 000000                                     ___awtoft@sign 000C  
                                 __end_of_dpowers FBB7                       __end_ofi2_desabilitarTimer0 2DB2  
                      __size_ofi2_tamanhoDaString 004C                                             _scale 1628  
                                   ___ftpack@sign 0005                  __end_of_converterFloatParaString 2C5E  
                                           pclath 000FFA                                             tablat 000FF5  
                         ?_converterIntParaString 0064                                             status 000FD8  
                                 __end_of_sprintf 1628                                    __CFG_PBADEN$ON 000000  
                                 __initialization 2CF2                                      __end_of_main 25DE  
                                 ??_configureUart 0100                  i2escreverStringUart@tamanhoDaStr 0075  
                  escreverStringUart@tamanhoDaStr 010A                       __end_of_configureInterrupts 2DA6  
                                          ??_main 010E                                     ___fttol@sign1 002D  
                                   __activetblptr 000003                              __size_of__tdiv_to_l_ 0132  
                                ___llmod@dividend 000E                                            ?_scale 0024  
                                          _ADRESH 000FC4                                            _ADRESL 000FC3  
                                ___awdiv@dividend 0007                                  __end_of___awtoft 2BB4  
                                __end_of___ftpack 253C                    __end_of_converterIntParaString 2CA2  
                                __end_of___lltoft 2A04                                            i2l3100 1564  
                                          i2l3012 124E                                            i2l3030 130A  
                                          i2l3014 1254                                            i2l3022 12EA  
                                          i2l3110 161A                                            i2l3032 1318  
                                          i2l3024 12F4                                            i2l3008 122E  
                                          i2l3106 15F0                                            i2l2420 1D46  
                                          i2l3060 1498                                            i2l3044 1354  
                                          i2l3036 1332                                            i2l3108 1600  
                                          i2l3132 2A0E                                            i2l3302 23D0  
                                          i2l2414 1D1C                                            i2l2502 2152  
                                          i2l3134 2A12                                            i2l2600 28DC  
                                          i2l2512 217A                                            i2l3080 14F6  
                                          i2l3048 13A4                                            i2l2442 1D98  
                                          i2l2506 2162                                            i2l3066 14AE  
                                          i2l3058 148E                                            i2l3250 2B4C  
                                          i2l2380 24EA                                            i2l2372 24AC  
                                          i2l3308 23F8                                            i2l2444 1DA2  
                                          i2l2436 1D76                                            i2l2532 2712  
                                          i2l2516 218A                                            i2l3092 1534  
                                          i2l3068 14B8                                            i2l2382 2508  
                                          i2l2374 24B6                                            i2l3350 2B90  
                                          i2l2462 1E20                                            i2l2454 1DD6  
                                          i2l2446 1DAC                                            i2l2710 1F6C  
                                          i2l2622 1C84                                            i2l2614 1BB8  
                                          i2l3078 14F2                                            i2l2384 2512  
                                          i2l2376 24D4                                            i2l2368 249E  
                                          i2l3328 2436                                            i2l2472 1E50  
                                          i2l2456 1DE0                                            i2l2448 1DB4  
                                          i2l2544 2738                                            i2l2560 276A  
                                          i2l3280 2312                                            i2l3360 282A  
                                          i2l2802 26FA                                            i2l2706 1F5C  
                                          i2l2546 2740                                            i2l2538 2722  
                                          i2l2482 20F8                                            i2l2642 181E  
                                          i2l3098 1558                                            i2l2732 1FE4  
                                          i2l2716 1F84                                            i2l2564 2778  
                                          i2l2556 2760                                            i2l2548 2744  
                                          i2l2580 2896                                            i2l2660 1A36  
                                          i2l2636 176E                                            i2l3364 2860  
                                          u206_41 20E0                                            i2l2726 1FC6  
                                          i2l2718 1F90                                            i2l2670 1EA2  
                                          i2l2654 1986                                            i2l2646 1848  
                                          i2l3286 2386                                            i2l3710 0E52  
                                          i2l2816 21F0                                            i2l2592 28C4  
                                          i2l2584 28A4                                            i2l2576 288A  
                                          i2l2488 2120                                            i2l2920 0EF8  
                                          i2l3288 238A                                            i2l3544 068C  
                                          i2l3720 0E80                                            i2l3480 02D8  
                                          i2l2834 2256                                            i2l2770 2094  
                                          i2l2754 2056                                            i2l2746 2026  
                                          i2l2586 28AC                                            i2l2922 0F26  
                                          i2l2914 0EEA                                            i2l3570 07E8  
                                          i2l3466 0298                                            i2l2852 22A6  
                                          i2l2844 227E                                            i2l2676 1ECE  
                                          i2l2588 28B0                                            i2l2596 28CE  
                                          i2l2916 0EF4                                            i2l2908 0ED0  
                                          i2l3548 069E                                            i2l3476 02C8  
                     tratamento@correnteMedia_790 00A4                                            u231_41 1E86  
                                          i2l2846 228A                                            i2l2838 2266  
                                          i2l2862 27A4                                            i2l2766 2084  
                                          i2l3582 081E                                            i2l3574 07FA  
                                          i2l2792 269E                                            i2l2784 2A66  
                                          i2l2848 2290                                            i2l2864 27B0  
                                          i2l2776 20AC                                            i2l2960 106A  
                                          i2l2952 1006                                            i2l2936 0F76  
                                          i2l3656 0C4A                                            i2l3496 0320  
                                          i2l2874 27E4                                            i2l2866 27B4  
                                          i2l2890 292C                                            i2l2882 28F8  
                                          i2l2778 20B8                                            i2l2970 10DC  
                                          i2l3682 0DA6                                            i2l3586 082C  
                                          i2l2796 26CE                                            i2l2884 2904  
                                          i2l2980 1134                                            i2l2964 108E  
                                          u208_41 2108                                            i2l2886 2908  
                                          i2l2990 1188                                            i2l2966 109E  
                                          i2l3686 0DB8                                            i2l2896 29AE  
                                          i2l2976 1110                                            i2l2968 10CC  
                                          i2l3688 0DC0                                            i2l2898 29BA  
                                          i2l2994 11EC                                            i2l2996 11F0  
                                          u233_41 1EB2                                            u315_41 23B8  
                                          u252_41 21D4                                            u317_41 23E0  
                                          u185_41 1CDA                                            u186_41 1CEE  
                      __size_of_desabilitarTimer0 0004                          __size_of_habilitarTimer0 0004  
                                 _tensaoNaBateria 00C7                                    __CFG_XINST$OFF 000000  
                                __end_of__powers_ FBDE                                            ___ftge 266E  
                                 _sinalizacaoBeep 2CDA                                            ___wmul 2C14  
                                       ??___awdiv 000B                                         ??___ftadd 0034  
                                       ??___awmod 0005                                         ??___ftdiv 0040  
                                       ??___ftneg 0027                                         ??___lldiv 0009  
                                       ??___ftmul 001B                                         ??___llmod 0016  
                                       ??___ftsub 0040                                         ??___fttol 0028  
                       __size_of_sinalizacaoFalha 001C                     __size_ofi2_escreverStringUart 0072  
                                          _fround 1A60                                            clear_0 2CF8  
                                ___awdiv@quotient 000D                                   ___awmod@divisor 0003  
                                 ___awmod@counter 0005                             ___ftmul@f3_as_product 001F  
                              _resultadoDosTestes 00BF                                      __mediumconst FB8E  
                                          tblptrh 000FF7                                            tblptrl 000FF6  
                                          tblptru 000FF8                              __end_of_configureAdc 2BEA  
                                 _tamanhoDaString 294C                                         ??_sprintf 0047  
                                 _tratamento$1464 00A7                                   _tratamento$1465 00AA  
                                 _tratamento$1466 00AD                                   _tratamento$1467 009B  
                                 _tratamento$1468 0090                          __end_of_escreverCharUart 2D78  
                                      __accesstop 0080                           __end_of__initialization 2CFE  
                                      ___ftadd@f1 002E                                        ___ftadd@f2 0031  
                                      ___ftge@ff1 0015                                        ___ftge@ff2 0018  
                                   ___rparam_used 000001                                        ___ftdiv@f1 003A  
                                      ___ftdiv@f2 003D                                        ___ftdiv@f3 0044  
                                      ___ftneg@f1 0024                                        ___awtoft@c 0009  
                                      ___ftmul@f1 0015                                        ___ftmul@f2 0018  
                                      ___ftsub@f1 003A                                        ___ftsub@f2 003D  
                                      ___fttol@f1 0024                                    __pcstackCOMRAM 0001  
                                      ___lltoft@c 0009                                  ??_configureGpios 0101  
                     indexDoMenorValor@menorValor 0023                                     __end_of_scale 1A60  
                              _escreverStringUart 25DE                               _sinalizacaoAprovada 2B44  
               __size_of_converterFloatParaString 0024                         ?_converterFloatParaString 0064  
                                      __div_to_l_ 1FA8                                   __CFG_OSC$INTIO7 000000  
                             ?_escreverStringUart 0106                                __size_of_lerAdcAn0 003C  
                              __size_of_lerAdcAn1 003C                                __size_of_lerAdcAn2 003C  
                                 __div_to_l_@exp1 000C                                   __div_to_l_@cntr 000B  
                                         ??_scale 0027                                   __div_to_l_@quot 0007  
                                      __pbssBANK0 00B0                              ?_sinalizacaoAprovada 0001  
                        escreverCharUart@caracter 0100                           __end_of_sinalizacaoBeep 2CF2  
                                   __div_to_l_@f1 0001                                     __div_to_l_@f2 0004  
indexDoMenorValor@quantidadeDeValoresParaAnalisar 0020                              ??_escreverStringUart 0108  
                                         ?___ftge 0015                                           ?___wmul 000F  
                               ??_habilitarTimer0 0100                                           ?_fround 0024  
                                       ?___awtoft 0009                                         ?___ftpack 0001  
                                       ?___lltoft 0009                           __end_of_tamanhoDaString 29A8  
                              i2_escreverCharUart 2D78                             ??_sinalizacaoAprovada 0001  
                         tratamento@correnteMedia 00A1                               ?i2_escreverCharUart 0001  
                               __end_of__npowers_ FC05                                           __Hparam 0000  
                                      _scale$1471 0027                                           __Lparam 0000  
                               __end_of_lerAdcAn0 2B44                                 __end_of_lerAdcAn1 2B08  
                               __end_of_lerAdcAn2 2ACC                          __size_of_configureTimer0 001C  
                                 __size_of___ftge 0090                                           ___awdiv 26FE  
                                         ___ftadd 1CCA                                           ___awmod 2876  
                                         ___ftdiv 23A8                                           ___ftneg 2C5E  
                                         ___lldiv 2782                                   __size_of___wmul 0026  
                                _sinalizacaoFalha 2CBE                                           ___ftmul 20D0  
                                         ___llmod 28E6                                           ___ftsub 2A50  
                                         ___fttol 21C4                              ??i2_escreverCharUart 0001  
                                 __CFG_STVREN$OFF 000000                                           __pcinit 2CF2  
                                      ??___awtoft 000C                                        ??___ftpack 0006  
                                 __size_of_fround 026A                                           __ramtop 1000  
                                      ??___lltoft 000D                                           __ptext0 253C  
                                         __ptext1 2CDA                                           __ptext2 2DA6  
                                         __ptext3 25DE                                           __ptext4 294C  
                                         __ptext5 2D6A                                           __ptext6 2DAA  
                                         __ptext7 2BEA                                           __ptext8 2CA2  
                                         __ptext9 2D9C                                         _T0CONbits 000FD5  
                           __size_of_configureAdc 0036                                       ?__div_to_l_ 0001  
                                         _dpowers FB8F                                  ___awmod@dividend 0001  
       __end_of_habilitarDescarregamentoDaBateria 2D90        __size_of_habilitarDescarregamentoDaBateria 000C  
   __end_ofi2_desabilitarDescarregamentoDaBateria 2D44    __size_ofi2_desabilitarDescarregamentoDaBateria 0014  
     __end_of_desabilitarDescarregamentoDaBateria 2D1C      __size_of_desabilitarDescarregamentoDaBateria 0014  
         ??i2_desabilitarDescarregamentoDaBateria 0001            ?i2_desabilitarDescarregamentoDaBateria 0001  
             ??_habilitarDescarregamentoDaBateria 0001                ?_habilitarDescarregamentoDaBateria 0001  
            ?_desabilitarDescarregamentoDaBateria 0001             ??_desabilitarDescarregamentoDaBateria 0100  
           i2_desabilitarDescarregamentoDaBateria 2D30                 _habilitarDescarregamentoDaBateria 2D84  
             _desabilitarDescarregamentoDaBateria 2D08                                   _statusDaBateria 00C4  
                                         _sprintf 0EC6                                    __pintcode_body 0012  
                            end_of_initialization 2CFE                                           int_func 0012  
                                ?_sinalizacaoBeep 0001                      __size_ofi2_desabilitarTimer0 0004  
                                 ___lldiv@divisor 0005                                   ___lldiv@counter 000D  
                              lerAdcAn0@valorLido 0005                                         _RCSTAbits 000FAB  
                                         postdec2 000FDD                                           postinc0 000FEE  
                                         postinc2 000FDE                                      _configureAdc 2BB4  
                ??_habilitarCarregamentoDaBateria 0001                   ?_habilitarCarregamentoDaBateria 0001  
                                  __tdiv_to_l_@f1 0001                                    __tdiv_to_l_@f2 0004  
                           __end_of_configureUart 2C14                                     ??__tdiv_to_l_ 0007  
                              lerAdcAn1@valorLido 0005                                         _PORTBbits 000F81  
                                ?_tamanhoDaString 0100                                         _TRISCbits 000F94  
                    __size_of_configureInterrupts 000A                                lerAdcAn2@valorLido 0005  
                  converterFloatParaString@string 0067                                        _tratamento 0008  
                    __end_ofi2_escreverStringUart 2876                                 ?_escreverCharUart 0001  
                          indexDoMenorValor@dados 001E                                       ___ftdiv@exp 0047  
                          indexDoMenorValor@index 0026                                         _TXSTAbits 000FAC  
                              ??_escreverCharUart 0100                               __size_of__div_to_l_ 0128  
                                     ___ftmul@exp 001E                                    __end_of___ftge 26FE  
                                  __end_of___wmul 2C3A                                       _BAUDCONbits 000FB8  
                                  __end_of_fround 1CCA                                 ??_configureTimer0 0100  
                             start_initialization 2CF2                               __end_of__tdiv_to_l_ 1FA8  
                   sinalizacaoAprovada@repeticoes 0002                                   _habilitarTimer0 2DA6  
                                 ___llmod@divisor 0012                                   ___llmod@counter 0016  
                                        ??___ftge 001B                                          ??___wmul 0013  
                                __CFG_LPT1OSC$OFF 000000                                          ??_fround 0027  
                                   sprintf@tmpval 005C                                        fround@prec 002D  
                               __size_of___awtoft 0038                                 __size_of___ftpack 00AE  
                               __size_of___lltoft 005C                          ??_converterIntParaString 0066  
                               _correnteNaBateria 00B0                                     __pcstackBANK0 0080  
                                   __pcstackBANK1 0100                                       ?_tratamento 0001  
                        __end_of_sinalizacaoFalha 2CDA                      i2escreverStringUart@contador 0077  
                                     sprintf@flag 0052                                       sprintf@fval 0060  
                                     sprintf@prec 0054                       __size_of_escreverStringUart 0090  
                               __CFG_CCP2MX$PORTC 000000                                         __pintcode 0008  
                        _converterFloatParaString 2C3A                                     __pmediumconst FB8E  
                                        ?___awdiv 0007                                          ?___ftadd 002E  
                                        ?___awmod 0001                                          ?___ftdiv 003A  
                                        ?___ftneg 0024                                          ?___lldiv 0001  
                                        ?___ftmul 0015                                          ?___llmod 000E  
                                        ?___ftsub 003A                                         __npowers_ FBDE  
                                        ?___fttol 0024                              i2_escreverStringUart 2804  
                                       _lerAdcAn0 2B08                                         _lerAdcAn1 2ACC  
                                       _lerAdcAn2 2A90                                       __tdiv_to_l_ 1E76  
                                    ??__div_to_l_ 0007                               i2_desabilitarTimer0 2DAE  
                     __end_of_sinalizacaoAprovada 2B7C                           __size_of_configureGpios 0012  
                         __end_of_habilitarTimer0 2DAA                                          ?_sprintf 0040  
                                  __size_of_scale 0438                        escreverStringUart@contador 010C  
                                  ___wmul@product 0013                              ?i2_desabilitarTimer0 0001  
                                        _PIE1bits 000F9D                        i2escreverStringUart@string 0071  
                                        i2u302_40 2A40                                          i2u302_47 2A36  
                                        i2u321_40 2858                                          i2u321_47 284E  
                                        i2u254_40 220E                                          i2u254_45 2206  
                                        i2u272_40 0FAE                                          i2u272_45 0FA4  
                                        _PIR1bits 000F9E                                __end_of__div_to_l_ 20D0  
                                        i2u370_47 2B5C                                          i2u371_47 2B6E  
                                        i2u367_47 2D38                                          i2u288_40 1328  
                             _configureInterrupts 2D9C                                          i2u368_47 2D4C  
                                        i2u369_47 2CCA    converterFloatParaString@valorParaSerConvertido 0064  
    converterIntParaString@valorParaSerConvertido 0064                                  __CFG_WDTPS$32768 000000  
                           ?i2_escreverStringUart 0071                               __size_of_tratamento 0EBE  
                                      ?_lerAdcAn0 0001                                        ?_lerAdcAn1 0001  
                                      ?_lerAdcAn2 0001                       __size_ofi2_escreverCharUart 000C  
                                      _ADCON0bits 000FC2                                        _ADCON1bits 000FC1  
                                      _ADCON2bits 000FC0                                 ___wmul@multiplier 000F  
                       indexDoMenorValor@contador 0028                              ?_configureInterrupts 0001  
                 __size_of_converterIntParaString 0020            __end_of_habilitarCarregamentoDaBateria 2D9C  
         __size_of_habilitarCarregamentoDaBateria 000C                    _habilitarCarregamentoDaBateria 2D90  
                           tratamento@tensaoMedia 0093                                 _indexDoMenorValor 22B8  
                           ??i2_desabilitarTimer0 0001                             tamanhoDaString@lenght 0104  
                              ?_indexDoMenorValor 001E                                          __Hrparam 0000  
                                 _configureTimer0 2CA2                                          __Lrparam 0000  
                           tamanhoDaString@string 0100                                __CFG_BOREN$SBORDIS 000000  
                        __size_of_sinalizacaoBeep 0018                               ??_indexDoMenorValor 0022  
                                __size_of___awdiv 0084                                  __size_of___ftadd 01AC  
                                __size_of___awmod 0070                                  __size_of___ftdiv 00E6  
                                __size_of___ftneg 0024                                  __size_of___lldiv 0082  
                                __size_of___ftmul 00F4                                  __size_of___llmod 0066  
                                __size_of___ftsub 0040                                  __size_of___fttol 00F4  
                       __size_of_escreverCharUart 000E                                          ___awtoft 2B7C  
                                        ___ftpack 248E                                       _fround$1470 0027  
                                     _fround$1469 002A                                          ___lltoft 29A8  
                                      sprintf@exp 005A                                        sprintf@val 0056  
                           ??_configureInterrupts 0100                                          __ptext10 2D58  
                                        __ptext11 2D08                                          __ptext20 2D44  
                                        __ptext12 2D1C                                          __ptext21 2CBE  
                                        __ptext13 2BB4                                          __ptext30 2C3A  
                                        __ptext22 2B44                                          __ptext31 0EC6  
                                        __ptext23 2A90                                          __ptext15 2804  
                                        __ptext40 29A8                                          __ptext32 1628  
                                        __ptext24 2ACC                                          __ptext16 2A04  
                                        __ptext41 28E6                                          __ptext33 1A60  
                                        __ptext25 2B08                                          __ptext17 2D78  
                                        __ptext50 248E                                          __ptext42 2782  
                                        __ptext34 2C14                                          __ptext26 22B8  
                                        __ptext18 2DAE                                          __ptext43 21C4  
                                        __ptext35 20D0                                          __ptext27 2D84  
                                        __ptext19 2D30                                          __ptext44 2A50  
                                        __ptext36 2876                                          __ptext28 2D90  
                                        __ptext45 1CCA                                          __ptext37 26FE  
                                        __ptext29 2C82                                          __ptext46 2C5E  
                                        __ptext38 1E76                                          __ptext47 266E  
                                        __ptext39 1FA8                                          __ptext48 23A8  
                                        __ptext49 2B7C                                  ?_habilitarTimer0 0001  
                                        __powers_ FBB7        __end_ofi2_desabilitarCarregamentoDaBateria 2D58  
     __size_ofi2_desabilitarCarregamentoDaBateria 0014          __end_of_desabilitarCarregamentoDaBateria 2D30  
       __size_of_desabilitarCarregamentoDaBateria 0014              ??i2_desabilitarCarregamentoDaBateria 0001  
             ?i2_desabilitarCarregamentoDaBateria 0001                 ?_desabilitarCarregamentoDaBateria 0001  
              ??_desabilitarCarregamentoDaBateria 0100                i2_desabilitarCarregamentoDaBateria 2D44  
                _desabilitarCarregamentoDaBateria 2D1C                         __end_of_indexDoMenorValor 23A8  
                                        _contador 00C6                          __size_of_tamanhoDaString 005C  
                                __size_of_sprintf 0762                            __size_of_configureUart 002A  
                                   __size_of_main 00A2                            _converterIntParaString 2C82  
                          ??i2_escreverStringUart 0073                                          int$flags 0079  
                                     ??_lerAdcAn0 0003                                       ??_lerAdcAn1 0003  
                                     ??_lerAdcAn2 0003                                        _INTCONbits 000FF2  
                                  _configureGpios 2D58                                          scale@scl 002A  
                                    ??_tratamento 0080                         tratamento@tensaoMedia_762 009E  
                                        intlevel2 0000                         tratamento@tensaoMedia_781 0096  
                               ?_sinalizacaoFalha 0001                                         sprintf@ap 0050  
                                __tdiv_to_l_@exp1 000F                                         sprintf@sp 0040  
                                __tdiv_to_l_@cntr 000E                                 i2_tamanhoDaString 2A04  
                         __end_of_configureTimer0 2CBE                                  __tdiv_to_l_@quot 000A  
                      ??_converterFloatParaString 0067                                  ___lldiv@dividend 0001  
                              ??_sinalizacaoFalha 0001                                ?i2_tamanhoDaString 0001  
                             ??i2_tamanhoDaString 0003                                __end_of_tratamento 0EC6  
                                   _configureUart 2BEA                                      ?__tdiv_to_l_ 0001  
                          __end_of_configureGpios 2D6A                                          sprintf@c 0063  
                                        sprintf@f 0042                                 ??_sinalizacaoBeep 0100  
                                ___lldiv@quotient 0009                         __end_ofi2_tamanhoDaString 2A50  
                     tratamento@indexTensaoMinima 0099                        __size_of_indexDoMenorValor 00F0  
                         i2tamanhoDaString@lenght 0005                        __end_of_escreverStringUart 266E  
                               _desabilitarTimer0 2DAA                           i2tamanhoDaString@string 0001  
                               ??_tamanhoDaString 0102                          escreverStringUart@string 0106  
                              ?_desabilitarTimer0 0001  
